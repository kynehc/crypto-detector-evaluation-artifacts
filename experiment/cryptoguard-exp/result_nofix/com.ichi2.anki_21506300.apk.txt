Analyzing APK File: /home/crypto/fdroidcl/download/apks/com.ichi2.anki_21506300.apk

=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "DES/ECB/NoPadding" in <org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>::getLanManagerSessionKey.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "DES/ECB/NoPadding" in <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>::lmResponse.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "DES/ECB/NoPadding" in <org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>::getLanManagerSessionKey.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "RC4" in <org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>::initCipher.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "DES/ECB/NoPadding" in <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>::lmHash.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "RC4" in <org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>::RC4.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <androidx.transition.Explode: void calculateOut(android.view.View,android.graphics.Rect,int[])>::calculateOut.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <java8.util.concurrent.ThreadLocalRandom: void <init>()>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.ichi2.libanki.stats.AdvancedStatistics$EaseClassifier: void <init>(com.ichi2.libanki.utils.Time,com.ichi2.libanki.DB)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.ichi2.libanki.Collection: int _dueForDid(long,int)>::_dueForDid.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <kotlin.random.FallbackThreadLocalRandom$implStorage$1: java.util.Random initialValue()>::initialValue.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.ichi2.libanki.Utils: float randomFloatInRange(float,float)>::randomFloatInRange.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <okhttp3.OkHttpClient: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)>::newWebSocket.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.ichi2.libanki.Utils: java.lang.String guid64()>::guid64.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <kotlin.random.KotlinRandom: void <init>(kotlin.random.Random)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.commons.codec.digest.B64: java.lang.String getRandomSalt(int)>::getRandomSalt.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.ichi2.libanki.sched.SchedV2: boolean _fillLrnDay()>::_fillLrnDay.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.jsoup.helper.DataUtil: java.lang.String mimeBoundary()>::mimeBoundary.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <j$.util.concurrent.e: void <init>(j$.util.concurrent.d)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.ichi2.anki.ModelBrowser: java.lang.String randomizeName(java.lang.String)>::randomizeName.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.brsanthu.googleanalytics.internal.GoogleAnalyticsImpl: boolean performSamplingElection()>::performSamplingElection.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.ichi2.libanki.sched.SchedV2: int _fuzzedIvl(int)>::_fuzzedIvl.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.commons.codec.digest.UnixCrypt: java.lang.String crypt(byte[],java.lang.String)>::crypt.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <j$.util.concurrent.e: void <init>()>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.ichi2.utils.NoteFieldDecorator: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <androidx.activity.result.ActivityResultRegistry: void <init>()>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.ichi2.libanki.sched.SchedV2: void reschedCards(java.util.List,int,int)>::reschedCards.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.ichi2.libanki.sched.SchedV2: int _rescheduleLrnCard(com.ichi2.libanki.Card,com.ichi2.utils.JSONObject,java.lang.Integer)>::_rescheduleLrnCard.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.ichi2.libanki.sched.Sched: boolean _fillRev(boolean)>::_fillRev.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.ichi2.libanki.sync.HttpSyncer: void <init>(java.lang.String,com.ichi2.async.Connection,com.ichi2.libanki.sync.HostNum)>::init.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of com.ichi2.libanki.sync.UnifiedTrustManager in com.ichi2.libanki.sync.UnifiedTrustManager <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of com.ichi2.libanki.sync.UnifiedTrustManager in com.ichi2.libanki.sync.UnifiedTrustManager::UNKNOWN.

=======================================
=======================================
***Violated Rule 6: Used untrusted HostNameVerifier
***Cause: Fixed "[1]" in okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier::UNKNOWN.

=======================================
=======================================
***Violated Rule 6: Used untrusted HostNameVerifier
***Cause: Fixed "[1]" in org.apache.http.conn.ssl.NoopHostnameVerifier::UNKNOWN.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <org.apache.commons.codec.digest.MessageDigestAlgorithms: java.lang.String[] values()>::values:1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <okio.HashingSource$Companion: okio.HashingSource md5(okio.Source)>::md5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getSha1Digest()>::getSha1Digest.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getMd5Digest()>::getMd5Digest.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>::createDigestHeader:6.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <com.ichi2.anki.api.Utils: java.lang.Long fieldChecksum(java.lang.String)>::fieldChecksum.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <okio.Buffer: okio.ByteString md5()>::md5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>::createDigestHeader:7.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <okio.HashingSink$Companion: okio.HashingSink sha1(okio.Sink)>::sha1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <com.ichi2.libanki.Utils: java.lang.String checksum(java.lang.String)>::checksum.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <com.ichi2.libanki.Utils: java.lang.String fileChecksum(java.lang.String)>::fileChecksum.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.commons.codec.digest.MessageDigestAlgorithms: java.lang.String[] values()>::values:1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD2" in <org.apache.commons.codec.digest.MessageDigestAlgorithms: java.lang.String[] values()>::values:1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <okio.HashingSource$Companion: okio.HashingSource sha1(okio.Source)>::sha1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.http.impl.auth.NTLMEngineImpl: java.security.MessageDigest getMD5()>::getMD5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <okio.ByteString: okio.ByteString sha1()>::sha1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <okio.ByteString: okio.ByteString md5()>::md5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD2" in <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getMd2Digest()>::getMd2Digest.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <okio.HashingSink$Companion: okio.HashingSink md5(okio.Sink)>::md5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <okio.Buffer: okio.ByteString sha1()>::sha1.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "1L" in <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>::init:12.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "0L" in <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>::init:12.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "1L" in <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>::init:17.

=======================================

Total Heuristics: 123
Total Orthogonal: 0
Total Constants: 30
Total Slices: 386
Average Length: 38.05958549222798

Depth: 1, Count 123

=======================================
Analysis Timing (ms): 372153.
=======================================

