Analyzing APK File: /home/crypto/fdroidcl/download/apks/net.vreeken.quickmsg_16.apk

=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "BrokenPBEWithSHAAnd3-KeyTripleDES-CBC" in <org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object getObject(char[])>::getObject.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "OldPBEWithSHAAnd3-KeyTripleDES-CBC" in <org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object getObject(char[])>::getObject.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "PBEWithSHAAnd3-KeyTripleDES-CBC" in <org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object getObject(char[])>::getObject.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "PBEWithSHAAnd3-KeyTripleDES-CBC" in <org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: void <init>(org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>::init.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "PBEWithSHAAnd3-KeyTripleDES-CBC" in <org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object getObject(char[])>::getObject.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.math.ec.ECCurve$F2m: org.spongycastle.math.ec.ECFieldElement solveQuadraticEquation(org.spongycastle.math.ec.ECFieldElement)>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.pqc.math.linearalgebra.GF2nONBField: org.spongycastle.pqc.math.linearalgebra.GF2nElement getRandomRoot(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>::getRandomRoot.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.pqc.math.linearalgebra.GF2nONBField: int elementOfOrder(int,int)>::elementOfOrder.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField: org.spongycastle.pqc.math.linearalgebra.GF2nElement getRandomRoot(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>::getRandomRoot.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.asn1.ua.DSTU4145PointEncoder: org.spongycastle.math.ec.ECFieldElement solveQuadraticEquation(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement)>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.math.ec.ECFieldElement$Fp: org.spongycastle.math.ec.ECFieldElement sqrt()>::sqrt.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nElement solveQuadraticEquation()>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <net.vreeken.quickmsg.ListActivity: void add_group(java.lang.String)>::add_group.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 12: Should check HostnameVerification manually
***Didn't manually verify hostname in startTLS in <com.sun.mail.util.SocketFetcher: java.net.Socket startTLS(java.net.Socket,java.util.Properties,java.lang.String)>::startTLS.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.spongycastle.openpgp.operator.jcajce.JcaKeyFingerprintCalculator: byte[] calculateFingerprint(org.spongycastle.bcpg.PublicKeyPacket)>::calculateFingerprint.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <org.spongycastle.openpgp.operator.jcajce.JcaKeyFingerprintCalculator: byte[] calculateFingerprint(org.spongycastle.bcpg.PublicKeyPacket)>::calculateFingerprint.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <com.sun.mail.pop3.Protocol: java.lang.String getDigest(java.lang.String)>::getDigest.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <org.spongycastle.openpgp.operator.jcajce.SHA1PGPDigestCalculator: void <init>()>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <org.spongycastle.ocsp.RespID: void <init>(java.security.PublicKey)>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <com.sun.mail.smtp.DigestMD5: byte[] authClient(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>::authClient.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "3" in <org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: void <init>(org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.lang.String,byte[],java.security.cert.Certificate[])>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "1" in <org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: void loadStore(java.io.InputStream)>::loadStore.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "1" in <org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: void <init>(org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.lang.String,java.security.cert.Certificate)>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "4" in <org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: void <init>(org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "2" in <org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: void loadStore(java.io.InputStream)>::loadStore.

=======================================
=======================================
***Violated Rule 11: Found predictable seeds in code
***Found: "www.bouncycastle.org" in <org.spongycastle.crypto.examples.DESExample: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean)>::init:175.

=======================================

Total Heuristics: 6808
Total Orthogonal: 0
Total Constants: 178
Total Slices: 847
Average Length: 425.64817001180637

Depth: 1, Count 6808

=======================================
Analysis Timing (ms): 450045.
=======================================

