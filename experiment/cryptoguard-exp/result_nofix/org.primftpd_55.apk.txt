Analyzing APK File: /home/crypto/fdroidcl/download/apks/org.primftpd_55.apk

=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "DES/ECB/NoPadding" in <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl: byte[] lmHash(char[])>::lmHash.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "RC4" in <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>::RC4.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "RC4" in <org.apache.sshd.common.cipher.BaseRC4Cipher: void <init>(int,int)>::init.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "Blowfish/CBC/NoPadding" in <org.apache.sshd.common.cipher.BlowfishCBC: void <init>()>::init.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "DES/ECB/NoPadding" in <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>::getLanManagerSessionKey.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "DESede/CBC/NoPadding" in <org.apache.sshd.common.cipher.TripleDESCBC: void <init>()>::init.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "DES/ECB/NoPadding" in <org.apache.mina.proxy.handlers.http.ntlm.NTLMResponses: byte[] lmResponse(byte[],byte[])>::lmResponse.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "RC4" in <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>::initCipher.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "DES/ECB/NoPadding" in <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>::getLanManagerSessionKey.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "DES/ECB/NoPadding" in <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>::lmResponse.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "DES/ECB/NoPadding" in <org.apache.mina.proxy.handlers.http.ntlm.NTLMResponses: byte[] lmHash(java.lang.String)>::lmHash.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.hc.client5.http.entity.mime.MultipartEntityBuilder: java.lang.String generateBoundary()>::generateBoundary.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.bouncycastle.pqc.math.linearalgebra.GF2nElement solveQuadraticEquation()>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.math.ec.ECFieldElement$Fp: org.bouncycastle.math.ec.ECFieldElement sqrt()>::sqrt.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.asn1.ua.DSTU4145PointEncoder: org.bouncycastle.math.ec.ECFieldElement solveQuadraticEquation(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECFieldElement)>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.math.raw.Mod: int[] random(int[])>::random.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.math.ec.ECCurve$AbstractF2m: org.bouncycastle.math.ec.ECFieldElement solveQuadraticEquation(org.bouncycastle.math.ec.ECFieldElement)>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <androidx.activity.result.ActivityResultRegistry: void <init>()>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.ftpserver.util.IoUtils: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder: boolean isOrderedMap(java.util.Map)>::isOrderedMap.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.mina.filter.errorgenerating.ErrorGeneratingFilter: void <init>()>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.pqc.math.linearalgebra.GF2nONBField: int elementOfOrder(int,int)>::elementOfOrder.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.ftpserver.impl.PassivePorts: void <init>(java.util.Set,boolean)>::init.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of org.bouncycastle.est.jcajce.JcaJceUtils$1 in org.bouncycastle.est.jcajce.JcaJceUtils$1 <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of org.bouncycastle.est.jcajce.JcaJceUtils$1 in org.bouncycastle.est.jcajce.JcaJceUtils$1::UNKNOWN.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of org.bouncycastle.est.jcajce.JcaJceUtils$2 in org.bouncycastle.est.jcajce.JcaJceUtils$2 <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of org.bouncycastle.est.jcajce.JcaJceUtils$2 in org.bouncycastle.est.jcajce.JcaJceUtils$2::UNKNOWN.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of org.apache.mina.filter.ssl.BogusTrustManagerFactory$1 in org.apache.mina.filter.ssl.BogusTrustManagerFactory$1 <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of org.apache.mina.filter.ssl.BogusTrustManagerFactory$1 in org.apache.mina.filter.ssl.BogusTrustManagerFactory$1::UNKNOWN.

=======================================
=======================================
***Violated Rule 6: Used untrusted HostNameVerifier
***Cause: Fixed "[1]" in org.apache.hc.client5.http.ssl.NoopHostnameVerifier::UNKNOWN.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getSha1Digest()>::getSha1Digest.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <org.apache.commons.codec.digest.MessageDigestAlgorithms: java.lang.String[] values()>::values.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <org.bouncycastle.cert.jcajce.JcaX509ExtensionUtils: void <init>()>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.mina.proxy.handlers.http.ntlm.NTLMResponses: byte[] hmacMD5(byte[],byte[])>::hmacMD5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA" in <org.apache.ftpserver.util.EncryptUtils: java.lang.String encryptSHA(java.lang.String)>::encryptSHA.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD4" in <org.apache.mina.proxy.handlers.http.ntlm.NTLMResponses: byte[] ntlmHash(java.lang.String)>::ntlmHash.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.ftpserver.command.impl.MD5: java.lang.String md5(java.io.InputStream)>::md5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <org.bouncycastle.openpgp.operator.jcajce.SHA1PGPDigestCalculator: void <init>()>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.hc.client5.http.impl.auth.DigestScheme: java.lang.String createDigestResponse(org.apache.hc.core5.http.HttpRequest)>::createDigestResponse:235.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.hc.client5.http.impl.auth.DigestScheme: java.lang.String createDigestResponse(org.apache.hc.core5.http.HttpRequest)>::createDigestResponse:227.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.commons.codec.digest.MessageDigestAlgorithms: java.lang.String[] values()>::values.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl: java.security.MessageDigest getMD5()>::getMD5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD2" in <org.apache.commons.codec.digest.MessageDigestAlgorithms: java.lang.String[] values()>::values.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD2" in <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getMd2Digest()>::getMd2Digest.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getMd5Digest()>::getMd5Digest.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.sshd.common.digest.MD5: void <init>()>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <org.primftpd.util.KeyFingerprintProvider: void calcPubkeyFingerprints(android.content.Context)>::calcPubkeyFingerprints.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <org.apache.sshd.common.digest.SHA1: void <init>()>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.commons.net.pop3.POP3Client: boolean login(java.lang.String,java.lang.String,java.lang.String)>::login.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.primftpd.util.KeyFingerprintProvider: void calcPubkeyFingerprints(android.content.Context)>::calcPubkeyFingerprints.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.ftpserver.util.EncryptUtils: java.lang.String encryptMD5(java.lang.String)>::encryptMD5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.mina.proxy.handlers.http.digest.DigestUtilities: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.mina.proxy.handlers.http.ntlm.NTLMResponses: byte[] getNTLM2SessionResponse(java.lang.String,byte[],byte[])>::getNTLM2SessionResponse.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "4" in <org.bouncycastle.math.ec.ECPoint: byte[] getEncoded(boolean)>::getEncoded.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "password:" in <org.bouncycastle.jcajce.provider.keystore.util.ParameterUtil: char[] extractPassword(java.security.KeyStore$LoadStoreParameter)>::extractPassword.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "2" in <org.bouncycastle.math.ec.ECPoint: byte[] getEncoded(boolean)>::getEncoded.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "3" in <org.bouncycastle.math.ec.ECPoint: byte[] getEncoded(boolean)>::getEncoded.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "ENC" in <org.bouncycastle.operator.jcajce.OperatorUtils: java.security.Key getJceKey(org.bouncycastle.operator.GenericKey)>::getJceKey.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "2" in <org.bouncycastle.jcajce.provider.symmetric.Twofish$PBEWithSHA: void <init>()>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "3" in <org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: void <init>(org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.lang.String,byte[],java.security.cert.Certificate[])>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "0" in <org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithMD5AndRC2: void <init>()>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "1" in <org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: void loadStore(java.io.InputStream)>::loadStore.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "20" in <org.bouncycastle.jcajce.provider.keystore.pkcs12.PKCS12KeyStoreSpi: void <init>(org.bouncycastle.jcajce.util.JcaJceHelper,org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.ASN1ObjectIdentifier)>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "2" in <org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHA256AESCBC128: void <init>()>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "1" in <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey getKey(org.bouncycastle.jcajce.util.JcaJceHelper,char[],java.lang.String,int,byte[],boolean)>::getKey.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "2" in <org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHA1AESCBC256: void <init>()>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "0" in <org.bouncycastle.jcajce.provider.symmetric.DES$PBEWithMD2: void <init>()>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "2" in <org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHA1AESCBC128: void <init>()>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "2" in <org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi: void loadStore(java.io.InputStream)>::loadStore.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "2" in <org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHA1AESCBC192: void <init>()>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "0" in <org.bouncycastle.jcajce.provider.symmetric.DES$PBEWithMD5: void <init>()>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "0" in <org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithSHA1AndRC2: void <init>()>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "4" in <org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: void <init>(org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "2" in <org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithSHAAnd128BitRC2: void <init>()>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "2" in <org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHA256AESCBC192: void <init>()>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "2" in <org.bouncycastle.jcajce.provider.symmetric.RC2$PBEWithSHAAnd40BitRC2: void <init>()>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "2" in <org.bouncycastle.jcajce.provider.symmetric.DESede$PBEWithSHAAndDES2Key: void <init>()>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "2" in <org.bouncycastle.jcajce.provider.symmetric.AES$PBEWithSHA256AESCBC256: void <init>()>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "1" in <org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: void <init>(org.bouncycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.lang.String,java.security.cert.Certificate)>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "2" in <org.bouncycastle.jcajce.provider.symmetric.DESede$PBEWithSHAAndDES3Key: void <init>()>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "0" in <org.bouncycastle.jcajce.provider.symmetric.DES$PBEWithSHA1: void <init>()>::init.

=======================================
=======================================
***Violated Rule 11: Found predictable seeds in code
***Found: "www.bouncycastle.org" in <org.bouncycastle.crypto.examples.DESExample: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean)>::init.

=======================================
=======================================
***Violated Rule 14: Used Predictable KeyStore Password
***Found: "SunX509" in <javax.net.ssl.KeyManagerFactory: java.lang.String getDefaultAlgorithm()>::getDefaultAlgorithm:74.

=======================================
=======================================
***Violated Rule 14: Used Predictable KeyStore Password
***Found: "jks" in <java.security.KeyStore: java.lang.String getDefaultType()>::getDefaultType:971.

=======================================

Total Heuristics: 5136
Total Orthogonal: 0
Total Constants: 3575
Total Slices: 2018
Average Length: 269.5649157581764

Depth: 1, Count 5136

=======================================
Analysis Timing (ms): 945175.
=======================================

