Analyzing APK File: /home/crypto/fdroidcl/download/apks/ch.protonvpn.android_102119017.apk

=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <androidx.transition.Explode: void calculateOut(android.view.View,android.graphics.Rect,int[])>::calculateOut.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <at.favre.lib.bytes.Bytes: at.favre.lib.bytes.Bytes unsecureRandom(int,long)>::unsecureRandom.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.minidns.AbstractDnsClient: void <init>(org.minidns.DnsCache)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.commons.lang3.ArrayUtils: void shuffle(float[])>::shuffle.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.commons.lang3.RandomUtils: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <kotlin.random.FallbackThreadLocalRandom$implStorage$1: java.util.Random initialValue()>::initialValue.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <j$.util.concurrent.ThreadLocalRandom: void <init>(j$.util.concurrent.c)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <androidx.leanback.widget.StreamingTextView: void <init>(android.content.Context,android.util.AttributeSet,int)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <at.favre.lib.bytes.Bytes: at.favre.lib.bytes.Bytes unsecureRandom(int)>::unsecureRandom.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.minidns.util.SrvUtil: java.util.List sortSrvRecords(java.util.Collection)>::sortSrvRecords.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.commons.lang3.ArrayUtils: void shuffle(double[])>::shuffle.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <okhttp3.OkHttpClient: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)>::newWebSocket.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.commons.lang3.ArrayUtils: void shuffle(boolean[])>::shuffle.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <androidx.leanback.widget.StreamingTextView: void <init>(android.content.Context,android.util.AttributeSet)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.commons.lang3.ArrayUtils: void shuffle(char[])>::shuffle.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <kotlin.random.KotlinRandom: void <init>(kotlin.random.Random)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.commons.lang3.ArrayUtils: void shuffle(java.lang.Object[])>::shuffle.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.protonvpn.android.di.AppModule: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <io.sentry.connection.RandomEventSampler: void <init>(double)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.commons.lang3.RandomStringUtils: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm: void sleep()>::sleep.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <j$.util.concurrent.ThreadLocalRandom: void <init>()>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.load.Key getFrameSignature()>::getFrameSignature.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <androidx.activity.result.ActivityResultRegistry: void <init>()>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.commons.lang3.ArrayUtils: void shuffle(int[])>::shuffle.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.commons.lang3.ArrayUtils: void shuffle(byte[])>::shuffle.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.commons.lang3.ArrayUtils: void shuffle(long[])>::shuffle.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.commons.lang3.ArrayUtils: void shuffle(short[])>::shuffle.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of com.datatheorem.android.trustkit.pinning.OkHttpRootTrustManager in com.datatheorem.android.trustkit.pinning.OkHttpRootTrustManager <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of com.datatheorem.android.trustkit.pinning.PinningTrustManager in com.datatheorem.android.trustkit.pinning.PinningTrustManager <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of me.proton.core.network.data.LeafSPKIPinningTrustManager in me.proton.core.network.data.LeafSPKIPinningTrustManager <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of org.minidns.dane.ExpectingTrustManager in org.minidns.dane.ExpectingTrustManager::UNKNOWN.

=======================================
=======================================
***Violated Rule 6: Used untrusted HostNameVerifier
***Cause: Fixed "[1]" in okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier::UNKNOWN.

=======================================
=======================================
***Violated Rule 6: Used untrusted HostNameVerifier
***Cause: Fixed "[1]" in io.sentry.connection.HttpConnection$1::UNKNOWN.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <org.apache.commons.codec.digest.MessageDigestAlgorithms: java.lang.String[] values()>::values:164.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getMd5Digest()>::getMd5Digest.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <org.minidns.dnssec.algorithms.AlgorithmMap: void <init>()>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <de.blinkt.openvpn.api.AppRestrictions: java.lang.String hashConfig(java.lang.String)>::hashConfig.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <okio.HashingSink$Companion: okio.HashingSink md5(okio.Sink)>::md5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <okio.HashingSource$Companion: okio.HashingSource md5(okio.Source)>::md5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <org.strongswan.android.security.LocalCertificateStore: java.lang.String getKeyId(java.security.cert.Certificate)>::getKeyId.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <at.favre.lib.bytes.Bytes: at.favre.lib.bytes.Bytes hashSha1()>::hashSha1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.commons.codec.digest.MessageDigestAlgorithms: java.lang.String[] values()>::values:164.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <okio.HashingSink$Companion: okio.HashingSink sha1(okio.Sink)>::sha1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD2" in <org.apache.commons.codec.digest.MessageDigestAlgorithms: java.lang.String[] values()>::values:164.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <okio.HashingSource$Companion: okio.HashingSource sha1(okio.Source)>::sha1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD2" in <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getMd2Digest()>::getMd2Digest.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <org.minidns.dnssec.algorithms.AlgorithmMap: void <init>()>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <de.blinkt.openvpn.core.LogItem: java.lang.String getMobileInfoString(android.content.Context)>::getMobileInfoString.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <okio.ByteString: okio.ByteString sha1()>::sha1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <okio.Buffer: okio.ByteString md5()>::md5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getSha1Digest()>::getSha1Digest.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <at.favre.lib.bytes.Bytes: at.favre.lib.bytes.Bytes hashMd5()>::hashMd5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <okio.ByteString: okio.ByteString md5()>::md5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <okio.Buffer: okio.ByteString sha1()>::sha1.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "Salt" in <com.protonvpn.android.ProtonApplication: void initPreferences()>::initPreferences.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "Key" in <com.protonvpn.android.ProtonApplication: void initPreferences()>::initPreferences.

=======================================
=======================================
***Violated Rule 9: Found constant salts in code
***Found: "Salt" in <com.protonvpn.android.ProtonApplication: void initPreferences()>::initPreferences.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "0" in <com.protonvpn.android.utils.ProtonPreferences: void <init>(android.content.Context,com.tozny.crypto.android.AesCbcWithIntegrity$SecretKeys,java.lang.String)>::init.

=======================================
=======================================
***Violated Rule 14: Used Predictable KeyStore Password
***Found: "changeit" in <ch.qos.logback.core.net.ssl.KeyStoreFactoryBean: java.lang.String getPassword()>::getPassword.

=======================================
=======================================
***Violated Rule 7: Used HTTP Protocol
***Found: "http://localhost/" in <retrofit2.Response: retrofit2.Response success(java.lang.Object,okhttp3.Headers)>::success.

=======================================
=======================================
***Violated Rule 7: Used HTTP Protocol
***Found: "http://localhost/" in <retrofit2.Response: retrofit2.Response success(int,java.lang.Object)>::success.

=======================================
=======================================
***Violated Rule 7: Used HTTP Protocol
***Found: "http://localhost/" in <retrofit2.Response: retrofit2.Response error(int,okhttp3.ResponseBody)>::error.

=======================================
=======================================
***Violated Rule 7: Used HTTP Protocol
***Found: "http://localhost/" in <retrofit2.Response: retrofit2.Response success(java.lang.Object)>::success.

=======================================

Total Heuristics: 354
Total Orthogonal: 0
Total Constants: 90
Total Slices: 3018
Average Length: 27.583499005964214

Depth: 1, Count 354

=======================================
Analysis Timing (ms): 913088.
=======================================

