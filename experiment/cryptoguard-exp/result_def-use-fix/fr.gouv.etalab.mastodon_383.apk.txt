Analyzing APK File: /home/crypto/fdroidcl/download/apks/fr.gouv.etalab.mastodon_383.apk

=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <androidx.transition.Explode: void calculateOut(android.view.View,android.graphics.Rect,int[])>::calculateOut.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.google.common.hash.Striped64: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <kotlin.random.FallbackThreadLocalRandom$implStorage$1: java.util.Random initialValue()>::initialValue.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <app.fedilab.android.client.API: app.fedilab.android.client.APIResponse pushSubscription(java.lang.String,app.fedilab.android.client.Entities.Account)>::pushSubscription.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.google.android.exoplayer2.trackselection.RandomTrackSelection$Factory: void <init>(int)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.google.android.exoplayer2.source.ShuffleOrder$DefaultShuffleOrder: void <init>(int[],long)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.poi.ss.formula.atp.RandBetween: org.apache.poi.ss.formula.eval.ValueEval evaluate(org.apache.poi.ss.formula.eval.ValueEval[],org.apache.poi.ss.formula.OperationEvaluationContext)>::evaluate.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <okhttp3.OkHttpClient: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)>::newWebSocket.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.math.raw.Mod: int[] random(int[])>::random.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <app.fedilab.android.helper.BaseHelper: java.lang.String getFileName(android.content.Context,android.net.Uri)>::getFileName.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.asn1.ua.DSTU4145PointEncoder: org.spongycastle.math.ec.ECFieldElement solveQuadraticEquation(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement)>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <kotlin.random.KotlinRandom: void <init>(kotlin.random.Random)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.commons.net.ftp.FTPClient: void <init>()>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.google.android.exoplayer2.source.ShuffleOrder$DefaultShuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder cloneAndInsert(int,int)>::cloneAndInsert.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.pqc.math.linearalgebra.GF2nONBField: int elementOfOrder(int,int)>::elementOfOrder.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.commons.codec.digest.B64: java.lang.String getRandomSalt(int)>::getRandomSalt.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.google.android.exoplayer2.upstream.cache.SimpleCache: void <init>(java.io.File,com.google.android.exoplayer2.upstream.cache.CacheEvictor,com.google.android.exoplayer2.upstream.cache.CachedContentIndex,com.google.android.exoplayer2.upstream.cache.CacheFileMetadataIndex)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.google.android.exoplayer2.trackselection.RandomTrackSelection$Factory: void <init>()>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.jsoup.helper.DataUtil: java.lang.String mimeBoundary()>::mimeBoundary.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nElement solveQuadraticEquation()>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.google.android.exoplayer2.source.ShuffleOrder$DefaultShuffleOrder: void <init>(int)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.cleveroad.audiovisualization.GLRenderer: void <init>(android.content.Context,com.cleveroad.audiovisualization.GLAudioVisualizationView$Configuration)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.google.android.exoplayer2.trackselection.RandomTrackSelection: void <init>(com.google.android.exoplayer2.source.TrackGroup,int[],long)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.commons.codec.digest.UnixCrypt: java.lang.String crypt(byte[],java.lang.String)>::crypt.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.math.ec.ECCurve$AbstractF2m: org.spongycastle.math.ec.ECFieldElement solveQuadraticEquation(org.spongycastle.math.ec.ECFieldElement)>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.google.android.exoplayer2.source.ShuffleOrder$DefaultShuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder cloneAndClear()>::cloneAndClear.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.koushikdutta.async.dns.Dns: com.koushikdutta.async.future.Future lookup(com.koushikdutta.async.AsyncServer,java.lang.String,boolean,com.koushikdutta.async.future.FutureCallback)>::lookup.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.google.common.cache.Striped64: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.load.Key getFrameSignature()>::getFrameSignature.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.poi.ss.formula.functions.NumericFunction$35: org.apache.poi.ss.formula.eval.ValueEval evaluate(int,int)>::evaluate.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <app.fedilab.android.activities.BaseTootActivity: void addNewMedia(org.json.JSONObject,java.util.ArrayList)>::addNewMedia.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.koushikdutta.async.http.HybiParser: byte[] frame(int,byte[],int,int,int)>::frame.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.google.android.exoplayer2.source.ShuffleOrder$DefaultShuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder cloneAndRemove(int,int)>::cloneAndRemove.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.google.android.exoplayer2.trackselection.RandomTrackSelection: void <init>(com.google.android.exoplayer2.source.TrackGroup,int[])>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.koushikdutta.async.util.FileCache: void <init>(java.io.File,long,boolean)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.google.android.exoplayer2.source.ShuffleOrder$DefaultShuffleOrder: void <init>(int,long)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.google.android.exoplayer2.upstream.cache.CachedContentIndex$LegacyStorage: void <init>(java.io.File,byte[],boolean)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.math.ec.ECFieldElement$Fp: org.spongycastle.math.ec.ECFieldElement sqrt()>::sqrt.

=======================================
=======================================
***Violated Rule 12: Should check HostnameVerification manually
***Didn't manually verify hostname in startTLS in <com.sun.mail.util.SocketFetcher: java.net.Socket startTLS(java.net.Socket,java.util.Properties,java.lang.String)>::startTLS.

=======================================
=======================================
***Violated Rule 12: Should check HostnameVerification manually
***Didn't manually verify hostname in performSSLNegotiation in <org.apache.commons.net.smtp.SMTPSClient: void performSSLNegotiation()>::performSSLNegotiation.

=======================================
=======================================
***Violated Rule 12: Should check HostnameVerification manually
***Didn't manually verify hostname in performSSLNegotiation in <org.apache.commons.net.pop3.POP3SClient: void performSSLNegotiation()>::performSSLNegotiation.

=======================================
=======================================
***Violated Rule 12: Should check HostnameVerification manually
***Didn't manually verify hostname in sslNegotiation in <org.apache.commons.net.ftp.FTPSClient: void sslNegotiation()>::sslNegotiation.

=======================================
=======================================
***Violated Rule 12: Should check HostnameVerification manually
***Didn't manually verify hostname in performSSLNegotiation in <org.apache.commons.net.imap.IMAPSClient: void performSSLNegotiation()>::performSSLNegotiation.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of com.koushikdutta.async.AsyncSSLSocketWrapper$2 in com.koushikdutta.async.AsyncSSLSocketWrapper$2 <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of com.koushikdutta.async.AsyncSSLSocketWrapper$2 in com.koushikdutta.async.AsyncSSLSocketWrapper$2::UNKNOWN.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of com.koushikdutta.async.AsyncSSLSocketWrapper$1 in com.koushikdutta.async.AsyncSSLSocketWrapper$1 <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of com.koushikdutta.async.AsyncSSLSocketWrapper$1 in com.koushikdutta.async.AsyncSSLSocketWrapper$1::UNKNOWN.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of org.jsoup.helper.HttpConnection$Response$2 in org.jsoup.helper.HttpConnection$Response$2 <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of org.jsoup.helper.HttpConnection$Response$2 in org.jsoup.helper.HttpConnection$Response$2::UNKNOWN.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of org.apache.commons.net.util.TrustManagerUtils$TrustManager in org.apache.commons.net.util.TrustManagerUtils$TrustManager <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of org.apache.commons.net.util.TrustManagerUtils$TrustManager in org.apache.commons.net.util.TrustManagerUtils$TrustManager::UNKNOWN.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of org.spongycastle.jsse.provider.ProvX509TrustManager in org.spongycastle.jsse.provider.ProvX509TrustManager <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of org.spongycastle.est.jcajce.JcaJceUtils$1 in org.spongycastle.est.jcajce.JcaJceUtils$1 <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of org.spongycastle.est.jcajce.JcaJceUtils$1 in org.spongycastle.est.jcajce.JcaJceUtils$1::UNKNOWN.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of org.spongycastle.est.jcajce.JcaJceUtils$2 in org.spongycastle.est.jcajce.JcaJceUtils$2 <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of org.spongycastle.est.jcajce.JcaJceUtils$2 in org.spongycastle.est.jcajce.JcaJceUtils$2::UNKNOWN.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of app.fedilab.android.client.TLSSocketFactory$1 in app.fedilab.android.client.TLSSocketFactory$1 <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of app.fedilab.android.client.TLSSocketFactory$1 in app.fedilab.android.client.TLSSocketFactory$1::UNKNOWN.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of org.apache.commons.net.ftp.FTPSTrustManager in org.apache.commons.net.ftp.FTPSTrustManager <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of org.apache.commons.net.ftp.FTPSTrustManager in org.apache.commons.net.ftp.FTPSTrustManager::UNKNOWN.

=======================================
=======================================
***Violated Rule 6: Used untrusted HostNameVerifier
***Cause: Fixed "[1]" in org.jsoup.helper.HttpConnection$Response$1::UNKNOWN.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <okio.HashingSink: okio.HashingSink md5(okio.Sink)>::md5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <com.google.common.hash.Hashing$Md5Holder: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.conscrypt.NativeCrypto: int X509_NAME_hash_old(javax.security.auth.x500.X500Principal)>::X509_NAME_hash_old.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <okio.Buffer: okio.ByteString md5()>::md5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <com.koushikdutta.async.util.FileCache: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <okio.HashingSource: okio.HashingSource md5(okio.Source)>::md5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.commons.net.pop3.POP3Client: boolean login(java.lang.String,java.lang.String,java.lang.String)>::login.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <com.sun.mail.pop3.Protocol: java.lang.String getDigest(java.lang.String)>::getDigest.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <com.google.common.hash.Hashing$Sha1Holder: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <okio.HashingSink: okio.HashingSink sha1(okio.Sink)>::sha1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <com.koushikdutta.async.http.WebSocketImpl: java.lang.String SHA1(java.lang.String)>::SHA1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <okio.ByteString: okio.ByteString sha1()>::sha1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <com.tonyodev.fetch2core.FetchCoreUtils: java.lang.String getMd5String(byte[],int,int)>::getMd5String.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getMd5Digest()>::getMd5Digest.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <org.spongycastle.cert.jcajce.JcaX509ExtensionUtils: void <init>()>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <okio.ByteString: okio.ByteString md5()>::md5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <org.conscrypt.NativeCrypto: int X509_NAME_hash(javax.security.auth.x500.X500Principal)>::X509_NAME_hash.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "sha1" in <org.apache.poi.poifs.crypt.HashAlgorithm: void <clinit>()>::clinit:24.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <org.apache.poi.poifs.crypt.HashAlgorithm: void <clinit>()>::clinit:24.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <org.apache.poi.poifs.crypt.HashAlgorithm: void <clinit>()>::clinit:24.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <com.tonyodev.fetch2core.FetchCoreUtils: java.lang.String getFileMd5String(java.lang.String)>::getFileMd5String.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <okio.HashingSource: okio.HashingSource sha1(okio.Source)>::sha1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <okio.Buffer: okio.ByteString sha1()>::sha1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <com.sun.mail.smtp.DigestMD5: byte[] authClient(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>::authClient.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD2" in <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getMd2Digest()>::getMd2Digest.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getSha1Digest()>::getSha1Digest.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "1" in <org.spongycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey getKey(org.spongycastle.jcajce.util.JcaJceHelper,char[],java.lang.String,int,byte[],boolean)>::getKey.

=======================================
=======================================
***Violated Rule 11: Found predictable seeds in code
***Found: "www.bouncycastle.org" in <org.spongycastle.crypto.examples.DESExample: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean)>::init:162.

=======================================
=======================================
***Violated Rule 14: Used Predictable KeyStore Password
***Found: "jks" in <java.security.KeyStore: java.lang.String getDefaultType()>::getDefaultType:971.

=======================================
=======================================
***Violated Rule 7: Used HTTP Protocol
***Found: "http://" in <app.fedilab.android.asynctasks.RetrieveMetaDataAsyncTask: void execRetrieveMetaDataInBackground()>::execRetrieveMetaDataInBackground:85.

=======================================
=======================================
***Violated Rule 7: Used HTTP Protocol
***Found: "http://" in <app.fedilab.android.activities.LoginActivity: void retrievesClientId()>::retrievesClientId:456.

=======================================

Total Heuristics: 1870
Total Orthogonal: 0
Total Constants: 10
Total Slices: 2506
Average Length: 229.133679169992

Depth: 1, Count 1870

=======================================
Analysis Timing (ms): 1759996.
=======================================

