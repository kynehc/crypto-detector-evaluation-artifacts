Analyzing APK File: /home/crypto/fdroidcl/download/apks/org.lumicall.android_192.apk

=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "AES" in <org.picketbox.plugins.vault.PicketBoxSecurityVault: void <init>()>::init.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "PBEwithMD5andDES" in <org.picketbox.datasource.security.PBEIdentityLoginModule: void <init>(java.lang.String,char[],byte[],int)>::init.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "Blowfish" in <org.picketbox.datasource.security.SecureIdentityLoginModule: char[] decode(java.lang.String)>::decode.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "PBEwithMD5andDES" in <org.jboss.security.plugins.FilePassword: char[] decode(java.io.RandomAccessFile)>::decode.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "AES" in <zorg.platform.j2se.EncryptorSuiteImpl: byte[] encryptIV_for_prf(byte[])>::encryptIV_for_prf.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "PBEwithMD5andDES" in <org.picketbox.datasource.security.PBEIdentityLoginModule: void <init>()>::init.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "PBEwithMD5andDES" in <org.jboss.security.plugins.PBEUtils: void main(java.lang.String[])>::main.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "AES" in <zorg.platform.j2se.EncryptorSuiteImpl: void <init>(byte[],byte[])>::init.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "Blowfish" in <org.picketbox.datasource.security.SecureIdentityLoginModule: java.lang.String encode(java.lang.String)>::encode.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "PBEwithMD5andDES" in <org.picketbox.plugins.vault.PicketBoxSecurityVault: java.lang.String decode(java.lang.String,java.lang.String,int)>::decode.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "PBEwithMD5andDES" in <org.jboss.security.plugins.FilePassword: void encode(java.io.RandomAccessFile,byte[],int,byte[])>::encode.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "PBEwithMD5andDES" in <org.picketbox.util.StringUtil: java.lang.String decode(java.lang.String,java.lang.String,int)>::decode.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.math.ec.ECCurve$F2m: org.spongycastle.math.ec.ECFieldElement solveQuadraticEquation(org.spongycastle.math.ec.ECFieldElement)>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.zoolu.tools.Random: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.pqc.math.linearalgebra.GF2nONBField: org.spongycastle.pqc.math.linearalgebra.GF2nElement getRandomRoot(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>::getRandomRoot.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.opentelecoms.util.dns.SRVRecordComparator: void <init>()>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.math.raw.Mod: int[] random(int[])>::random.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField: org.spongycastle.pqc.math.linearalgebra.GF2nElement getRandomRoot(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>::getRandomRoot.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.asn1.ua.DSTU4145PointEncoder: org.spongycastle.math.ec.ECFieldElement solveQuadraticEquation(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement)>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.zoolu.tools.MD5OTP: byte[] encrypt(byte[],byte[])>::encrypt.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.ice4j.attribute.ReservationTokenAttribute: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.sipdroid.media.RtpStreamSender: void run()>::run.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.pqc.math.linearalgebra.GF2nONBField: int elementOfOrder(int,int)>::elementOfOrder.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.ice4j.stack.TransactionID: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.ice4j.ice.NetworkUtils: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.math.ec.ECFieldElement$Fp: org.spongycastle.math.ec.ECFieldElement sqrt()>::sqrt.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nElement solveQuadraticEquation()>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.xbill.DNS.Header: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 12: Should check HostnameVerification manually
***Didn't manually verify hostname in init in <org.zoolu.net.TcpSocket: void <init>(org.zoolu.net.IpAddress,int,boolean)>::init.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of org.opentelecoms.util.crypto.AlwaysAcceptTrustManager in org.opentelecoms.util.crypto.AlwaysAcceptTrustManager <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of org.opentelecoms.util.crypto.AlwaysAcceptTrustManager in org.opentelecoms.util.crypto.AlwaysAcceptTrustManager::UNKNOWN.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of org.opentelecoms.util.crypto.AppendingTrustManager in org.opentelecoms.util.crypto.AppendingTrustManager::UNKNOWN.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.jboss.security.ExternalPasswordCache: void <init>()>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.jboss.security.auth.callback.RFC2617Digest: void main(java.lang.String[])>::main.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <org.lumicall.android.reg.EnrolmentService: java.lang.String getHexEncodedKeySignatures()>::getHexEncodedKeySignatures.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "sha-1" in <org.xbill.DNS.DNSSEC: byte[] generateDSDigest(org.xbill.DNS.DNSKEYRecord,int)>::generateDSDigest.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "sha-1" in <org.xbill.DNS.TSIG: void getDigest()>::getDigest.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA" in <org.jboss.crypto.digest.SHAInterleave: void <init>()>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.sipdroid.sipua.PublishAgent: void publish(org.sipdroid.sipua.BasicStatus,int,java.lang.String)>::publish.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA" in <org.jboss.crypto.digest.SHAReverseInterleave: void <init>()>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "sha-1" in <org.xbill.DNS.NSEC3Record: byte[] hashName(org.xbill.DNS.Name,int,int,byte[])>::hashName.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "md5" in <org.xbill.DNS.TSIG: void getDigest()>::getDigest.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA" in <org.jboss.crypto.CryptoUtil: void init(byte[])>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.ice4j.security.LongTermCredentialSession: byte[] getLocalKey(java.lang.String)>::getLocalKey.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <zorg.platform.j2se.DigestType: void <clinit>()>::clinit:5.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "somearbitrarycrazystringthatdoesnotmatter" in <org.picketbox.util.StringUtil: java.lang.String decode(java.lang.String,java.lang.String,int)>::decode:171.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "jaas is the way" in <org.picketbox.datasource.security.SecureIdentityLoginModule: java.lang.String encode(java.lang.String)>::encode:153.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "78aac249a60a13d5e882927928043ebb" in <org.jboss.security.plugins.FilePassword: void encode(java.io.RandomAccessFile,byte[],int,byte[])>::encode:150.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "jaas is the way" in <org.picketbox.datasource.security.PBEIdentityLoginModule: void <init>(java.lang.String,char[],byte[],int)>::init:89.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "jaas is the way" in <org.picketbox.datasource.security.SecureIdentityLoginModule: char[] decode(java.lang.String)>::decode:167.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "78aac249a60a13d5e882927928043ebb" in <org.jboss.security.plugins.FilePassword: char[] decode(java.io.RandomAccessFile)>::decode:137.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "somearbitrarycrazystringthatdoesnotmatter" in <org.picketbox.plugins.vault.PicketBoxSecurityVault: java.lang.String decode(java.lang.String,java.lang.String,int)>::decode:356.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "jaas is the way" in <org.picketbox.datasource.security.PBEIdentityLoginModule: void <init>()>::init:89.

=======================================
=======================================
***Violated Rule 9: Found constant salts in code
***Found: "4" in <org.picketbox.datasource.security.PBEIdentityLoginModule: void <init>()>::init.

=======================================
=======================================
***Violated Rule 9: Found constant salts in code
***Found: "1" in <org.picketbox.datasource.security.PBEIdentityLoginModule: void <init>()>::init:91.

=======================================
=======================================
***Violated Rule 9: Found constant salts in code
***Found: "11" in <org.picketbox.datasource.security.PBEIdentityLoginModule: void <init>()>::init.

=======================================
=======================================
***Violated Rule 9: Found constant salts in code
***Found: "3" in <org.picketbox.datasource.security.PBEIdentityLoginModule: void <init>(java.lang.String,char[],byte[],int)>::init.

=======================================
=======================================
***Violated Rule 9: Found constant salts in code
***Found: "7" in <org.picketbox.datasource.security.PBEIdentityLoginModule: void <init>()>::init.

=======================================
=======================================
***Violated Rule 9: Found constant salts in code
***Found: "3" in <org.picketbox.datasource.security.PBEIdentityLoginModule: void <init>()>::init.

=======================================
=======================================
***Violated Rule 9: Found constant salts in code
***Found: "11" in <org.picketbox.datasource.security.PBEIdentityLoginModule: void <init>(java.lang.String,char[],byte[],int)>::init.

=======================================
=======================================
***Violated Rule 9: Found constant salts in code
***Found: "9" in <org.picketbox.datasource.security.PBEIdentityLoginModule: void <init>(java.lang.String,char[],byte[],int)>::init.

=======================================
=======================================
***Violated Rule 9: Found constant salts in code
***Found: "13" in <org.picketbox.datasource.security.PBEIdentityLoginModule: void <init>(java.lang.String,char[],byte[],int)>::init.

=======================================
=======================================
***Violated Rule 9: Found constant salts in code
***Found: "7" in <org.picketbox.datasource.security.PBEIdentityLoginModule: void <init>(java.lang.String,char[],byte[],int)>::init.

=======================================
=======================================
***Violated Rule 9: Found constant salts in code
***Found: "13" in <org.picketbox.datasource.security.PBEIdentityLoginModule: void <init>()>::init.

=======================================
=======================================
***Violated Rule 9: Found constant salts in code
***Found: "9" in <org.picketbox.datasource.security.PBEIdentityLoginModule: void <init>()>::init.

=======================================
=======================================
***Violated Rule 9: Found constant salts in code
***Found: "2" in <org.picketbox.datasource.security.PBEIdentityLoginModule: void <init>(java.lang.String,char[],byte[],int)>::init.

=======================================
=======================================
***Violated Rule 9: Found constant salts in code
***Found: "4" in <org.picketbox.datasource.security.PBEIdentityLoginModule: void <init>(java.lang.String,char[],byte[],int)>::init.

=======================================
=======================================
***Violated Rule 9: Found constant salts in code
***Found: "1" in <org.picketbox.datasource.security.PBEIdentityLoginModule: void <init>(java.lang.String,char[],byte[],int)>::init:91.

=======================================
=======================================
***Violated Rule 9: Found constant salts in code
***Found: "2" in <org.picketbox.datasource.security.PBEIdentityLoginModule: void <init>()>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "37" in <org.picketbox.datasource.security.PBEIdentityLoginModule: void <init>()>::init.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "37" in <org.picketbox.datasource.security.PBEIdentityLoginModule: void <init>(java.lang.String,char[],byte[],int)>::init.

=======================================
=======================================
***Violated Rule 11: Found predictable seeds in code
***Found: "www.bouncycastle.org" in <org.spongycastle.crypto.examples.DESExample: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean)>::init:177.

=======================================
=======================================
***Violated Rule 7: Used HTTP Protocol
***Found: "http://169.254.169.254/latest/meta-data/" in <org.ice4j.ice.harvest.AwsCandidateHarvester: boolean doTestEc2()>::doTestEc2.

=======================================
=======================================
***Violated Rule 7: Used HTTP Protocol
***Found: "http://169.254.169.254/latest/meta-data/public-ipv4" in <org.ice4j.ice.harvest.AwsCandidateHarvester: boolean obtainEC2Addresses()>::obtainEC2Addresses.

=======================================
=======================================
***Violated Rule 7: Used HTTP Protocol
***Found: "http://169.254.169.254/latest/meta-data/local-ipv4" in <org.ice4j.ice.harvest.AwsCandidateHarvester: boolean obtainEC2Addresses()>::obtainEC2Addresses.

=======================================
=======================================
***Violated Rule 7: Used HTTP Protocol
***Found: "http://sipdroid.googlecode.com/svn/images/checkin" in <org.sipdroid.sipua.ui.Checkin: void checkin(boolean)>::checkin.

=======================================

Total Heuristics: 2080
Total Orthogonal: 0
Total Constants: 67
Total Slices: 1355
Average Length: 221.65387453874538

Depth: 1, Count 2080

=======================================
Analysis Timing (ms): 446211.
=======================================

