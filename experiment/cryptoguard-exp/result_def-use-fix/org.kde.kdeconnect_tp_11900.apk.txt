Analyzing APK File: /home/crypto/fdroidcl/download/apks/org.kde.kdeconnect_tp_11900.apk

=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "RC4" in <org.apache.sshd.common.cipher.BaseRC4Cipher: void <init>(int,int)>::init.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "Blowfish/CBC/NoPadding" in <org.apache.sshd.common.cipher.BlowfishCBC: void <init>()>::init.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "DESede/CBC/NoPadding" in <org.apache.sshd.common.cipher.TripleDESCBC: void <init>()>::init.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "DES/ECB/NoPadding" in <org.apache.mina.proxy.handlers.http.ntlm.NTLMResponses: byte[] lmResponse(byte[],byte[])>::lmResponse.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "DES/ECB/NoPadding" in <org.apache.mina.proxy.handlers.http.ntlm.NTLMResponses: byte[] lmHash(java.lang.String)>::lmHash.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <kotlin.random.FallbackThreadLocalRandom$implStorage$1: java.util.Random initialValue()>::initialValue.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.math.ec.ECCurve$AbstractF2m: org.spongycastle.math.ec.ECFieldElement solveQuadraticEquation(org.spongycastle.math.ec.ECFieldElement)>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <j$.util.concurrent.ThreadLocalRandom: void <init>(j$.util.concurrent.d)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.klinker.android.send_message.Transaction: void sendMmsThroughSystem(android.content.Context,java.lang.String,java.util.List,java.lang.String,java.lang.String[],android.content.Intent,boolean,android.net.Uri)>::sendMmsThroughSystem.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.kde.kdeconnect.Plugins.SMSPlugin.SmsMmsUtils: void sendMmsMessageNative(android.content.Context,com.klinker.android.send_message.Message,com.klinker.android.send_message.Settings)>::sendMmsMessageNative.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.klinker.android.send_message.Utils: long getOrCreateThreadId(android.content.Context,java.util.Set)>::getOrCreateThreadId.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.math.raw.Mod: int[] random(int[])>::random.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <androidx.activity.result.ActivityResultRegistry: void <init>()>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.asn1.ua.DSTU4145PointEncoder: org.spongycastle.math.ec.ECFieldElement solveQuadraticEquation(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement)>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.pqc.math.linearalgebra.GF2nONBField: int elementOfOrder(int,int)>::elementOfOrder.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.android.mms.transaction.DownloadManager: void downloadMultimediaMessage(android.content.Context,java.lang.String,android.net.Uri,boolean,int)>::downloadMultimediaMessage.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.mina.core.filterchain.DefaultIoFilterChainBuilder: boolean isOrderedMap(java.util.Map)>::isOrderedMap.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.mina.filter.errorgenerating.ErrorGeneratingFilter: void <init>()>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.math.ec.ECFieldElement$Fp: org.spongycastle.math.ec.ECFieldElement sqrt()>::sqrt.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nElement solveQuadraticEquation()>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 12: Should check HostnameVerification manually
***Didn't manually verify hostname in convertToSslSocket in <org.kde.kdeconnect.Helpers.SecurityHelpers.SslHelper: javax.net.ssl.SSLSocket convertToSslSocket(android.content.Context,java.net.Socket,java.lang.String,boolean,boolean)>::convertToSslSocket.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of org.apache.mina.filter.ssl.BogusTrustManagerFactory$1 in org.apache.mina.filter.ssl.BogusTrustManagerFactory$1 <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of org.apache.mina.filter.ssl.BogusTrustManagerFactory$1 in org.apache.mina.filter.ssl.BogusTrustManagerFactory$1::UNKNOWN.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of org.kde.kdeconnect.Helpers.SecurityHelpers.SslHelper$1 in org.kde.kdeconnect.Helpers.SecurityHelpers.SslHelper$1 <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of org.kde.kdeconnect.Helpers.SecurityHelpers.SslHelper$1 in org.kde.kdeconnect.Helpers.SecurityHelpers.SslHelper$1::UNKNOWN.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of org.spongycastle.est.jcajce.JcaJceUtils$1 in org.spongycastle.est.jcajce.JcaJceUtils$1 <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of org.spongycastle.est.jcajce.JcaJceUtils$1 in org.spongycastle.est.jcajce.JcaJceUtils$1::UNKNOWN.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of org.spongycastle.est.jcajce.JcaJceUtils$2 in org.spongycastle.est.jcajce.JcaJceUtils$2 <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of org.spongycastle.est.jcajce.JcaJceUtils$2 in org.spongycastle.est.jcajce.JcaJceUtils$2::UNKNOWN.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.mina.proxy.handlers.http.ntlm.NTLMResponses: byte[] hmacMD5(byte[],byte[])>::hmacMD5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <okio.Buffer: java.lang.String toString()>::toString.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD4" in <org.apache.mina.proxy.handlers.http.ntlm.NTLMResponses: byte[] ntlmHash(java.lang.String)>::ntlmHash.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.sshd.common.util.SecurityUtils$BouncyCastleRegistration: void run()>::run.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>::sha1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.kde.kdeconnect.Plugins.MprisPlugin.AlbumArtCache: java.lang.String urlToDiskCacheKey(java.lang.String)>::urlToDiskCacheKey.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <okio.ByteString: okio.ByteString md5()>::md5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <org.spongycastle.cert.jcajce.JcaX509ExtensionUtils: void <init>()>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.sshd.common.digest.MD5: void <init>()>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <org.apache.sshd.common.digest.SHA1: void <init>()>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.kde.kdeconnect.Plugins.NotificationsPlugin.NotificationsPlugin: java.lang.String getChecksum(byte[])>::getChecksum.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.mina.proxy.handlers.http.digest.DigestUtilities: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.mina.proxy.handlers.http.ntlm.NTLMResponses: byte[] getNTLM2SessionResponse(java.lang.String,byte[],byte[])>::getNTLM2SessionResponse.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "1" in <org.spongycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey getKey(org.spongycastle.jcajce.util.JcaJceHelper,char[],java.lang.String,int,byte[],boolean)>::getKey.

=======================================
=======================================
***Violated Rule 11: Found predictable seeds in code
***Found: "www.bouncycastle.org" in <org.spongycastle.crypto.examples.DESExample: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean)>::init:162.

=======================================

Total Heuristics: 1312
Total Orthogonal: 0
Total Constants: 2
Total Slices: 2048
Average Length: 237.66357421875

Depth: 1, Count 1312

=======================================
Analysis Timing (ms): 603375.
=======================================

