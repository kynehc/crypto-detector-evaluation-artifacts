Analyzing APK File: /home/crypto/fdroidcl/download/apks/eu.e43.impeller_9052.apk

=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "Blowfish" in <org.apache.james.mime4j.storage.CipherStorageProvider: void <init>(org.apache.james.mime4j.storage.StorageProvider)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.http.entity.mime.MultipartEntityBuilder: java.lang.String generateBoundary()>::generateBoundary.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.james.mime4j.samples.transform.TransformMessage: org.apache.james.mime4j.message.BodyPart createRandomBinaryPart(int)>::createRandomBinaryPart.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <oauth.signpost.AbstractOAuthConsumer: java.lang.String generateNonce()>::generateNonce.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.james.mime4j.QuotedPrintableInputStreamBench: byte[] initData(int)>::initData.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.james.mime4j.Base64OutputStreamBench: byte[] initData(int)>::initData.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.google.common.cache.Striped64$HashCode: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.james.mime4j.QuotedPrintableOutputStreamBench: byte[] initData(int)>::initData.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.james.mime4j.Base64InputStreamBench: byte[] initData(int)>::initData.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.james.mime4j.util.MimeUtil: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.http.entity.mime.MultipartEntity: java.lang.String generateBoundary()>::generateBoundary.

=======================================
=======================================
***Violated Rule 12: Should check HostnameVerification manually
***Didn't manually verify hostname in create in <org.apache.http.impl.pool.BasicConnFactory: org.apache.http.HttpClientConnection create(org.apache.http.HttpHost)>::create.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of org.acra.util.NaiveTrustManager in org.acra.util.NaiveTrustManager <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of org.acra.util.NaiveTrustManager in org.acra.util.NaiveTrustManager::UNKNOWN.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA" in <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getShaDigest()>::getShaDigest.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <eu.e43.impeller.Utils: byte[] sha1(java.lang.String)>::sha1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <com.google.common.hash.Hashing$Sha1Holder: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getMd5Digest()>::getMd5Digest.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <com.google.common.hash.Hashing$Md5Holder: void <clinit>()>::clinit.

=======================================

Total Heuristics: 52
Total Orthogonal: 0
Total Constants: 0
Total Slices: 111
Average Length: 20.0990990990991

Depth: 1, Count 52

=======================================
Analysis Timing (ms): 57330.
=======================================

