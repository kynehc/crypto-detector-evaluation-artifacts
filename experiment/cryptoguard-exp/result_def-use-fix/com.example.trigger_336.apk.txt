Analyzing APK File: /home/crypto/fdroidcl/download/apks/com.example.trigger_336.apk

=======================================
***Violated Rule 5: Used export grade public Key
***Found: "384" in <app.trigger.ssh.GenerateIdentityTask: java.lang.String doInBackground(java.lang.Object[])>::doInBackground.

=======================================
=======================================
***Violated Rule 5: Used export grade public Key
***Found: "256" in <app.trigger.ssh.GenerateIdentityTask: java.lang.String doInBackground(java.lang.Object[])>::doInBackground.

=======================================
=======================================
***Violated Rule 5: Used export grade public Key
***Found: "1024" in <app.trigger.ssh.GenerateIdentityTask: java.lang.String doInBackground(java.lang.Object[])>::doInBackground.

=======================================
=======================================
***Violated Rule 5: Used export grade public Key
***Found: "384" in <app.trigger.ssh.GenerateIdentityTask: java.lang.String doInBackground(java.lang.Object[])>::doInBackground.

=======================================
=======================================
***Violated Rule 5: Used export grade public Key
***Found: "256" in <app.trigger.ssh.GenerateIdentityTask: java.lang.String doInBackground(java.lang.Object[])>::doInBackground.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <kotlin.random.KotlinRandom: void <init>(kotlin.random.Random)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <kotlin.random.FallbackThreadLocalRandom$implStorage$1: java.util.Random initialValue()>::initialValue.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <app.trigger.nuki.NukiPairingCallback: void onCharacteristicChanged(android.bluetooth.BluetoothGatt,android.bluetooth.BluetoothGattCharacteristic)>::onCharacteristicChanged.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of app.trigger.https.HttpsTools$2 in app.trigger.https.HttpsTools$2 <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of app.trigger.https.HttpsTools$2 in app.trigger.https.HttpsTools$2::UNKNOWN.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of app.trigger.https.HttpsRequestHandler$1 in app.trigger.https.HttpsRequestHandler$1 <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of app.trigger.https.HttpsRequestHandler$1 in app.trigger.https.HttpsRequestHandler$1::UNKNOWN.

=======================================
=======================================
***Violated Rule 6: Used untrusted HostNameVerifier
***Cause: Fixed "[1]" in app.trigger.https.HttpsTools$1::UNKNOWN.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <com.trilead.ssh2.KnownHosts: java.lang.String createHashedHostname(java.lang.String)>::createHashedHostname.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <org.conscrypt.NativeCrypto: int X509_NAME_hash(javax.security.auth.x500.X500Principal)>::X509_NAME_hash.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <com.trilead.ssh2.crypto.PEMDecoder: byte[] generateKeyFromPasswordSaltWithMD5(byte[],byte[],int)>::generateKeyFromPasswordSaltWithMD5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <com.trilead.ssh2.KnownHosts: boolean checkHashed(java.lang.String,java.lang.String)>::checkHashed.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <com.trilead.ssh2.KnownHosts: byte[] rawFingerPrint(java.lang.String,java.lang.String,byte[])>::rawFingerPrint.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.conscrypt.NativeCrypto: int X509_NAME_hash_old(javax.security.auth.x500.X500Principal)>::X509_NAME_hash_old.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <com.trilead.ssh2.KnownHosts: byte[] rawFingerPrint(java.lang.String,java.lang.String,byte[])>::rawFingerPrint.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketHandshake: byte[] sha1(java.lang.String)>::sha1.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "62" in <com.trilead.ssh2.crypto.Base64: byte[] decode(char[])>::decode:95.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "64" in <com.trilead.ssh2.crypto.Base64: byte[] decode(char[])>::decode:103.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "63" in <com.trilead.ssh2.crypto.Base64: byte[] decode(char[])>::decode:99.

=======================================
=======================================
***Violated Rule 14: Used Predictable KeyStore Password
***Found: "jks" in <java.security.KeyStore: java.lang.String getDefaultType()>::getDefaultType:971.

=======================================

Total Heuristics: 46
Total Orthogonal: 0
Total Constants: 65
Total Slices: 213
Average Length: 23.91549295774648

Depth: 1, Count 46

=======================================
Analysis Timing (ms): 183400.
=======================================

