Analyzing APK File: /home/crypto/fdroidcl/download/apks/de.eidottermihi.raspicheck_57.apk

=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "Blowfish/CBC/NoPadding" in <net.schmizz.sshj.transport.cipher.BlowfishCBC: void <init>()>::init.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "DESede/CBC/NoPadding" in <net.schmizz.sshj.transport.cipher.TripleDESCBC: void <init>()>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.bouncycastle.pqc.math.linearalgebra.GF2nElement solveQuadraticEquation()>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.math.ec.ECFieldElement$Fp: org.bouncycastle.math.ec.ECFieldElement sqrt()>::sqrt.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.asn1.ua.DSTU4145PointEncoder: org.bouncycastle.math.ec.ECFieldElement solveQuadraticEquation(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECFieldElement)>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.math.raw.Mod: int[] random(int[])>::random.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.pqc.math.linearalgebra.GF2nONBField: int elementOfOrder(int,int)>::elementOfOrder.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.math.ec.ECCurve$AbstractF2m: org.bouncycastle.math.ec.ECFieldElement solveQuadraticEquation(org.bouncycastle.math.ec.ECFieldElement)>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of org.bouncycastle.est.jcajce.JcaJceUtils$1 in org.bouncycastle.est.jcajce.JcaJceUtils$1 <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of org.bouncycastle.est.jcajce.JcaJceUtils$1 in org.bouncycastle.est.jcajce.JcaJceUtils$1::UNKNOWN.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of org.bouncycastle.est.jcajce.JcaJceUtils$2 in org.bouncycastle.est.jcajce.JcaJceUtils$2 <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of org.bouncycastle.est.jcajce.JcaJceUtils$2 in org.bouncycastle.est.jcajce.JcaJceUtils$2::UNKNOWN.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <net.schmizz.sshj.common.SecurityUtils: java.lang.String getFingerprint(java.security.PublicKey)>::getFingerprint.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <org.bouncycastle.cert.jcajce.JcaX509ExtensionUtils: void <init>()>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <net.schmizz.sshj.transport.digest.SHA1: void <init>()>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <net.schmizz.sshj.userauth.keyprovider.PuTTYKeyFile: byte[] toKey(java.lang.String)>::toKey.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <net.schmizz.sshj.transport.digest.MD5: void <init>()>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <net.schmizz.sshj.userauth.keyprovider.PuTTYKeyFile: void verify(java.lang.String)>::verify.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <net.schmizz.sshj.transport.verification.FingerprintVerifier: net.schmizz.sshj.transport.verification.HostKeyVerifier getInstance(java.lang.String)>::getInstance.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <org.bouncycastle.openpgp.operator.jcajce.SHA1PGPDigestCalculator: void <init>()>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <net.schmizz.sshj.common.SecurityUtils: boolean registerSecurityProvider(java.lang.String)>::registerSecurityProvider.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "4" in <org.bouncycastle.math.ec.ECPoint: byte[] getEncoded(boolean)>::getEncoded.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "2" in <org.bouncycastle.math.ec.ECPoint: byte[] getEncoded(boolean)>::getEncoded.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "3" in <org.bouncycastle.math.ec.ECPoint: byte[] getEncoded(boolean)>::getEncoded.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "ENC" in <org.bouncycastle.operator.jcajce.OperatorUtils: java.security.Key getJceKey(org.bouncycastle.operator.GenericKey)>::getJceKey.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "1" in <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey getKey(org.bouncycastle.jcajce.util.JcaJceHelper,char[],java.lang.String,int,byte[],boolean)>::getKey.

=======================================
=======================================
***Violated Rule 11: Found predictable seeds in code
***Found: "www.bouncycastle.org" in <org.bouncycastle.crypto.examples.DESExample: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean)>::init.

=======================================
=======================================
***Violated Rule 14: Used Predictable KeyStore Password
***Found: "changeit" in <ch.qos.logback.core.net.ssl.KeyStoreFactoryBean: java.lang.String getPassword()>::getPassword.

=======================================

Total Heuristics: 1095
Total Orthogonal: 0
Total Constants: 29
Total Slices: 1948
Average Length: 489.70071868583165

Depth: 1, Count 1095

=======================================
Analysis Timing (ms): 450161.
=======================================

