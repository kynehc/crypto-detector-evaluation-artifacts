Analyzing APK File: /home/crypto/fdroidcl/download/apks/org.sufficientlysecure.keychain_57500.apk

=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.sufficientlysecure.keychain.operations.KeySyncOperation: org.sufficientlysecure.keychain.operations.results.ImportKeyResult staggeredUpdate(java.util.List,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)>::staggeredUpdate.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.math.ec.ECFieldElement$Fp: org.bouncycastle.math.ec.ECFieldElement sqrt()>::sqrt.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.asn1.ua.DSTU4145PointEncoder: org.bouncycastle.math.ec.ECFieldElement solveQuadraticEquation(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECFieldElement)>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.math.raw.Mod: int[] random(int[])>::random.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.james.mime4j.util.MimeUtil: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.math.ec.ECCurve$AbstractF2m: org.bouncycastle.math.ec.ECFieldElement solveQuadraticEquation(org.bouncycastle.math.ec.ECFieldElement)>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.sufficientlysecure.keychain.operations.BenchmarkOperation: org.sufficientlysecure.keychain.operations.results.BenchmarkResult execute(org.sufficientlysecure.keychain.service.BenchmarkInputParcel,org.sufficientlysecure.keychain.service.input.CryptoInputParcel)>::execute.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <org.sufficientlysecure.keychain.util.WebKeyDirectoryUtil: byte[] toSHA1(byte[])>::toSHA1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <okio.ByteString: okio.ByteString sha1()>::sha1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <org.sufficientlysecure.keychain.pgp.SecurityProblem: java.lang.String getIdentifier()>::getIdentifier.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <org.bouncycastle.openpgp.operator.jcajce.SHA1PGPDigestCalculator: void <init>()>::init.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "4" in <org.bouncycastle.math.ec.ECPoint: byte[] getEncoded(boolean)>::getEncoded.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "2" in <org.bouncycastle.math.ec.ECPoint: byte[] getEncoded(boolean)>::getEncoded.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "3" in <org.bouncycastle.math.ec.ECPoint: byte[] getEncoded(boolean)>::getEncoded.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "32" in <org.sufficientlysecure.keychain.securitytoken.SCP11bSecureMessaging: org.sufficientlysecure.keychain.securitytoken.SecureMessaging establish(org.sufficientlysecure.keychain.securitytoken.SecurityTokenConnection,android.content.Context,org.sufficientlysecure.keychain.securitytoken.OpenPgpCommandApduFactory)>::establish:31.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "16" in <org.sufficientlysecure.keychain.securitytoken.SCP11bSecureMessaging: org.sufficientlysecure.keychain.securitytoken.SecureMessaging establish(org.sufficientlysecure.keychain.securitytoken.SecurityTokenConnection,android.content.Context,org.sufficientlysecure.keychain.securitytoken.OpenPgpCommandApduFactory)>::establish:31.

=======================================
=======================================
***Violated Rule 7: Used HTTP Protocol
***Found: "http://www.websequencediagrams.com" in <org.markdown4j.WebSequencePlugin: java.lang.String getSequenceDiagram(java.lang.String,java.lang.String)>::getSequenceDiagram.

=======================================

Total Heuristics: 1028
Total Orthogonal: 0
Total Constants: 44
Total Slices: 1735
Average Length: 403.09394812680114

Depth: 1, Count 1028

=======================================
Analysis Timing (ms): 631479.
=======================================

