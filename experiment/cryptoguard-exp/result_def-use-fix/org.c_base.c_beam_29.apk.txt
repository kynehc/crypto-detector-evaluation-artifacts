Analyzing APK File: /home/crypto/fdroidcl/download/apks/org.c_base.c_beam_29.apk

=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "BrokenPBEWithSHAAnd3-KeyTripleDES-CBC" in <org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object getObject(char[])>::getObject.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "OldPBEWithSHAAnd3-KeyTripleDES-CBC" in <org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object getObject(char[])>::getObject.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "PBEWithSHAAnd3-KeyTripleDES-CBC" in <org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object getObject(char[])>::getObject.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "PBEWithSHAAnd3-KeyTripleDES-CBC" in <org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: void <init>(org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi,java.lang.String,java.security.Key,char[],java.security.cert.Certificate[])>::init.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "PBEWithSHAAnd3-KeyTripleDES-CBC" in <org.spongycastle.jcajce.provider.keystore.bc.BcKeyStoreSpi$StoreEntry: java.lang.Object getObject(char[])>::getObject.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.math.ec.ECCurve$F2m: org.spongycastle.math.ec.ECFieldElement solveQuadraticEquation(org.spongycastle.math.ec.ECFieldElement)>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.pqc.math.linearalgebra.GF2nONBField: org.spongycastle.pqc.math.linearalgebra.GF2nElement getRandomRoot(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>::getRandomRoot.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.math.raw.Mod: int[] random(int[])>::random.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.pqc.math.linearalgebra.GF2nONBField: int elementOfOrder(int,int)>::elementOfOrder.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField: org.spongycastle.pqc.math.linearalgebra.GF2nElement getRandomRoot(org.spongycastle.pqc.math.linearalgebra.GF2Polynomial)>::getRandomRoot.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.asn1.ua.DSTU4145PointEncoder: org.spongycastle.math.ec.ECFieldElement solveQuadraticEquation(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement)>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.math.ec.ECFieldElement$Fp: org.spongycastle.math.ec.ECFieldElement sqrt()>::sqrt.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.spongycastle.pqc.math.linearalgebra.GF2nElement solveQuadraticEquation()>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.pqc.math.linearalgebra.GF2Polynomial: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of com.thetransactioncompany.jsonrpc2.client.JSONRPC2Session$1 in com.thetransactioncompany.jsonrpc2.client.JSONRPC2Session$1 <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of com.thetransactioncompany.jsonrpc2.client.JSONRPC2Session$1 in com.thetransactioncompany.jsonrpc2.client.JSONRPC2Session$1::UNKNOWN.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <org.spongycastle.cert.jcajce.JcaX509ExtensionUtils: void <init>()>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketHandshake: byte[] sha1(java.lang.String)>::sha1.

=======================================
=======================================
***Violated Rule 11: Found predictable seeds in code
***Found: "1L" in <org.spongycastle.crypto.tls.AbstractTlsContext: long nextCounterValue()>::nextCounterValue:16.

=======================================
=======================================
***Violated Rule 11: Found predictable seeds in code
***Found: "UnitContainer{unit=$l0 = staticinvoke <org.spongycastle.util.Times: long nanoTime()>(), method='<org.spongycastle.crypto.tls.AbstractTlsContext: void <init>(java.security.SecureRandom,org.spongycastle.crypto.tls.SecurityParameters)>'}" in <org.spongycastle.crypto.tls.AbstractTlsContext: void <init>(java.security.SecureRandom,org.spongycastle.crypto.tls.SecurityParameters)>::init:31.

=======================================
=======================================
***Violated Rule 11: Found predictable seeds in code
***Found: "www.bouncycastle.org" in <org.spongycastle.crypto.examples.DESExample: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean)>::init:162.

=======================================

Total Heuristics: 1558
Total Orthogonal: 0
Total Constants: 5
Total Slices: 691
Average Length: 145.18523878437048

Depth: 1, Count 1558

=======================================
Analysis Timing (ms): 359518.
=======================================

