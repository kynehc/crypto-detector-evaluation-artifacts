Analyzing APK File: /home/crypto/fdroidcl/download/apks/io.oversec.one_1005015.apk

=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "Blowfish" in <com.esotericsoftware.kryo.serializers.BlowfishSerializer: javax.crypto.Cipher getCipher(int)>::getCipher.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <io.oversec.one.crypto.encoding.pad.AbstractRangePadder: char getNextPaddingChar()>::getNextPaddingChar.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.math.raw.Mod: int[] random(int[])>::random.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <io.oversec.one.crypto.encoding.pad.AbstractRangePadder: java.lang.String tail$crypto_release()>::crypto_release.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <io.oversec.one.Core: void doEncrypt_UI(io.oversec.one.crypto.AbstractEncryptionParams,int,android.content.Intent,boolean,int,boolean,boolean,byte[],java.lang.String)>::doEncrypt_UI.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.asn1.ua.DSTU4145PointEncoder: org.spongycastle.math.ec.ECFieldElement solveQuadraticEquation(org.spongycastle.math.ec.ECCurve,org.spongycastle.math.ec.ECFieldElement)>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <io.oversec.one.Core: boolean handleMessage(android.os.Message)>::handleMessage.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.esotericsoftware.kryo.util.ObjectMap: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.math.ec.ECCurve$AbstractF2m: org.spongycastle.math.ec.ECPoint decompressPoint(int,java.math.BigInteger)>::decompressPoint.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <io.oversec.one.ui.MainSettingsFragment: void check(java.lang.String)>::check.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.spongycastle.math.ec.ECFieldElement$Fp: org.spongycastle.math.ec.ECFieldElement sqrt()>::sqrt.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <io.oversec.one.crypto.encoding.pad.GutenbergPadder: void reset()>::reset.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.spongycastle.openpgp.operator.jcajce.JcaKeyFingerprintCalculator: byte[] calculateFingerprint(org.spongycastle.bcpg.PublicKeyPacket)>::calculateFingerprint.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <org.spongycastle.openpgp.operator.jcajce.JcaKeyFingerprintCalculator: byte[] calculateFingerprint(org.spongycastle.bcpg.PublicKeyPacket)>::calculateFingerprint.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <net.rehacktive.waspdb.internals.utils.Utils: java.lang.String md5(java.lang.String)>::md5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <org.spongycastle.openpgp.operator.jcajce.SHA1PGPDigestCalculator: void <init>()>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <net.rehacktive.waspdb.internals.collision.CollisionHash: java.lang.String getSearchKey(java.lang.Object)>::getSearchKey.

=======================================
=======================================
***Violated Rule 11: Found predictable seeds in code
***Found: "www.bouncycastle.org" in <org.spongycastle.crypto.examples.DESExample: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean)>::init:162.

=======================================
=======================================
***Violated Rule 7: Used HTTP Protocol
***Found: "http://www.websequencediagrams.com" in <org.markdown4j.WebSequencePlugin: java.lang.String getSequenceDiagram(java.lang.String,java.lang.String)>::getSequenceDiagram.

=======================================

Total Heuristics: 984
Total Orthogonal: 0
Total Constants: 1
Total Slices: 841
Average Length: 118.5731272294887

Depth: 1, Count 984

=======================================
Analysis Timing (ms): 426113.
=======================================

