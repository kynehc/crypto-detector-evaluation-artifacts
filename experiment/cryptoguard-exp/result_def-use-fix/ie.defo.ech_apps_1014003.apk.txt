Analyzing APK File: /home/crypto/fdroidcl/download/apks/ie.defo.ech_apps_1014003.apk

=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "AES/ECB/PKCS5Padding" in <kellinwood.security.zipsigner.optional.PasswordObfuscator: java.lang.String encode(java.lang.String,char[])>::encode.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "AES/ECB/PKCS5Padding" in <kellinwood.security.zipsigner.optional.PasswordObfuscator: char[] decode(java.lang.String,java.lang.String)>::decode.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.bouncycastle.pqc.math.linearalgebra.GF2nElement solveQuadraticEquation()>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.math.ec.ECFieldElement$Fp: org.bouncycastle.math.ec.ECFieldElement sqrt()>::sqrt.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.fdroid.fdroid.work.FDroidMetricsWorker$RawEvent: int hashCode()>::hashCode.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.asn1.ua.DSTU4145PointEncoder: org.bouncycastle.math.ec.ECFieldElement solveQuadraticEquation(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECFieldElement)>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.math.raw.Mod: int[] random(int[])>::random.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.math.ec.ECCurve$AbstractF2m: org.bouncycastle.math.ec.ECFieldElement solveQuadraticEquation(org.bouncycastle.math.ec.ECFieldElement)>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.bumptech.glide.load.resource.gif.GifFrameLoader: com.bumptech.glide.load.Key getFrameSignature()>::getFrameSignature.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.fdroid.fdroid.views.categories.CategoryController: int getBackgroundColour(android.content.Context,java.lang.String)>::getBackgroundColour.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <androidx.activity.result.ActivityResultRegistry: void <init>()>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <javax.jmdns.impl.DNSRecord: void <init>(java.lang.String,javax.jmdns.impl.constants.DNSRecordType,javax.jmdns.impl.constants.DNSRecordClass,boolean,int)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.fdroid.fdroid.views.apps.FeatureImage: void setColour(int)>::setColour.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.fdroid.fdroid.Preferences: java.lang.String getDefaultLocalRepoName()>::getDefaultLocalRepoName.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <javax.jmdns.impl.JmDNSImpl: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.pqc.math.linearalgebra.GF2nONBField: int elementOfOrder(int,int)>::elementOfOrder.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.fdroid.fdroid.FDroidApp: void initWifiSettings()>::initWifiSettings.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of org.bouncycastle.est.jcajce.JcaJceUtils$1 in org.bouncycastle.est.jcajce.JcaJceUtils$1 <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of org.bouncycastle.est.jcajce.JcaJceUtils$1 in org.bouncycastle.est.jcajce.JcaJceUtils$1::UNKNOWN.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should at least get One accepted Issuer from Other Sources in getAcceptedIssuers method of org.bouncycastle.est.jcajce.JcaJceUtils$2 in org.bouncycastle.est.jcajce.JcaJceUtils$2 <getAcceptedIssuers>::getAcceptedIssuers.

=======================================
=======================================
***Violated Rule 4: Uses untrusted TrustManager
***Should throw java.security.cert.CertificateException in check(Client|Server)Trusted method of org.bouncycastle.est.jcajce.JcaJceUtils$2 in org.bouncycastle.est.jcajce.JcaJceUtils$2::UNKNOWN.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <kellinwood.security.zipsigner.optional.JKS: byte[] encryptKey(java.security.Key,byte[])>::encryptKey.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <kellinwood.security.zipsigner.optional.JKS: byte[] decryptKey(byte[],byte[])>::decryptKey.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <org.bouncycastle.cert.jcajce.JcaX509ExtensionUtils: void <init>()>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA" in <kellinwood.security.zipsigner.optional.JKS: void engineLoad(java.io.InputStream,char[])>::engineLoad.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <kellinwood.security.zipsigner.ZipSigner: java.lang.String autoDetectKey(java.lang.String,java.util.Map)>::autoDetectKey.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "md5" in <org.fdroid.fdroid.Utils: java.lang.String getsig(byte[])>::getsig.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.fdroid.fdroid.Utils: java.lang.String getPackageSig(android.content.pm.PackageInfo)>::getPackageSig.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <org.conscrypt.NativeCrypto: int X509_NAME_hash(javax.security.auth.x500.X500Principal)>::X509_NAME_hash.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <kellinwood.security.zipsigner.ZipSigner: void generateSignatureFile(java.util.jar.Manifest,java.io.OutputStream)>::generateSignatureFile.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.conscrypt.NativeCrypto: int X509_NAME_hash_old(javax.security.auth.x500.X500Principal)>::X509_NAME_hash_old.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <kellinwood.security.zipsigner.optional.JKS: void engineStore(java.io.OutputStream,char[])>::engineStore.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <kellinwood.security.zipsigner.ZipSignature: void <init>()>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <kellinwood.security.zipsigner.ZipSigner: void writeSignatureBlock(kellinwood.security.zipsigner.KeySet,byte[],java.io.OutputStream)>::writeSignatureBlock.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <kellinwood.security.zipsigner.ZipSigner: java.util.jar.Manifest addDigestsToManifest(java.util.Map)>::addDigestsToManifest.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "harold-and-maude" in <kellinwood.security.zipsigner.optional.PasswordObfuscator: void <init>()>::init:28.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "harold-and-maude" in <kellinwood.security.zipsigner.optional.PasswordObfuscator: char[] decode(java.lang.String,java.lang.String)>::decode:106.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "ENC" in <org.bouncycastle.operator.jcajce.OperatorUtils: java.security.Key getJceKey(org.bouncycastle.operator.GenericKey)>::getJceKey.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "1" in <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey getKey(org.bouncycastle.jcajce.util.JcaJceHelper,char[],java.lang.String,int,byte[],boolean)>::getKey.

=======================================
=======================================
***Violated Rule 11: Found predictable seeds in code
***Found: "www.bouncycastle.org" in <org.bouncycastle.crypto.examples.DESExample: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean)>::init.

=======================================
=======================================
***Violated Rule 14: Used Predictable KeyStore Password
***Found: "jks" in <java.security.KeyStore: java.lang.String getDefaultType()>::getDefaultType:971.

=======================================

Total Heuristics: 1112
Total Orthogonal: 0
Total Constants: 16
Total Slices: 2155
Average Length: 451.85197215777265

Depth: 1, Count 1112

=======================================
Analysis Timing (ms): 709728.
=======================================

