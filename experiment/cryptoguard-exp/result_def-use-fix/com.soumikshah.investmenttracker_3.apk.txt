Analyzing APK File: /home/crypto/fdroidcl/download/apks/com.soumikshah.investmenttracker_3.apk

=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <androidx.transition.Explode: void calculateOut(android.view.View,android.graphics.Rect,int[])>::calculateOut.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.commons.codec.digest.UnixCrypt: java.lang.String crypt(byte[],java.lang.String)>::crypt.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <kotlin.random.FallbackThreadLocalRandom$implStorage$1: java.util.Random initialValue()>::initialValue.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.poi.ss.formula.atp.RandBetween: org.apache.poi.ss.formula.eval.ValueEval evaluate(org.apache.poi.ss.formula.eval.ValueEval[],org.apache.poi.ss.formula.OperationEvaluationContext)>::evaluate.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.poi.ss.formula.functions.NumericFunction$35: org.apache.poi.ss.formula.eval.ValueEval evaluate(int,int)>::evaluate.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <androidx.activity.result.ActivityResultRegistry: void <init>()>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <kotlin.random.KotlinRandom: void <init>(kotlin.random.Random)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.commons.codec.digest.B64: java.lang.String getRandomSalt(int)>::getRandomSalt.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getMd5Digest()>::getMd5Digest.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "sha1" in <org.apache.poi.poifs.crypt.HashAlgorithm: void <clinit>()>::clinit:24.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <org.apache.poi.poifs.crypt.HashAlgorithm: void <clinit>()>::clinit:24.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA1" in <org.apache.poi.poifs.crypt.HashAlgorithm: void <clinit>()>::clinit:24.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD2" in <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getMd2Digest()>::getMd2Digest.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getSha1Digest()>::getSha1Digest.

=======================================

Total Heuristics: 148
Total Orthogonal: 0
Total Constants: 0
Total Slices: 205
Average Length: 80.86829268292684

Depth: 1, Count 148

=======================================
Analysis Timing (ms): 185447.
=======================================

