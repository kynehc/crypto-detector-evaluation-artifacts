Analyzing APK File: /home/crypto/fdroidcl/download/apks/io.literal_39.apk

=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <androidx.transition.Explode: void calculateOut(android.view.View,android.graphics.Rect,int[])>::calculateOut.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <kotlin.random.FallbackThreadLocalRandom$implStorage$1: java.util.Random initialValue()>::initialValue.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.apache.james.mime4j.util.MimeUtil: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <okhttp3.OkHttpClient: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)>::newWebSocket.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <androidx.activity.result.ActivityResultRegistry: void <init>()>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <kotlin.random.KotlinRandom: void <init>(kotlin.random.Random)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <net.jodah.failsafe.RetryPolicyExecutor: long getFixedOrRandomDelayNanos(long)>::getFixedOrRandomDelayNanos.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <net.jodah.failsafe.RetryPolicyExecutor: long adjustForJitter(long)>::adjustForJitter.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.amazonaws.mobileconnectors.appsync.retry.RetryInterceptor: int calculateBackoff(int)>::calculateBackoff.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <com.amazonaws.retry.PredefinedRetryPolicies$SDKDefaultBackoffStrategy: void <init>(int,int)>::init.

=======================================
=======================================
***Violated Rule 6: Used untrusted HostNameVerifier
***Cause: Fixed "[1]" in okhttp3.internal.platform.ConscryptPlatform$DisabledHostnameVerifier::UNKNOWN.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <org.apache.commons.io.input.MessageDigestCalculatingInputStream: void <init>(java.io.InputStream)>::init.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream: java.security.MessageDigest newMD5()>::newMD5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <okio.HashingSink$Companion: okio.HashingSink md5(okio.Sink)>::md5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <okio.HashingSource$Companion: okio.HashingSource md5(okio.Source)>::md5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <com.amazonaws.services.s3.AmazonS3Client: com.amazonaws.services.s3.model.S3Object getObject(com.amazonaws.services.s3.model.GetObjectRequest)>::getObject.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <com.amazonaws.util.Md5Utils: byte[] computeMD5Hash(java.io.InputStream)>::computeMD5Hash.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <okio.HashingSink$Companion: okio.HashingSink sha1(okio.Sink)>::sha1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <com.amazonaws.util.Md5Utils: byte[] computeMD5Hash(byte[])>::computeMD5Hash.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <okio.HashingSource$Companion: okio.HashingSource sha1(okio.Source)>::sha1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <okio.ByteString: okio.ByteString sha1()>::sha1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <okio.Buffer: okio.ByteString md5()>::md5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <okio.ByteString: okio.ByteString md5()>::md5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <okio.Buffer: okio.ByteString sha1()>::sha1.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "HmacSHA256" in <com.amazonaws.mobileconnectors.cognitoidentityprovider.CognitoUser$AuthenticationHelper: byte[] getPasswordAuthenticationKey(java.lang.String,java.lang.String,java.math.BigInteger,java.math.BigInteger)>::getPasswordAuthenticationKey.

=======================================

Total Heuristics: 225
Total Orthogonal: 0
Total Constants: 6
Total Slices: 2349
Average Length: 275.33673903788844

Depth: 1, Count 225

=======================================
Analysis Timing (ms): 322762.
=======================================

