Analyzing APK File: /home/crypto/fdroidcl/download/apks/com.rareventure.gps2_91.apk

=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "AES" in <com.rareventure.android.Util: void main(java.lang.String[])>::main.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "AES" in <com.rareventure.android.Util: void main(java.lang.String[])>::main.

=======================================
=======================================
***Violated Rule 1: Found broken crypto schemes
***Found: "AES" in <de.idyl.winzipaes.impl.AESUtilsJCA: void <init>(java.lang.String,int,byte[])>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <okhttp3.OkHttpClient: okhttp3.WebSocket newWebSocket(okhttp3.Request,okhttp3.WebSocketListener)>::newWebSocket.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.math.ec.ECCurve$F2m: org.bouncycastle.math.ec.ECFieldElement solveQuadraticEquation(org.bouncycastle.math.ec.ECFieldElement)>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialField: org.bouncycastle.pqc.math.linearalgebra.GF2nElement getRandomRoot(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)>::getRandomRoot.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.pqc.math.linearalgebra.GF2nPolynomialElement: org.bouncycastle.pqc.math.linearalgebra.GF2nElement solveQuadraticEquation()>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <pl.tajchert.nammu.PermissionRequest: void <init>(java.util.ArrayList,pl.tajchert.nammu.PermissionCallback)>::init.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.asn1.ua.DSTU4145PointEncoder: org.bouncycastle.math.ec.ECFieldElement solveQuadraticEquation(org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECFieldElement)>::solveQuadraticEquation.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.math.ec.ECFieldElement$Fp: org.bouncycastle.math.ec.ECFieldElement sqrt()>::sqrt.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.math.raw.Mod: int[] random(int[])>::random.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.pqc.math.linearalgebra.GF2nONBField: int elementOfOrder(int,int)>::elementOfOrder.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.pqc.math.linearalgebra.GF2nONBField: org.bouncycastle.pqc.math.linearalgebra.GF2nElement getRandomRoot(org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial)>::getRandomRoot.

=======================================
=======================================
***Violated Rule 13: Used untrusted PRNG
***Found: Untrused PRNG (java.util.Random) in <org.bouncycastle.pqc.math.linearalgebra.GF2Polynomial: void <clinit>()>::clinit.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <okio.ByteString: okio.ByteString sha1()>::sha1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <okio.HashingSink: okio.HashingSink md5(okio.Sink)>::md5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <okio.Buffer: okio.ByteString sha1()>::sha1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <okio.ByteString: okio.ByteString md5()>::md5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <okio.HashingSource: okio.HashingSource md5(okio.Source)>::md5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "MD5" in <okio.Buffer: okio.ByteString md5()>::md5.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <okio.HashingSource: okio.HashingSource sha1(okio.Source)>::sha1.

=======================================
=======================================
***Violated Rule 2: Found broken hash functions
***Found: "SHA-1" in <okio.HashingSink: okio.HashingSink sha1(okio.Sink)>::sha1.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "AES" in <com.rareventure.android.Crypt: byte[] getRawKey(java.lang.String,byte[])>::getRawKey:149.

=======================================
=======================================
***Violated Rule 3: Used constant keys in code
***Found: Constant "my secret" in <com.rareventure.android.Util: void main(java.lang.String[])>::main.

=======================================
=======================================
***Violated Rule 9: Found constant salts in code
***Found: "salt" in <com.rareventure.android.Util: void main(java.lang.String[])>::main:288.

=======================================
=======================================
***Violated Rule 8: Used < 1000 iteration for PBE
***Found: "1" in <com.rareventure.android.Crypt: byte[] getRawKey(java.lang.String,byte[])>::getRawKey:146.

=======================================
=======================================
***Violated Rule 11: Found predictable seeds in code
***Found: "www.bouncycastle.org" in <org.bouncycastle.crypto.examples.DESExample: void <init>(java.lang.String,java.lang.String,java.lang.String,boolean)>::init:162.

=======================================

Total Heuristics: 59
Total Orthogonal: 0
Total Constants: 58
Total Slices: 276
Average Length: 33.26449275362319

Depth: 1, Count 59

=======================================
Analysis Timing (ms): 102261.
=======================================

