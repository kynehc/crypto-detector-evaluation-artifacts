0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <F.R.d: javax.net.ssl.X509TrustManager u()>
		SHA-256: 6b8a1f68d6621a91ae0a254c3cec985e7af4dae75a159ddc1ea073f5a365d24d
		Secure: false
	Object:
		Variable: $r20
		Type: java.security.SecureRandom
		Statement: specialinvoke $r20.<java.security.SecureRandom: void <init>()>()
		Method: <B.a.a.n.n.d: java.lang.Object h(java.lang.Object)>
		SHA-256: 2868143ecd244cd232604e6dd38319af4b22a2c3795519f954119bb816272919
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <F.S.a.a: java.security.KeyStore a(java.lang.String)>
		SHA-256: 7d7b950a03fb3daa3d57b1233bf232d06ffdd3ba7dc7d0064c2bb779af920999
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6369)
		Method: <F.R.j.e: javax.net.ssl.SSLContext h()>
		SHA-256: 817c056fcc7ec83e386043283181942a03468711aa3a4c71b626b44306a5c899
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r0)
		Method: <F.R.d: javax.net.ssl.X509TrustManager u()>
		SHA-256: c80a924401707bd5437265b61f7497d7aac5de8bc7e92ae3a436266c72ac4410
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <G.A: G.l c(java.lang.String)>
		SHA-256: 971ab722db47aed00b469039f3f7dc61ec2cf2bd5910dec3ee1a16947718e9f4
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6370)
		Method: <F.R.j.e: javax.net.ssl.SSLContext h()>
		SHA-256: 3fe8c041c90e9342fb17e0471bac0e57d191792f65a57e59bbc6849283467a8d
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <G.A: G.l c(java.lang.String)>
		SHA-256: f7269fea55a6c9100426eb80c2a5e649b8610333b6093089a6c3b0860700bebb
		Secure: true
	Object:
		Variable: $r5
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r5 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r0)
		Method: <F.S.a.a: javax.net.ssl.X509TrustManager c(java.lang.String,java.util.List)>
		SHA-256: 1cd1e48ec5950b6774276bd4f0699cb576ca810f3fb53ea6559a7323d7aaae59
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6365)
		Method: <F.R.j.k: javax.net.ssl.SSLContext h()>
		SHA-256: cb2e90281e3e74220e05076c886dd21ddffa139378d812a156ef40eb9b1c0354
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer6373, $r2)
		Method: <F.R.j.f: javax.net.ssl.SSLContext h()>
		SHA-256: caef281c1688c5da4d0e724710b3f9a13f211245550a90d36c63eef44169e393
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.TrustManager[]
		Statement: $r6 = virtualinvoke $r5.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <F.S.a.a: javax.net.ssl.X509TrustManager c(java.lang.String,java.util.List)>
		SHA-256: f8d468fb05d5075e144306d5016feb41c16794ac7a31e88e2e166c5e1713696a
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <G.l: G.l c(java.lang.String)>
		SHA-256: cba81111ffa182d523f5029c7c584d8fe3f0d9ae6d25f29532786d5a4d0727d0
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <G.l: G.l c(java.lang.String)>
		SHA-256: 278b34c5a8c36c0e041719d9c55394eec7c4925c7f15dc1df42ced58ebd596e0
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6364)
		Method: <F.R.j.k: javax.net.ssl.SSLContext h()>
		SHA-256: 896d801d29d1d97a1733b02a6fd81e984139b2239b6ab18a8545724bd8c275c0
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer6371, $r2)
		Method: <F.R.j.f: javax.net.ssl.SSLContext h()>
		SHA-256: 191fb087b8337be497a08c168ddeacd489d52730967805ce9c300e61b6cf3aed
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r0)
		Method: <F.S.a.a: javax.net.ssl.X509KeyManager b(java.lang.String,java.security.cert.X509Certificate[])>
		SHA-256: 8bb380e0a956118abef4b4e7480c0460889237a4a03edec7bb2f1892752d52f2
		Secure: true
	Object:
		Variable: $r5
		Type: javax.net.ssl.KeyManager[]
		Statement: $r5 = virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <F.S.a.a: javax.net.ssl.X509KeyManager b(java.lang.String,java.security.cert.X509Certificate[])>
		SHA-256: df4ff45499a8dba68da6e33a01d97ea89a72fdefd4abcbeb817104a570d4e7ac
		Secure: true

Findings in Java Class: F.R.j.k

	 in Method: javax.net.ssl.SSLContext h()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #cb2e90281e3e74220e05076c886dd21ddffa139378d812a156ef40eb9b1c0354)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6365)


Findings in Java Class: F.R.j.e

	 in Method: javax.net.ssl.SSLContext h()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #3fe8c041c90e9342fb17e0471bac0e57d191792f65a57e59bbc6849283467a8d)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6370)


Findings in Java Class: F.R.j.f

	 in Method: javax.net.ssl.SSLContext h()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #191fb087b8337be497a08c168ddeacd489d52730967805ce9c300e61b6cf3aed)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer6371, $r2)


Findings in Java Class: G.A

	 in Method: G.l c(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #971ab722db47aed00b469039f3f7dc61ec2cf2bd5910dec3ee1a16947718e9f4)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: B.a.a.n.n.d

	 in Method: java.lang.Object h(java.lang.Object)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r25, $r26, $r12)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r25, $r26, $r12)


Findings in Java Class: F.D

	 in Method: void <init>(F.C)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r15.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6382, $r31, varReplacer6382)


Findings in Java Class: F.R.d

	 in Method: javax.net.ssl.X509TrustManager u()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer3542)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 18

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 3
	RequiredPredicateError: 4
	TypestateError: 1
=====================================================================
