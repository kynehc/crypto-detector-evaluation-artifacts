0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <de.blinkt.openvpn.core.PRNGFixes: void installLinuxPRNGSecureRandom()>
		SHA-256: fbec00fe93d15517143af9e354e3e3fbfd9140a2563664ef8b53a88162c8254b
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.Signature: byte[] sign()>()
		Method: <de.blinkt.openvpn.VpnProfile: byte[] getKeyChainSignedData(byte[],boolean)>
		SHA-256: 7f07c38aa7ef923def54a9d7ae71389934b89fe2af893f71b8933b3f148bc8b7
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.cert.CertificateFactory
		Statement: $r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer1636)
		Method: <de.blinkt.openvpn.core.X509Utils: java.security.cert.Certificate[] getCertificatesFromFile(java.lang.String)>
		SHA-256: d66da61b6e66448a19685e81484c186c2c42c6e39390b687fb1ee4473fab3bf4
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1767)
		Method: <de.blinkt.openvpn.api.AppRestrictions: java.lang.String hashConfig(java.lang.String)>
		SHA-256: 3297edb38af6e46a07dff4d8f90bce78e34a826e75fc2f2630e0fa5d6b17f5ea
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8688)
		Method: <de.blinkt.openvpn.VpnProfile: byte[] getKeyChainSignedData(byte[],boolean)>
		SHA-256: dcd245458c6413b35067474c9387ecd8c8caaa7823459d6e5000f3d4ab5af456
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer73)
		Method: <de.blinkt.openvpn.core.PRNGFixes: void installLinuxPRNGSecureRandom()>
		SHA-256: 89a16fcc3a6e879461feed441576ba9963bfe3a9429989965d6a12be22102fb0
		Secure: true
	Object:
		Variable: $r17
		Type: java.security.MessageDigest
		Statement: $r17 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4947)
		Method: <de.blinkt.openvpn.core.LogItem: java.lang.String getMobileInfoString(android.content.Context)>
		SHA-256: ee73979e6cfac1295b41baf237c401851cb3cd09538014f0a6573dd55a4e4c6e
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.cert.CertificateFactory
		Statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer529)
		Method: <de.blinkt.openvpn.core.ExtAuthHelper: java.util.Collection toCertificates(byte[])>
		SHA-256: 7eef47946ad8157a7e8ac475dc8e4f6222c095eeac51ea1c822f2e60896b600d
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8692)
		Method: <de.blinkt.openvpn.VpnProfile: byte[] getKeyChainSignedData(byte[],boolean)>
		SHA-256: 18714bc3699df859d8834854aacee22f49b806845829818c3780d4fcd3f614ed
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer8691)
		Method: <de.blinkt.openvpn.VpnProfile: byte[] getKeyChainSignedData(byte[],boolean)>
		SHA-256: a67af05fafbedb6758d85965342a8a8bce975e359de0859e3b20e066113371cf
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <de.blinkt.openvpn.api.AppRestrictions: java.lang.String hashConfig(java.lang.String)>
		SHA-256: deea040491c7ec9bb111c7e0d010c7734bf9b76cef53619fc873243a58d2c893
		Secure: false
	Object:
		Variable: $r14
		Type: byte[]
		Statement: $r14 = virtualinvoke $r17.<java.security.MessageDigest: byte[] digest()>()
		Method: <de.blinkt.openvpn.core.LogItem: java.lang.String getMobileInfoString(android.content.Context)>
		SHA-256: 4e6aa2aac6b0dbe4ea0f2a8e1d94f9b5e739e096d8fa5e5d9fff3071df086f7b
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.cert.CertificateFactory
		Statement: $r12 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer4949)
		Method: <de.blinkt.openvpn.core.LogItem: java.lang.String getMobileInfoString(android.content.Context)>
		SHA-256: aa2445f3e73e0f1d762a186ed83e0adb1e80840d02cf558a21b2047775594a6a
		Secure: false

Findings in Java Class: de.blinkt.openvpn.core.ExtAuthHelper

	 in Method: java.util.Collection toCertificates(byte[])
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #7eef47946ad8157a7e8ac475dc8e4f6222c095eeac51ea1c822f2e60896b600d)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate
			at statement: $r7 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.util.Collection generateCertificates(java.io.InputStream)>($r6)


Findings in Java Class: de.blinkt.openvpn.core.X509Utils

	 in Method: java.security.cert.Certificate[] getCertificatesFromFile(java.lang.String)
		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #d66da61b6e66448a19685e81484c186c2c42c6e39390b687fb1ee4473fab3bf4)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r6 = virtualinvoke $r1.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r3)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #d66da61b6e66448a19685e81484c186c2c42c6e39390b687fb1ee4473fab3bf4)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r6 = virtualinvoke $r1.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r3)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #d66da61b6e66448a19685e81484c186c2c42c6e39390b687fb1ee4473fab3bf4)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r6 = virtualinvoke $r1.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r9)


Findings in Java Class: de.blinkt.openvpn.api.AppRestrictions

	 in Method: java.lang.String hashConfig(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3297edb38af6e46a07dff4d8f90bce78e34a826e75fc2f2630e0fa5d6b17f5ea)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1767)


Findings in Java Class: de.blinkt.openvpn.core.LogItem

	 in Method: java.lang.String getMobileInfoString(android.content.Context)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #aa2445f3e73e0f1d762a186ed83e0adb1e80840d02cf558a21b2047775594a6a)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r15 = virtualinvoke $r12.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r13)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ee73979e6cfac1295b41baf237c401851cb3cd09538014f0a6573dd55a4e4c6e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r17 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4947)


Findings in Java Class: de.blinkt.openvpn.VpnProfile

	 in Method: byte[] getKeyChainSignedData(byte[],boolean)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #18714bc3699df859d8834854aacee22f49b806845829818c3780d4fcd3f614ed)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #dcd245458c6413b35067474c9387ecd8c8caaa7823459d6e5000f3d4ab5af456)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8690, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #18714bc3699df859d8834854aacee22f49b806845829818c3780d4fcd3f614ed)
			First parameter (with value "RSA/ECB/PKCS1PADDING") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8692)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #a67af05fafbedb6758d85965342a8a8bce975e359de0859e3b20e066113371cf)
			First parameter (with value "NONEwithECDSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer8691)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #dcd245458c6413b35067474c9387ecd8c8caaa7823459d6e5000f3d4ab5af456)
			First parameter (with value "RSA/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8688)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initSign(java.security.PrivateKey)>($r2)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 13

	CryptoAnalysis found the following violations. For details see description above.
	TypestateError: 3
	IncompleteOperationError: 4
	RequiredPredicateError: 2
	ConstraintError: 5
=====================================================================
