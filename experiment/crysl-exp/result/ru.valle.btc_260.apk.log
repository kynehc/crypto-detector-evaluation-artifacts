0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.ntru.NTRUEngine: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 4bd6151add7d31cc4c6c1b467a5fcba26d1274b4e5b8f364b9492ad636053fa7
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<java.security.SecureRandom: byte[] generateSeed(int)>(varReplacer421)
		Method: <ru.valle.btc.TrulySecureRandom: void nextBytes(byte[])>
		SHA-256: ff99323774eefc9c2ee2aa898e7c85ee2c2d01d54d96527ca402e13db3007c3f
		Secure: true
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r9)
		Method: <ru.valle.btc.BTCUtils: ru.valle.btc.KeyPair generateMiniKey()>
		SHA-256: 153e326a976f852254f2af5c3933e328bde7b71ff0d05c260f2004143fab37cc
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <ru.valle.btc.BTCUtils: ru.valle.btc.BTCUtils$PrivateKeyInfo decodePrivateKeyAsSHA256(java.lang.String)>
		SHA-256: 8249981d7434637ccdc6d7c309968458331e59b74c1b88e7e933c328a963f33b
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters: void <init>(int,int,int,int,int,int,int,double,double,double,boolean,boolean,int,org.spongycastle.crypto.Digest)>
		SHA-256: 7da588f6ba11daef0648e917469639d98b077179b329759419eb3ea4368bb37f
		Secure: true
	Object:
		Variable: r0
		Type: ru.valle.btc.TrulySecureRandom
		Statement: specialinvoke r0.<java.security.SecureRandom: void <init>()>()
		Method: <ru.valle.btc.TrulySecureRandom: void <init>()>
		SHA-256: a929f2346c382dfa4ca0ce535725b218d7da3deb326247bbebe383b485703c3c
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.encodings.PKCS1Encoding: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.DSTU4145Signer: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: bb98eee2eb82fb2c71e59ff99dcc6ac412ba5d86e67e379f475f490796e58a35
		Secure: true
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <ru.valle.btc.BTCUtils: ru.valle.btc.KeyPair generateWifKey(boolean)>
		SHA-256: 31e74297e3195324011b1e13248d604e834392df345a97d4835a63148493d109
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.engines.RSABlindedEngine: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer417)
		Method: <ru.valle.btc.BTCUtils: byte[] sha256ripemd160(byte[])>
		SHA-256: f82b7e06c389fa618a5ffe158c53b778b50fd00c1523ab07c32f2699bfb10020
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <ru.valle.btc.TrulySecureRandom: void nextBytes(byte[])>
		SHA-256: ffe74985d06f3343f8aa6f6b296914878912dbcd45406fa105f14e5fe24d2af2
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer209)
		Method: <ru.valle.btc.BTCUtils: ru.valle.btc.KeyPair generateWifKey(boolean)>
		SHA-256: be34bbe6e30d767a65021dcb6cddce11e1bd4c8b3a398f3833e4e55477cbb66e
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.engines.ElGamalEngine: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: cc0b332bb2ddc847ca308294e1c87841df1bdcc2359c6b4559abe498d8131c20
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer413)
		Method: <ru.valle.btc.BTCUtils: java.lang.String publicKeyToAddress(byte[])>
		SHA-256: 60adf40415942885d6c654320c725750aff616424376a197af7bdecf5ee8e59d
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <ru.valle.btc.BTCUtils: byte[] sha256ripemd160(byte[])>
		SHA-256: 751cc71b5ffd0f41c9e1280816b737400737decc7d88bc49e1627876870a6505
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <ru.valle.btc.BTCUtils: boolean verifyChecksum(byte[])>
		SHA-256: 22b58669182921a115edf9747903ae4253cc830510f1002a6f452c84a17ff106
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <ru.valle.btc.BTCUtils: java.lang.String publicKeyToAddress(byte[])>
		SHA-256: a3cdc84fb737c0020ddb5dc7732605daf4799de5026a381cd17d383e345efb81
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer253)
		Method: <ru.valle.btc.BTCUtils: ru.valle.btc.BTCUtils$PrivateKeyInfo decodePrivateKeyAsSHA256(java.lang.String)>
		SHA-256: 6b4a35f0ac868d8535a925aae1f59169c30c15f64115b9d0ac76575ed3ce5166
		Secure: true
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>(r3)
		Method: <ru.valle.btc.BTCUtils: ru.valle.btc.KeyPair generateWifKey(boolean)>
		SHA-256: add3ea8721b5bf70bdd72f194b00ebf666c7c05762a2e8e512780abdc0398613
		Secure: true
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.spongycastle.crypto.encodings.PKCS1Encoding: byte[] encodeBlock(byte[],int,int)>
		SHA-256: 51314679791b8846974991512c36196e1aa3b9e7da7427a9a3e79296a3ab25ab
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
		Method: <org.spongycastle.crypto.signers.PSSSigner: byte[] generateSignature()>
		SHA-256: f3e4142caf438aae9f817eff05fbbb236338bba1fda8c989276570ed44dc6b62
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.GOST3410Signer: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 61b7887e2cfe6269c9dc5ed1565a2d9c81d2ae6237d2a5bf20c73d26a54cd85c
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: virtualinvoke $r6.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
		Method: <org.spongycastle.crypto.signers.ISO9796d2PSSSigner: byte[] generateSignature()>
		SHA-256: 238987cd7f028d63bd73983130023a3acb01386bcb069569f35d3e43491735c1
		Secure: true
	Object:
		Variable: r5
		Type: byte[]
		Statement: virtualinvoke $r6.<java.security.SecureRandom: void nextBytes(byte[])>(r5)
		Method: <org.spongycastle.crypto.encodings.PKCS1Encoding: byte[] decodeBlockOrRandom(byte[],int,int)>
		SHA-256: 9eea8fddf3b73e0efb96992710399017bdba4f031196eb2ff8f0c083e6630405
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.ECNRSigner: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 9280f6752b6e6221628d06f9d60b4341d2a16061cd2ae2c26b66d065728b8af7
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.rainbow.RainbowSigner: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: b0d1ba3da8064ca082b6ab923adae7a1f903b06296e62e14fc3b962758995d3f
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.generators.ECKeyPairGenerator: void init(org.spongycastle.crypto.KeyGenerationParameters)>
		SHA-256: b9c970d7ca75c43cb7258988e82963e870aab49d0877fadda916613732dffc1d
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.PSSSigner: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 7331639808f0d8733f5df0230ac3a48eecf3cff3ed703c4c0022f9cd7cd80756
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <ru.valle.btc.BTCUtils: java.lang.String publicKeyToAddress(byte[])>
		SHA-256: 5b6102edb082673724f9a06e2fcecec62c3fd01ff7712956345a76a30c1da3aa
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.encodings.OAEPEncoding: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 2927d56a192959dc3453ff63fb3830152d4c89781cce727cc1398f859f78edbf
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters: void <init>(int,int,int,int,int,double,double,double,boolean,boolean,int,org.spongycastle.crypto.Digest)>
		SHA-256: 7da588f6ba11daef0648e917469639d98b077179b329759419eb3ea4368bb37f
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <ru.valle.btc.BTCUtils: boolean verifyChecksum(byte[])>
		SHA-256: a5994ceb222948c49b01b15092fdfc0f7ce95f795c6cc9edcf441accf0011aa4
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <ru.valle.btc.BTCUtils: ru.valle.btc.BTCUtils$PrivateKeyInfo decodePrivateKeyAsSHA256(java.lang.String)>
		SHA-256: 8249981d7434637ccdc6d7c309968458331e59b74c1b88e7e933c328a963f33b
		Secure: true
	Object:
		Variable: r1
		Type: java.security.SecureRandom
		Statement: specialinvoke r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.DSASigner: java.security.SecureRandom initSecureRandom(boolean,java.security.SecureRandom)>
		SHA-256: 976278d7f7d95a4f24d6a4dcfd009558740370f422ea3303d5b2e3b2b8b2b87e
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.ISO9796d2PSSSigner: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 6dae500fa4127477f702f7c8db5b65ac00e8420fed109375c053548083b8d090
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.ntru.NTRUEncryptionKeyGenerationParameters: void <init>(int,int,int,int,int,int,int,int,int,int,boolean,byte[],boolean,boolean,org.spongycastle.crypto.Digest)>
		SHA-256: 8804dfbcedc43de8915d1844bd637bb3574c76388648172f6a7135bf1a8c7524
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.ntru.NTRUEncryptionKeyGenerationParameters: void <init>(int,int,int,int,int,int,int,int,boolean,byte[],boolean,boolean,org.spongycastle.crypto.Digest)>
		SHA-256: 8804dfbcedc43de8915d1844bd637bb3574c76388648172f6a7135bf1a8c7524
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer264)
		Method: <ru.valle.btc.BTCUtils: boolean verifyChecksum(byte[])>
		SHA-256: 41aaa1b40594440c4aa306a457e727e460b0107c09e81855e6e6647a0be120f5
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.ECGOST3410Signer: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: caabe0390e3d2386e10c04d6d72b0b44e335e1623efc6992e7ef060aaafe4388
		Secure: true
	Object:
		Variable: r1
		Type: java.security.SecureRandom
		Statement: specialinvoke r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.ECDSASigner: java.security.SecureRandom initSecureRandom(boolean,java.security.SecureRandom)>
		SHA-256: 907e1f5c07beb4945875e3d9df0753f4b7e3c9cbc7e6d6fca061334ed85525ba
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer202)
		Method: <ru.valle.btc.BTCUtils: ru.valle.btc.KeyPair generateMiniKey()>
		SHA-256: b710bf327146d91128965001fec4b6d37889f8b355820282a21245dec448f542
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.gmss.GMSSSigner: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 2dc8cd1c1fa7979cada7be8f8320f93342af2ff1963c7c499a3420b2b9545bfa
		Secure: true

Findings in Java Class: org.spongycastle.crypto.encodings.PKCS1Encoding

	 in Method: byte[] encodeBlock(byte[],int,int)
		TypestateError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Unexpected call to method nextBytes on object of type java.security.SecureRandom. Expect a call to one of the following methods init,getInstanceStrong,getInstance
			at statement: virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>(r2)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.spongycastle.crypto.encodings.PKCS1Encoding: int getInputBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.spongycastle.crypto.encodings.PKCS1Encoding: int getInputBlockSize()>()


	 in Method: byte[] decodeBlockOrRandom(byte[],int,int)
		TypestateError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Unexpected call to method nextBytes on object of type java.security.SecureRandom. Expect a call to one of the following methods init,getInstanceStrong,getInstance
			at statement: virtualinvoke $r6.<java.security.SecureRandom: void nextBytes(byte[])>(r5)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i1 = interfaceinvoke $r4.<org.spongycastle.crypto.AsymmetricBlockCipher: int getOutputBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i1 = virtualinvoke r0.<org.spongycastle.crypto.encodings.PKCS1Encoding: int getOutputBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i1 = virtualinvoke r0.<org.spongycastle.crypto.encodings.PKCS1Encoding: int getOutputBlockSize()>()


	 in Method: byte[] decodeBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i1 = virtualinvoke r0.<org.spongycastle.crypto.encodings.PKCS1Encoding: int getOutputBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i1 = virtualinvoke r0.<org.spongycastle.crypto.encodings.PKCS1Encoding: int getOutputBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i1 = interfaceinvoke $r2.<org.spongycastle.crypto.AsymmetricBlockCipher: int getOutputBlockSize()>()


Findings in Java Class: org.spongycastle.crypto.encodings.OAEPEncoding

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r4.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r4.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)


	 in Method: byte[] decodeBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: r2 = specialinvoke r0.<org.spongycastle.crypto.encodings.OAEPEncoding: byte[] maskGeneratorFunction1(byte[],int,int,int)>($r1, varReplacer10402, $i0, $i1)


Findings in Java Class: org.spongycastle.crypto.signers.GenericSigner

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r6.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r6.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)


Findings in Java Class: org.spongycastle.crypto.tls.TlsRSAUtils

	 in Method: byte[] generateEncryptedPreMasterSecret(org.spongycastle.crypto.tls.TlsContext,org.spongycastle.crypto.params.RSAKeyParameters,java.io.OutputStream)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r10 = virtualinvoke r4.<org.spongycastle.crypto.encodings.PKCS1Encoding: byte[] processBlock(byte[],int,int)>(r5, varReplacer9817, $i0)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r10 = virtualinvoke r4.<org.spongycastle.crypto.encodings.PKCS1Encoding: byte[] processBlock(byte[],int,int)>(r5, varReplacer9817, $i0)


	 in Method: byte[] safeDecryptPreMasterSecret(org.spongycastle.crypto.tls.TlsContext,org.spongycastle.crypto.params.RSAKeyParameters,byte[])
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r2 = virtualinvoke r3.<org.spongycastle.crypto.encodings.PKCS1Encoding: byte[] processBlock(byte[],int,int)>($r2, varReplacer10272, i0)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r2 = virtualinvoke r3.<org.spongycastle.crypto.encodings.PKCS1Encoding: byte[] processBlock(byte[],int,int)>($r2, varReplacer10272, i0)


Findings in Java Class: org.spongycastle.crypto.signers.PSSSigner

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r7.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r7.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r3)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r7.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r7.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r3)


Findings in Java Class: org.spongycastle.crypto.signers.RSADigestSigner

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r6.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r6.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)


Findings in Java Class: org.spongycastle.crypto.signers.X931Signer

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r3.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r3.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)


Findings in Java Class: org.spongycastle.crypto.signers.ISO9796d2Signer

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r3.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, r2)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r3.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, r2)


Findings in Java Class: org.spongycastle.crypto.signers.ISO9796d2PSSSigner

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r5.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, r3)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r5.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, r3)


Findings in Java Class: org.spongycastle.crypto.encodings.ISO9796d1Encoding

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r5.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r5.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)


Findings in Java Class: org.spongycastle.pqc.crypto.ntru.NTRUEngine

	 in Method: byte[] decrypt(byte[],org.spongycastle.pqc.crypto.ntru.NTRUEncryptionPrivateKeyParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r5 = specialinvoke r0.<org.spongycastle.pqc.crypto.ntru.NTRUEngine: org.spongycastle.pqc.math.ntru.polynomial.Polynomial generateBlindingPoly(byte[],byte[])>(r3, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r6 = virtualinvoke r0.<org.spongycastle.pqc.crypto.ntru.NTRUEngine: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial decrypt(org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial,org.spongycastle.pqc.math.ntru.polynomial.Polynomial,org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial)>($r10, $r5, $r6)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: r13 = specialinvoke r0.<org.spongycastle.pqc.crypto.ntru.NTRUEngine: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial MGF(byte[],int,int,boolean)>($r1, i0, $i6, $z0)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #8804dfbcedc43de8915d1844bd637bb3574c76388648172f6a7135bf1a8c7524)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $z0 = virtualinvoke $r7.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial: boolean equals(java.lang.Object)>($r10)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #7da588f6ba11daef0648e917469639d98b077179b329759419eb3ea4368bb37f)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r14 = virtualinvoke $r6.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial: byte[] toBinary3Sves()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #7da588f6ba11daef0648e917469639d98b077179b329759419eb3ea4368bb37f)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i7 = virtualinvoke $r6.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial: int count(int)>(varReplacer10434)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #7da588f6ba11daef0648e917469639d98b077179b329759419eb3ea4368bb37f)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i7 = virtualinvoke $r6.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial: int count(int)>(varReplacer10431)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #7da588f6ba11daef0648e917469639d98b077179b329759419eb3ea4368bb37f)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i7 = virtualinvoke $r6.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial: int count(int)>(varReplacer10429)


Findings in Java Class: org.spongycastle.crypto.engines.RSABlindedEngine

	 in Method: byte[] processBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r10 = staticinvoke <org.spongycastle.util.BigIntegers: java.math.BigInteger createRandomInRange(java.math.BigInteger,java.math.BigInteger,java.security.SecureRandom)>($r10, $r11, $r2)


Findings in Java Class: org.spongycastle.crypto.engines.ElGamalEngine

	 in Method: byte[] processBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.spongycastle.crypto.engines.ElGamalEngine: int getInputBlockSize()>()


Findings in Java Class: org.spongycastle.crypto.engines.NaccacheSternEngine

	 in Method: byte[] processBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.spongycastle.crypto.engines.NaccacheSternEngine: int getInputBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.spongycastle.crypto.engines.NaccacheSternEngine: int getInputBlockSize()>()


Findings in Java Class: org.spongycastle.pqc.math.ntru.polynomial.DenseTernaryPolynomial

	 in Method: void checkTernarity()
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #7da588f6ba11daef0648e917469639d98b077179b329759419eb3ea4368bb37f)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r1 = r0.<org.spongycastle.pqc.math.ntru.polynomial.DenseTernaryPolynomial: int[] coeffs>


Findings in Java Class: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial

	 in Method: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial mult(org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #7da588f6ba11daef0648e917469639d98b077179b329759419eb3ea4368bb37f)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r2 = $r1.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial: int[] coeffs>


	 in Method: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial multRecursive(org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #7da588f6ba11daef0648e917469639d98b077179b329759419eb3ea4368bb37f)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: r2 = r4.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial: int[] coeffs>

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #7da588f6ba11daef0648e917469639d98b077179b329759419eb3ea4368bb37f)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: r2 = r0.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial: int[] coeffs>

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #7da588f6ba11daef0648e917469639d98b077179b329759419eb3ea4368bb37f)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: r2 = r3.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial: int[] coeffs>

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #7da588f6ba11daef0648e917469639d98b077179b329759419eb3ea4368bb37f)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: r4 = specialinvoke r4.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial multRecursive(org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial)>(r7)


Findings in Java Class: org.spongycastle.pqc.math.ntru.polynomial.SparseTernaryPolynomial

	 in Method: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial mult(org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #7da588f6ba11daef0648e917469639d98b077179b329759419eb3ea4368bb37f)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: r2 = $r1.<org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial: int[] coeffs>


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 43

	CryptoAnalysis found the following violations. For details see description above.
	TypestateError: 2
	IncompleteOperationError: 50
=====================================================================
