0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5154)
		Method: <okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 6a2a91cd1c0be92b5ed822df6f05a53f186198f09b4ce795054dc64e29f81d5a
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r13.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r9, $r12, $r4, $i1)
		Method: <org.conscrypt.OpenSSLECGroupContext: java.security.spec.ECParameterSpec getECParameterSpec()>
		SHA-256: 7223ae8f08ed0dba3dafb06f8e07e30310aca7c9be856d88494b5d1bd531fdf8
		Secure: true
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: d02affd279e8743b6fd64cdf0e2dd47c30a5603be2e61d5718cf63d25b2d1a15
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5153)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 1ddd6fafba6633082563348edb82894d7685bfac353c886fa89b196c02814cef
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r9)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 7ac05a324707752a8fcdd9787a5fcda4e6af85c295ea6bb9f2ffcf779c41a30d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer23007)
		Method: <com.bumptech.glide.load.engine.cache.SafeKeyGenerator$1: com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer create()>
		SHA-256: 391e55260ee52e752f8583f9ab85157bdb7d7af24cfa4e2259af3fb3c4ab4ed7
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 9d110d3f3943f5f1538d33e3d18932b71ca7accf2f86c174ab417a2b10712fb0
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer11906)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: 6cc7cfa82635ba995f522eafa6e78c7a59d8631fc92f6d47be04a2087c0235e1
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.cert.CertificateFactory
		Statement: $r0 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer25837)
		Method: <org.conscrypt.SSLUtils: java.security.cert.CertificateFactory getCertificateFactory()>
		SHA-256: 932d73be14bddef31664e68058c5f05b1fd97ada72052c2a54fa1fb2c8b3995b
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r8.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r6, $r1)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: f325059ee6f08c9776202e677308b0f19ca0767a6821e36b4f64a531d072fa45
		Secure: false
	Object:
		Variable: $r8
		Type: java.lang.String
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r8)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: fb24971f565cb4681c3c1e192adc31a35b4a987353817f6def6d3d265ac75389
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer5159, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 6eff2e3738915e451b664fe95699138aba9a3a1460ddf7f84a4cd572d071d50c
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r4, $r2)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: 4b73d9ea47b70e095beb17e2b4e8c62bcb1a3b70cdd913b654094befd6fbd016
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5151)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 77e27611ac7edb5cd8c4f52e6a3fb2b8a5ff2524d13266bffa977e54b5fd866b
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: 74efd2ca2013e34a93725a12b2428b082241b229a3b9c59222ec28d5225e0d5
		Secure: false
	Object:
		Variable: varReplacer11906
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer11906)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: 24a1bbfd0ff33a9055c0b0bc5684177cb27775a1984dc34b8c2976a50c076518
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer5157, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 8ce233fd066147f2b13bd0f947d379cea85466ebceb980201e79b9f26445cde9
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer553)
		Method: <com.perflyst.twire.utils.TLSSocketFactoryCompat: void <init>()>
		SHA-256: 8f9b6a4c751f3d4be649e09e3e09f7d7ed0a98413a0bb809b642356c30c42f9e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer15583)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: javax.crypto.Cipher getCipherInstance()>
		SHA-256: dddca3d4385ec8f84c4b981c9b70872339979ba36ab923af8d51f30529e78e0d
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: dea0af93b06734ae35228a014521e6e031131dd2b357359826afa61f9a6de1b
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r0)
		Method: <okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: a8764d384e0e6acd4407dba0e4c2025660362892494036c03c4b52a40e75c66b
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyFactory
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r8)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 6635af12fb8498a7bf018ada279831a6e3024bb07fe12c7daed2b6fbc372e6bb
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: e75571d33abb1b5e330ac5b78fcc009ac5fa3b4053acda20dad8234c0598d879
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5155)
		Method: <okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 25704c422e05cd81b6f5630b384ce5fd5f10aefcd8f6e3896ed2f960f4c52f05
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: a79a1700ae9d8d44f13ea218f751e7024f8f1222b1b2ae17cdbab7b56d352181
		Secure: false

Findings in Java Class: com.perflyst.twire.utils.TLSSocketFactoryCompat

	 in Method: void <init>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer554, varReplacer554, varReplacer554)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #8f9b6a4c751f3d4be649e09e3e09f7d7ed0a98413a0bb809b642356c30c42f9e)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer553)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer554, varReplacer554, varReplacer554)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer554, varReplacer554, varReplacer554)


Findings in Java Class: okhttp3.internal.platform.Platform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #77e27611ac7edb5cd8c4f52e6a3fb2b8a5ff2524d13266bffa977e54b5fd866b)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5151)


Findings in Java Class: okhttp3.internal.platform.AndroidPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #25704c422e05cd81b6f5630b384ce5fd5f10aefcd8f6e3896ed2f960f4c52f05)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5155)


Findings in Java Class: okhttp3.internal.platform.ConscryptPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #8ce233fd066147f2b13bd0f947d379cea85466ebceb980201e79b9f26445cde9)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer5157, $r2)


Findings in Java Class: com.google.android.exoplayer2.upstream.StatsDataSource

	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $l0 = interfaceinvoke $r4.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r1)


Findings in Java Class: com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor

	 in Method: boolean readAtomHeader(com.google.android.exoplayer2.extractor.ExtractorInput)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $l2 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: long getPosition()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $l0 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: long getPosition()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: void readFully(byte[],int,int)>($r3, varReplacer24433, varReplacer24433)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $z0 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: boolean readFully(byte[],int,int,boolean)>($r3, varReplacer24416, varReplacer24417, varReplacer24418)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $l0 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: long getLength()>()


	 in Method: void readEncryptionData(com.google.android.exoplayer2.extractor.ExtractorInput)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $l4 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: long getPosition()>()


	 in Method: boolean readSample(com.google.android.exoplayer2.extractor.ExtractorInput)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $l1 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: long getPosition()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: void readFully(byte[],int,int)>($r14, $i3, $i2)


Findings in Java Class: com.google.android.exoplayer2.extractor.DummyTrackOutput

	 in Method: int sampleData(com.google.android.exoplayer2.upstream.DataReader,int,boolean,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(byte[]), java.io.InputStream: int read(), java.io.FilterInputStream: int read(byte[]), java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: $i0 = interfaceinvoke $r1.<com.google.android.exoplayer2.upstream.DataReader: int read(byte[],int,int)>($r2, varReplacer29359, $i0)


Findings in Java Class: com.google.android.exoplayer2.extractor.BinarySearchSeeker

	 in Method: int handlePendingSeek(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $r6 = interfaceinvoke $r5.<com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSeeker: com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult searchForTimestamp(com.google.android.exoplayer2.extractor.ExtractorInput,long)>($r1, $l1)


Findings in Java Class: com.google.android.exoplayer2.source.hls.HlsMediaChunk

	 in Method: void feedDataToExtractor(com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.upstream.DataSpec,boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $l1 = interfaceinvoke $r4.<com.google.android.exoplayer2.extractor.ExtractorInput: long getPosition()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $l1 = interfaceinvoke $r4.<com.google.android.exoplayer2.extractor.ExtractorInput: long getPosition()>()


Findings in Java Class: com.google.android.exoplayer2.extractor.mp3.Mp3Extractor

	 in Method: boolean synchronize(com.google.android.exoplayer2.extractor.ExtractorInput,boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $z1 = specialinvoke r0.<com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: boolean peekEndOfStreamOrHeader(com.google.android.exoplayer2.extractor.ExtractorInput)>($r1)


Findings in Java Class: com.google.android.exoplayer2.source.SampleDataQueue

	 in Method: int sampleData(com.google.android.exoplayer2.upstream.DataReader,int,boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(byte[]), java.io.InputStream: int read(), java.io.FilterInputStream: int read(byte[]), java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: $i1 = interfaceinvoke $r1.<com.google.android.exoplayer2.upstream.DataReader: int read(byte[],int,int)>($r4, $i2, $i1)


Findings in Java Class: com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput

	 in Method: int sampleData(com.google.android.exoplayer2.upstream.DataReader,int,boolean,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(byte[]), java.io.InputStream: int read(), java.io.FilterInputStream: int read(byte[]), java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: $i1 = interfaceinvoke $r1.<com.google.android.exoplayer2.upstream.DataReader: int read(byte[],int,int)>($r2, $i0, $i1)


Findings in Java Class: com.google.android.exoplayer2.upstream.DataSourceInputStream

	 in Method: void checkOpened()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: interfaceinvoke $r2.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r1)


Findings in Java Class: com.google.android.exoplayer2.extractor.ts.AdtsExtractor

	 in Method: void calculateAverageFrameSize(com.google.android.exoplayer2.extractor.ExtractorInput)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $z0 = interfaceinvoke $r2.<com.google.android.exoplayer2.extractor.ExtractorInput: boolean peekFully(byte[],int,int,boolean)>($r4, varReplacer24468, varReplacer24469, varReplacer24470)


Findings in Java Class: com.google.android.exoplayer2.extractor.DefaultExtractorInput

	 in Method: int readFromUpstream(byte[],int,int,int,boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(byte[]), java.io.InputStream: int read(), java.io.FilterInputStream: int read(byte[]), java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: $i0 = interfaceinvoke $r2.<com.google.android.exoplayer2.upstream.DataReader: int read(byte[],int,int)>($r1, $i0, $i1)


Findings in Java Class: com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory

	 in Method: boolean sniffQuietly(com.google.android.exoplayer2.extractor.Extractor,com.google.android.exoplayer2.extractor.ExtractorInput)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: interfaceinvoke $r0.<com.google.android.exoplayer2.extractor.ExtractorInput: void resetPeekPosition()>()


Findings in Java Class: com.google.android.exoplayer2.source.hls.Aes128DataSource

	 in Method: javax.crypto.Cipher getCipherInstance()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #dddca3d4385ec8f84c4b981c9b70872339979ba36ab923af8d51f30529e78e0d)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer15583)


	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer11906)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer11908, $r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: androidx.core.util.Pools$SimplePool

	 in Method: boolean release(java.lang.Object)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #391e55260ee52e752f8583f9ab85157bdb7d7af24cfa4e2259af3fb3c4ab4ed7)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = r0.<androidx.core.util.Pools$SimplePool: java.lang.Object[] mPool>


Findings in Java Class: com.bumptech.glide.util.pool.FactoryPools$FactoryPool

	 in Method: boolean release(java.lang.Object)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #391e55260ee52e752f8583f9ab85157bdb7d7af24cfa4e2259af3fb3c4ab4ed7)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = interfaceinvoke $r2.<com.bumptech.glide.util.pool.FactoryPools$Poolable: com.bumptech.glide.util.pool.StateVerifier getVerifier()>()


Findings in Java Class: com.google.android.material.tabs.TabLayout

	 in Method: com.google.android.material.tabs.TabLayout$TabView createTabView(com.google.android.material.tabs.TabLayout$Tab)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #391e55260ee52e752f8583f9ab85157bdb7d7af24cfa4e2259af3fb3c4ab4ed7)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = interfaceinvoke $r2.<androidx.core.util.Pools$Pool: java.lang.Object acquire()>()


Findings in Java Class: org.conscrypt.SSLUtils

	 in Method: java.security.cert.X509Certificate decodeX509Certificate(java.security.cert.CertificateFactory,byte[])
		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #932d73be14bddef31664e68058c5f05b1fd97ada72052c2a54fa1fb2c8b3995b)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r3 = virtualinvoke $r2.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r1)


	 in Method: java.security.cert.X509Certificate[] decodeX509CertificateChain(byte[][])
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #932d73be14bddef31664e68058c5f05b1fd97ada72052c2a54fa1fb2c8b3995b)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r4 = staticinvoke <org.conscrypt.SSLUtils: java.security.cert.X509Certificate decodeX509Certificate(java.security.cert.CertificateFactory,byte[])>($r2, $r3)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #932d73be14bddef31664e68058c5f05b1fd97ada72052c2a54fa1fb2c8b3995b)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r2 = staticinvoke <org.conscrypt.SSLUtils: java.security.cert.CertificateFactory getCertificateFactory()>()


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2062, $r7, varReplacer2062)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2062, $r7, varReplacer2062)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2062, $r7, varReplacer2062)


Findings in Java Class: org.conscrypt.OpenSSLX509Certificate

	 in Method: void verifyInternal(java.security.PublicKey,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


	 in Method: java.security.PublicKey getPublicKey()
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r9)


Findings in Java Class: okhttp3.internal.Util

	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer2064)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 27

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 25
	TypestateError: 1
	ConstraintError: 6
	RequiredPredicateError: 13
=====================================================================
