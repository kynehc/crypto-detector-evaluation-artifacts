0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r8)
		Method: <x6.k$b: void d(java.util.HashMap)>
		SHA-256: c0fff4895bd934d36e1efc07131fd261251ac2c6c6d54277a264c17e42cdde7a
		Secure: false
	Object:
		Variable: varReplacer91539
		Type: java.lang.String
		Statement: specialinvoke $r28.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer91539)
		Method: <i7.d: java.lang.String b(rf.e0)>
		SHA-256: 907332531e8d948cff5390b4340097474adac0a49489c894324a2c08bcf4ed39
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer89757)
		Method: <x6.k$b: void <init>(java.io.File,byte[],boolean)>
		SHA-256: 351aadc1581ef6c8341680fe730743794a3dd28badd4fc21e23abceed53039d8
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <i7.d: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Random,int)>
		SHA-256: f1acb5c9faa97aece3a3858fb6955e0cd06b171f06e4a1deceece00297cbe342
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer89762)
		Method: <ag.e: javax.net.ssl.SSLContext l()>
		SHA-256: 12fba7c0ebcc1d7facb94543d9ceceaddce06a47038c2e4290e96e4d1209a090
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.c: javax.net.ssl.X509TrustManager n()>
		SHA-256: a255d7df04c13d2e2b36be047671824d49f5fcbf9e06a39411bc892d0d93a200
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.b: javax.net.ssl.X509TrustManager n()>
		SHA-256: ec0173d3519ed79f0c0e3280ff23597ebdacf7861eb514dcf9cb9be881fa3c8f
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer80836, varReplacer80837)
		Method: <okhttp3.internal.platform.a: javax.net.ssl.X509TrustManager n()>
		SHA-256: 8fc73955d68976b86b5dc54e4af029cd01ddb102c5e423c8db0fbe4729df164
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <fg.x: fg.i g(java.lang.String)>
		SHA-256: cac0d08f5fd7911d6ce0e1d25f4cc4143861b71cf160b7fa6617a48e8f5ab4b8
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer89754)
		Method: <x6.k$b: void <init>(java.io.File,byte[],boolean)>
		SHA-256: 99a00f845d9f8c817d042a8dd0a2027d70263d7d165db4ba7808caef2ad19bca
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer89764, $r2)
		Method: <okhttp3.internal.platform.b: javax.net.ssl.SSLContext l()>
		SHA-256: dc8540561e923dc548c6c58694447748c2a99369efd67c367ab5c5ba4873a980
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <ag.e: javax.net.ssl.X509TrustManager n()>
		SHA-256: 2e08acbbb578841bb23a04139d2ceac83bf3a6132a94837f1199753b0b28748f
		Secure: false
	Object:
		Variable: varReplacer89754
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer89754)
		Method: <x6.k$b: void <init>(java.io.File,byte[],boolean)>
		SHA-256: 9d1116c1b9902857186f01a60d3c5a2f488565c3407d0913d66583323d6e61fb
		Secure: false
	Object:
		Variable: $r20
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r20.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r13, $r16)
		Method: <x6.k$b: void g(java.util.HashMap,android.util.SparseArray)>
		SHA-256: 26b4576a7a9076b73ba56dd63c85c6c84f3fd4ea9c329304272bd85dd0841f2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <x6.r: long n(java.io.File)>
		SHA-256: 13a17b739340f8576b4d2eafb477b8942c3adf680d9f127aff51a18152e8d909
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <ag.e: javax.net.ssl.X509TrustManager n()>
		SHA-256: b3fbf300d747daba3df8e411e58988e42463b7a28d6677cdaf9ead73f012296a
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <x6.k$b: void <init>(java.io.File,byte[],boolean)>
		SHA-256: b1031fd98196e10629d9528a4c5337d6a26faed558c0a56f73b7339228fdd605
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r13.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r6, $r11)
		Method: <x6.k$b: void d(java.util.HashMap)>
		SHA-256: 9302910606b00a6921fd74754ae236268b0e09ac7f608243cb55922cd19a1122
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer89755, varReplacer89756)
		Method: <x6.k$b: void <init>(java.io.File,byte[],boolean)>
		SHA-256: 903f3f6325d083fdee17c7e4c0469eec305838fc6eaa3afdcf4ec1f4db3ef9a7
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.b: javax.net.ssl.X509TrustManager n()>
		SHA-256: 1e76560ad12795a6cc994675d16bf86f7f735a9dfec4e34b41beba33b3218444
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.a: javax.net.ssl.X509TrustManager n()>
		SHA-256: 713e574666d0e0dadc531464eb212760336e5f43c47eb4ca3f9a159575c3b4d9
		Secure: false
	Object:
		Variable: $r18
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r18.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r17)
		Method: <x6.k$b: void g(java.util.HashMap,android.util.SparseArray)>
		SHA-256: 6340522ea8319def95c5209613cb9f7689713cd621995a267b9fcf1b7fdad71e
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer89768, $r2)
		Method: <okhttp3.internal.platform.c: javax.net.ssl.SSLContext l()>
		SHA-256: 6bd4f3130b14bc94541a0f420e8db523e2825aecf4aab6247090cf2b584c319a
		Secure: false
	Object:
		Variable: $r28
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r28.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer91539)
		Method: <i7.d: java.lang.String b(rf.e0)>
		SHA-256: 5c6777b342c51b97523bb70ef9fbcabc85e195ef93f880ef47b021e31debf3f4
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <fg.x: fg.i g(java.lang.String)>
		SHA-256: 1f901e856172179e134a7aeb9f9dce168acbb9854541230716d5c0aef7e11d60
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer80847, $r2)
		Method: <okhttp3.internal.platform.b: javax.net.ssl.SSLSocketFactory m(javax.net.ssl.X509TrustManager)>
		SHA-256: cec921ca5994cebcb0c60ac9b1091e6aca420e6dbb24a0c865bfc2f0303dee18
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <fg.i: fg.i g(java.lang.String)>
		SHA-256: 3721c650fd23db46749041b4a458f508a0ee6d0509740d8372f83a1e3cf1029e
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.cert.CertificateFactory
		Statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer108466)
		Method: <rf.d$b: java.util.List a(fg.h)>
		SHA-256: 1c777537767495ce326b5221be7e439186c5bcf7022204eb0f7baa43cade2b61
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer89766, $r2)
		Method: <okhttp3.internal.platform.a: javax.net.ssl.SSLContext l()>
		SHA-256: 93d7b226461c639d0f4f2f7e1e3a1f14fc15f0021d43f42f1c0adae83b405968
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r30.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <i7.d: java.lang.String b(rf.e0)>
		SHA-256: e6408aed32fbe0d76cb99592deb49813e6fc5f77c403589ec23ed84961394216
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <fg.i: fg.i g(java.lang.String)>
		SHA-256: 22e1d8b8a472cbf69c48f81afe558517720a2fbecc3071f8269d388e6f173b04
		Secure: false
	Object:
		Variable: $r30
		Type: javax.crypto.Mac
		Statement: $r30 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer91554)
		Method: <i7.d: java.lang.String b(rf.e0)>
		SHA-256: b7a5883ec724a5027635dad2f1fdd08d1802d38ebb3279f79cba1a991940a513
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <okhttp3.internal.platform.c: javax.net.ssl.X509TrustManager n()>
		SHA-256: 8034fb313c91aa2a1104beb617f548d7d75c2deae0b27d67adffe1da172ca704
		Secure: false

Findings in Java Class: okhttp3.internal.platform.b

	 in Method: javax.net.ssl.SSLSocketFactory m(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer80849, $r6, varReplacer80849)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer80849, $r6, varReplacer80849)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #cec921ca5994cebcb0c60ac9b1091e6aca420e6dbb24a0c865bfc2f0303dee18)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer80847, $r2)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer80849, $r6, varReplacer80849)


	 in Method: javax.net.ssl.SSLContext l()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #dc8540561e923dc548c6c58694447748c2a99369efd67c367ab5c5ba4873a980)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer89764, $r2)


	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer80829)


Findings in Java Class: x6.k$b

	 in Method: void g(java.util.HashMap,android.util.SparseArray)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r18.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r17)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #26b4576a7a9076b73ba56dd63c85c6c84f3fd4ea9c329304272bd85dd0841f2)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r12.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r20)


	 in Method: void d(java.util.HashMap)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #9302910606b00a6921fd74754ae236268b0e09ac7f608243cb55922cd19a1122)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: specialinvoke $r3.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r13)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r8)


	 in Method: void <init>(java.io.File,byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer89754)


Findings in Java Class: ag.e

	 in Method: javax.net.ssl.SSLContext l()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #12fba7c0ebcc1d7facb94543d9ceceaddce06a47038c2e4290e96e4d1209a090)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer89762)


	 in Method: javax.net.ssl.SSLSocketFactory m(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer80842, $r10, varReplacer80842)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer80842, $r10, varReplacer80842)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer80842, $r10, varReplacer80842)


	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer80827)


Findings in Java Class: okhttp3.internal.platform.a

	 in Method: javax.net.ssl.SSLContext l()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #93d7b226461c639d0f4f2f7e1e3a1f14fc15f0021d43f42f1c0adae83b405968)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer89766, $r2)


	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer80833)


Findings in Java Class: i7.d

	 in Method: java.lang.String b(rf.e0)
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #b7a5883ec724a5027635dad2f1fdd08d1802d38ebb3279f79cba1a991940a513)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r30 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer91554)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r28.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer91539)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r30.<javax.crypto.Mac: void init(java.security.Key)>($r28)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #5c6777b342c51b97523bb70ef9fbcabc85e195ef93f880ef47b021e31debf3f4)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r28.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer91539)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #5c6777b342c51b97523bb70ef9fbcabc85e195ef93f880ef47b021e31debf3f4)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r28.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer91539)


Findings in Java Class: fg.x

	 in Method: fg.i g(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #1f901e856172179e134a7aeb9f9dce168acbb9854541230716d5c0aef7e11d60)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1f901e856172179e134a7aeb9f9dce168acbb9854541230716d5c0aef7e11d60)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: fg.i

	 in Method: fg.i g(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #22e1d8b8a472cbf69c48f81afe558517720a2fbecc3071f8269d388e6f173b04)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: rf.d$b

	 in Method: java.util.List a(fg.h)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #1c777537767495ce326b5221be7e439186c5bcf7022204eb0f7baa43cade2b61)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer108466)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #1c777537767495ce326b5221be7e439186c5bcf7022204eb0f7baa43cade2b61)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r10 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r9)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #1c777537767495ce326b5221be7e439186c5bcf7022204eb0f7baa43cade2b61)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r10 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r9)


Findings in Java Class: okhttp3.internal.platform.c

	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer80838)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 33

	CryptoAnalysis found the following violations. For details see description above.
	NeverTypeOfError: 1
	RequiredPredicateError: 15
	ConstraintError: 8
	IncompleteOperationError: 4
	TypestateError: 2
=====================================================================
