0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Alive 21616  5000
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r9
		Type: java.security.PublicKey
		Statement: $r9 = virtualinvoke $r8.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <ia.c: qa.b g(java.nio.channels.ByteChannel,fa.g,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: aca9f41626be05b47c9a295481faf8ef07621b7ed9fe5cc95ac6bab1fd3e9c26
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: $r10 = virtualinvoke $r8.<java.security.KeyPairGenerator: java.security.KeyPair genKeyPair()>()
		Method: <l6.c1: void p(i6.k)>
		SHA-256: d8e309edaa5f45a65e62e2839c7c235100291d9f528479cc731ab8f1a41dd8aa
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <j9.a$a: boolean f(byte[],byte[])>
		SHA-256: e3f567d94ef9b1e4e79524271b12f4dfc77518aa396ee30fe93956e9167a3199
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <x9.c: byte[] f(w9.p)>
		SHA-256: 833a2da432e9009ef34e4d6b4a05def22dfdd023772204e2df453a8cb76e14e0
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16176)
		Method: <h9.n: h9.h a(byte[])>
		SHA-256: 865f6b46ca8004909025a010adf102889e7f66b391599aa67c730f155225ac80
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer31454)
		Method: <x5.d: javax.crypto.spec.SecretKeySpec t()>
		SHA-256: cba4c08d5cb1bca604f3cb3d19c67f34b8b26ac7f9101335758d3d5c92867a7c
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <u1.b$a: javax.crypto.Mac d()>
		SHA-256: 9036d3726dc3a36a367d704fc9d2f27c24fcbd12fb6f01b19ae1bb06f06c3891
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.Signature
		Statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer40889)
		Method: <l6.c1: java.security.Signature q(i6.m)>
		SHA-256: 16466c547d89e3f59295b3d70f244c13e5b2ca87eefb86c3cc09aadb467134a5
		Secure: false
	Object:
		Variable: $r21
		Type: java.security.SecureRandom
		Statement: specialinvoke $r21.<java.security.SecureRandom: void <init>()>()
		Method: <e6.y: void <init>(t5.t1,java.net.DatagramSocket,java.net.InetSocketAddress,byte[],byte[],byte[],l6.r1,boolean,e6.c,java.lang.Integer,java.util.function.Consumer,z5.a)>
		SHA-256: 6aa021ae30530f5e101ac7f4eb7859b7b70415f191727fa06b98d9024dc93028
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <ba.j: void B(java.net.InetAddress)>
		SHA-256: 2e911c9e7f907a25f4dcab599d17dba54b4e1d78a274f1114ea18e8fe94360cc
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.Cipher
		Statement: $r12 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer25668)
		Method: <a6.m: byte[] P(byte[])>
		SHA-256: 433d1b198caa2b1a1ac332e31b31b1e4b8bea919bf83b25ead23043c266bb868
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer34323)
		Method: <j9.g: j9.f a(byte[])>
		SHA-256: 5efca6e4453fafc1850fe8aec1f6e748f306ac7ddce37e1a155fcc152da0568c
		Secure: false
	Object:
		Variable: $r22
		Type: byte[]
		Statement: $r22 = virtualinvoke $r19.<java.security.MessageDigest: byte[] digest()>()
		Method: <ia.c: qa.b f(ga.u0,java.nio.channels.ByteChannel,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: 2a6033fb2badf611e65063fb1d954c634f5a860ce76357bffa1acbc37f504bab
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer38267)
		Method: <qa.b: java.security.MessageDigest e()>
		SHA-256: 5ceeeeb4a174a8a2f1eed5c3a761a672ea8d2d53a50831bb1fcc46610dc6f90a
		Secure: false
	Object:
		Variable: r0
		Type: o9.j$b
		Statement: specialinvoke r0.<java.security.SecureRandom: void <init>()>()
		Method: <o9.j$b: void <init>()>
		SHA-256: 8d718b4134c60e903f2363f9eb1b29919ee706e0202c8c2cd496daf66be23db6
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <ba.w5: java.util.Random f()>
		SHA-256: fc14385757027cc99f316ae8ceb64844a0f322ee60de811d698df9b30de0d61a
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer33747)
		Method: <x5.d: javax.crypto.Cipher m()>
		SHA-256: 48aaca690503847eebfc3db8915824ff2fb51f5f861f33bdf08e472e11db4889
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <d8.j0: void j(java.security.SecureRandom,int[])>
		SHA-256: 7351280ba03e8814ee0445a9380da817ecf6f15ae082b01ff563d7d453600ea1
		Secure: true
	Object:
		Variable: $r13
		Type: java.security.PrivateKey
		Statement: $r13 = virtualinvoke $r8.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <ia.c: qa.b g(java.nio.channels.ByteChannel,fa.g,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: ec9554f9ac0657897879bb5197547ca2aa32b829b01d5975de9f2e2796ce15be
		Secure: false
	Object:
		Variable: varReplacer37125
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer37125)
		Method: <qa.b: java.security.Key g(java.lang.String,byte[],byte[])>
		SHA-256: 81d89587beb1498bcac9f7c0c595d98b4954998ecd13d2be656a7640b958b3a5
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r1.<java.util.Random: int nextInt(int)>($i0)
		Method: <o9.j$b: int nextInt(int)>
		SHA-256: baf9c82624faced998aad237d531c7cdcbf493ca9f969283b38e1a774a42d4bd
		Secure: true
	Object:
		Variable: $r28
		Type: byte[]
		Statement: $r28 = virtualinvoke $r19.<java.security.MessageDigest: byte[] digest()>()
		Method: <ia.c: qa.b f(ga.u0,java.nio.channels.ByteChannel,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: bb47ba090fbd589048600b9ca9f8b42bf6da2c8bb55bb74eb1a896a71bfe242b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer28902)
		Method: <c2.j$a: c2.j$b b()>
		SHA-256: 851704c7efb2f9d0d495ec7fd77d38b789b135bd38a717e097322181c41586a4
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <d8.b0: void j(java.security.SecureRandom,int[])>
		SHA-256: 39f8de02a3d1dd9fe69a29af6ad0ba01956650e541310f3688c455ad25aafb18
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3013)
		Method: <m9.b: m9.b c(byte[])>
		SHA-256: ab20585bb7213deff08db0019057ba8ca1168bc11d826320f424b7751fdae8c4
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r4.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <o9.j: java.lang.String[] c(android.content.Context,j9.e,java.lang.String,java.security.KeyPair,java.security.SecureRandom,java.util.Date,java.util.Date)>
		SHA-256: 996c1269784f2e10a862029d0509311f0273255cdd9b808a7f985940c8b222e7
		Secure: true
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)
		Method: <u1.b$a: javax.crypto.SecretKey b(byte[])>
		SHA-256: ae1118690fb2abefc6a9162b1ead2bb389e0e19e94adeff8ace9ca1029f62ca
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <d8.x: void i(java.security.SecureRandom,int[])>
		SHA-256: c70c844f4d8d122ed4276c3701398a5eb318564a4f311f829c2f36ff4c389b46
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <d8.h: void i(java.security.SecureRandom,int[])>
		SHA-256: 11bdeae54e9f7631bb3c73a1678178505572dd7131a886511b9f895583f13075
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer31456)
		Method: <x5.d: javax.crypto.Cipher r()>
		SHA-256: 1855b5416c4612dad0b617cc519a3ec247aad07623d43dd4539b478748d85c43
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r7)
		Method: <l6.c1: byte[] n(byte[],byte[])>
		SHA-256: 83f19dffdb4981cb04a59cc3af9f6f79373d26d7e79179ad409c33b13117cbd4
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.cert.CertificateFactory
		Statement: $r6 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer14960)
		Method: <l6.r1: java.util.List b(java.io.InputStream)>
		SHA-256: ae82b6cad9cb9df0205755b12eb39d2f4ae1b3bb0f8b80dd9b3a5f246146d46b
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer29230, $r5)
		Method: <x5.d: byte[] a(byte[],byte[],byte[])>
		SHA-256: 5230dd8878e1eddca1341125b8aaa31b7addd6e03c45e541e0880522cb05aa24
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <x9.c: byte[] e(y9.d)>
		SHA-256: 16525ee3ced9e6f13daf617856ecd78d446f81aa3e423b747bf43e60dd6d9d23
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <c8.b: void j(java.security.SecureRandom,int[])>
		SHA-256: b4e971e82e8f2d3cfa6b902cdcb57864818bf5e6e467b223f8428784d2916284
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.PrivateKey
		Statement: $r10 = virtualinvoke $r8.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r9)
		Method: <l6.r1: java.security.interfaces.RSAPrivateKey c(java.io.InputStream)>
		SHA-256: cfd9c370c935deecfdb44ebf5f485d0421fa7b39a159455e3fc2ad554bd654b1
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer35545)
		Method: <ta.a: byte[] a(byte[])>
		SHA-256: 9ae5d0be33926bd559f6fbee66a52e4f3cbda9e0f522ee44ce3f99ac796eb8af
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <j9.g$b: boolean f(byte[],byte[])>
		SHA-256: 2ac33c0c7ce6ea6f9a7bef8fa2996e3b1cac6b626b687afa1e898fa78c1047f6
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer37369)
		Method: <i6.o: byte[] g(byte[])>
		SHA-256: 7cb19fc07b26d5a6189458ef2a331504608f1d0cb49e34c4afc77f9af28b17ad
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.Signature
		Statement: $r1 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <z7.a: java.security.Signature c(java.lang.String)>
		SHA-256: e797936116740ca56894f3371bb335a71d4b643cfbdf9f9d98e95b3f8ea33d31
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r0)
		Method: <l8.b: byte[] b(int,java.security.SecureRandom)>
		SHA-256: 5ecf2d630d1ac1379292157243bcc9b2d09fca08c205d310afc3667ac8802965
		Secure: true
	Object:
		Variable: varReplacer41188
		Type: java.lang.String
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer41188)
		Method: <k6.n: java.security.interfaces.ECPublicKey q(i6.k,byte[])>
		SHA-256: 5d1936d35eeba662919cf9771f4f17380f021a4ffb7f7f287aede7c84151c0b8
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r12.<java.security.Signature: byte[] sign()>()
		Method: <l6.c1: byte[] o(byte[],java.security.PrivateKey,i6.m,boolean)>
		SHA-256: c1b6b43609cec1afa0b7c171bebc7bbacb2d5a9f6cdd9a01882836d30dde6eb2
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.PublicKey
		Statement: $r12 = virtualinvoke $r10.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <l6.c1: void p(i6.k)>
		SHA-256: 68a53a87d78a060fb09aeab3cb89c9f9547bc477c37955e1900168179276dcd5
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <h9.n: h9.h a(byte[])>
		SHA-256: 944716ee385822221a9a75ae4617f9a59708f0401b278e0146e179ace74be07b
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer33796)
		Method: <ia.c: java.security.MessageDigest c()>
		SHA-256: e52da58535aebf99d2e15395f0e403b6972c5c944d2a24327c5834f307345a47
		Secure: false
	Object:
		Variable: $i2
		Type: int
		Statement: $i2 = virtualinvoke $r1.<java.util.Random: int nextInt(int)>(varReplacer33795)
		Method: <ia.c: byte[] d()>
		SHA-256: 1898f0e94dddbca1560462bc4301a3691dc76a08a8eac8dbeb8db6dbd7f311dc
		Secure: true
	Object:
		Variable: $r14
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer30910)
		Method: <x5.b: byte[] l(byte[])>
		SHA-256: d5ac2e1a0ed044b0a69c451345a0a4cc1145e4818444826ac94df0aa2eb9eb32
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.PublicKey
		Statement: $r12 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r9)
		Method: <k6.n: java.security.interfaces.ECPublicKey q(i6.k,byte[])>
		SHA-256: cf1a25077a859f9e2dad06a1380a22e64f757c666ac8de9d8cc4eede1fb92818
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <x5.d: byte[] b(byte[],byte[],byte[])>
		SHA-256: 1d1c2a5d2cbd44c1c0b7f0a957a008f941e43cc07c692481d475dbcce6e5b51c
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer33749)
		Method: <x5.b: javax.crypto.Cipher m()>
		SHA-256: a193d5f8152e1c254f8582159edbd0a983bee43ab4449f07ffb7ebd86362504f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8037)
		Method: <n9.a: n9.b c(byte[])>
		SHA-256: 33c4eb4635b6167c2785b499d5a1e466a8f7b0e10951c169d56b1c171736a6ab
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <x9.c: java.security.MessageDigest c()>
		SHA-256: 2da2376093185712827e35e383143e33ccc1a9f179039037be0675baef6025b
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r9.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <l6.c1: byte[] n(byte[],byte[])>
		SHA-256: 4cd80a35488bd6c68f3c3cf3aa09cfad38c7e3e4431460e04915e775e9b688fa
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r14.<java.security.MessageDigest: byte[] digest()>()
		Method: <ia.c: qa.b g(java.nio.channels.ByteChannel,fa.g,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: bb0886be19a5a239641a02cbd2e3237b4d3dda95cb970de864271134256f791b
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <j9.g$b: boolean f(byte[],byte[])>
		SHA-256: 8c96f621d1af7523264a988bc9a71856a8e02c6682cc23bf93b9faf6b945dd87
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer31455)
		Method: <x5.b: javax.crypto.spec.SecretKeySpec t()>
		SHA-256: c191ea286e1a16c4c870f51a594245faef755fedf456e7d6784f576fd31f9ca3
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.Signature: byte[] sign()>()
		Method: <j9.g$a: byte[] e(byte[])>
		SHA-256: 19fe500f1cbf0ac9009534187dece408a74bc2f5abae56b3875ea2296ef4447d
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PrivateKey
		Statement: $r5 = virtualinvoke $r4.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <f9.d: void <init>(android.content.Context)>
		SHA-256: 282bc01f8e0712ff7f59f15727010398144c4546de80f8255b9ea989be7c849b
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.PrivateKey
		Statement: $r10 = virtualinvoke $r11.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <f9.d: java.security.KeyPair m(android.content.Context)>
		SHA-256: 9ed6994789cf340c033128027b609b039e948a33b67e7b4337e718c406423bfb
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8059)
		Method: <ba.w5: java.security.MessageDigest g()>
		SHA-256: e2c2782e1d9f68e3b6bdc1cce7c7910f3b7b0d6a0e5174b1253d65dad27a85e7
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r11.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <l6.b1: boolean u0(byte[],i6.m,java.security.cert.Certificate,byte[])>
		SHA-256: 97bd7b2042093f5b8058fc3c7d7d2b0c691dcfc8a327eef5e6e08761aac234b4
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyFactory
		Statement: $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer20661)
		Method: <l6.r1: java.security.interfaces.RSAPrivateKey c(java.io.InputStream)>
		SHA-256: 79b91fb44f9aa7b9b700d50407c05f80f696f75599d515de62cf4a43ba5e1752
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <d8.p: void i(java.security.SecureRandom,int[])>
		SHA-256: 90b33f1198935f2797a3302b0abdd0c07362e8373480862eb29d7d2a53aad6f0
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.PublicKey
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)
		Method: <j9.g: j9.f a(byte[])>
		SHA-256: f59ac7cba3cf1d6ffbe560b18191c3440e0c007f08049489de7947a498f628fb
		Secure: false
	Object:
		Variable: varReplacer31453
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer31453)
		Method: <x5.d: javax.crypto.spec.SecretKeySpec t()>
		SHA-256: 72a26e2b071ba6383abe55ec0d27b8ff6a06f753461f2a6155d0155776d58c3c
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r1.<java.util.Random: int nextInt()>()
		Method: <o9.j$b: int nextInt()>
		SHA-256: 786050112072aa87c1eebe08f6a36f058d74432b93d91056fe0830a1b0003eac
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r12.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <a6.m: byte[] P(byte[])>
		SHA-256: f0306dc9eb09813d44b62b45e7b06559b41c554a2ac9ee7b7be38328edbba2cb
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <m9.b: m9.b c(byte[])>
		SHA-256: 44e5ec470d5f7195d43245c3c6c4ac10961fa1422b5103138323739a85a0842
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer30913)
		Method: <x5.b: byte[] l(byte[])>
		SHA-256: 1b53e4feb6e8263e7b975285c29f3943483142cfa3336bc5c5e4b67ab99d6fa0
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.Signature
		Statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer40890)
		Method: <l6.c1: java.security.Signature q(i6.m)>
		SHA-256: b29bfcb6d3ba80e72e96968884aaea31e5604021c7bc6c1398f1007c08105a5b
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <e6.o: void <init>(int,java.net.DatagramSocket,l6.r1,boolean,e6.c,int,java.util.function.Consumer,z5.a)>
		SHA-256: a3fff5c5eb43cdd33b22e4332cf84c9441dbbdd5bf378ca015851eefbc694cca
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.PublicKey
		Statement: $r8 = virtualinvoke $r11.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <f9.d: java.security.KeyPair m(android.content.Context)>
		SHA-256: f1329b1a86367a1f52194d46b973b0b20f6342bf91a59960d69775336905ed66
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer14355)
		Method: <j9.g$a: byte[] e(byte[])>
		SHA-256: 66739e0013aaf359c1133f4691cd7a8398954f4aaba45d59f2a20a0ac2d9a1a2
		Secure: false
	Object:
		Variable: varReplacer31455
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer31455)
		Method: <x5.b: javax.crypto.spec.SecretKeySpec t()>
		SHA-256: 859fe38f9e5b1adef0cdb861a3f7e8e523a34b1daff3ce808fbd3692ba2579cf
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.PublicKey
		Statement: $r13 = virtualinvoke $r4.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <o9.j: java.lang.String[] c(android.content.Context,j9.e,java.lang.String,java.security.KeyPair,java.security.SecureRandom,java.util.Date,java.util.Date)>
		SHA-256: b301b74be12de2df9192dbf8af424d72dc5ef74bc141d56390c1502402c9720e
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.PrivateKey
		Statement: $r10 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r9)
		Method: <f9.d: java.security.KeyPair m(android.content.Context)>
		SHA-256: 78854a8d140c0af4da9e1930e6607d0d52e2fe528b8731c9e4e69ba2e6cc1f0c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.AlgorithmParameters
		Statement: $r1 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>($r2)
		Method: <z7.a: java.security.AlgorithmParameters b(java.lang.String)>
		SHA-256: 7eecdcbc63e03e239acd83603e971ceebd8530c341243d4bff6c735c377d46ef
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Mac
		Statement: $r9 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r7)
		Method: <l6.c1: byte[] n(byte[],byte[])>
		SHA-256: f6cb2fc8d32ea262c1cd24c1e0d4dd766daff31b07d4f2246bd84b3af00b2dcb
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer34432)
		Method: <j9.a$a: boolean f(byte[],byte[])>
		SHA-256: 700cc6471b853fcdffff0fa8343a5ad6c28ee61d04c5a06cc2990c310e98d677
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.PublicKey
		Statement: $r13 = virtualinvoke $r4.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <o9.j: java.lang.String[] c(android.content.Context,j9.e,java.lang.String,java.security.KeyPair,java.security.SecureRandom,java.util.Date,java.util.Date)>
		SHA-256: b301b74be12de2df9192dbf8af424d72dc5ef74bc141d56390c1502402c9720e
		Secure: true
	Object:
		Variable: varReplacer20661
		Type: java.lang.String
		Statement: $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer20661)
		Method: <l6.r1: java.security.interfaces.RSAPrivateKey c(java.io.InputStream)>
		SHA-256: f1489554f3b9ef537c5fe641bf154e0dfe823a98bdfa91cb5bcaf7ce83e409da
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r11.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <l6.b1: boolean u0(byte[],i6.m,java.security.cert.Certificate,byte[])>
		SHA-256: 21242d2bbe81118e1d1260b8302305fab2824f6dff6886d91d5501373cea1d8d
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.AlgorithmParameters
		Statement: $r4 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>(varReplacer41192)
		Method: <k6.n: java.security.spec.ECParameterSpec i(java.lang.String)>
		SHA-256: 175a3c311c194afb7c67dcf48385984b17db5da3d6909d59c47f39138b85972d
		Secure: false
	Object:
		Variable: $r16
		Type: java.security.PrivateKey
		Statement: $r16 = virtualinvoke $r3.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <o9.j: void <init>(android.content.Context,j9.e,java.security.KeyPair,java.lang.String,java.security.SecureRandom)>
		SHA-256: c26cbe2955e4d5e27aff3934b02fb2d46a3a98f6493de65b22d5dee994daecc0
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.Signature
		Statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer40887)
		Method: <l6.c1: java.security.Signature q(i6.m)>
		SHA-256: 2047ae7fbe8130f4537a66477b3f9bd57da3853e723beafc05891a7d877faf34
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <x5.d: byte[] b(byte[],byte[],byte[])>
		SHA-256: 7ea7b9935b2f044c4ccc6222c6bf4f46a232efb9a72050040b9de6c728ef2629
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer31453)
		Method: <x5.d: javax.crypto.spec.SecretKeySpec t()>
		SHA-256: 3fd469d6ad9bbb17c0a53aa88d86eef3ef792d73f0c8ff420d75d5e440820f9b
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer35652)
		Method: <qa.b: javax.crypto.Cipher a(int,java.security.Key)>
		SHA-256: a1972335040e2669f51fa8fd157e970edf184ca6089fad0e267ae2323c827c6d
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <n9.a: n9.b c(byte[])>
		SHA-256: 1637e7f2f493f28cc1dbfe08aefd9cf328872bfb70f9e8d3ca920cfe06ec3fbb
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <i6.o: byte[] g(byte[])>
		SHA-256: f5cd1b7e4c0c63683ba666c42a1ae55a43c9186d89e5ce279d3091df494111d5
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)
		Method: <u1.b$a: javax.crypto.SecretKey b(byte[])>
		SHA-256: 3d1846c03e8c502a9209b6f941a9703b504ce77c0b84f825dbef69327616edfc
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer37125)
		Method: <qa.b: java.security.Key g(java.lang.String,byte[],byte[])>
		SHA-256: a804b2a35db5c7178f2dbc9df4e94abf689e78edf481ec8fcf70c111084078c6
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyPair
		Statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r10)
		Method: <f9.d: java.security.KeyPair m(android.content.Context)>
		SHA-256: c6d2cc831f746977339bf3d70221da5796b8618bb9d6cd0db7ff88e860980642
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r7 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer40592)
		Method: <l6.b1: void P(java.util.List)>
		SHA-256: 91913fc528cd468b6ca318e02e4f7082a18b20f0d1fd863c931f4a8dc86a9781
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r14.<java.security.MessageDigest: byte[] digest()>()
		Method: <ia.c: qa.b g(java.nio.channels.ByteChannel,fa.g,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: bb0886be19a5a239641a02cbd2e3237b4d3dda95cb970de864271134256f791b
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: $r0 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer8068)
		Method: <ba.w5: java.util.Random f()>
		SHA-256: 78cebc4970299e39f09dd5cfd910cf06115b1da24683dd90f5feb9c5fce45626
		Secure: true
	Object:
		Variable: $r15
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r15.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer25670, $r6)
		Method: <a6.m: byte[] P(byte[])>
		SHA-256: ed1e079b2eb83328780015a53bdd727eabbf416eec31988c5aa0af5f658b2b96
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <z7.a: java.security.MessageDigest a(java.lang.String)>
		SHA-256: a6cc438dab3b82736ea543d2bb9c3ec40d524b56d13a92511203c3cd90fb19c0
		Secure: true
	Object:
		Variable: $r18
		Type: java.security.cert.CertificateFactory
		Statement: $r18 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer7033)
		Method: <o9.j: void <init>(android.content.Context,j9.e,java.security.KeyPair,java.lang.String,java.security.SecureRandom)>
		SHA-256: 79a8a03d9810ce71584f9b896826cec46b8de64a1cf26819aea2daf8f01b1d3d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <ia.d: void <init>(int)>
		SHA-256: 1d43ae2b60450947508cd8afd805d00a301ed8c7e70cd1ea4527ad8bda5b6ae8
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)
		Method: <j9.a: j9.a$a a(byte[])>
		SHA-256: ce74baabc24e84081866f69296ab420e750d3310f33fc1b46c643dcd71bcc480
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyPair
		Statement: specialinvoke $r4.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r1)
		Method: <ia.d: java.security.KeyPair d()>
		SHA-256: bfa10f98850b873166c8cf6730ea683112fafc143b9467d3612e861942572bb8
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer29345)
		Method: <p8.a: void <init>(p8.b)>
		SHA-256: 9d906905b089769e21c87aae8972d561c15e09150335d2b1cf2ca10faec427fb
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.cert.CertificateFactory
		Statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer40608)
		Method: <l6.d: int q(java.nio.ByteBuffer)>
		SHA-256: 952002379339ff42bf222075ac28f66bc0b9d4ea7dc822b582aa4985798f93b0
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer36216)
		Method: <ba.j: void <init>()>
		SHA-256: 1a08d5544bd0782d5a0be0c05c5ff1216a76dbd3250b5bb1d1d5e9352dea6f8b
		Secure: false
	Object:
		Variable: varReplacer943
		Type: java.lang.String
		Statement: $r7 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer943)
		Method: <f9.d: java.security.KeyPair m(android.content.Context)>
		SHA-256: fdda3ac8cb4a32fcab45bacef66869d1e0ca589abbdee18288d53b1d8c532edb
		Secure: false
	Object:
		Variable: varReplacer31454
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer31454)
		Method: <x5.d: javax.crypto.spec.SecretKeySpec t()>
		SHA-256: 5f31f21c385c4eed628c6edda307d19edcb5f8a7869fd774d95637da58ff3ae2
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.Signature
		Statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer40893)
		Method: <l6.c1: java.security.Signature q(i6.m)>
		SHA-256: a920ab579e566376bc610e443785c0b4a75bf20994b98b94114d12054973fd73
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.util.Random: void nextBytes(byte[])>($r1)
		Method: <o9.j$b: void nextBytes(byte[])>
		SHA-256: eee4bc11b7c6aa663f8a3ba30a258a9f9e82b52dd2a5c935f3a8d272832d4a25
		Secure: true
	Object:
		Variable: $r22
		Type: byte[]
		Statement: $r22 = virtualinvoke $r19.<java.security.MessageDigest: byte[] digest()>()
		Method: <ia.c: qa.b f(ga.u0,java.nio.channels.ByteChannel,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: 2a6033fb2badf611e65063fb1d954c634f5a860ce76357bffa1acbc37f504bab
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <r7.c: java.security.SecureRandom b()>
		SHA-256: f553b48a635029790275912b97d0aacc6da60ddbca420931ab14baf838d2e16c
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <x5.d: byte[] a(byte[],byte[],byte[])>
		SHA-256: 6de7c7553c7aa5b24815863bd207885398fa1a226802a63e3af162934f17cc2b
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <u1.a$b: byte[] a(javax.crypto.SecretKey,byte[])>
		SHA-256: e1a42e43eadd4a15d37a3321dc10843ea8aa2be2d38feb7408bc61c64cd866ad
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyFactory
		Statement: $r7 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer941)
		Method: <f9.d: java.security.KeyPair m(android.content.Context)>
		SHA-256: 813100cf84f657abf2d8e15c7c17e260d924edd3c8e0c8b29ab91c0e1d6f2cb3
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <d8.t: void j(java.security.SecureRandom,int[])>
		SHA-256: 183de0a66cd6f6c498b8cdb5810a51f6c64950dce560e543760fc8ef49548025
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.PublicKey
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)
		Method: <j9.a: j9.a$a a(byte[])>
		SHA-256: cffab0761c00064cea601ab3166dbe8f05dabbedc7b92d1ae1356a4d84531724
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <j9.a$a: boolean f(byte[],byte[])>
		SHA-256: ff8421cf6137d88866afb5b08970bdc7c335f7f25ed801c92cd7e61e6ab1b354
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer33748)
		Method: <x5.d: javax.crypto.Cipher m()>
		SHA-256: 6216c16b63b89bb8c0d14b59a555c06f53683ca17f2bc9b2960cb17b6b59dfe1
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.PrivateKey
		Statement: $r11 = virtualinvoke $r10.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <l6.c1: void p(i6.k)>
		SHA-256: f4ef846ca6063dc012cab0b224c0f71de517a8ebb3b3c7b4c2c76a2eb02f105f
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <h9.m: h9.m e(j9.f)>
		SHA-256: 8f23818ba9ffc305fb98ae73babcbb0fc35f2af9c1f340ca6b2af6eb5ead1146
		Secure: true
	Object:
		Variable: varReplacer25666
		Type: java.lang.String
		Statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer25666)
		Method: <a6.m: byte[] P(byte[])>
		SHA-256: ea2ac47bdfe5dd092790d840bb014588734251537681c34dad532cdfd850318
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <u1.a$a: byte[] a(javax.crypto.SecretKey,byte[],int)>
		SHA-256: 50dab5d834456a77b189a68509fd93de0b1e3a7080d48f175108b1fb031fca1f
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)
		Method: <j9.g: j9.f a(byte[])>
		SHA-256: 7559df12fd41314539ec280cebc69671c99fc27d127558e137ecf310283a11f
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <d8.n0: void j(java.security.SecureRandom,int[])>
		SHA-256: f0b663335fbba966f8a9f7da90d32e503599d6a1fbbea9258bc2a71455e96f8a
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r8)
		Method: <x5.b: byte[] b(byte[],byte[],byte[])>
		SHA-256: 654463b6fede1469f829e7ab77c996172ce1dd34ba98d69bc957402994f399da
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <p8.a: void <init>(p8.b)>
		SHA-256: e7026bb11e11017bf02ea91dde1699264077a18bdea6fc2f75c8d60890c67fe7
		Secure: true
	Object:
		Variable: $r7
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r7)
		Method: <l6.c1: byte[] n(byte[],byte[])>
		SHA-256: 1e1b318170934a6e390800b8fd4ad9cf5f80976757e9281291a965fa2a917dea
		Secure: false
	Object:
		Variable: varReplacer34325
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer34325)
		Method: <j9.a: j9.a$a a(byte[])>
		SHA-256: 83ea212d638950a3692a2a259206cdf76d63a9230b40554cb892ab5d1539c801
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <l6.c0: void <clinit>()>
		SHA-256: 96ddf6e99cf17ec0e8b7e60ae3703e56fb7044353059c6a7df6dde97010cec56
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer34325)
		Method: <j9.a: j9.a$a a(byte[])>
		SHA-256: 7c4a4a6aeff0a2d38252435b204d8c1eaedffc9bab72cd5b883b96fa24ab1862
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r0.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>($r3)
		Method: <k6.n: java.security.spec.ECParameterSpec i(java.lang.String)>
		SHA-256: 6e391724d75f2b1427b0e5955f4bd5a820d2ddb22ff60acfd5ce57791118b498
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <d8.r0: void j(java.security.SecureRandom,int[])>
		SHA-256: 3891743bdbf74ed0c9865549683af3ff74e70a445dfd2430aef8d9d8e28bf564
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)
		Method: <x5.b: byte[] a(byte[],byte[],byte[])>
		SHA-256: 2d1bb7c37c2a2a6f0a2564a5d2fd1285ee19a5e177904bc088d9fbd99969aabd
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Mac
		Statement: $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer37370)
		Method: <i6.o: byte[] g(byte[])>
		SHA-256: 297573fefdb8368f77f3fb83bcb94102c3b3b412f77dc338a0484637f67bca06
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyFactory
		Statement: $r7 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer943)
		Method: <f9.d: java.security.KeyPair m(android.content.Context)>
		SHA-256: 828da57eb9e19ddd045ee4c966cb617e1fc5448bdcd6df5dcea39298febbe8aa
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <ta.a: byte[] a(byte[])>
		SHA-256: 419c7e8038915c55e302913e496ec94ee55745ed473add6d20d2d112575a15aa
		Secure: false
	Object:
		Variable: varReplacer30910
		Type: java.lang.String
		Statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer30910)
		Method: <x5.b: byte[] l(byte[])>
		SHA-256: e3200aab28aab812ae647c2192e7b17376130c348dcba8885e35b38060b168a4
		Secure: false
	Object:
		Variable: $r14
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer25666)
		Method: <a6.m: byte[] P(byte[])>
		SHA-256: 121a36ecee331f5607e170d66dd2cd148a11f28604bc99fb5b94fa8da3df2936
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<javax.crypto.KeyAgreement: byte[] generateSecret()>()
		Method: <i6.o: void h()>
		SHA-256: ceb3600a2f6a469fe01566e6e7f221a775f0efc95ed56da4a45482379bcd5c1f
		Secure: false
	Object:
		Variable: $r8
		Type: javax.net.ssl.TrustManager[]
		Statement: $r8 = virtualinvoke $r7.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <l6.b1: void P(java.util.List)>
		SHA-256: 2c8b0fd9c2914b087e49fc94fb593962970128c63067073d8f5190af003b68e4
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PublicKey
		Statement: $r8 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)
		Method: <f9.d: java.security.KeyPair m(android.content.Context)>
		SHA-256: c832f7208ea78eda1064b7ba8a4366113ac19876f54eca4e55917ca3537f2872
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: $r10 = virtualinvoke $r8.<java.security.KeyPairGenerator: java.security.KeyPair genKeyPair()>()
		Method: <l6.c1: void p(i6.k)>
		SHA-256: 11db929558b6a481fcd6be0b692e22b43c47d149238f0a80149074187b439760
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyAgreement
		Statement: $r2 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>(varReplacer40536)
		Method: <i6.o: void h()>
		SHA-256: 39605b4502c49a11f8edf7b2e8a827180ad45007909fd6cdb6bbe63ecebc0ad1
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer31457)
		Method: <x5.b: javax.crypto.Cipher r()>
		SHA-256: 82a95fe6b0849bae71528cf0f0d873ad2c376659308774dd1d6e0a8e7ae8fd35
		Secure: false
	Object:
		Variable: varReplacer941
		Type: java.lang.String
		Statement: $r7 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer941)
		Method: <f9.d: java.security.KeyPair m(android.content.Context)>
		SHA-256: 293b1f3a6c602859873c4fbbf9857e370918832a49caf35b582ee30a1e7d0d0f
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r8)
		Method: <i6.o: void <init>(java.security.PrivateKey,i6.q,byte[])>
		SHA-256: 1a83d35b4204586d203b592763c3feece90484da22727b5ff3ec3f580a535e72
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <d8.l: void i(java.security.SecureRandom,int[])>
		SHA-256: 52908bd135e75c1277aa207c53f4dc1ff1e9eb55320f9d8999dfef656b528e1d
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r6)
		Method: <f9.d: java.security.KeyPair m(android.content.Context)>
		SHA-256: ae741cd748acd89ee3d6b7fbb43c8df278a2c709c57f1c0d824771bec43eb594
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4)
		Method: <i6.q: void <init>(int)>
		SHA-256: c12e2fa13055634f855ddb1d11aadd902b0d6667fd614fb465e85be6faa51ca9
		Secure: true
	Object:
		Variable: varReplacer37369
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer37369)
		Method: <i6.o: byte[] g(byte[])>
		SHA-256: 4090b6c44231d6e44f7ec2992ce396e949e3df2378b9fc91a84219f80f61e835
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.PublicKey
		Statement: $r13 = virtualinvoke $r4.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <o9.j: java.lang.String[] c(android.content.Context,j9.e,java.lang.String,java.security.KeyPair,java.security.SecureRandom,java.util.Date,java.util.Date)>
		SHA-256: b301b74be12de2df9192dbf8af424d72dc5ef74bc141d56390c1502402c9720e
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.cert.CertificateFactory
		Statement: $r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>($r2)
		Method: <q7.b: java.security.cert.CertificateFactory a(java.lang.String)>
		SHA-256: cbd72781171cf1eeb08ffea452d6dcd823cb58b2fc0a062813ffdbce082255e4
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <n9.a: n9.b c(byte[])>
		SHA-256: 3ae2991cc983818d75f8aca41ddf879200bddae6104575bf0cc4833a7ddf7a2d
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1567)
		Method: <h9.m: h9.m e(j9.f)>
		SHA-256: e41881cb97e19860dfeae92ad3c5bd122b1f614bcb659fdbe247589218b7583b
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <d8.b: void j(java.security.SecureRandom,int[])>
		SHA-256: b4e971e82e8f2d3cfa6b902cdcb57864818bf5e6e467b223f8428784d2916284
		Secure: true
	Object:
		Variable: varReplacer33747
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer33747)
		Method: <x5.d: javax.crypto.Cipher m()>
		SHA-256: 1a4ec603e1266eca3b071ee639386867fe54c1d0b197ecd1cae9752cbb4fdad8
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <o9.j$b: java.util.Random b()>
		SHA-256: d7091480cce97a6585e7cbbc9ec89fe463b12f23a04398dcec7f59437135523b
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)
		Method: <u1.b$a: javax.crypto.Mac d()>
		SHA-256: 72ae67a49cf4ea59a23b4cd5b91d8ba846c42582f4c9b5bfad863e105526a45c
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer34433)
		Method: <j9.g$b: boolean f(byte[],byte[])>
		SHA-256: 8241f701c4f023b39e7ad122402378ff38226d93855dd8c8d292e60b33cdcf46
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <d8.f0: void i(java.security.SecureRandom,int[])>
		SHA-256: a23508fcc9a86b0329cc82536be31e7da5d036b4f203dba38c38b212fdb5590b
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <qa.b: java.security.Key g(java.lang.String,byte[],byte[])>
		SHA-256: edc639526b414f40581ee1f8df1afa0db32d47ec453820083c5f5263cd65e523
		Secure: false
	Object:
		Variable: $r16
		Type: byte[]
		Statement: $r16 = virtualinvoke $r14.<java.security.MessageDigest: byte[] digest()>()
		Method: <ia.c: qa.b g(java.nio.channels.ByteChannel,fa.g,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: b3750464bec17611dad3b333acac9cbe9ef188378dce7d16a8df172f19963150
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyPairGenerator
		Statement: $r12 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer944)
		Method: <f9.d: java.security.KeyPair m(android.content.Context)>
		SHA-256: 1a08ed70c9ea39da230a0fc76b7fdbe1bbffcd715394eeb3b6f41f885d8bd3eb
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.KeyPairGenerator
		Statement: $r8 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer34199)
		Method: <l6.c1: void p(i6.k)>
		SHA-256: 2404e0e7429ed0c3f5276a80cb889dfe6386e6f60b9a354f7d48f5ae2ecdaeee
		Secure: true
	Object:
		Variable: varReplacer34323
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer34323)
		Method: <j9.g: j9.f a(byte[])>
		SHA-256: 30d4a537e0a6223c444af63a64c44fd4c936c7dfc76641a24f8a5b4be8d42ec5
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>($r7)
		Method: <l6.c1: void p(i6.k)>
		SHA-256: 99cfdd03567bb59dbad08254096060d5c03bd1e9beb41b221fee97843627078d
		Secure: true
	Object:
		Variable: $r16
		Type: java.security.PublicKey
		Statement: $r16 = virtualinvoke $r15.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <ia.c: qa.b f(ga.u0,java.nio.channels.ByteChannel,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: 762977726da997e0993676597bb0729f2dead67074798ffd23b20f28c58a4b8c
		Secure: false
	Object:
		Variable: $r18
		Type: java.security.PrivateKey
		Statement: $r18 = virtualinvoke $r15.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <ia.c: qa.b f(ga.u0,java.nio.channels.ByteChannel,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: fce2c1570a9ea365bee0159fa87045f9b73ba7792e88109cccaa59e0e9b67b80
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyFactory
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer41188)
		Method: <k6.n: java.security.interfaces.ECPublicKey q(i6.k,byte[])>
		SHA-256: f8d502b1550e399821b5b5d273e78b7dc72585185db634889349a611ce59d35a
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <x5.d: byte[] a(byte[],byte[],byte[])>
		SHA-256: ef972f8eaeccb89a0b34981b3061b922c315fe010a5916859feee8005e83a0ee
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer30908, $r4)
		Method: <x5.d: byte[] b(byte[],byte[],byte[])>
		SHA-256: 294c604ac038b6fdcfab063dfb2c7e5a7a85336abf77bdc6904f55c03d7f7a91
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer34204)
		Method: <i6.o: void <init>(java.security.PrivateKey,i6.q,byte[])>
		SHA-256: 881c64d920b5d3b7c01961e06765faaeb21e71a7019f8d54538ed78c45232fca
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.PublicKey
		Statement: $r6 = virtualinvoke $r4.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <f9.d: void <init>(android.content.Context)>
		SHA-256: 495b6c5ee37bf214bd6f5b816197671cb4d3c793421532d13ed39b44d0d23bbd
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.KeyPair
		Statement: $r11 = virtualinvoke $r12.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <f9.d: java.security.KeyPair m(android.content.Context)>
		SHA-256: 303c259ad1b2f7c280bb1bf2ee31d1e83d4a8ab0d78e1a2a3dc7e8118dc96e6c
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <b8.b: void j(java.security.SecureRandom,int[])>
		SHA-256: b4e971e82e8f2d3cfa6b902cdcb57864818bf5e6e467b223f8428784d2916284
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <l6.n: void <clinit>()>
		SHA-256: b0dc1dc07dcaa949ad0affba408d7d23362302cf019a9d0b73c91ccea8e3e54f
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <x9.c: byte[] d(w9.p)>
		SHA-256: eb73ef927ae7a0e8e2acf29902042a2c98648d05eb42356cabc0661322f47418
		Secure: true

Findings in Java Class: o9.j

	 in Method: void <init>(android.content.Context,j9.e,java.security.KeyPair,java.lang.String,java.security.SecureRandom)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #79a8a03d9810ce71584f9b896826cec46b8de64a1cf26819aea2daf8f01b1d3d)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r19 = virtualinvoke $r18.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r17)


	 in Method: java.lang.String[] c(android.content.Context,j9.e,java.lang.String,java.security.KeyPair,java.security.SecureRandom,java.util.Date,java.util.Date)
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #e797936116740ca56894f3371bb335a71d4b643cfbdf9f9d98e95b3f8ea33d31)
			Operation on object of type java.security.Signature object not completed. Expected call to sign, update
			at statement: $r27 = virtualinvoke $r12.<p7.c: p7.b b(j8.a)>($r26)


Findings in Java Class: ba.w5

	 in Method: java.security.MessageDigest g()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e2c2782e1d9f68e3b6bdc1cce7c7910f3b7b0d6a0e5174b1253d65dad27a85e7)
			First parameter (with value "SHA") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8059)


Findings in Java Class: ka.k

	 in Method: void m(pa.n)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e2c2782e1d9f68e3b6bdc1cce7c7910f3b7b0d6a0e5174b1253d65dad27a85e7)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2)


Findings in Java Class: ga.q0$b

	 in Method: void b(fa.g)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e2c2782e1d9f68e3b6bdc1cce7c7910f3b7b0d6a0e5174b1253d65dad27a85e7)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r12.<ga.v0: void d(pa.n)>($r15)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e2c2782e1d9f68e3b6bdc1cce7c7910f3b7b0d6a0e5174b1253d65dad27a85e7)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r15 = (pa.n) $r4


Findings in Java Class: l6.r1

	 in Method: java.util.List b(java.io.InputStream)
		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #ae82b6cad9cb9df0205755b12eb39d2f4ae1b3bb0f8b80dd9b3a5f246146d46b)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r10 = virtualinvoke $r6.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #ae82b6cad9cb9df0205755b12eb39d2f4ae1b3bb0f8b80dd9b3a5f246146d46b)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r6 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer14960)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #ae82b6cad9cb9df0205755b12eb39d2f4ae1b3bb0f8b80dd9b3a5f246146d46b)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r10 = virtualinvoke $r6.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)


	 in Method: java.security.interfaces.RSAPrivateKey c(java.io.InputStream)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r10 = virtualinvoke $r8.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r9)


Findings in Java Class: x9.c

	 in Method: byte[] d(w9.p)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #2da2376093185712827e35e383143e33ccc1a9f179039037be0675baef6025b)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


	 in Method: byte[] e(y9.d)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #2da2376093185712827e35e383143e33ccc1a9f179039037be0675baef6025b)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


	 in Method: byte[] f(w9.p)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #2da2376093185712827e35e383143e33ccc1a9f179039037be0675baef6025b)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


	 in Method: void h(java.security.MessageDigest,w9.t,long,long)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #2da2376093185712827e35e383143e33ccc1a9f179039037be0675baef6025b)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, java.security.MessageDigest: void update(byte[],int,int), java.security.MessageDigest: void update(java.nio.ByteBuffer), java.security.MessageDigest: void update(byte), java.security.MessageDigest: void update(byte[])
			at statement: virtualinvoke $r1.<java.security.MessageDigest: void update(byte[])>($r3)


Findings in Java Class: z7.a

	 in Method: java.security.AlgorithmParameters b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.AlgorithmParameters (on Object #7eecdcbc63e03e239acd83603e971ceebd8530c341243d4bff6c735c377d46ef)
			First parameter (with value "PSS") should be any of {AES, DiffieHellman, DH, OAEP, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r1 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>($r2)


Findings in Java Class: q7.c

	 in Method: java.security.cert.X509Certificate a(p7.b)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #cbd72781171cf1eeb08ffea452d6dcd823cb58b2fc0a062813ffdbce082255e4)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r6 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r4)


Findings in Java Class: k8.b

	 in Method: boolean d(q6.d0)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a6cc438dab3b82736ea543d2bb9c3ec40d524b56d13a92511203c3cd90fb19c0)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i1 = virtualinvoke $r8.<java.security.MessageDigest: int getDigestLength()>()


	 in Method: java.security.Signature b(n7.a)
		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: virtualinvoke $r11.<java.security.AlgorithmParameters: void init(byte[])>($r12)


Findings in Java Class: x5.b

	 in Method: byte[] l(byte[])
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #d5ac2e1a0ed044b0a69c451345a0a4cc1145e4818444826ac94df0aa2eb9eb32)
			Second parameter (with value "ChaCha20") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer30910)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer30914, $r8, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer30910)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1b53e4feb6e8263e7b975285c29f3943483142cfa3336bc5c5e4b67ab99d6fa0)
			First parameter (with value "ChaCha20") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer30913)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #1b53e4feb6e8263e7b975285c29f3943483142cfa3336bc5c5e4b67ab99d6fa0)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)


	 in Method: javax.crypto.spec.SecretKeySpec t()
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #c191ea286e1a16c4c870f51a594245faef755fedf456e7d6784f576fd31f9ca3)
			Second parameter (with value "ChaCha20-Poly1305") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer31455)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer31455)


	 in Method: javax.crypto.Cipher r()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #82a95fe6b0849bae71528cf0f0d873ad2c376659308774dd1d6e0a8e7ae8fd35)
			First parameter (with value "ChaCha20-Poly1305") should be any of {AES, RSA, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer31457)


	 in Method: javax.crypto.Cipher m()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a193d5f8152e1c254f8582159edbd0a983bee43ab4449f07ffb7ebd86362504f)
			First parameter (with value "ChaCha20") should be any of {AES, RSA, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer33749)


	 in Method: byte[] b(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r8)


	 in Method: byte[] a(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)


Findings in Java Class: d6.p0

	 in Method: void G(java.nio.ByteBuffer,a6.l)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #1855b5416c4612dad0b617cc519a3ec247aad07623d43dd4539b478748d85c43)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r7 = virtualinvoke $r2.<a6.l: byte[] s(java.lang.Long,x5.d)>($r6, $r5)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #a193d5f8152e1c254f8582159edbd0a983bee43ab4449f07ffb7ebd86362504f)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r7 = virtualinvoke $r2.<a6.l: byte[] s(java.lang.Long,x5.d)>($r6, $r5)


Findings in Java Class: t5.d1

	 in Method: a6.l w0(java.nio.ByteBuffer)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #1855b5416c4612dad0b617cc519a3ec247aad07623d43dd4539b478748d85c43)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r2.<a6.l: void I(java.nio.ByteBuffer,x5.d,long,z5.a,int)>($r1, $r7, $l2, $r8, $i0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #a193d5f8152e1c254f8582159edbd0a983bee43ab4449f07ffb7ebd86362504f)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r2.<a6.l: void I(java.nio.ByteBuffer,x5.d,long,z5.a,int)>($r1, $r7, $l2, $r8, $i0)


Findings in Java Class: e6.n

	 in Method: a6.c h(int,java.time.Instant,java.nio.ByteBuffer)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #1855b5416c4612dad0b617cc519a3ec247aad07623d43dd4539b478748d85c43)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r4.<a6.f: void I(java.nio.ByteBuffer,x5.d,long,z5.a,int)>($r3, $r10, varReplacer11886, $r1, varReplacer11887)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #a193d5f8152e1c254f8582159edbd0a983bee43ab4449f07ffb7ebd86362504f)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r4.<a6.f: void I(java.nio.ByteBuffer,x5.d,long,z5.a,int)>($r3, $r10, varReplacer11886, $r1, varReplacer11887)


Findings in Java Class: i6.q

	 in Method: void <init>(int)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c12e2fa13055634f855ddb1d11aadd902b0d6667fd614fb465e85be6faa51ca9)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4)


Findings in Java Class: x5.d

	 in Method: javax.crypto.Cipher m()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer33747)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #6216c16b63b89bb8c0d14b59a555c06f53683ca17f2bc9b2960cb17b6b59dfe1)
			First parameter (with value "AES/ECB/NoPadding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer33748)


	 in Method: byte[] l(byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #a193d5f8152e1c254f8582159edbd0a983bee43ab4449f07ffb7ebd86362504f)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


	 in Method: javax.crypto.spec.SecretKeySpec t()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer31453)


	 in Method: byte[] a(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer29229, $r6, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer29230, $r5)


	 in Method: byte[] b(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer30908, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer30907, $r6, $r1)


Findings in Java Class: a6.l

	 in Method: void K(java.nio.ByteBuffer,byte,int,x5.d,long,z5.a)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #a193d5f8152e1c254f8582159edbd0a983bee43ab4449f07ffb7ebd86362504f)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r6 = virtualinvoke r0.<a6.l: byte[] l(byte[],x5.d)>($r4, $r2)


Findings in Java Class: ia.c

	 in Method: java.security.MessageDigest c()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e52da58535aebf99d2e15395f0e403b6972c5c944d2a24327c5834f307345a47)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer33796)


Findings in Java Class: u1.a$a

	 in Method: byte[] a(javax.crypto.SecretKey,byte[],int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #9036d3726dc3a36a367d704fc9d2f27c24fcbd12fb6f01b19ae1bb06f06c3891)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $i1 = virtualinvoke $r4.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #72ae67a49cf4ea59a23b4cd5b91d8ba846c42582f4c9b5bfad863e105526a45c)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $i1 = virtualinvoke $r4.<javax.crypto.Mac: int getMacLength()>()

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #9036d3726dc3a36a367d704fc9d2f27c24fcbd12fb6f01b19ae1bb06f06c3891)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void update(byte[])>($r5)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #9036d3726dc3a36a367d704fc9d2f27c24fcbd12fb6f01b19ae1bb06f06c3891)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to javax.crypto.Mac: byte[] doFinal(byte[]), update
			at statement: $r7 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal()>()

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #72ae67a49cf4ea59a23b4cd5b91d8ba846c42582f4c9b5bfad863e105526a45c)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void update(byte[])>($r5)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #72ae67a49cf4ea59a23b4cd5b91d8ba846c42582f4c9b5bfad863e105526a45c)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to javax.crypto.Mac: byte[] doFinal(byte[]), update
			at statement: $r7 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal()>()


Findings in Java Class: u1.b$a

	 in Method: int c()
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #9036d3726dc3a36a367d704fc9d2f27c24fcbd12fb6f01b19ae1bb06f06c3891)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $i0 = virtualinvoke $r1.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #72ae67a49cf4ea59a23b4cd5b91d8ba846c42582f4c9b5bfad863e105526a45c)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $i0 = virtualinvoke $r1.<javax.crypto.Mac: int getMacLength()>()


	 in Method: javax.crypto.SecretKey b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)


	 in Method: javax.crypto.Mac a(javax.crypto.SecretKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r1.<javax.crypto.Mac: void init(java.security.Key)>($r2)


Findings in Java Class: j9.a

	 in Method: j9.a$a a(byte[])
		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #7c4a4a6aeff0a2d38252435b204d8c1eaedffc9bab72cd5b883b96fa24ab1862)
			First parameter (with value "ECDSA") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer34325)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r3 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)


Findings in Java Class: ta.a

	 in Method: byte[] a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9ae5d0be33926bd559f6fbee66a52e4f3cbda9e0f522ee44ce3f99ac796eb8af)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer35545)


Findings in Java Class: qa.b

	 in Method: javax.crypto.Cipher a(int,java.security.Key)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #a1972335040e2669f51fa8fd157e970edf184ca6089fad0e267ae2323c827c6d)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: byte[] update(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key)>($i0, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a1972335040e2669f51fa8fd157e970edf184ca6089fad0e267ae2323c827c6d)
			First parameter (with value "ARCFOUR/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer35652)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #a1972335040e2669f51fa8fd157e970edf184ca6089fad0e267ae2323c827c6d)
			Unexpected call to method getInstance on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer35652)


	 in Method: java.security.Key g(java.lang.String,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer37125)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #a804b2a35db5c7178f2dbc9df4e94abf689e78edf481ec8fcf70c111084078c6)
			Second parameter (with value "ARCFOUR") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer37125)


	 in Method: java.security.MessageDigest e()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5ceeeeb4a174a8a2f1eed5c3a761a672ea8d2d53a50831bb1fcc46610dc6f90a)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer38267)


Findings in Java Class: ba.j

	 in Method: void <init>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1a08d5544bd0782d5a0be0c05c5ff1216a76dbd3250b5bb1d1d5e9352dea6f8b)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer36216)


Findings in Java Class: ba.j0

	 in Method: void L(ca.i)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #1a08d5544bd0782d5a0be0c05c5ff1216a76dbd3250b5bb1d1d5e9352dea6f8b)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r16.<ca.j: void I(ba.j)>($r7)


Findings in Java Class: l6.d

	 in Method: int q(java.nio.ByteBuffer)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #952002379339ff42bf222075ac28f66bc0b9d4ea7dc822b582aa4985798f93b0)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r6 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r1)


Findings in Java Class: l6.c1

	 in Method: java.security.Signature q(i6.m)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #16466c547d89e3f59295b3d70f244c13e5b2ca87eefb86c3cc09aadb467134a5)
			First parameter (with value "SHA384withRSA/PSS") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer40889)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #a920ab579e566376bc610e443785c0b4a75bf20994b98b94114d12054973fd73)
			First parameter (with value "SHA256withRSA/PSS") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer40893)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #2047ae7fbe8130f4537a66477b3f9bd57da3853e723beafc05891a7d877faf34)
			First parameter (with value "SHA512withRSA/PSS") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer40887)


	 in Method: byte[] o(byte[],java.security.PrivateKey,i6.m,boolean)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r12.<java.security.Signature: void initSign(java.security.PrivateKey)>($r7)


	 in Method: byte[] n(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r9.<javax.crypto.Mac: void init(java.security.Key)>($r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r7)


Findings in Java Class: k6.n

	 in Method: java.security.spec.ECParameterSpec i(java.lang.String)
		ConstraintError violating CrySL rule for java.security.AlgorithmParameters (on Object #175a3c311c194afb7c67dcf48385984b17db5da3d6909d59c47f39138b85972d)
			First parameter (with value "EC") should be any of {AES, DiffieHellman, DH, OAEP, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r4 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>(varReplacer41192)


	 in Method: java.security.interfaces.ECPublicKey q(i6.k,byte[])
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r12 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r9)


Findings in Java Class: f9.d

	 in Method: java.security.KeyPair m(android.content.Context)
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r10)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r8 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r10 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r9)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r10)


Findings in Java Class: l6.b1

	 in Method: void P(java.util.List)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r7.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer40594)


Findings in Java Class: a6.m

	 in Method: byte[] P(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r12.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer25667, $r9, $r11)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r12.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer25667, $r9, $r11)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer25666)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r15.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer25670, $r6)


Findings in Java Class: j9.g

	 in Method: j9.f a(byte[])
		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r3 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)


Findings in Java Class: ia.d

	 in Method: java.security.KeyPair d()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r4.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r1)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r4.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r1)


Findings in Java Class: i6.o

	 in Method: byte[] g(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Mac: void init(java.security.Key)>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer37369)


	 in Method: void h()
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyAgreement
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r2.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>($r1, varReplacer40537)

		RequiredPredicateError violating CrySL rule for javax.crypto.KeyAgreement
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r2.<javax.crypto.KeyAgreement: void init(java.security.Key)>($r3)


Findings in Java Class: j9.g$b

	 in Method: boolean f(byte[],byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: j9.g$a

	 in Method: byte[] e(byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initSign(java.security.PrivateKey)>($r1)


Findings in Java Class: j9.a$a

	 in Method: boolean f(byte[],byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 178

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 19
	TypestateError: 10
	IncompleteOperationError: 26
	RequiredPredicateError: 44
=====================================================================
