0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer39888)
		Method: <dh.a: javax.crypto.SecretKey d(java.lang.String)>
		SHA-256: 51f138e24dd55784600141cdbd325d733954daffa56cf51ae67c92abd63c8704
		Secure: true
	Object:
		Variable: $r12
		Type: javax.net.ssl.SSLContext
		Statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer72844)
		Method: <z4.b: void <clinit>()>
		SHA-256: db5d142c0b91e5b9cfde13b75890ec9003cd2e11351a93e499bf26ae3f20e50d
		Secure: false
	Object:
		Variable: varReplacer36058
		Type: int
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r1, varReplacer36057, varReplacer36058)
		Method: <com.google.android.vending.licensing.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 29a0197ab556d0d20bf936a97607decd2f4564e49d0edeb96d7597db66fde55a
		Secure: false
	Object:
		Variable: $r13
		Type: byte[]
		Statement: $r13 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r13)
		Method: <com.itextpdf.text.pdf.PdfSmartCopy$ByteStore: void serObject(com.itextpdf.text.pdf.PdfObject,int,com.itextpdf.text.pdf.ByteBuffer,java.util.HashMap)>
		SHA-256: 876270d0267fc45c080cb3c7041ce6ea03b8f6771e4fe079dddc495705d2d1c4
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer94596)
		Method: <com.itextpdf.text.pdf.PdfSmartCopy$ByteStore: void <init>(com.itextpdf.text.pdf.PdfDictionary,java.util.HashMap)>
		SHA-256: 69b2b5b8e92ae3c256d831068e0b55e0fe7c44c9ce396b0938417c1d3ac0abc7
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.PdfDictionary getEncryptionDictionary()>
		SHA-256: be6aa4f138a2a87448d62a524ca03a5f0d5a05b4cc78557434be62edbaf89f29
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15110)
		Method: <x4.k: java.lang.String a(java.lang.String)>
		SHA-256: 9a43184fbd4c9ca806a2ec1eb4e97c014286a86db4aa0cff7f84698c43228a3b
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <dh.a: javax.crypto.SecretKey d(java.lang.String)>
		SHA-256: 6db57c90115212bc221cd51312e1ead9831e4c4eb085f0e3d933d0d52c3b4230
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer89810)
		Method: <com.itextpdf.text.pdf.PdfEncryption: byte[] createDocumentId()>
		SHA-256: 67f9e2ec00737b282e3001c89ce540e8996a031b1b1b463a8ec92964193fe2b4
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.TrustManager[]
		Statement: $r9 = virtualinvoke $r8.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <ch.qos.logback.core.net.ssl.SSLContextFactoryBean: javax.net.ssl.TrustManager[] createTrustManagers(ch.qos.logback.core.spi.ContextAware)>
		SHA-256: bc885f0388d155b8bd8785e6595947a32cc55c93797ed30b37e2f92ef5a08b85
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.google.android.vending.licensing.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 9d5e399b90cd610ac6952d4d660b3c1f1c5d8fe787f3b2040909e3dff276910c
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <dh.a: java.io.InputStream a(java.io.InputStream,java.lang.String)>
		SHA-256: 30e24cf946b3008fed9f991324810e74b5b1282a720b37290b5892c8d9b73380
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer53273, $r2)
		Method: <okhttp3.internal.platform.c: javax.net.ssl.SSLSocketFactory m(javax.net.ssl.X509TrustManager)>
		SHA-256: b93ebda209399eebef5691d5956d0ff6b6f4d8084397b3713e86626c0c8fc784
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer36060)
		Method: <com.google.android.vending.licensing.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: db90245d55b349957fdff14d18bc93bfe5208a08e3ca68cc035804b5881cabfb
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <x4.k: void <clinit>()>
		SHA-256: feea54b016a9bb886e061add50e87f4b395b1bd95c5e5f51f80c74ce03eb1f02
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer53257, varReplacer53258)
		Method: <okhttp3.internal.platform.b: javax.net.ssl.X509TrustManager n()>
		SHA-256: b6fafe5c5cbe7f11ed5321b84f832d132ace5f2ca4f83fc5f20bd5158af9e598
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r1)
		Method: <ch.qos.logback.core.net.ssl.KeyManagerFactoryFactoryBean: javax.net.ssl.KeyManagerFactory createKeyManagerFactory()>
		SHA-256: 10326ce1ab2bfe82b1f8d7575df33991371e7f8fcb954583e871168e3c0d571f
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>($r3, $r4)
		Method: <ch.qos.logback.core.net.ssl.SecureRandomFactoryBean: java.security.SecureRandom createSecureRandom()>
		SHA-256: 14bee149cfc6ff2a4ea048781cfbacbfbe04430089f44f2a5520080545f4edc
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <org.totschnig.myexpenses.sync.a: java.lang.String r(java.lang.String)>
		SHA-256: a561fdbf30ec5558937b93b67b677c9b7570a244c1cc5699ebe5cf0037e9e4f4
		Secure: false
	Object:
		Variable: r0
		Type: dh.a$a
		Statement: specialinvoke r0.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r1, $r2)
		Method: <dh.a$a: void <init>(java.io.InputStream,javax.crypto.Cipher)>
		SHA-256: 7d9922ee58d313488640aa258b92e5718f6212a0ff9efa3c1205b5bc29bca995
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer91416)
		Method: <com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.PdfDictionary getEncryptionDictionary()>
		SHA-256: 5ff420a7c60cdd2da01d05d190e18bb9f9043195d40c8af6af3ddb95a2d334fd
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.e: javax.net.ssl.X509TrustManager n()>
		SHA-256: de098f120ce844d4b698ff843f479f036ecad321d8fbe9293b2a506860a29d10
		Secure: false
	Object:
		Variable: $r13
		Type: javax.crypto.Cipher
		Statement: $r13 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer39660)
		Method: <ah.f0: void d(java.io.File,a3.a,java.lang.String)>
		SHA-256: dac4d0ed0cbcc7c814fb988c9a61fbc9bb8ffadc7e46f59329f89e45cd3ee299
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <ah.e0: java.lang.String z(java.lang.String)>
		SHA-256: 9816da4da3893f277043c4f06977f8d12f36c9433d7c84195402664b61f23ec5
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <ch.qos.logback.core.net.ssl.KeyStoreFactoryBean: java.security.KeyStore newKeyStore()>
		SHA-256: 48f5d63c81c4295734fc5a5dcf629add0d61119730017882d650201b2a352ad4
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer91429)
		Method: <com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.PdfDictionary getEncryptionDictionary()>
		SHA-256: 2fade61a0719767be33104a249f7407a15fcb9ce92fb8c5e2926489cb2d1e14
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.cert.CertificateFactory
		Statement: $r2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer72859)
		Method: <z4.b: void c(java.security.KeyStore,java.io.InputStream)>
		SHA-256: e24b15add42b26eec282b49c51e9a7ba314697150111e7ccf7f75898674c4b2c
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <we.j: we.j b(java.lang.String)>
		SHA-256: 247c9087ea7fddb112f7ab28ea14c3fe88ad46eaabad0693397b6743985f4341
		Secure: false
	Object:
		Variable: $r15
		Type: javax.crypto.Cipher
		Statement: $r15 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r14)
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>
		SHA-256: af72fead94b2d64f11398cab2fcf81db6e23b7696111bef982499a268966c807
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <we.y: we.j b(java.lang.String)>
		SHA-256: aba9ed1bd5c38959be713fe911fb0009e9fb00dd01a3b4cae75692ad64edf22d
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <x4.k: java.lang.String a(java.lang.String)>
		SHA-256: c249aeb534f9f87ef26f78a9eda4cf3c39750f606ce9fd4388bba7d0673382b3
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <okhttp3.internal.platform.e: javax.net.ssl.X509TrustManager n()>
		SHA-256: 7573e25ff363c4cccd35db08e13417d88070aab61a28aa921815786c057a5daa
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer65305)
		Method: <dh.a: java.io.InputStream a(java.io.InputStream,java.lang.String)>
		SHA-256: effcd07bba0ab81bc9225528e6eda78b09300b0ac21069b4cab21cb2bf400e4c
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer64484, $r2)
		Method: <okhttp3.internal.platform.b: javax.net.ssl.SSLContext l()>
		SHA-256: 43de6fcda0de85cd22ee02d849470d929a75af1198a44d671766308961618808
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer93964)
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>
		SHA-256: f0f74ff8ee0f4b87b51b012ca39bc1750f57232b2c11ffda4ed921425d4c32ab
		Secure: false
	Object:
		Variable: $r21
		Type: javax.net.ssl.SSLContext
		Statement: $r21 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer73224)
		Method: <wg.e: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.X509Certificate,boolean)>
		SHA-256: 5cb777d20db4ebd183077dfa2fe9b64a484591a785e95eb6cf7305a4748f6e4e
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.KeyManager[]
		Statement: $r10 = virtualinvoke $r8.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <ch.qos.logback.core.net.ssl.SSLContextFactoryBean: javax.net.ssl.KeyManager[] createKeyManagers(ch.qos.logback.core.spi.ContextAware)>
		SHA-256: 8babd4132e0c0fe4133bb1f4554cbb3ae9d88464dcd874aa291172150e22c926
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.KeyStore
		Statement: $r17 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <wg.e: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.X509Certificate,boolean)>
		SHA-256: 4b138ba905a15883503c70ec09b7ff40aba9bc7ea4dce06aed7bfb7cb4cead5c
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <dh.a: java.io.InputStream b(java.io.InputStream,java.lang.String)>
		SHA-256: a85249a04ea5484883b4c5bafe23cbbc95ff5a652a42ce1767030b4ff610e675
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.f: javax.net.ssl.X509TrustManager n()>
		SHA-256: be080904eb4ff20c2b86a59ccbebe7c4ab7b6bd022bc17f75bece420836efa4e
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer36061)
		Method: <com.google.android.vending.licensing.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 52b2052af843c9ae17e727429f8e06f6eac3c42a2807913778722b2c37d6770f
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer61553)
		Method: <ah.e0: java.lang.String z(java.lang.String)>
		SHA-256: 6039dee8d278ab13acf683a51c09d332bd2f1e72bcb3c92c1d421ce664e7ef5a
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <dh.a: byte[] c(int)>
		SHA-256: 802813b03d83a0b555f51e6e98d56c4a32dfc145f22cbff5dae19d64197d4889
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <org.totschnig.myexpenses.sync.a: void E()>
		SHA-256: dc458d7228d4af1502dd8911c4d5385d9fe60d5f76c69189158234ad7a34cf89
		Secure: true
	Object:
		Variable: $r7
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r7 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer72835)
		Method: <z4.b: void <clinit>()>
		SHA-256: a1e05d46e500b660c25db7b3a7ec02b66eb932c25e9fcdf0db854bb9ce94cc35
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>($r1, $r2)
		Method: <ch.qos.logback.core.net.ssl.TrustManagerFactoryFactoryBean: javax.net.ssl.TrustManagerFactory createTrustManagerFactory()>
		SHA-256: 1ed36fcd869347582bbbd9d848778d25cd8af6ea19a47a3f112f6fceec68c0de
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer65264)
		Method: <org.totschnig.myexpenses.sync.a: java.lang.String r(java.lang.String)>
		SHA-256: 74429de695d3f0642e97fa97b85593c1b287a5537fddfe4d37876e9be26e4880
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.b: javax.net.ssl.X509TrustManager n()>
		SHA-256: bc50eda51bdbb8d13877a0e63861bcc894849e4266b390c4558b096bd1e5dd5a
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r2)
		Method: <ch.qos.logback.core.net.ssl.SSLContextFactoryBean: javax.net.ssl.SSLContext createContext(ch.qos.logback.core.spi.ContextAware)>
		SHA-256: 4b05176adcdb6f967be8edbc09fc31fe3f31b7181b4796854b2c6a6af100f28a
		Secure: false
	Object:
		Variable: varReplacer36060
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer36060)
		Method: <com.google.android.vending.licensing.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 6f452a3dcf889101db0952e6c4cf018d6143989861ecf426dc426377e032d331
		Secure: false
	Object:
		Variable: varReplacer39887
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer39887)
		Method: <dh.a: javax.crypto.SecretKey d(java.lang.String)>
		SHA-256: a54fafbcf79a82cde0a0c9d32f12c6c9f39c0d3f5d74bf832f5dde6913946624
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer36059)
		Method: <com.google.android.vending.licensing.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 6b5808bb7cc6edb99a6a30d7db4e4e8e86dae2a9c0076615bab488470d65fe1e
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer39887)
		Method: <dh.a: javax.crypto.SecretKey d(java.lang.String)>
		SHA-256: 44bfa362a426a1a0a25491a33af8039b0bf5edce2145bc2ce968f5f162962bde
		Secure: false
	Object:
		Variable: $r8
		Type: javax.net.ssl.TrustManager[]
		Statement: $r8 = virtualinvoke $r7.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <z4.b: void <clinit>()>
		SHA-256: 58f75f2988feaa0dd48f626f910ba7b7b81c551ecd4efc743f3705a3544aecc6
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer64487, $r2)
		Method: <okhttp3.internal.platform.c: javax.net.ssl.SSLContext l()>
		SHA-256: 81fbd44577a4523b53515b7abd1b0d63a68e4ea6b4df524ca0b91ec4348e4b56
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r1, varReplacer36057, varReplacer36058)
		Method: <com.google.android.vending.licensing.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: a7be3036337c6145ee8d102df8e20518e125e779f790e7377251fac878050a20
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer36064)
		Method: <com.google.android.vending.licensing.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: a91da29b9491d546108566d15fbf070a353d242fa608bf58b22cedebbe89808c
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>($r3)
		Method: <ch.qos.logback.core.net.ssl.SecureRandomFactoryBean: java.security.SecureRandom createSecureRandom()>
		SHA-256: de7839f300b9b3e7e2160c59ac25f7e664ed53cd15ab8d598e1ecd240d8de242
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r7.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>
		SHA-256: 32f375bb75cd2da7fd1ce96a1c0affd2e25ce28a72cddccffbda519752e99ab6
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.cert.CertificateFactory
		Statement: $r11 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer65229)
		Method: <org.totschnig.myexpenses.sync.g: void <init>(android.content.Context,android.accounts.Account,android.accounts.AccountManager)>
		SHA-256: f874c24fba79c41e96dd7f58dc44e5eaf63e835b28487177143fd22e6a777ed5
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <we.y: we.j b(java.lang.String)>
		SHA-256: 89acbd6f50f2db5e474ad79252dbfdd129da77301a34e5a947037e61ec9cb66d
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.lang.String)>($r1, $r2)
		Method: <ch.qos.logback.core.net.ssl.KeyManagerFactoryFactoryBean: javax.net.ssl.KeyManagerFactory createKeyManagerFactory()>
		SHA-256: 30edab73955c2263230cbd001405e70b03537d5a4b7833147407b6019b107734
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.cert.CertificateFactory
		Statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer82705)
		Method: <ie.d$b: java.util.List a(we.i)>
		SHA-256: bf62ed707707c4b4ae5dd1bbc77b69f901b6e448bbd1786f043e8a6110c263db
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.c: javax.net.ssl.X509TrustManager n()>
		SHA-256: bd43f450a57f401020dce481d1837487571f292d0d2452a3fa495f58303973
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.KeyGenerator
		Statement: $r7 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer93961)
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>
		SHA-256: 3306243e48190b6cfe89ff00983ab4486b034fa259fdad1e6d30f1b66e00a485
		Secure: false
	Object:
		Variable: $r18
		Type: javax.net.ssl.TrustManager[]
		Statement: $r18 = virtualinvoke $r16.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <wg.e: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.X509Certificate,boolean)>
		SHA-256: a5e1d268fe458318846a53d65f60aaa23a4258f130e48a9d5bb7958f8861f2b4
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer94592)
		Method: <com.itextpdf.text.pdf.PdfSmartCopy$ByteStore: void <init>(com.itextpdf.text.pdf.PRStream,java.util.HashMap)>
		SHA-256: 73592c3bf3e56debccb5d85304a8d5ba24b6d8c0187b6c67852d1d5cd9bc2ad0
		Secure: false
	Object:
		Variable: $r22
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r22.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r7, $r13)
		Method: <ah.f0: void d(java.io.File,a3.a,java.lang.String)>
		SHA-256: ab949565efc9144ba6c0f5d405adb093dc527b61d9e22a774744a0e252c0f725
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r8.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r1, $r7)
		Method: <dh.a: java.io.InputStream a(java.io.InputStream,java.lang.String)>
		SHA-256: b66528313faf236e35e0fc5b7e2679b595d2f641c53261c24f19fac11f57f54a
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer65256)
		Method: <org.totschnig.myexpenses.sync.a: void E()>
		SHA-256: e200a397a45c62a3314d49864adc5462e88cbb6c4a52e113721e4a881c4ee6a6
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <ch.qos.logback.core.net.ssl.TrustManagerFactoryFactoryBean: javax.net.ssl.TrustManagerFactory createTrustManagerFactory()>
		SHA-256: 7dc9e83991f14c3e120a6d47872b56871898e1945856a44ea5cc0aeb766a942e
		Secure: false
	Object:
		Variable: $r21
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r21.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r11)
		Method: <ah.f0: void d(java.io.File,a3.a,java.lang.String)>
		SHA-256: 58857c82685d06f7ba75d02bb6887bbfb08efa9cb221ec61322e5d5fed039788
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.google.android.vending.licensing.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 9d5e399b90cd610ac6952d4d660b3c1f1c5d8fe787f3b2040909e3dff276910c
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer64481)
		Method: <okhttp3.internal.platform.f: javax.net.ssl.SSLContext l()>
		SHA-256: 887293b0dd57f9030bda72260c093f385ecd549386c326ea232a0f65f8a95181
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)
		Method: <com.google.android.vending.licensing.a: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 859343ca5a612ac8673b27724e0a593638e6b18dec148ad0efde9ff2891a4825
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer82937)
		Method: <dh.a: java.io.InputStream b(java.io.InputStream,java.lang.String)>
		SHA-256: 75c154e5ebd9b47ae361cdb36552b999e4b4f5a04246162ecd3a0c48d1ecee36
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.SecureRandom
		Statement: specialinvoke $r13.<java.security.SecureRandom: void <init>()>()
		Method: <com.dropbox.core.android.AuthActivity: void onTopResumedActivityChanged(boolean)>
		SHA-256: 344e63d09ff50390b6a6241352cea6f88cf0de250cb7b20d68258fd6e08a05fd
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.f: javax.net.ssl.X509TrustManager n()>
		SHA-256: 97915a278e1c5694a156c42ff5901eea93b2dc56f7be9261d812713b3d7d6cd7
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer64483, $r2)
		Method: <okhttp3.internal.platform.e: javax.net.ssl.SSLContext l()>
		SHA-256: fdac9038ea910b82b594cbbd8960ef1c0ba6d9e0fddcf58870ee04c79802478e
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>($r1, $r2)
		Method: <ch.qos.logback.core.net.ssl.KeyStoreFactoryBean: java.security.KeyStore newKeyStore()>
		SHA-256: d64fffa36848d17aa1386d7b9bc92253b77e46478f803ffb96beb8c564c1d027
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: virtualinvoke $r13.<java.security.SecureRandom: void nextBytes(byte[])>($r10)
		Method: <com.dropbox.core.android.AuthActivity: void onTopResumedActivityChanged(boolean)>
		SHA-256: 43ce18f4220a95a21dd25a75297b8a09684383320fea60cdd8534fb112247d6d
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.c: javax.net.ssl.X509TrustManager n()>
		SHA-256: 202884b28312681a112d363f8a5bc787a3c6c6bc58d6a32afb8d8ee73dc06812
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.itextpdf.text.pdf.PdfEncryption: byte[] createDocumentId()>
		SHA-256: 377e6493d8ccc0dfe66339f0855347d94e9218e473fd5d6f3f1c9965baad4049
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <dh.a: byte[] c(int)>
		SHA-256: 3f9570337427c4ff382d32ccf2c284d194ff5cc40f221f71ec30a5abd12f8100
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <z4.b: void <clinit>()>
		SHA-256: c1581d309c4d0eec3ba8c5c38505192fccaa3cb44665a4bc2f05b11141ea7416
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r2)
		Method: <wg.e: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.X509Certificate,boolean)>
		SHA-256: 77eb0b8147334d679434a80fa3cacbee2416aa832757e4321b68eb778e408d8
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <we.j: we.j b(java.lang.String)>
		SHA-256: eb0664c0d19c2b9bb08672e9df79a521af2fcfbea5c0b58bf8a4cd898efe8953
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r2, $r3)
		Method: <ch.qos.logback.core.net.ssl.SSLContextFactoryBean: javax.net.ssl.SSLContext createContext(ch.qos.logback.core.spi.ContextAware)>
		SHA-256: 9cf5b9eb0d00e4ce6f1071ec47de6112d134fc8f8819401c38af69fb0d85bbf9
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.AlgorithmParameterGenerator
		Statement: $r3 = staticinvoke <java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameterGenerator getInstance(java.lang.String)>(varReplacer93965)
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>
		SHA-256: a64886d2c5690ed11be79810fa89f13e414786fb7b8099738e4f823dc67e7ac4
		Secure: false

Findings in Java Class: com.google.android.vending.licensing.a

	 in Method: void <init>(byte[],java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a7be3036337c6145ee8d102df8e20518e125e779f790e7377251fac878050a20)
			Third parameter (with value 1024)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r1, varReplacer36057, varReplacer36058)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a7be3036337c6145ee8d102df8e20518e125e779f790e7377251fac878050a20)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r8 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r8 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a7be3036337c6145ee8d102df8e20518e125e779f790e7377251fac878050a20)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r1, varReplacer36057, varReplacer36058)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a7be3036337c6145ee8d102df8e20518e125e779f790e7377251fac878050a20)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r1, varReplacer36057, varReplacer36058)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #a91da29b9491d546108566d15fbf070a353d242fa608bf58b22cedebbe89808c)
			First parameter (with value "PBEWITHSHAAND256BITAES-CBC-BC") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer36064)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer36060)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r1, varReplacer36057, varReplacer36058)


Findings in Java Class: ah.f0

	 in Method: void d(java.io.File,a3.a,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #ab949565efc9144ba6c0f5d405adb093dc527b61d9e22a774744a0e252c0f725)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: specialinvoke $r23.<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream)>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r13.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer39657, $r12, $r21)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r13.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer39657, $r12, $r21)


Findings in Java Class: okhttp3.internal.platform.c

	 in Method: javax.net.ssl.SSLSocketFactory m(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer53271, $r6, varReplacer53271)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer53271, $r6, varReplacer53271)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer53271, $r6, varReplacer53271)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #b93ebda209399eebef5691d5956d0ff6b6f4d8084397b3713e86626c0c8fc784)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer53273, $r2)


	 in Method: javax.net.ssl.SSLContext l()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #81fbd44577a4523b53515b7abd1b0d63a68e4ea6b4df524ca0b91ec4348e4b56)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer64487, $r2)


	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer53264)


Findings in Java Class: ah.e0

	 in Method: java.lang.String z(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6039dee8d278ab13acf683a51c09d332bd2f1e72bcb3c92c1d421ce664e7ef5a)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer61553)


Findings in Java Class: okhttp3.internal.platform.f

	 in Method: javax.net.ssl.SSLContext l()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #887293b0dd57f9030bda72260c093f385ecd549386c326ea232a0f65f8a95181)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer64481)


	 in Method: javax.net.ssl.SSLSocketFactory m(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer53268, $r10, varReplacer53268)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer53268, $r10, varReplacer53268)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer53268, $r10, varReplacer53268)


	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer53249)


Findings in Java Class: okhttp3.internal.platform.b

	 in Method: javax.net.ssl.SSLContext l()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #43de6fcda0de85cd22ee02d849470d929a75af1198a44d671766308961618808)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer64484, $r2)


	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer53259)


Findings in Java Class: org.totschnig.myexpenses.sync.g

	 in Method: void <init>(android.content.Context,android.accounts.Account,android.accounts.AccountManager)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #f874c24fba79c41e96dd7f58dc44e5eaf63e835b28487177143fd22e6a777ed5)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r15 = virtualinvoke $r11.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r12)


	 in Method: r4.f X(at.bitfire.dav4android.LockableDavResource)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #b66528313faf236e35e0fc5b7e2679b595d2f641c53261c24f19fac11f57f54a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $r5 = virtualinvoke r0.<org.totschnig.myexpenses.sync.a: r4.f s(java.io.InputStream)>($r4)


Findings in Java Class: org.totschnig.myexpenses.sync.a

	 in Method: void E()
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer65252, $r6, $r7)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #e200a397a45c62a3314d49864adc5462e88cbb6c4a52e113721e4a881c4ee6a6)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer65252, $r6, $r7)


	 in Method: java.lang.String r(java.lang.String)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #74429de695d3f0642e97fa97b85593c1b287a5537fddfe4d37876e9be26e4880)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer65265, $r7, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer65265, $r7, $r8)


	 in Method: r4.f s(java.io.InputStream)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #b66528313faf236e35e0fc5b7e2679b595d2f641c53261c24f19fac11f57f54a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r1)


Findings in Java Class: xg.k

	 in Method: java.lang.Object doInBackground(java.lang.Object[])
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #b66528313faf236e35e0fc5b7e2679b595d2f641c53261c24f19fac11f57f54a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: virtualinvoke $r19.<java.io.PushbackInputStream: void close()>()


Findings in Java Class: ug.d

	 in Method: java.lang.Object a(java.lang.Object)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #b66528313faf236e35e0fc5b7e2679b595d2f641c53261c24f19fac11f57f54a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $r7 = virtualinvoke $r3.<org.totschnig.myexpenses.sync.a: r4.f s(java.io.InputStream)>($r6)


Findings in Java Class: ch.qos.logback.core.net.ssl.SSLContextFactoryBean

	 in Method: javax.net.ssl.SSLContext createContext(ch.qos.logback.core.spi.ContextAware)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #4b05176adcdb6f967be8edbc09fc31fe3f31b7181b4796854b2c6a6af100f28a)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r2)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, $r8, $r9)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #9cf5b9eb0d00e4ce6f1071ec47de6112d134fc8f8819401c38af69fb0d85bbf9)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r2, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, $r8, $r9)


	 in Method: javax.net.ssl.KeyManager[] createKeyManagers(ch.qos.logback.core.spi.ContextAware)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #30edab73955c2263230cbd001405e70b03537d5a4b7833147407b6019b107734)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r8.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r3, $r9)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #30edab73955c2263230cbd001405e70b03537d5a4b7833147407b6019b107734)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r8.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r3, $r9)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r8.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r3, $r9)


	 in Method: javax.net.ssl.TrustManager[] createTrustManagers(ch.qos.logback.core.spi.ContextAware)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r8.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r3)


Findings in Java Class: z4.b

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #db5d142c0b91e5b9cfde13b75890ec9003cd2e11351a93e499bf26ae3f20e50d)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer72844)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer72840, $r8, varReplacer72840)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r7.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r3)

		ConstraintError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #a1e05d46e500b660c25db7b3a7ec02b66eb932c25e9fcdf0db854bb9ce94cc35)
			First parameter (with value "X509") should be any of {PKIX, SunX509}
			at statement: $r7 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer72835)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer72840, $r8, varReplacer72840)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #c1581d309c4d0eec3ba8c5c38505192fccaa3cb44665a4bc2f05b11141ea7416)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer72853, $r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer72840, $r8, varReplacer72840)


	 in Method: java.util.List b(java.security.cert.CertificateFactory,java.io.InputStream)
		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #e24b15add42b26eec282b49c51e9a7ba314697150111e7ccf7f75898674c4b2c)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r7 = virtualinvoke $r4.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r3)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #e24b15add42b26eec282b49c51e9a7ba314697150111e7ccf7f75898674c4b2c)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r7 = virtualinvoke $r4.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r3)


	 in Method: void c(java.security.KeyStore,java.io.InputStream)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #e24b15add42b26eec282b49c51e9a7ba314697150111e7ccf7f75898674c4b2c)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r3 = staticinvoke <z4.b: java.util.List b(java.security.cert.CertificateFactory,java.io.InputStream)>($r2, $r1)


Findings in Java Class: wg.e

	 in Method: void <init>(java.lang.String,java.lang.String,java.lang.String,java.security.cert.X509Certificate,boolean)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer73226, $r22, varReplacer73226)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer73226, $r22, varReplacer73226)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #5cb777d20db4ebd183077dfa2fe9b64a484591a785e95eb6cf7305a4748f6e4e)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r21 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer73224)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer73226, $r22, varReplacer73226)

		TypestateError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #77eb0b8147334d679434a80fa3cacbee2416aa832757e4321b68eb778e408d8)
			Unexpected call to method getTrustManagers on object of type javax.net.ssl.TrustManagerFactory.
			at statement: $r18 = virtualinvoke $r16.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()

		TypestateError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #77eb0b8147334d679434a80fa3cacbee2416aa832757e4321b68eb778e408d8)
			Unexpected call to method getTrustManagers on object of type javax.net.ssl.TrustManagerFactory.
			at statement: $r18 = virtualinvoke $r16.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()

		TypestateError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #77eb0b8147334d679434a80fa3cacbee2416aa832757e4321b68eb778e408d8)
			Unexpected call to method getTrustManagers on object of type javax.net.ssl.TrustManagerFactory.
			at statement: $r18 = virtualinvoke $r16.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()


Findings in Java Class: we.j

	 in Method: we.j b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #eb0664c0d19c2b9bb08672e9df79a521af2fcfbea5c0b58bf8a4cd898efe8953)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


Findings in Java Class: we.y

	 in Method: we.j b(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #aba9ed1bd5c38959be713fe911fb0009e9fb00dd01a3b4cae75692ad64edf22d)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #aba9ed1bd5c38959be713fe911fb0009e9fb00dd01a3b4cae75692ad64edf22d)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: ie.d$b

	 in Method: java.util.List a(we.i)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #bf62ed707707c4b4ae5dd1bbc77b69f901b6e448bbd1786f043e8a6110c263db)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer82705)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #bf62ed707707c4b4ae5dd1bbc77b69f901b6e448bbd1786f043e8a6110c263db)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r10 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r9)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #bf62ed707707c4b4ae5dd1bbc77b69f901b6e448bbd1786f043e8a6110c263db)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r10 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r9)


Findings in Java Class: ch.qos.logback.core.net.ssl.KeyStoreFactoryBean

	 in Method: java.security.KeyStore createKeyStore()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #d64fffa36848d17aa1386d7b9bc92253b77e46478f803ffb96beb8c564c1d027)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r8.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r7, $r9)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #d64fffa36848d17aa1386d7b9bc92253b77e46478f803ffb96beb8c564c1d027)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r8.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r7, $r9)


Findings in Java Class: dh.a

	 in Method: java.io.InputStream b(java.io.InputStream,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer82936, $r5, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer82936, $r5, $r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #7d9922ee58d313488640aa258b92e5718f6212a0ff9efa3c1205b5bc29bca995)
			Operation on object of type dh.a$a object not completed. Expected call to read
			at statement: $r12 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10)


	 in Method: java.io.InputStream a(java.io.InputStream,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer65304, $r6, $r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer65304, $r6, $r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


	 in Method: javax.crypto.SecretKey d(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer39887)


Findings in Java Class: com.itextpdf.text.pdf.PdfEncryption

	 in Method: byte[] createDocumentId()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #67f9e2ec00737b282e3001c89ce540e8996a031b1b1b463a8ec92964193fe2b4)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer89810)


	 in Method: com.itextpdf.text.pdf.PdfDictionary getEncryptionDictionary()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2fade61a0719767be33104a249f7407a15fcb9ce92fb8c5e2926489cb2d1e14)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer91429)


Findings in Java Class: com.itextpdf.text.pdf.PdfPublicKeySecurityHandler

	 in Method: org.bouncycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(varReplacer93960, $r8, $r4)

		TypestateError violating CrySL rule for java.security.AlgorithmParameterGenerator (on Object #a64886d2c5690ed11be79810fa89f13e414786fb7b8099738e4f823dc67e7ac4)
			Unexpected call to method generateParameters on object of type java.security.AlgorithmParameterGenerator. Expect a call to one of the following methods init
			at statement: $r4 = virtualinvoke $r3.<java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameters generateParameters()>()

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f0f74ff8ee0f4b87b51b012ca39bc1750f57232b2c11ffda4ed921425d4c32ab)
			First parameter (with value "1.2.840.113549.3.2") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer93964)

		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #3306243e48190b6cfe89ff00983ab4486b034fa259fdad1e6d30f1b66e00a485)
			First parameter (with value "1.2.840.113549.3.2") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: $r7 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer93961)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedAlg
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(varReplacer93960, $r8, $r4)

		ConstraintError violating CrySL rule for java.security.AlgorithmParameterGenerator (on Object #a64886d2c5690ed11be79810fa89f13e414786fb7b8099738e4f823dc67e7ac4)
			First parameter (with value "1.2.840.113549.3.2") should be any of {DH, DiffieHellman, DSA}
			at statement: $r3 = staticinvoke <java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameterGenerator getInstance(java.lang.String)>(varReplacer93965)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f0f74ff8ee0f4b87b51b012ca39bc1750f57232b2c11ffda4ed921425d4c32ab)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


	 in Method: org.bouncycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #af72fead94b2d64f11398cab2fcf81db6e23b7696111bef982499a268966c807)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r15.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)


Findings in Java Class: com.itextpdf.text.pdf.PdfSmartCopy$ByteStore

	 in Method: void <init>(com.itextpdf.text.pdf.PRStream,java.util.HashMap)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #73592c3bf3e56debccb5d85304a8d5ba24b6d8c0187b6c67852d1d5cd9bc2ad0)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer94592)


	 in Method: void <init>(com.itextpdf.text.pdf.PdfDictionary,java.util.HashMap)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #69b2b5b8e92ae3c256d831068e0b55e0fe7c44c9ce396b0938417c1d3ac0abc7)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer94596)


Findings in Java Class: com.itextpdf.text.pdf.PdfSmartCopy

	 in Method: com.itextpdf.text.pdf.PdfIndirectReference copyIndirect(com.itextpdf.text.pdf.PRIndirectReference)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #73592c3bf3e56debccb5d85304a8d5ba24b6d8c0187b6c67852d1d5cd9bc2ad0)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = null

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #69b2b5b8e92ae3c256d831068e0b55e0fe7c44c9ce396b0938417c1d3ac0abc7)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = null

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #73592c3bf3e56debccb5d85304a8d5ba24b6d8c0187b6c67852d1d5cd9bc2ad0)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #73592c3bf3e56debccb5d85304a8d5ba24b6d8c0187b6c67852d1d5cd9bc2ad0)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #69b2b5b8e92ae3c256d831068e0b55e0fe7c44c9ce396b0938417c1d3ac0abc7)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #69b2b5b8e92ae3c256d831068e0b55e0fe7c44c9ce396b0938417c1d3ac0abc7)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #73592c3bf3e56debccb5d85304a8d5ba24b6d8c0187b6c67852d1d5cd9bc2ad0)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r11)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #69b2b5b8e92ae3c256d831068e0b55e0fe7c44c9ce396b0938417c1d3ac0abc7)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r11)


Findings in Java Class: okhttp3.internal.platform.e

	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer53253)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 89

	CryptoAnalysis found the following violations. For details see description above.
	NeverTypeOfError: 3
	HardCodedError: 4
	IncompleteOperationError: 20
	ConstraintError: 21
	RequiredPredicateError: 40
	TypestateError: 11
=====================================================================
