0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: varReplacer11237
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer11237)
		Method: <com.inputstick.api.PacketManager: void sendPacket(com.inputstick.api.Packet,boolean)>
		SHA-256: 2c9917762868a2bd41e01a8f1db9483d4c7a898e3a346a507489c74f4853ab32
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.inputstick.api.Util: byte[] getPasswordBytes(java.lang.String)>
		SHA-256: cd4a863ea293531b1bad5b5fa49c5690ba558c8939a50207086178e6840651fa
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.inputstick.api.AES: byte[] init(byte[])>
		SHA-256: 461258b416cbf029b42a718b479bf3494604fa923c846ad6cb0e6f818c8de642
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer11237)
		Method: <com.inputstick.api.PacketManager: void sendPacket(com.inputstick.api.Packet,boolean)>
		SHA-256: 8eb251b849ff470b2e2343df756f27f935acb42fceddd6fa389d50f6e225cd0c
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer17407)
		Method: <com.inputstick.api.AES: byte[] init(byte[])>
		SHA-256: 741a12957d66d599a1adac44dbbe6c7b2683a57e7e99b3a4d71648e67e1ea199
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer17406)
		Method: <com.inputstick.api.AES: byte[] init(byte[])>
		SHA-256: 769064cbd47a0bd8f349219fc8ba7ae43f4bc9b94ab919e02475753c61bd82ac
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Mac
		Statement: $r9 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer11240)
		Method: <com.inputstick.api.PacketManager: void sendPacket(com.inputstick.api.Packet,boolean)>
		SHA-256: 9409ff8d9214687f87d2bc170623e9216fedae76efe14750fd7c28c41d5e722e
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r9.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <com.inputstick.api.PacketManager: void sendPacket(com.inputstick.api.Packet,boolean)>
		SHA-256: 2f8db117f6a0b993768cbf7b5ed20ba3a29d76699ce25e5d556448d5ed332fd0
		Secure: false
	Object:
		Variable: varReplacer17401
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer17401)
		Method: <com.inputstick.api.AES: byte[] init(byte[])>
		SHA-256: b12202f812b955efcdbecbfba535f8017bddde747a70ae86e5945c0295e73dd8
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer17401)
		Method: <com.inputstick.api.AES: byte[] init(byte[])>
		SHA-256: 2e3d64c8e6543659f5f7aa3dfa5b8c5a763d5209898e9d1373309283ceff3e92
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16590)
		Method: <com.inputstick.api.Util: byte[] getPasswordBytes(java.lang.String)>
		SHA-256: b8667e31adcc4d85a5a8a387d8da080cf13d74bf0e30fae5eeba4e2b26ea7add
		Secure: false

Findings in Java Class: com.inputstick.api.Util

	 in Method: byte[] getPasswordBytes(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b8667e31adcc4d85a5a8a387d8da080cf13d74bf0e30fae5eeba4e2b26ea7add)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16590)


Findings in Java Class: com.inputstick.api.AES

	 in Method: byte[] init(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer17404, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer17403, $r4, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #769064cbd47a0bd8f349219fc8ba7ae43f4bc9b94ab919e02475753c61bd82ac)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer17406)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer17401)


Findings in Java Class: com.inputstick.api.PacketManager

	 in Method: void sendPacket(com.inputstick.api.Packet,boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer11237)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r9.<javax.crypto.Mac: void init(java.security.Key)>($r10)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 11

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 2
	RequiredPredicateError: 6
=====================================================================
