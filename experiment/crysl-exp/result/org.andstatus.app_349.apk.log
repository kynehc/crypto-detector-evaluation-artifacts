0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer54466)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: java.security.MessageDigest getMD5()>
		SHA-256: 58698b71d11b89896d73a0100c0fdfdc508aa0352ae985c9a2dec0d67e6c897c
		Secure: false
	Object:
		Variable: varReplacer53871
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer53871)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: d7c0cf682cb7dc4bb307e085f2102c232c0da8d6021d6765b535be25332c7ff6
		Secure: false
	Object:
		Variable: varReplacer49059
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer49059)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: a1425c4f94d8a33c92dc0d0ba7557e7e5d6323aceb0832363a42fd228001bcb9
		Secure: false
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer49680)
		Method: <cz.msebera.android.httpclient.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: 33e1322b45b0d981e5c0592f7a2c6491c81cf1be904275463fd8f9b16130e56b
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer53871)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 65dd2db4e4ebd7281be0e552a88d4ddefbe7441e9f09a7811c26de335dabd7b0
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: $r3 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer48324)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: void <clinit>()>
		SHA-256: c476e2d929073dd95900f373af01b8a869b0ff8a42d33428cbf6a3691a057d87
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: a96b5c4940720f614ff024bce557b32cb3bf119f3666a750be2184fd24f8a784
		Secure: false
	Object:
		Variable: $r25
		Type: byte[]
		Statement: $r25 = virtualinvoke $r26.<java.security.MessageDigest: byte[] digest(byte[])>($r25)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: cz.msebera.android.httpclient.Header createDigestHeader(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest)>
		SHA-256: dd13aee1a07faf17ccea55e9866fe64711886f8c272a9595a3201c43b0cc367b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer53872)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 29f4180b8e11b847fb0a0fd249b1110324c514ed25e4966493310212d7d15f4b
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r7.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5)
		Method: <oauth.signpost.signature.HmacSha256MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 8daa49230f4aa8e4d06b164bf789a3f1e7958d174ce14dde933a66c5b0ddc6e6
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 51809b40f955da1fb4b3dcfeefebf59f1dd607b449e09656926351c68b1d5de6
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: 546f5c2feae1941a82ed37877b403786fc60baf35924483ea8c4c989a2733b1c
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>
		SHA-256: 87142a8c4369ab14d23fa8690b807f0d900b1807831c8c0f8e6b4de4b8735e3b
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r7.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: bece1140c0577cf6f297d91e1b0ca43d0606b323d3d9a50af430d2391ba581cd
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer54089)
		Method: <cz.msebera.android.httpclient.impl.client.cache.BasicIdGenerator: void <init>()>
		SHA-256: 818b946a319459281217654c696b4fe3006c755ec4ca1f433f5ffce3ad3f88be
		Secure: true
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer21495)
		Method: <cz.msebera.android.httpclient.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: 38cf42aa0c293e10299b129fa0dc8152b6a248379cc594e9e0e840e306c65a0c
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer54490)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 7d04591ed7625a5462f9973a93c12026fc3af2f431d2b107eb0afc76c105bb1c
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer54527)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: 493b5bf568b728a86d8c178c682e45d2282e4c364737cc77b08a0a9ccaf077d2
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: f6730166425cdde60c0ca0f7f01862a2b9705ad5b213be5cd1a19bc89976254d
		Secure: false
	Object:
		Variable: $r25
		Type: byte[]
		Statement: $r25 = virtualinvoke $r26.<java.security.MessageDigest: byte[] digest(byte[])>($r25)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: cz.msebera.android.httpclient.Header createDigestHeader(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest)>
		SHA-256: dd13aee1a07faf17ccea55e9866fe64711886f8c272a9595a3201c43b0cc367b
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer49059)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 83c23dce322c0b342a0ba5aba9d9ac5066d5ea7e26db268b3ed088aa7b4d7bb
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer54503)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 36a872934af60777467dc7384c0b96e888493fd5b4273df24319d29bf427ec73
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 8dda2f10cd4911a51ea6f84d756034bbd2b170b00e8eb73d84894dc35d4275e0
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Mac
		Statement: $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer49057)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 2ec37e9357e82a16321b470bfc4efb7445b545391cd80ad1879e9e0c38cc6591
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: 680c47ea8368fb5330a6512f392b4c24181a0f8e9f968ac96396d96fdc643e03
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>
		SHA-256: d5cf1f8de9a5f17cad5006e43f64e63b02f8f56706a9e139ea0baeb6f7532b60
		Secure: false
	Object:
		Variable: varReplacer54527
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer54527)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: b0f03de2b37d681e20696b1086bc00801c76e6674c82d8f0d1482f1b0adb94a5
		Secure: false
	Object:
		Variable: $r25
		Type: byte[]
		Statement: $r25 = virtualinvoke $r26.<java.security.MessageDigest: byte[] digest(byte[])>($r25)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: cz.msebera.android.httpclient.Header createDigestHeader(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest)>
		SHA-256: dd13aee1a07faf17ccea55e9866fe64711886f8c272a9595a3201c43b0cc367b
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: bbd35c0b9cc04d0eef73b2ad76dd3b0c8a90eec8bc1cf0e85b5f6d07c31b38bf
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer54471)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: d4f7f833d234c8f39545c375a2c509277fef0f8aa16a46234dff641a94cb0452
		Secure: true
	Object:
		Variable: $r25
		Type: byte[]
		Statement: $r25 = virtualinvoke $r16.<java.security.MessageDigest: byte[] digest(byte[])>($r25)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: cz.msebera.android.httpclient.Header createDigestHeader(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest)>
		SHA-256: d31cb1da4238d399e792baf5f0c51373a3386b1c91380ab2872c05d720f1ed9d
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer49064)
		Method: <oauth.signpost.signature.HmacSha256MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 16584d8edf0d506c73b061eeaa1ad1577688cb9b05283bff68da248609c002e5
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: 7f633aab27c580a5c0fc6c5d05050debe1a3f35a224ea39fdf4f1240ed29d56
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 3bcbf4d912455255294e9bee4d91f33f3fa55dd4a67dc970c48252366cf97c1f
		Secure: false
	Object:
		Variable: $r7
		Type: java.net.PasswordAuthentication
		Statement: specialinvoke $r7.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r4, $r8)
		Method: <cz.msebera.android.httpclient.impl.client.SystemDefaultCredentialsProvider: java.net.PasswordAuthentication getProxyCredentials(java.lang.String,cz.msebera.android.httpclient.auth.AuthScope)>
		SHA-256: 54269faa48899bf6e1a1c59e5fe7efd8baaaeb98c5de10c15ef29445a85aa752
		Secure: false
	Object:
		Variable: varReplacer49064
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer49064)
		Method: <oauth.signpost.signature.HmacSha256MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 7cd211be29e97565192d68c9a154446fdb596494ae0fc243bc68c5ab75cb7c7c
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <cz.msebera.android.httpclient.impl.auth.HttpEntityDigester: void close()>
		SHA-256: 6e2f49082bf8a753b36c08d597efa7282d12c9a9b9a86cb704dfeec77e918e7c
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Mac
		Statement: $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer49060)
		Method: <oauth.signpost.signature.HmacSha256MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 97b2dd2571eca04ca1e90c7c78386b9c94dd93d5d4ccab80fa439df42899f15
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer54545)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: 4563f8a48d3a7cdbaacfdeef92ffbef64f8d6935e6f2e4ca7283a8d978287bbb
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer55033)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: c64e027c3987b33efd5c1026cbef85b9aa7381fa0423487eb2f7606d54890941
		Secure: false

Findings in Java Class: cz.msebera.android.httpclient.conn.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createDefault()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer21492, varReplacer21492, varReplacer21492)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #38cf42aa0c293e10299b129fa0dc8152b6a248379cc594e9e0e840e306c65a0c)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer21495)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer21492, varReplacer21492, varReplacer21492)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer21492, varReplacer21492, varReplacer21492)


Findings in Java Class: cz.msebera.android.httpclient.impl.client.SystemDefaultCredentialsProvider

	 in Method: java.net.PasswordAuthentication getProxyCredentials(java.lang.String,cz.msebera.android.httpclient.auth.AuthScope)
		NeverTypeOfError violating CrySL rule for java.net.PasswordAuthentication (on Object #54269faa48899bf6e1a1c59e5fe7efd8baaaeb98c5de10c15ef29445a85aa752)
			Second parameter should never be of type java.lang.String.
			at statement: specialinvoke $r7.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r4, $r8)

		HardCodedError violating CrySL rule for java.net.PasswordAuthentication (on Object #54269faa48899bf6e1a1c59e5fe7efd8baaaeb98c5de10c15ef29445a85aa752)
			Second parameter should never be hardcoded.
			at statement: specialinvoke $r7.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r4, $r8)

		NeverTypeOfError violating CrySL rule for java.net.PasswordAuthentication (on Object #54269faa48899bf6e1a1c59e5fe7efd8baaaeb98c5de10c15ef29445a85aa752)
			Second parameter should never be of type java.lang.String.
			at statement: specialinvoke $r7.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r4, $r8)

		HardCodedError violating CrySL rule for java.net.PasswordAuthentication (on Object #54269faa48899bf6e1a1c59e5fe7efd8baaaeb98c5de10c15ef29445a85aa752)
			Second parameter should never be hardcoded.
			at statement: specialinvoke $r7.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r4, $r8)


Findings in Java Class: cz.msebera.android.httpclient.impl.auth.DigestScheme

	 in Method: java.security.MessageDigest createMessageDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #546f5c2feae1941a82ed37877b403786fc60baf35924483ea8c4c989a2733b1c)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


Findings in Java Class: cz.msebera.android.httpclient.impl.auth.HttpEntityDigester

	 in Method: void close()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #546f5c2feae1941a82ed37877b403786fc60baf35924483ea8c4c989a2733b1c)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: oauth.signpost.signature.HmacSha1MessageSigner

	 in Method: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer49059)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Mac: void init(java.security.Key)>($r6)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #2ec37e9357e82a16321b470bfc4efb7445b545391cd80ad1879e9e0c38cc6591)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer49057)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #83c23dce322c0b342a0ba5aba9d9ac5066d5ea7e26db268b3ed088aa7b4d7bb)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer49059)


Findings in Java Class: cz.msebera.android.httpclient.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createDefault()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer49677, varReplacer49677, varReplacer49677)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #33e1322b45b0d981e5c0592f7a2c6491c81cf1be904275463fd8f9b16130e56b)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer49680)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer49677, varReplacer49677, varReplacer49677)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer49677, varReplacer49677, varReplacer49677)


Findings in Java Class: cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl

	 in Method: byte[] RC4(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer53870, $r0)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #29f4180b8e11b847fb0a0fd249b1110324c514ed25e4966493310212d7d15f4b)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #65dd2db4e4ebd7281be0e552a88d4ddefbe7441e9f09a7811c26de335dabd7b0)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer53871)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #65dd2db4e4ebd7281be0e552a88d4ddefbe7441e9f09a7811c26de335dabd7b0)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer53871)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #65dd2db4e4ebd7281be0e552a88d4ddefbe7441e9f09a7811c26de335dabd7b0)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer53871)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer53871)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #65dd2db4e4ebd7281be0e552a88d4ddefbe7441e9f09a7811c26de335dabd7b0)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer53871)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #29f4180b8e11b847fb0a0fd249b1110324c514ed25e4966493310212d7d15f4b)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer53872)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #65dd2db4e4ebd7281be0e552a88d4ddefbe7441e9f09a7811c26de335dabd7b0)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer53871)


	 in Method: java.security.MessageDigest getMD5()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #58698b71d11b89896d73a0100c0fdfdc508aa0352ae985c9a2dec0d67e6c897c)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer54466)


	 in Method: java.security.Key createDESKey(byte[],int)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #493b5bf568b728a86d8c178c682e45d2282e4c364737cc77b08a0a9ccaf077d2)
			Second parameter (with value "DES") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer54527)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer54527)


	 in Method: byte[] lmResponse(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #4563f8a48d3a7cdbaacfdeef92ffbef64f8d6935e6f2e4ca7283a8d978287bbb)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer54545)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer54542, $r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #4563f8a48d3a7cdbaacfdeef92ffbef64f8d6935e6f2e4ca7283a8d978287bbb)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


	 in Method: byte[] lmHash(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer55034, $r6)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #c64e027c3987b33efd5c1026cbef85b9aa7381fa0423487eb2f7606d54890941)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c64e027c3987b33efd5c1026cbef85b9aa7381fa0423487eb2f7606d54890941)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer55033)


Findings in Java Class: cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$CipherGen

	 in Method: byte[] getLanManagerSessionKey()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #36a872934af60777467dc7384c0b96e888493fd5b4273df24319d29bf427ec73)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer54503)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer54492, $r4)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #36a872934af60777467dc7384c0b96e888493fd5b4273df24319d29bf427ec73)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #7d04591ed7625a5462f9973a93c12026fc3af2f431d2b107eb0afc76c105bb1c)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)


Findings in Java Class: oauth.signpost.signature.HmacSha256MessageSigner

	 in Method: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer49064)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Mac: void init(java.security.Key)>($r6)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 40

	CryptoAnalysis found the following violations. For details see description above.
	NeverTypeOfError: 6
	TypestateError: 6
	RequiredPredicateError: 16
	ConstraintError: 12
	HardCodedError: 2
=====================================================================
