0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Alive 18064  5000
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r11
		Type: java.security.Signature
		Statement: $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r5)
		Method: <d8.c: void b(java.security.PublicKey,byte[],byte[],java.lang.String)>
		SHA-256: 5615c6ee8e28b6a3d0622d6eef1e4829d85e5e6f4caa026ebbc8524ac6618e7
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <r5.n$g: java.security.Signature b(java.lang.String,java.security.Provider)>
		SHA-256: c3c8b58bd0c06dd2822ac7f2777f67c30145b0ba3007c11c951ab9f7f681329f
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <r5.n$g: java.security.Signature b(java.lang.String,java.security.Provider)>
		SHA-256: 6e3e76d119214c85475f8e8cd4def38bac6ee2f9b6695f57455012fb4539c51f
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer50110)
		Method: <n5.b: byte[] d(byte[],byte[])>
		SHA-256: bd42001ad57496740429ea3775ba7222481d30b9a6cdf5e1f184570eaf32c962
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <me.g: javax.net.ssl.X509TrustManager o()>
		SHA-256: d5902af5b12cbea8d29b04e4ea1cbe171ede53e2df358f38e0e53e0bb63d0f5c
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r5)
		Method: <rh.a: java.security.PublicKey b(vf.n0)>
		SHA-256: f967d943ac4923862d1da15460a3f56a430cbf74331094898eb4f3a02e4a52f7
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <a.p: void <init>()>
		SHA-256: 6c523a1f834d9b1057f9270b1f6fd86fb696083e15d2619f926c65b935d67087
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLImpl$3: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 97be8dab0496858e66e093fcd45a46436fbb0aea4da2b5c43d783b70ed2fc426
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer69733)
		Method: <r5.d: byte[] b(byte[],byte[])>
		SHA-256: a50666876246bfd8586b3d675d8620526ebd4cef9fe6fc0ed848d4c92f641ae1
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <z7.d$c: javax.net.ssl.SSLContext b()>
		SHA-256: e974e4f49c45d219787fd7a9392bbb70e96c7b5822da6ad271ce398fb558051c
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer50168, $r2, varReplacer50169, varReplacer50170)
		Method: <n5.b: byte[] c(byte[],byte[])>
		SHA-256: 507b8dce383de00b5bd692fda92d1983996473aa86d17165157417f5c7092a45
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: f325059ee6f08c9776202e677308b0f19ca0767a6821e36b4f64a531d072fa45
		Secure: false
	Object:
		Variable: varReplacer59082
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer59082)
		Method: <r5.d: byte[] a(byte[],byte[])>
		SHA-256: d7820094212f35a2b2ea8a2766305c8eec11b0e121d01bb23e2b76ff27323232
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.Signature
		Statement: $r1 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <bh.b: java.security.Signature createSignature(java.lang.String)>
		SHA-256: c90f367249ffb45fe0de2b458e3e051fcb5cd6e0ed522618c6747ed18f195a50
		Secure: false
	Object:
		Variable: $r15
		Type: byte[]
		Statement: $r15 = virtualinvoke $r14.<java.security.MessageDigest: byte[] digest()>()
		Method: <si.a: boolean match(java.security.cert.Certificate)>
		SHA-256: c0f2f44732f3fb54552e7f177c41a5decd62c48379b695231dfb7a14a50bbd57
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <r5.b: byte[] a(byte[],byte[])>
		SHA-256: ca733fbff339bede4703e56b81ed9174c168a0f859dae759148c367160322f13
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Key
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r1, varReplacer38251)
		Method: <n5.b: void <init>(java.lang.String,java.security.KeyStore)>
		SHA-256: 711f380d48c45c915950f114b3ecae1bf99bcaf340adf55429615eee66bf9230
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <me.h: javax.net.ssl.X509TrustManager o()>
		SHA-256: 89c519fb5c53040abfd451f8c76e1cb4b3d66a265ddb8a64853e6d503f2cb4b7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <me.g: javax.net.ssl.X509TrustManager o()>
		SHA-256: 26635e1f6e50977ea9036fab1d7ea4d8fc4844fa478d9179411a32fe3c0a34e7
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r2, $r1)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLImpl$2: java.security.Signature createSignature(java.lang.String)>
		SHA-256: bb3e4b3d0e509f0c0a3496d9de661c169fc3a1f90b1ad1ea71cf860bf05d0744
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer9379, varReplacer9380)
		Method: <r1.c: void b(android.security.keystore.KeyGenParameterSpec)>
		SHA-256: b823386eebd785982d627ef0058b85766712c975ea1c8b746c20b03b1f3eebd0
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <bh.e: java.security.Signature createSignature(java.lang.String)>
		SHA-256: e4f19227ca7cb8f7fd5504128bd11654ddea2aeceb9bdbe4c155de47f1fbff34
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.MessageDigest
		Statement: $r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r13, varReplacer46560)
		Method: <si.a: boolean match(java.security.cert.Certificate)>
		SHA-256: 1ecd3e9e7cf5c2b0cb487b09688d6b83d8d4e9e324f2a1fee80b3948326e8c29
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer38325, $r0, $i0, $i1)
		Method: <r5.c: java.security.spec.AlgorithmParameterSpec d(byte[],int,int)>
		SHA-256: e38990c54de7c45ad53a33275e355e9a2be8c7a66b791a662c13e05328d7fe68
		Secure: false
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <bh.e: java.security.KeyFactory h(java.lang.String)>
		SHA-256: 510e83df7d320745a282535540e450b4de125fc0bd47274d1458d50376d9d6f2
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLImpl$3: java.security.Signature createSignature(java.lang.String)>
		SHA-256: d16ebf62a60d8aa8f6194474fc6146539ac5c18bef47975ccaff739c39080269
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, varReplacer50166, $i0)
		Method: <n5.b: byte[] c(byte[],byte[])>
		SHA-256: f542e8013f5c354982366077da7ca692f90e90e7d36b8eb4ee66c4c3e0fcd4df
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl$1: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 699705b7782404721061643f7b5ab151bbfbf05df467e4b36c8c100dfb31d1aa
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: c908257ebef1e44e27421c3dc6127a4c79990e1515e273132ea2c2cb020fcdee
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLImpl$1: java.security.Signature createSignature(java.lang.String)>
		SHA-256: e6c86e62f2a45fdca03169241f9cc04a210ef3982aa5c101b35f406ee1a95576
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyPairGenerator
		Statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <r5.n$d: java.security.KeyPairGenerator b(java.lang.String,java.security.Provider)>
		SHA-256: aa25eebd36e3e6f0848caf059013d7ed6065ac9ce796403822833c0c16220c2e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.cert.CertificateFactory
		Statement: $r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>($r2)
		Method: <yf.b: java.security.cert.CertificateFactory a(java.lang.String)>
		SHA-256: cbd72781171cf1eeb08ffea452d6dcd823cb58b2fc0a062813ffdbce082255e4
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <a.j: void <init>()>
		SHA-256: 788d09e817e8dbf08722484c018a53c91c214d2e3ceb095959dbc446d5ab679f
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl: void checkSignature(java.security.PublicKey,java.security.Signature,ue.e,byte[])>
		SHA-256: 788b8478b625352bf27c9a03b606a5ee18217818d4b0493ecbf181e6cedb9711
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyPairGenerator
		Statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r2)
		Method: <r5.n$d: java.security.KeyPairGenerator b(java.lang.String,java.security.Provider)>
		SHA-256: a872783c81ac110ccde3e9a7ac7046137ca4e2123dc86b9ff56f511ad16d448b
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>
		SHA-256: cebe45f59ca6821eb5e75723e2592c61a7970e6687e96537a7fa5d2712864b7
		Secure: false
	Object:
		Variable: varReplacer77817
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer77817)
		Method: <r5.b: void <init>(byte[],int)>
		SHA-256: a62a2ca95a0de6e45675092b9c7e61153509baca49b817af6185602810a4e07
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r13.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r9, $r12, $r4, $i1)
		Method: <org.conscrypt.OpenSSLECGroupContext: java.security.spec.ECParameterSpec getECParameterSpec()>
		SHA-256: 7223ae8f08ed0dba3dafb06f8e07e30310aca7c9be856d88494b5d1bd531fdf8
		Secure: true
	Object:
		Variable: r0
		Type: ah.b
		Statement: specialinvoke r0.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r1, $r3, $i1)
		Method: <ah.b: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int,int)>
		SHA-256: 13cb92f8285da543dd20c781c50e9376afaca46dfb4be1140585309c51de4eaa
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r5)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void verify(java.security.PublicKey)>
		SHA-256: 112e0b98b9789074d4ec3ee999f422c7c115607a7d5cddcfc5fefe2723a7aec7
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.l: java.security.SecureRandom b()>
		SHA-256: bd1acb0fe69876b61e22ea4ebec605423032a85ee04549a857c253088d7524c9
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <me.c: javax.net.ssl.X509TrustManager o()>
		SHA-256: 5b3ac97e809537d5c0508fcc4ad2f3a133ee2cbf70757bb86fa788a0dc8ad012
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer77817)
		Method: <r5.b: void <init>(byte[],int)>
		SHA-256: 609d6a4f2f045dea5d03befd715407dbeb9c1df3c3f7b2f9a3b2ad510472e0f3
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <r5.s: void <init>(java.lang.String,java.security.Key)>
		SHA-256: 1cb70da8115704aa4474389eb80f41505cf60bf238f39e4f0fc3d500568d5220
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <r5.a: void c(byte[],int,int,byte[],int,byte[],boolean)>
		SHA-256: 2e0d879cd6fa651bddf222dcd69161229ac1642012b9372a1361c3b7ad1efe60
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <me.d: javax.net.ssl.X509TrustManager o()>
		SHA-256: a34ad8d86b652fa71a1784d9f182aa64a3c216ee8de503c46a73dc51f3087c3b
		Secure: false
	Object:
		Variable: varReplacer77835
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer77835)
		Method: <r5.r: void <init>(byte[])>
		SHA-256: 767ebbfcaeb153f61ff9905b6fc507127ae1837eaa0f1993a5e32934fd5ee88a
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer64420, $r2)
		Method: <me.c: javax.net.ssl.SSLContext m()>
		SHA-256: 2215773f02c3b48e0dbf3aea78654d95901d7d968bd0ba0d562eaafb1bf04f9b
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)
		Method: <bh.b: java.security.KeyFactory h(java.lang.String)>
		SHA-256: a6126cde5bad8eddc01ed7fa9efba4aaff82669a5ce5a68a3e497a06090cb424
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>
		SHA-256: 55c0ef59d2e8f2d9e7c3b9d886f8a0561a8e9e82e242551a90594b801b63073c
		Secure: false
	Object:
		Variable: $r21
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r21.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r14, $r15, varReplacer62607)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(wf.g,hh.e)>
		SHA-256: ec4a9b1306e338875ed313032f1fd3e9d9a1d8b358b0e8e1b9506651a61983d2
		Secure: true
	Object:
		Variable: $r8
		Type: java.lang.String
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r8)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: fb24971f565cb4681c3c1e192adc31a35b4a987353817f6def6d3d265ac75389
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <r5.n$c: java.security.KeyFactory b(java.lang.String,java.security.Provider)>
		SHA-256: c8e640420798ac6b5a636edae322de4e2b39171a839db3bd3f98c506ada70465
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer9410, varReplacer9411)
		Method: <n5.c: void d(java.lang.String)>
		SHA-256: 31ef49b5bd55b7c4fab9b2f8dce24ccaee395867def05f131f6bc6d210f5ea44
		Secure: true
	Object:
		Variable: r0
		Type: fh.d
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r2, $r3, $r4, $i0)
		Method: <fh.d: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>
		SHA-256: 7e9b05a9fade4d91041d4f4e2c7f0ba14fb1f3e9dccbc5e7eae98ca435376130
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer77821)
		Method: <r5.a: void <init>(byte[],int)>
		SHA-256: dad6aef5d684a552c6a6fd1234564ab21eb7ce0d4c7cd61ac4a7f8f10b499e05
		Secure: false
	Object:
		Variable: varReplacer77821
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer77821)
		Method: <r5.a: void <init>(byte[],int)>
		SHA-256: 646c985d4ca8cbd07a4fd2c4097f500f6d713e6046cd4dc544064094e72199d8
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $z0 = virtualinvoke $r8.<java.security.Signature: boolean verify(byte[])>($r2)
		Method: <a.v: boolean l(a.d,byte[],byte[],a.s)>
		SHA-256: bac573185a0004f6ac238fc00a35c4cd7d95ec615a844ec8b9990427625c3ff5
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer64418, $r2)
		Method: <me.d: javax.net.ssl.SSLContext m()>
		SHA-256: f6392f28589135e87fe5e2f195772a9557d89c86aaa6db3c0139874abb1fe7cd
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Key
		Statement: $r4 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <r5.s: void <init>(java.lang.String,java.security.Key)>
		SHA-256: db778a469e2c07f24e236048c94cce0f49a830493d28131e489abad4295415b3
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.Signature
		Statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)
		Method: <a.v: boolean l(a.d,byte[],byte[],a.s)>
		SHA-256: 36a0613a82f80bafb674b3128889ee6d9b14ef72136ed597f9b397713ba24f02
		Secure: false
	Object:
		Variable: varReplacer69221
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer69221)
		Method: <o5.b$a: j5.o c(q5.v)>
		SHA-256: 812952ee1081ceb4e706706b1685efc19939cbb508050c167f16b80b42a5cfe9
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer50165)
		Method: <n5.b: byte[] c(byte[],byte[])>
		SHA-256: d17df1a64cb1b5df1414e0e333a54b53fe624cc09294a2e405f98a0e19a59fc8
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)
		Method: <r5.n$c: java.security.KeyFactory b(java.lang.String,java.security.Provider)>
		SHA-256: c0bddca5bf633d1f81e928df450e02ed20a090aeb1b25d14ef0004fdc8365091
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer77824)
		Method: <l5.a: void <init>(byte[])>
		SHA-256: 7704ef1c1cf8e1f4a8ff3429e6a4b0eaf677939c4924c4128c955f09edda19ee
		Secure: false
	Object:
		Variable: varReplacer69733
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer69733)
		Method: <r5.d: byte[] b(byte[],byte[])>
		SHA-256: 74498fdef61299af6557bc94a9abf1cf05367713b51a5486a9a3682c806bc460
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <r5.n$e: javax.crypto.Mac b(java.lang.String,java.security.Provider)>
		SHA-256: 5e63281c2320d85f4de881e5b70505a7c19ee71fcd55f00acda0fce9b71931c2
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <me.h: javax.net.ssl.X509TrustManager o()>
		SHA-256: e96f48aec6cc97f7532bcbe531c167aa82c80310434b106dfa2f0748e41ce496
		Secure: false
	Object:
		Variable: $r21
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r21.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r14, $r15, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(wf.g,hh.e)>
		SHA-256: 49063db5056501dc5b91a4e377b49a58eeeabe81598cccd9ccf90a92bea4339c
		Secure: true
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r8.<java.security.Signature: boolean verify(byte[])>($r2)
		Method: <a.v: boolean l(a.d,byte[],byte[],a.s)>
		SHA-256: b16711e43886866e3b413e4f3034c896d39e068cfed7daeffbb48a9f5a71fcd6
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLImpl$2: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 79c336de81c921f1ea057560928e61c40104b4c1212f5587a8a0631ff36224ca
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <me.d: javax.net.ssl.X509TrustManager o()>
		SHA-256: ab810cd89b3cbafbfe53daa64cb3badf928278ee6192424597b551bb74325b46
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyFactory
		Statement: $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)
		Method: <bh.b: java.security.KeyFactory h(java.lang.String)>
		SHA-256: b73ab20083a2f41976d85947ef0515cc44276280ea0a3489b977083b09822ce1
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: a9c19b12994234db6ec00ed5b541d5738b556e23d3870b731ea4245dbf932de7
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer43563)
		Method: <r1.b: boolean b()>
		SHA-256: 2a90742aefaba62d0acf73f9b19d560252db9b25a081e2b56ae990559582a99
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r1, $i1, $i0)
		Method: <l5.a: java.security.spec.AlgorithmParameterSpec d(byte[],int,int)>
		SHA-256: 346e937d838addea51e59f6ad9fa65bf80eafe964ad5b5841121109290142690
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r5, varReplacer58551)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void verify(java.security.PublicKey)>
		SHA-256: f66e883dd398d6b33d82f3546795f5e42faf6e77494b3a53c6f4c22f73449e47
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.Signature
		Statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r6, $r5)
		Method: <a.v: boolean l(a.d,byte[],byte[],a.s)>
		SHA-256: d6cf83b7fb854702d3f66a6bf0fdd1f467aa86c2d37dc841ec4f1be464b25093
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer22148)
		Method: <n5.c: boolean e(java.lang.String)>
		SHA-256: e8bd4eb696cea8438773b50675b5597290fc7eda89ba100a559935c2d9c15f3c
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl$3: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 3d7e5a90b7faeaf46d7a1c79a9933f96b4f03e47a1f3f9eb05e4fc884d6a5f72
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r11.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <d8.c: void b(java.security.PublicKey,byte[],byte[],java.lang.String)>
		SHA-256: f86f8694db9e7b468c41a9952e61a3c5bd4aee3b935c698b6707b1f83d3f4bfb
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <se.h: se.h i(java.lang.String)>
		SHA-256: 887713d3ed6050e63f8f3d0ee6ec299b5249378623d00f497336f3e934a65e23
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.AlgorithmParameters
		Statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r4)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil: void setSignatureParameters(java.security.Signature,ue.e)>
		SHA-256: 5542b69dc5336cc3d00547288fa7f3d8d3237d121f2ce57576e26391c36e1a8d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13791)
		Method: <r8.e: byte[] b(byte[])>
		SHA-256: 1ceb2bdee7bf8ffd2b370a0a7f11ac766c023a214ad42643055eb5b776f0eeab
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <se.z: se.h i(java.lang.String)>
		SHA-256: 6059a5f612b79cadaa5de72561cd07fccbb653a53d971993d9e77f2dfdac1f00
		Secure: false
	Object:
		Variable: varReplacer77816
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer77816)
		Method: <r5.c: void <init>(byte[])>
		SHA-256: efd94cef817746f65746c994727a4297f342271c12ec6af398181f77541b8dd
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer77835)
		Method: <r5.r: void <init>(byte[])>
		SHA-256: da15a3210a4d01d1d99c56ffa438fbe0b650182b1b0eb14ce2cf19f6bcd5d118
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <bh.e: java.security.KeyFactory h(java.lang.String)>
		SHA-256: 903d3c945572a824ba9aece5369a3e9c7bf7f60d3ab2a5cf19fc034ceaee3cb4
		Secure: false
	Object:
		Variable: r0
		Type: si.d
		Statement: specialinvoke r0.<java.security.cert.PKIXParameters: void <init>(java.util.Set)>($r1)
		Method: <si.d: void <init>(java.util.Set)>
		SHA-256: 8b044c7ddfa38b54fe0419cbf70fda89c13a9e09555c14783d692708df5e9613
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <r5.n$a: javax.crypto.Cipher b(java.lang.String,java.security.Provider)>
		SHA-256: 7881f0542993b41d3a7fd035a12aae6966d34b4f9cf034d5ce7781f59a9ac110
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <se.z: se.h i(java.lang.String)>
		SHA-256: da5337c458d9e5c9d70c34057ad0e39760f781cfcf3dc3c40b586d44537bc52
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <r5.n$a: javax.crypto.Cipher b(java.lang.String,java.security.Provider)>
		SHA-256: ac24a291e724759b44b81ec8cd2a3b0b75f14780376e606b15b222f16e1a34a0
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.JCEElGamalPublicKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: 2f96be90287037dd5aa521a81412c6567fe97ad3bdc0a3e0dd37cb2855cfb876
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.KeyAgreement
		Statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)
		Method: <r5.n$b: javax.crypto.KeyAgreement b(java.lang.String,java.security.Provider)>
		SHA-256: 6dfb691e1ec48df702b055b8aaf957e2c5d918a43eac1f508c23de630dae2a56
		Secure: false
	Object:
		Variable: $r27
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r27.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r6, $r15)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(vf.n0)>
		SHA-256: 17ea506228f5dc57471137e0b695352a3774e9c7e597031eeeb9157ef0e2b937
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: e75571d33abb1b5e330ac5b78fcc009ac5fa3b4053acda20dad8234c0598d879
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer59082)
		Method: <r5.d: byte[] a(byte[],byte[])>
		SHA-256: 73a92b712ae4f846885936097192d8be7db6a43683468328f8a7cb4522ee4d12
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer22140)
		Method: <n5.c$b: void <init>()>
		SHA-256: 7b91799c57d837e2c5d3d1f9bef9ba607c64bef61d6b5e3e26032e31759bd8d
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer64417, $r2)
		Method: <me.g: javax.net.ssl.SSLContext m()>
		SHA-256: 5e0cd9d84a7d93d2b9179c1b875cbfa79743a0ec79ea098e7836471921b1bf9c
		Secure: false
	Object:
		Variable: $r29
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r29.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r26, $r27, $r1, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey: void populateFromPubKeyInfo(vf.n0)>
		SHA-256: 69d36116f62acb406343ba2a4bd3c5dfb318c67056454f8adafd51a6e6f7e175
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)
		Method: <r5.n$e: javax.crypto.Mac b(java.lang.String,java.security.Provider)>
		SHA-256: bdc1258c94ac1b3e07b9a129a2775f81ea6f3c954d0ac5e1fe299eae6a1de589
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer9381)
		Method: <r1.c: boolean d(java.lang.String)>
		SHA-256: c76f686b8331f0364ee3eb4e98341f43597290ca01d30fbf0d74691b4914e6fe
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <r8.e: byte[] b(byte[])>
		SHA-256: 87b3740f5b283b77079bfb89b6d7396584d239fa149ab7328f60655fb26d633b
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <r5.d: byte[] a(byte[],byte[])>
		SHA-256: 5aca104b39535034b02e52b11abf1507cff421e4fa35d104288b7ab261451c71
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r10, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey: void <init>(vf.n0)>
		SHA-256: ca8c57f00e636666523b3803cf2d449c7668aea2653306a5d436a81914fd7df0
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r4.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer50112, $i0, $r3, varReplacer50113)
		Method: <n5.b: byte[] d(byte[],byte[])>
		SHA-256: 71c111014a33f1762c559a9ccb4c9fcb8f0906c1988af29dc9185c30a38f4938
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <r5.b: byte[] b(byte[],byte[])>
		SHA-256: 54a406e68c5e5d26afa57cf55e2bd2381045257286f42e94150d14fa3b855852
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <z7.d$e: z7.b b()>
		SHA-256: e8c0bb8ae63752b02956da76e639ef03f2ead8b794cbdeee8bc1259c879fa3a4
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: d02affd279e8743b6fd64cdf0e2dd47c30a5603be2e61d5718cf63d25b2d1a15
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer69221)
		Method: <o5.b$a: j5.o c(q5.v)>
		SHA-256: 88d6b13b482912778b882cabe37e509259001c0370563435e39d19d38586cec2
		Secure: false
	Object:
		Variable: varReplacer77824
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer77824)
		Method: <l5.a: void <init>(byte[])>
		SHA-256: 838407f33b4a9b46ff49e153d1befaabc40c1a11070d83cec2d763b18a5954d5
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r11.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <d8.c: void b(java.security.PublicKey,byte[],byte[],java.lang.String)>
		SHA-256: 6c950c1cb8de19458204998c93d250bae137265e17cb8f7c72b69f145ad921f2
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer64415)
		Method: <me.h: javax.net.ssl.SSLContext m()>
		SHA-256: ae42558ff0dd853f70c807bdcca7219d7dd50a8e85d69480b19dc3b390a04517
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r2, $r1)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl$2: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 320a8e49b02c7b5ef28d8e1d6e1aef5eaf411acb11bb48484f97b1df889bd738
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <z7.d$e: z7.b b()>
		SHA-256: 8171899aa6c923f417eaac7e2b1f5485f9392d051171d1b62816d2399b728b31
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <r5.n$c: java.security.KeyFactory b(java.lang.String,java.security.Provider)>
		SHA-256: 6cc9b1a217b9b555d3271d578852f8b633345d10eeb2254b26cd971212b04502
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl: void checkSignature(java.security.PublicKey,java.security.Signature,ue.e,byte[])>
		SHA-256: 8553228850a28dccfcd21a20f2060e653a1ddcb611fdb99685269cb9f9189b34
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <j5.j: int g()>
		SHA-256: 59248ab5f6dd04da75bacfc0651146832f2fe46a60c83d775e50705183a6319
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl$2: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 9bdbc70b91d84215e77e2ee317e4a584498eaf7fe8252c2f59e6b037d2be2ede
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <r5.n$f: java.security.MessageDigest b(java.lang.String,java.security.Provider)>
		SHA-256: 39a65b2f31ec2206a49112d28b586f97fee8878a2d835f6d43a01b13d0081e98
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r4, $r2)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: 4b73d9ea47b70e095beb17e2b4e8c62bcb1a3b70cdd913b654094befd6fbd016
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r3, $r5, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(wf.i)>
		SHA-256: a4b7a5874d7ddc91e3fe1c6f80927286981244105f50c9286ac1b1cb27893d7d
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)
		Method: <r5.n$c: java.security.KeyFactory b(java.lang.String,java.security.Provider)>
		SHA-256: b4685fd106a1e31a899c5b655323b5e2ecd58d5370c856c31e356de5b560b666
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.cert.CertificateFactory
		Statement: $r0 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer77853)
		Method: <org.conscrypt.SSLUtils: java.security.cert.CertificateFactory getCertificateFactory()>
		SHA-256: d2a922ffd72c9e86fc07ed49e2c1edb051212f60d2ed101a1ca2ac08bb16eab2
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.JCEElGamalPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: 6b8822e70d4604e23c0ea07692bf2c9c1daaa36d64fb48b6df14aae465189041
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer50112, $i0, $r3, varReplacer50113)
		Method: <n5.b: byte[] d(byte[],byte[])>
		SHA-256: 4794d1b64a2fa56657fb134462f2cb411c2a6ffabccf8398048386679742d80f
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <j5.j: int g()>
		SHA-256: ddf4a6dff0b276e50599a734c4f6c11b6c050c209b1ee9d88d59f1c5d002d9b4
		Secure: true
	Object:
		Variable: $r27
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r27.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r6, $r15, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(vf.n0)>
		SHA-256: c67a58db466f44792924e383c9800713831ce853e3ca81f3580a8d50f581e617
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <r5.d: byte[] b(byte[],byte[])>
		SHA-256: e6b736376d5c63a48c71b7f0cc70e54f269e5fe5ee81c5152995dd6ab948794c
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer77816)
		Method: <r5.c: void <init>(byte[])>
		SHA-256: aab714e86a6103130cecb128f9f953b09ba004134fbbd37de31dfcb1d36d2f9b
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl$3: java.security.Signature createSignature(java.lang.String)>
		SHA-256: e9e8cb8ac81d36b794392d6ba6f9b8fc3971cab30eab75fc8d3ba1c7a3fee18c
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 9d110d3f3943f5f1538d33e3d18932b71ca7accf2f86c174ab417a2b10712fb0
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer55696, varReplacer55697)
		Method: <me.c: javax.net.ssl.X509TrustManager o()>
		SHA-256: 5c1d0c1046973ce4030122f65e7c5a1b16463654f6027389fccff084e64b9a65
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r0, $i0, $i1)
		Method: <r5.c: java.security.spec.AlgorithmParameterSpec d(byte[],int,int)>
		SHA-256: dde86f75aef0345ed98bcb32f28936ec5b48e7a3c6b53ea45fd621a3e82e18e0
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.PublicKey
		Statement: $r6 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)
		Method: <rh.a: java.security.PublicKey b(vf.n0)>
		SHA-256: 9b7903ff2861263a1b44fd4b411cad392bf756008e51c9a7d062b195f2a7a965
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyFactory
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r8)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 6635af12fb8498a7bf018ada279831a6e3024bb07fe12c7daed2b6fbc372e6bb
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <r5.n$f: java.security.MessageDigest b(java.lang.String,java.security.Provider)>
		SHA-256: ca1d39862678201296c51a955260641b41154c498e78328991560b425c11fd3
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer17836)
		Method: <z7.d$c: javax.net.ssl.SSLContext b()>
		SHA-256: fef7ba97a4d4c62c417626389a0cefe0903ae0405351dea42993c662e16944cd
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <se.h: se.h i(java.lang.String)>
		SHA-256: 60bd8fffa0ee72fa76f9b4bef55b191cc3102b483f413650b68cab6868d76c4b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.KeyAgreement
		Statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <r5.n$b: javax.crypto.KeyAgreement b(java.lang.String,java.security.Provider)>
		SHA-256: 42e085d167ce90a052fcb5d2560cb1d1984ff2bb176d53b44b943b36d51cdbb5
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.AlgorithmParameters
		Statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.X509SignatureUtil: void setSignatureParameters(java.security.Signature,ue.e)>
		SHA-256: 5542b69dc5336cc3d00547288fa7f3d8d3237d121f2ce57576e26391c36e1a8d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r9)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 7ac05a324707752a8fcdd9787a5fcda4e6af85c295ea6bb9f2ffcf779c41a30d
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer38327, $r1, $i1, $i0)
		Method: <l5.a: java.security.spec.AlgorithmParameterSpec d(byte[],int,int)>
		SHA-256: e597f7dd0399164cd6280f0ddf2ee9bbeb7a1301950923e616cc5157e6d23768
		Secure: false

Findings in Java Class: r1.c

	 in Method: boolean d(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #c76f686b8331f0364ee3eb4e98341f43597290ca01d30fbf0d74691b4914e6fe)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer9381)


Findings in Java Class: z7.d$c

	 in Method: javax.net.ssl.SSLContext b()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer17835, $r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer17835, $r3, $r5)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #fef7ba97a4d4c62c417626389a0cefe0903ae0405351dea42993c662e16944cd)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer17836)


Findings in Java Class: n5.c$b

	 in Method: void <init>()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #7b91799c57d837e2c5d3d1f9bef9ba607c64bef61d6b5e3e26032e31759bd8d)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer22140)


Findings in Java Class: n5.c

	 in Method: boolean e(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #e8bd4eb696cea8438773b50675b5597290fc7eda89ba100a559935c2d9c15f3c)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer22148)


Findings in Java Class: se.h

	 in Method: se.h i(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #60bd8fffa0ee72fa76f9b4bef55b191cc3102b483f413650b68cab6868d76c4b)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: se.z

	 in Method: se.h i(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #6059a5f612b79cadaa5de72561cd07fccbb653a53d971993d9e77f2dfdac1f00)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6059a5f612b79cadaa5de72561cd07fccbb653a53d971993d9e77f2dfdac1f00)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: r1.b

	 in Method: boolean b()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #2a90742aefaba62d0acf73f9b19d560252db9b25a081e2b56ae990559582a99)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer43563)


Findings in Java Class: si.a

	 in Method: boolean match(java.security.cert.Certificate)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #1ecd3e9e7cf5c2b0cb487b09688d6b83d8d4e9e324f2a1fee80b3948326e8c29)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r15 = virtualinvoke $r14.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: yf.c

	 in Method: java.security.cert.X509Certificate a(xf.e)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #cbd72781171cf1eeb08ffea452d6dcd823cb58b2fc0a062813ffdbce082255e4)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r6 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r4)


Findings in Java Class: a.v

	 in Method: boolean l(a.d,byte[],byte[],a.s)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #36a0613a82f80bafb674b3128889ee6d9b14ef72136ed597f9b397713ba24f02)
			First parameter (with value "SHA384withRSA/PSS") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #d6cf83b7fb854702d3f66a6bf0fdd1f467aa86c2d37dc841ec4f1be464b25093)
			First parameter (with value "SHA512withRSA/PSS") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r6, $r5)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #36a0613a82f80bafb674b3128889ee6d9b14ef72136ed597f9b397713ba24f02)
			First parameter (with value "NonewithEdDSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #36a0613a82f80bafb674b3128889ee6d9b14ef72136ed597f9b397713ba24f02)
			First parameter (with value "SHA256withRSA/PSS") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r8.<java.security.Signature: void initVerify(java.security.PublicKey)>($r7)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #d6cf83b7fb854702d3f66a6bf0fdd1f467aa86c2d37dc841ec4f1be464b25093)
			First parameter (with value "NonewithEdDSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r6, $r5)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #d6cf83b7fb854702d3f66a6bf0fdd1f467aa86c2d37dc841ec4f1be464b25093)
			First parameter (with value "SHA256withRSA/PSS") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r6, $r5)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #36a0613a82f80bafb674b3128889ee6d9b14ef72136ed597f9b397713ba24f02)
			First parameter (with value "SHA512withRSA/PSS") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #d6cf83b7fb854702d3f66a6bf0fdd1f467aa86c2d37dc841ec4f1be464b25093)
			First parameter (with value "SHA384withRSA/PSS") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r6, $r5)


Findings in Java Class: me.h

	 in Method: javax.net.ssl.SSLContext m()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ae42558ff0dd853f70c807bdcca7219d7dd50a8e85d69480b19dc3b390a04517)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer64415)


	 in Method: javax.net.ssl.X509TrustManager o()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer55682)


	 in Method: javax.net.ssl.SSLSocketFactory n(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer55704, $r10, varReplacer55704)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer55704, $r10, varReplacer55704)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer55704, $r10, varReplacer55704)


Findings in Java Class: me.d

	 in Method: javax.net.ssl.SSLContext m()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f6392f28589135e87fe5e2f195772a9557d89c86aaa6db3c0139874abb1fe7cd)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer64418, $r2)


	 in Method: javax.net.ssl.SSLSocketFactory n(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer55709, $r5, varReplacer55709)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer55709, $r5, varReplacer55709)


	 in Method: javax.net.ssl.X509TrustManager o()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer55692)


Findings in Java Class: me.c

	 in Method: javax.net.ssl.SSLContext m()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2215773f02c3b48e0dbf3aea78654d95901d7d968bd0ba0d562eaafb1bf04f9b)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer64420, $r2)


	 in Method: javax.net.ssl.X509TrustManager o()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer55698)


Findings in Java Class: o5.b$a

	 in Method: j5.o c(q5.v)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer69221)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #88d6b13b482912778b882cabe37e509259001c0370563435e39d19d38586cec2)
			Second parameter (with value "HMAC") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer69221)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl

	 in Method: void doVerify(java.security.PublicKey,org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator)
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #79c336de81c921f1ea057560928e61c40104b4c1212f5587a8a0631ff36224ca)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #97be8dab0496858e66e093fcd45a46436fbb0aea4da2b5c43d783b70ed2fc426)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #c90f367249ffb45fe0de2b458e3e051fcb5cd6e0ed522618c6747ed18f195a50)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #d16ebf62a60d8aa8f6194474fc6146539ac5c18bef47975ccaff739c39080269)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #bb3e4b3d0e509f0c0a3496d9de661c169fc3a1f90b1ad1ea71cf860bf05d0744)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #320a8e49b02c7b5ef28d8e1d6e1aef5eaf411acb11bb48484f97b1df889bd738)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #9bdbc70b91d84215e77e2ee317e4a584498eaf7fe8252c2f59e6b037d2be2ede)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #e9e8cb8ac81d36b794392d6ba6f9b8fc3971cab30eab75fc8d3ba1c7a3fee18c)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #3d7e5a90b7faeaf46d7a1c79a9933f96b4f03e47a1f3f9eb05e4fc884d6a5f72)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #699705b7782404721061643f7b5ab151bbfbf05df467e4b36c8c100dfb31d1aa)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #e6c86e62f2a45fdca03169241f9cc04a210ef3982aa5c101b35f406ee1a95576)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #e4f19227ca7cb8f7fd5504128bd11654ddea2aeceb9bdbe4c155de47f1fbff34)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)


	 in Method: void checkSignature(java.security.PublicKey,java.security.Signature,ue.e,byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r2)


Findings in Java Class: org.conscrypt.SSLUtils

	 in Method: java.security.cert.X509Certificate decodeX509Certificate(java.security.cert.CertificateFactory,byte[])
		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #d2a922ffd72c9e86fc07ed49e2c1edb051212f60d2ed101a1ca2ac08bb16eab2)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r3 = virtualinvoke $r2.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r1)


	 in Method: java.security.cert.X509Certificate[] decodeX509CertificateChain(byte[][])
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #d2a922ffd72c9e86fc07ed49e2c1edb051212f60d2ed101a1ca2ac08bb16eab2)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r4 = staticinvoke <org.conscrypt.SSLUtils: java.security.cert.X509Certificate decodeX509Certificate(java.security.cert.CertificateFactory,byte[])>($r2, $r3)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #d2a922ffd72c9e86fc07ed49e2c1edb051212f60d2ed101a1ca2ac08bb16eab2)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r2 = staticinvoke <org.conscrypt.SSLUtils: java.security.cert.CertificateFactory getCertificateFactory()>()


Findings in Java Class: r5.n$g

	 in Method: java.security.Signature b(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #c3c8b58bd0c06dd2822ac7f2777f67c30145b0ba3007c11c951ab9f7f681329f)
			First parameter (with value "AES/CTR/NoPadding") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #6e3e76d119214c85475f8e8cd4def38bac6ee2f9b6695f57455012fb4539c51f)
			First parameter (with value "AES/ECB/NoPadding") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #c3c8b58bd0c06dd2822ac7f2777f67c30145b0ba3007c11c951ab9f7f681329f)
			First parameter (with value "AES/ECB/NoPadding") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #6e3e76d119214c85475f8e8cd4def38bac6ee2f9b6695f57455012fb4539c51f)
			First parameter (with value "AES/CTR/NoPadding") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r2, $r1)


Findings in Java Class: r5.d

	 in Method: byte[] b(byte[],byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #39a65b2f31ec2206a49112d28b586f97fee8878a2d835f6d43a01b13d0081e98)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ca1d39862678201296c51a955260641b41154c498e78328991560b425c11fd3)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #5e63281c2320d85f4de881e5b70505a7c19ee71fcd55f00acda0fce9b71931c2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #bdc1258c94ac1b3e07b9a129a2775f81ea6f3c954d0ac5e1fe299eae6a1de589)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #aa25eebd36e3e6f0848caf059013d7ed6065ac9ce796403822833c0c16220c2e)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #a872783c81ac110ccde3e9a7ac7046137ca4e2123dc86b9ff56f511ad16d448b)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #6e3e76d119214c85475f8e8cd4def38bac6ee2f9b6695f57455012fb4539c51f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #c3c8b58bd0c06dd2822ac7f2777f67c30145b0ba3007c11c951ab9f7f681329f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #6dfb691e1ec48df702b055b8aaf957e2c5d918a43eac1f508c23de630dae2a56)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #42e085d167ce90a052fcb5d2560cb1d1984ff2bb176d53b44b943b36d51cdbb5)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer69733)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #7881f0542993b41d3a7fd035a12aae6966d34b4f9cf034d5ce7781f59a9ac110)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ac24a291e724759b44b81ec8cd2a3b0b75f14780376e606b15b222f16e1a34a0)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #aa25eebd36e3e6f0848caf059013d7ed6065ac9ce796403822833c0c16220c2e)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #a872783c81ac110ccde3e9a7ac7046137ca4e2123dc86b9ff56f511ad16d448b)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #7881f0542993b41d3a7fd035a12aae6966d34b4f9cf034d5ce7781f59a9ac110)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ac24a291e724759b44b81ec8cd2a3b0b75f14780376e606b15b222f16e1a34a0)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #6dfb691e1ec48df702b055b8aaf957e2c5d918a43eac1f508c23de630dae2a56)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #42e085d167ce90a052fcb5d2560cb1d1984ff2bb176d53b44b943b36d51cdbb5)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #39a65b2f31ec2206a49112d28b586f97fee8878a2d835f6d43a01b13d0081e98)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ca1d39862678201296c51a955260641b41154c498e78328991560b425c11fd3)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer59082)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer59083, $r8, $r10)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #6e3e76d119214c85475f8e8cd4def38bac6ee2f9b6695f57455012fb4539c51f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #c3c8b58bd0c06dd2822ac7f2777f67c30145b0ba3007c11c951ab9f7f681329f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #5e63281c2320d85f4de881e5b70505a7c19ee71fcd55f00acda0fce9b71931c2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #bdc1258c94ac1b3e07b9a129a2775f81ea6f3c954d0ac5e1fe299eae6a1de589)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


Findings in Java Class: r5.r

	 in Method: void b()
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #6e3e76d119214c85475f8e8cd4def38bac6ee2f9b6695f57455012fb4539c51f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #c3c8b58bd0c06dd2822ac7f2777f67c30145b0ba3007c11c951ab9f7f681329f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #39a65b2f31ec2206a49112d28b586f97fee8878a2d835f6d43a01b13d0081e98)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ca1d39862678201296c51a955260641b41154c498e78328991560b425c11fd3)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #5e63281c2320d85f4de881e5b70505a7c19ee71fcd55f00acda0fce9b71931c2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #bdc1258c94ac1b3e07b9a129a2775f81ea6f3c954d0ac5e1fe299eae6a1de589)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #aa25eebd36e3e6f0848caf059013d7ed6065ac9ce796403822833c0c16220c2e)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #a872783c81ac110ccde3e9a7ac7046137ca4e2123dc86b9ff56f511ad16d448b)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #7881f0542993b41d3a7fd035a12aae6966d34b4f9cf034d5ce7781f59a9ac110)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ac24a291e724759b44b81ec8cd2a3b0b75f14780376e606b15b222f16e1a34a0)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #6dfb691e1ec48df702b055b8aaf957e2c5d918a43eac1f508c23de630dae2a56)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #42e085d167ce90a052fcb5d2560cb1d1984ff2bb176d53b44b943b36d51cdbb5)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)


	 in Method: byte[] a(byte[],int)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #39a65b2f31ec2206a49112d28b586f97fee8878a2d835f6d43a01b13d0081e98)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ca1d39862678201296c51a955260641b41154c498e78328991560b425c11fd3)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #7881f0542993b41d3a7fd035a12aae6966d34b4f9cf034d5ce7781f59a9ac110)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r5 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #7881f0542993b41d3a7fd035a12aae6966d34b4f9cf034d5ce7781f59a9ac110)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ac24a291e724759b44b81ec8cd2a3b0b75f14780376e606b15b222f16e1a34a0)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r5 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ac24a291e724759b44b81ec8cd2a3b0b75f14780376e606b15b222f16e1a34a0)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #5e63281c2320d85f4de881e5b70505a7c19ee71fcd55f00acda0fce9b71931c2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #bdc1258c94ac1b3e07b9a129a2775f81ea6f3c954d0ac5e1fe299eae6a1de589)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #6e3e76d119214c85475f8e8cd4def38bac6ee2f9b6695f57455012fb4539c51f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #c3c8b58bd0c06dd2822ac7f2777f67c30145b0ba3007c11c951ab9f7f681329f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #aa25eebd36e3e6f0848caf059013d7ed6065ac9ce796403822833c0c16220c2e)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #a872783c81ac110ccde3e9a7ac7046137ca4e2123dc86b9ff56f511ad16d448b)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #6dfb691e1ec48df702b055b8aaf957e2c5d918a43eac1f508c23de630dae2a56)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #42e085d167ce90a052fcb5d2560cb1d1984ff2bb176d53b44b943b36d51cdbb5)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


	 in Method: void <init>(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer77835)


Findings in Java Class: r5.n$c

	 in Method: java.security.KeyFactory b(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #b4685fd106a1e31a899c5b655323b5e2ecd58d5370c856c31e356de5b560b666)
			First parameter (with value "AES/ECB/NoPadding") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #6cc9b1a217b9b555d3271d578852f8b633345d10eeb2254b26cd971212b04502)
			First parameter (with value "AES/ECB/NoPadding") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #b4685fd106a1e31a899c5b655323b5e2ecd58d5370c856c31e356de5b560b666)
			First parameter (with value "AES/CTR/NoPadding") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #6cc9b1a217b9b555d3271d578852f8b633345d10eeb2254b26cd971212b04502)
			First parameter (with value "AES/CTR/NoPadding") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r2, $r1)


Findings in Java Class: r5.n$e

	 in Method: javax.crypto.Mac b(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #bdc1258c94ac1b3e07b9a129a2775f81ea6f3c954d0ac5e1fe299eae6a1de589)
			First parameter (with value "AES/CTR/NoPadding") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #5e63281c2320d85f4de881e5b70505a7c19ee71fcd55f00acda0fce9b71931c2)
			First parameter (with value "AES/CTR/NoPadding") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #5e63281c2320d85f4de881e5b70505a7c19ee71fcd55f00acda0fce9b71931c2)
			First parameter (with value "AES/ECB/NoPadding") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #bdc1258c94ac1b3e07b9a129a2775f81ea6f3c954d0ac5e1fe299eae6a1de589)
			First parameter (with value "AES/ECB/NoPadding") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)


Findings in Java Class: r5.n$a

	 in Method: javax.crypto.Cipher b(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ac24a291e724759b44b81ec8cd2a3b0b75f14780376e606b15b222f16e1a34a0)
			First parameter (with value "AES/ECB/NoPadding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7881f0542993b41d3a7fd035a12aae6966d34b4f9cf034d5ce7781f59a9ac110)
			First parameter (with value "AES/ECB/NoPadding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r2, $r1)


Findings in Java Class: r5.n$f

	 in Method: java.security.MessageDigest b(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #39a65b2f31ec2206a49112d28b586f97fee8878a2d835f6d43a01b13d0081e98)
			First parameter (with value "AES/ECB/NoPadding") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ca1d39862678201296c51a955260641b41154c498e78328991560b425c11fd3)
			First parameter (with value "AES/ECB/NoPadding") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #39a65b2f31ec2206a49112d28b586f97fee8878a2d835f6d43a01b13d0081e98)
			First parameter (with value "AES/CTR/NoPadding") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ca1d39862678201296c51a955260641b41154c498e78328991560b425c11fd3)
			First parameter (with value "AES/CTR/NoPadding") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


Findings in Java Class: r5.n$d

	 in Method: java.security.KeyPairGenerator b(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #aa25eebd36e3e6f0848caf059013d7ed6065ac9ce796403822833c0c16220c2e)
			First parameter (with value "AES/CTR/NoPadding") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #a872783c81ac110ccde3e9a7ac7046137ca4e2123dc86b9ff56f511ad16d448b)
			First parameter (with value "AES/ECB/NoPadding") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #a872783c81ac110ccde3e9a7ac7046137ca4e2123dc86b9ff56f511ad16d448b)
			First parameter (with value "AES/CTR/NoPadding") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #aa25eebd36e3e6f0848caf059013d7ed6065ac9ce796403822833c0c16220c2e)
			First parameter (with value "AES/ECB/NoPadding") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)>($r2, $r1)


Findings in Java Class: r5.n$b

	 in Method: javax.crypto.KeyAgreement b(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #6dfb691e1ec48df702b055b8aaf957e2c5d918a43eac1f508c23de630dae2a56)
			First parameter (with value "AES/CTR/NoPadding") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #6dfb691e1ec48df702b055b8aaf957e2c5d918a43eac1f508c23de630dae2a56)
			First parameter (with value "AES/ECB/NoPadding") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #42e085d167ce90a052fcb5d2560cb1d1984ff2bb176d53b44b943b36d51cdbb5)
			First parameter (with value "AES/ECB/NoPadding") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #42e085d167ce90a052fcb5d2560cb1d1984ff2bb176d53b44b943b36d51cdbb5)
			First parameter (with value "AES/CTR/NoPadding") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r2, $r1)


Findings in Java Class: d8.c

	 in Method: void b(java.security.PublicKey,byte[],byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r11.<java.security.Signature: void initVerify(java.security.PublicKey)>($r3)


Findings in Java Class: n5.b

	 in Method: byte[] d(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer50111, $r5)


	 in Method: byte[] c(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer50171, $r1, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer50168, $r2, varReplacer50169, varReplacer50170)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer50171, $r1, $r4)


Findings in Java Class: rh.a

	 in Method: java.security.PublicKey b(vf.n0)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r6 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r5)


Findings in Java Class: org.conscrypt.OpenSSLX509Certificate

	 in Method: void verifyInternal(java.security.PublicKey,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


	 in Method: java.security.PublicKey getPublicKey()
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r9)


Findings in Java Class: r5.b

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


	 in Method: void <init>(byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer77817)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


Findings in Java Class: me.g

	 in Method: javax.net.ssl.X509TrustManager o()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer55687)


Findings in Java Class: r5.c

	 in Method: java.security.spec.AlgorithmParameterSpec d(byte[],int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer38325, $r0, $i0, $i1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r0, $i0, $i1)


	 in Method: void <init>(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer77816)


Findings in Java Class: org.bouncycastle.jce.provider.X509CertificateObject

	 in Method: void checkSignature(java.security.PublicKey,java.security.Signature)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r2.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: r5.a

	 in Method: void c(byte[],int,int,byte[],int,byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


	 in Method: void <init>(byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer77821)


Findings in Java Class: l5.a

	 in Method: void <init>(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer77824)


	 in Method: java.security.spec.AlgorithmParameterSpec d(byte[],int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer38327, $r1, $i1, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r1, $i1, $i0)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil

	 in Method: void setSignatureParameters(java.security.Signature,ue.e)
		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r4)


Findings in Java Class: z7.d$e

	 in Method: z7.b b()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer17985)


Findings in Java Class: org.bouncycastle.jce.provider.X509SignatureUtil

	 in Method: void setSignatureParameters(java.security.Signature,ue.e)
		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r4)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 143

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 45
	RequiredPredicateError: 45
	IncompleteOperationError: 55
	TypestateError: 13
=====================================================================
