0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <org.mythdroid.util.SocketUtil$CryptSocket: java.io.OutputStream getOutputStream()>
		SHA-256: a0f1a397436494b0ec968f7126c239fea03ce8efef3e9c7c66c50d970e0d56a5
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer3989)
		Method: <org.mythdroid.util.SocketUtil$CryptSocket: java.io.InputStream getInputStream()>
		SHA-256: 8e187258c2dc5c8c741b88d94ccdbbb86f8df2363e177066b502ce88a87b3956
		Secure: false
	Object:
		Variable: varReplacer3984
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer3984)
		Method: <org.mythdroid.util.SocketUtil$CryptSocket: java.io.OutputStream getOutputStream()>
		SHA-256: 534a9b0aee25ab84f1928014b801713d47a1b351ff6966762067789f06d35356
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer4820)
		Method: <org.mythdroid.util.SocketUtil$CryptSocket: org.mythdroid.util.SocketUtil$CryptSocket$CryptParams authenticate()>
		SHA-256: ed11d6504ade177d8f9a57b5ad69f923ff5b77005e5fcb165392718336a1a548
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <org.mythdroid.util.SocketUtil$CryptSocket: java.io.InputStream getInputStream()>
		SHA-256: aac908250d948ca983b356e4cde04d428645ef002a2edc5701cbe997349cf0c2
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer3984)
		Method: <org.mythdroid.util.SocketUtil$CryptSocket: java.io.OutputStream getOutputStream()>
		SHA-256: 5ed893d9b51730e4d1b899fc5fd16bd4250207e569a94f852fe2366d03bf9cd8
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4826)
		Method: <org.mythdroid.util.SocketUtil$CryptSocket: org.mythdroid.util.SocketUtil$CryptSocket$CryptParams authenticate()>
		SHA-256: 40d671a4ee287c52c6a229e8f883d81f07601a0be08141caaa57c83a1bf706e4
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3988)
		Method: <org.mythdroid.util.SocketUtil$CryptSocket: java.io.InputStream getInputStream()>
		SHA-256: 9478020fc83747ee68c2434c43584536271c3957478f9b6795b53b1acd4aa97
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r5.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r4, $r6)
		Method: <org.mythdroid.util.SocketUtil$CryptSocket: java.io.OutputStream getOutputStream()>
		SHA-256: cdecefc0b18fdc9f377472790d4090fc3b091f191b787532bb258ad0688b4f95
		Secure: true
	Object:
		Variable: varReplacer3989
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer3989)
		Method: <org.mythdroid.util.SocketUtil$CryptSocket: java.io.InputStream getInputStream()>
		SHA-256: 9e6495137824e3da308c7b9b798a7e72ef7d599f806b73da43cafac119034d53
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3985)
		Method: <org.mythdroid.util.SocketUtil$CryptSocket: java.io.OutputStream getOutputStream()>
		SHA-256: 9488bd89e7ae0f14221cd561dcf8e0c8a4b826aacb1aefd6961f2cb6e83f5fa
		Secure: false
	Object:
		Variable: varReplacer4820
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer4820)
		Method: <org.mythdroid.util.SocketUtil$CryptSocket: org.mythdroid.util.SocketUtil$CryptSocket$CryptParams authenticate()>
		SHA-256: 49d071ce2d3a1fb62e4cd32c81c954f3e8a306537f543406a759f844e3e98764
		Secure: false

Findings in Java Class: org.mythdroid.util.SocketUtil$CryptSocket

	 in Method: java.io.OutputStream getOutputStream()
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3986, $r8, r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer3984)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9488bd89e7ae0f14221cd561dcf8e0c8a4b826aacb1aefd6961f2cb6e83f5fa)
			First parameter (with value "AES/CFB8/NoPadding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3985)


	 in Method: java.io.InputStream getInputStream()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3987, $r8, r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer3989)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9478020fc83747ee68c2434c43584536271c3957478f9b6795b53b1acd4aa97)
			First parameter (with value "AES/CFB8/NoPadding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3988)


	 in Method: org.mythdroid.util.SocketUtil$CryptSocket$CryptParams authenticate()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer4820)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #40d671a4ee287c52c6a229e8f883d81f07601a0be08141caaa57c83a1bf706e4)
			First parameter (with value "AES/ECB/NoPadding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4826)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4823, $r12)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #40d671a4ee287c52c6a229e8f883d81f07601a0be08141caaa57c83a1bf706e4)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r13 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #40d671a4ee287c52c6a229e8f883d81f07601a0be08141caaa57c83a1bf706e4)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r13 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #40d671a4ee287c52c6a229e8f883d81f07601a0be08141caaa57c83a1bf706e4)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4826)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 12

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 2
	TypestateError: 1
	RequiredPredicateError: 8
	ConstraintError: 3
=====================================================================
