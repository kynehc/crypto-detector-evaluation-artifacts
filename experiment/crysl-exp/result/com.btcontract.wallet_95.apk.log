0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Alive 15049  5000
Alive 21901  5000
Alive 25363  5000
Alive 24345  5000
Alive 21241  5000
Alive 21655  5000
Alive 20271  5000
Alive 20130  5000
Alive 22281  5000
Alive 18257  5000
Alive 21847  5000
Alive 19326  5000
Alive 19186  5000
Alive 18396  5000
Alive 15198  5000
Alive 20560  5000
Alive 17315  5000
Alive 17171  5000
Alive 18748  5000
Alive 16417  5000
Alive 18030  5000
Alive 15720  5000
Alive 19524  5000
Alive 16867  5000
Alive 17495  5000
Alive 20022  5000
Alive 17224  5000
Alive 16709  5000
Alive 17754  5000
Alive 17304  5000
Alive 17705  5000
Alive 16786  5000
Alive 18699  5000
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r22
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r22 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r7)
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslServerContext: io.netty.handler.ssl.OpenSslServerSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)>
		SHA-256: d00b93e2065e292e9e215168340c984ec86f4f81d60085fe65d96a22ac978723
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLEngine
		Statement: $r3 = virtualinvoke $r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine()>()
		Method: <io.netty.handler.ssl.JdkSslContext: void <clinit>()>
		SHA-256: a60f09a75e555a4e8c4c3dcbaf6a610d69aa89ba54d92a26f4a90083ee57ebc2
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl$3: java.security.Signature createSignature(java.lang.String)>
		SHA-256: e9e8cb8ac81d36b794392d6ba6f9b8fc3971cab30eab75fc8d3ba1c7a3fee18c
		Secure: false
	Object:
		Variable: varReplacer55976
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer55976)
		Method: <immortan.utils.AES$: javax.crypto.Cipher cipher(byte[],byte[],int)>
		SHA-256: 7edba8cbdd69d4ebc6dd46fae286e037c647664d5363dfc557f61e5a844e9579
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer80839)
		Method: <com.guardanis.applock.utils.CipherGenerator: javax.crypto.Cipher generateAuthCipher(android.content.Context,boolean,int)>
		SHA-256: 65015552bf1826284719127ebf40e85d75172fdcfa8e8d30b2782cbeff88238f
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <okio.ByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: d4bf5cc88c644b9a20ac4aef1746c1f0c9ae862102406e7436b8866c875859ff
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLImpl$3: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 97be8dab0496858e66e093fcd45a46436fbb0aea4da2b5c43d783b70ed2fc426
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.cert.CertificateFactory
		Statement: $r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer22791)
		Method: <io.netty.handler.ssl.SslContext: void <clinit>()>
		SHA-256: bd531cea6d5773808f3d8d3a514b00f5165a71686dda05e16d54e029763aee95
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.JCEElGamalPublicKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: 2f96be90287037dd5aa521a81412c6567fe97ad3bdc0a3e0dd37cb2855cfb876
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r10, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: ca8c57f00e636666523b3803cf2d449c7668aea2653306a5d436a81914fd7df0
		Secure: true
	Object:
		Variable: $r22
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r22 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r7)
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslClientContext: io.netty.handler.ssl.OpenSslSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)>
		SHA-256: 42704bc5a35c73f5c13d2933ab10afc0321e1cf2af0087e89772de4c607f4910
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r9)
		Method: <com.guardanis.applock.utils.CipherGenerator: javax.crypto.Cipher generateAuthCipher(android.content.Context,boolean,int)>
		SHA-256: 54119171c7b454e3cfb5ac92f8dabe3246a78f4b95cf104502a6abf4210a84ed
		Secure: false
	Object:
		Variable: $r23
		Type: javax.net.ssl.TrustManager[]
		Statement: $r23 = virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslClientContext: io.netty.handler.ssl.OpenSslSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)>
		SHA-256: 329211bc677764c4e3850967de7013843657789aada0c3f4ec059f795a5fe469
		Secure: true
	Object:
		Variable: $r11
		Type: javax.net.ssl.KeyManager[]
		Statement: $r11 = virtualinvoke $r7.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: f7b59c70ebb931d7a0ea7ff71c82606067a847d0189eebaf380a855347bb5c9c
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLEngine
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine()>()
		Method: <io.netty.handler.ssl.Java9SslUtils: void <clinit>()>
		SHA-256: 48ddd8d019fab62b12baf381c15479f32543a5774b7c552de0565c28f62e7cd6
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: ae39b036c5eeeba58d380660f68e23806935f12d2f5c9cefe65440425aa34f4a
		Secure: false
	Object:
		Variable: $r12
		Type: javax.net.ssl.TrustManager[]
		Statement: $r12 = virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: d793d68356894adbdf63142e33e7f0cf7892a249cd8cb7a90e21f7e4c6674899
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer73178)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 82d6bb50d9aa45fa4a88e559ff7c6b614e083e81b1a461f11a9776c4ec81d231
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.SegmentedByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: 6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl$3: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 3d7e5a90b7faeaf46d7a1c79a9933f96b4f03e47a1f3f9eb05e4fc884d6a5f72
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer69114)
		Method: <io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1: java.security.MessageDigest initialValue()>
		SHA-256: 7bf86b0db422f7052c3cfa714b005be4ee9e3722f000cd8097418f1ad9362b1e
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>
		SHA-256: 55c0ef59d2e8f2d9e7c3b9d886f8a0561a8e9e82e242551a90594b801b63073c
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: a9c19b12994234db6ec00ed5b541d5738b556e23d3870b731ea4245dbf932de7
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer58897)
		Method: <com.sparrowwallet.hummingbird.fountain.RandomXoshiro256StarStar: byte[] hash(byte[],int,int)>
		SHA-256: 86e777c14fc588f00e3dbe501098820a8ed103c4f123a5ac12fd716cff281006
		Secure: true
	Object:
		Variable: $r9
		Type: javax.net.ssl.SSLContext
		Statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer80577)
		Method: <io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: 34fe2be0bf90a0f2c4d54bac39cb69c86c6d763c2350f280485d4e42457e5326
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 15a76129680a3cd57380001c355c828c5afc3ba9ce32fff65b352ff3390bbd6
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.JCEElGamalPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: 6b8822e70d4604e23c0ea07692bf2c9c1daaa36d64fb48b6df14aae465189041
		Secure: true
	Object:
		Variable: r0
		Type: org.bouncycastle.x509.ExtendedPKIXParameters
		Statement: specialinvoke r0.<java.security.cert.PKIXParameters: void <init>(java.util.Set)>($r1)
		Method: <org.bouncycastle.x509.ExtendedPKIXParameters: void <init>(java.util.Set)>
		SHA-256: bc4db4edf85d5095c872f763083d4cdd57eaf413157a98ff957c0439448eaca6
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer82721)
		Method: <io.netty.handler.ssl.JdkSslContext: void <clinit>()>
		SHA-256: 9d2d84d94470805fe708cddeddadda394fe012f4eaa8eee7abf7de861aadac31
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.MessageDigest
		Statement: $r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r13, varReplacer43285)
		Method: <org.bouncycastle.x509.AttributeCertificateHolder: boolean match(java.security.cert.Certificate)>
		SHA-256: d697029211dedca946ae5e8c3371a47b5a2ac39aa919ab0b297a791ed90769d7
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLImpl$3: java.security.Signature createSignature(java.lang.String)>
		SHA-256: d16ebf62a60d8aa8f6194474fc6146539ac5c18bef47975ccaff739c39080269
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer77098)
		Method: <io.netty.handler.ssl.Java9SslUtils: void <clinit>()>
		SHA-256: 78645459c58df3a84ad907d25b74547b9d21019497e6ab1616a989a4e251000f
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r1)
		Method: <scodec.codecs.SignatureFactory$WithSignature$class: java.security.Signature newSignature(scodec.codecs.SignatureFactory$WithSignature)>
		SHA-256: f8c775f2f4b697045f56dd1cf26322c86469c61013a35a157cb6ef23ef73d3dd
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer69110)
		Method: <io.netty.handler.codec.http.websocketx.WebSocketUtil$1: java.security.MessageDigest initialValue()>
		SHA-256: ca14103144d10e160f1418e357e07d5bc25cba7ddac63a3e26c68d28de749dde
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.KeyManager[]
		Statement: $r10 = virtualinvoke $r7.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: af31f065870572546c364a20976d42c6fa28ffaffa57ab4703ebc96a44899ead
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher: com.google.common.hash.HashCode hash()>
		SHA-256: 498aa274b0e0dc658a96e5b82797c2ef859caa8cc0a4a03329fbcf0be8023051
		Secure: true
	Object:
		Variable: $r23
		Type: javax.net.ssl.TrustManager[]
		Statement: $r23 = virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslServerContext: io.netty.handler.ssl.OpenSslServerSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)>
		SHA-256: 1a551f4d946a9035743ae7930814e0cd77d41f2bbd6e39c9a8c2fb49afb888e3
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <immortan.utils.AES$: javax.crypto.Cipher cipher(byte[],byte[],int)>
		SHA-256: 32e8f9e75a0ec4f2875a4ec05f2d82dcbee277a0703254822fe2d2167522bc92
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLEngine
		Statement: virtualinvoke $r1.<javax.net.ssl.SSLEngine: void setEnabledCipherSuites(java.lang.String[])>($r3)
		Method: <io.netty.handler.ssl.JdkSslContext: javax.net.ssl.SSLEngine configureAndWrapEngine(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator)>
		SHA-256: b9c281a15c82804d4bf6a241937e632597de58d6bb0039438df1bbed8ae5f471
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: a729cfd5669df603070b7ba7d05b524b10a048ab1da974a5ccb1df973521b7d3
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.SSLContext
		Statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer80574, $r2)
		Method: <io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: f276ac9942c2d5ec5d0e38078e9cf7f2129e7987c118a0247261af5cd83e75dc
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <io.netty.handler.ssl.SslContext: java.security.KeyStore buildKeyStore(java.security.cert.X509Certificate[],java.security.PrivateKey,char[],java.lang.String)>
		SHA-256: 267bbb92b07a95850ac19a4cc97e742cb26b84cf8a43a855eb9635eb637b84e1
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <com.google.common.hash.MacHashFunction$MacHasher: com.google.common.hash.HashCode hash()>
		SHA-256: a89d37061ba0dac61e1b08aaf3eb3497c39726681770418d4469691a8e1f6dbc
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r5)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void verify(java.security.PublicKey)>
		SHA-256: 112e0b98b9789074d4ec3ee999f422c7c115607a7d5cddcfc5fefe2723a7aec7
		Secure: false
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer80627)
		Method: <io.netty.handler.ssl.OpenSslX509TrustManagerWrapper: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 3460aa463eb894d5b675e4355c837dc90dd6c665b57f86274ab914b2a0496f48
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.SSLContext
		Statement: $r10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer80651, $r2)
		Method: <io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: 8a1fe2d2afc41d7488cf64ec16751590dc2ea919f7f16b7f0bbcfe93bbe3fd41
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <io.netty.handler.ssl.SslContext: javax.net.ssl.TrustManagerFactory buildTrustManagerFactory(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.lang.String)>
		SHA-256: 12ad2df9c1ecf4289959661ae9d9afa269df93d54e309724bdd4e58877155ce7
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>
		SHA-256: cebe45f59ca6821eb5e75723e2592c61a7970e6687e96537a7fa5d2712864b7
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r5, varReplacer67072)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void verify(java.security.PublicKey)>
		SHA-256: 2ebab3e72d86b81de555ec6ab72d470652ed0f54469d5fef1d845ce63d0fa0bb
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r1)
		Method: <io.netty.handler.ssl.SslContext: javax.net.ssl.KeyManagerFactory buildKeyManagerFactory(java.security.KeyStore,java.lang.String,char[],javax.net.ssl.KeyManagerFactory)>
		SHA-256: 9f44c18a7b7aca5aa9492f380ea0ee7d7bf32a572f2a664b930ec6ca683f35c5
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.Key
		Statement: $r11 = virtualinvoke $r3.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r2, varReplacer80841)
		Method: <com.guardanis.applock.utils.CipherGenerator: javax.crypto.Cipher generateAuthCipher(android.content.Context,boolean,int)>
		SHA-256: e3428a4c4554290b0cfdadc7050b662ac6bb681cfe905978c98ea5c8f612cc35
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer73176, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: bd21cb3570793a45b4a94d6d679c23bcf27088e5b99b55a7f7a0da67333aef1f
		Secure: false
	Object:
		Variable: $r15
		Type: byte[]
		Statement: $r15 = virtualinvoke $r14.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.bouncycastle.x509.AttributeCertificateHolder: boolean match(java.security.cert.Certificate)>
		SHA-256: e7db0241527fc7f51059b6cf44875cdfb7ec12450eceba80c4767b3d6fe41b20
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r3)
		Method: <io.netty.handler.ssl.SslContext: javax.net.ssl.TrustManagerFactory buildTrustManagerFactory(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.lang.String)>
		SHA-256: caca3c6a8b06a79b27d85e35f7ec06d017f09597c8ba41ba2854f122dd0c6b3
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.AlgorithmParameters
		Statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r4)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil: void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)>
		SHA-256: 5542b69dc5336cc3d00547288fa7f3d8d3237d121f2ce57576e26391c36e1a8d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <scodec.codecs.ChecksumFactory$$anon$1: scodec.codecs.Signer newSigner()>
		SHA-256: 6d0403f583ce09ac298b089d0ff4907a6fc877fb90f465ed7daf9c4ce2061354
		Secure: true
	Object:
		Variable: $r21
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r21.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r14, $r15, varReplacer60770)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(org.bouncycastle.asn1.x9.X962Parameters,org.bouncycastle.math.ec.ECCurve)>
		SHA-256: 5e72c546c6f7ca6fcf4e48f88ee4e343d0e0bb0574d4eed39dc05da82eee0b9
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r3, $r5, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(org.bouncycastle.asn1.x9.X9ECParameters)>
		SHA-256: a4b7a5874d7ddc91e3fe1c6f80927286981244105f50c9286ac1b1cb27893d7d
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r2)
		Method: <io.netty.handler.ssl.OpenSslX509KeyManagerFactory: io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi newOpenSslKeyManagerFactorySpi(java.lang.String,java.security.Provider)>
		SHA-256: cd95ac08401507b4f1df55c079f4647037409d923f160e9cd8d6cfb051f9c73f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.Signature
		Statement: $r1 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.util.DefaultJcaJceHelper: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 66f26381b2b186fbed59de5f1091ee81e1ff14794fdb45154aac9feab8965356
		Secure: false
	Object:
		Variable: varReplacer54123
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer54123)
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslEngine: javax.crypto.spec.SecretKeySpec masterKey()>
		SHA-256: 101d9cffee624ac21277a91417a3117cd058f82b47e7b03aa4a589a9f27b3d13
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer73179, $r2)
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: cf6cf58eb3008a572c9c4cf6141c7a921265d5120d8d2da05a36e9269a48c998
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 1027fce20723454b26980f38c5edb26bcec19bffa5b6443c75459b577c51d460
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl: void checkSignature(java.security.PublicKey,java.security.Signature,org.bouncycastle.asn1.ASN1Encodable,byte[])>
		SHA-256: 788b8478b625352bf27c9a03b606a5ee18217818d4b0493ecbf181e6cedb9711
		Secure: false
	Object:
		Variable: $r8
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r8 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r16)
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslServerContext: io.netty.handler.ssl.OpenSslServerSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)>
		SHA-256: 73cf5680461643169da8ef10730d9ed954163aa771a9d6aabbfc11c02533c928
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer65661, varReplacer65662)
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: a2ccea199f08a51689a3ddf1d57b58f8e3b253d83581f94fe0cbde1af1a580c8
		Secure: false
	Object:
		Variable: r0
		Type: org.bouncycastle.jcajce.spec.DHDomainParameterSpec
		Statement: specialinvoke r0.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r1, $r3, $i1)
		Method: <org.bouncycastle.jcajce.spec.DHDomainParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int,int)>
		SHA-256: 9cdde17292729ed12e67e00ef32f20bc0ba0a50cc823d5bcab3268462fa45fcd
		Secure: true
	Object:
		Variable: r0
		Type: io.netty.handler.ssl.util.ThreadLocalInsecureRandom
		Statement: specialinvoke r0.<java.security.SecureRandom: void <init>()>()
		Method: <io.netty.handler.ssl.util.ThreadLocalInsecureRandom: void <init>()>
		SHA-256: 46a0bd64f535b57484537e537f98f9e41f2f93ed1ca917868b32c341773fdb95
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.cert.CertificateFactory
		Statement: $r3 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>($r2)
		Method: <scodec.codecs.CertificateCodec: scodec.Attempt decode(scodec.bits.BitVector)>
		SHA-256: 40836d7152dad32da65a7ff5f07684dd81e700131628ae2f55919eed39aef993
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: c3dcfb07eabeaead2afa7b41e33d56187e303e14a7184c21b7bac99836f2c278
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.Mac
		Statement: $r0 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r1)
		Method: <com.google.common.hash.MacHashFunction: javax.crypto.Mac getMac(java.lang.String,java.security.Key)>
		SHA-256: 6dfe92fb5526abc60bb706d9a02bc7267374c73eb4cfabeec75ce74a35a0603d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLImpl$2: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 79c336de81c921f1ea057560928e61c40104b4c1212f5587a8a0631ff36224ca
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.NamedJcaJceHelper: java.security.Signature createSignature(java.lang.String)>
		SHA-256: cb6dbedb66709ff933343a7a19443259032632b9744c262530a2bb4dc73beae9
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.cert.CertificateFactory
		Statement: $r6 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer76346)
		Method: <okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)>
		SHA-256: 75e8124607849457843fff72fd162d004b6089ae574a6f0b87f5273cc12ee782
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r2, $r1)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl$2: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 320a8e49b02c7b5ef28d8e1d6e1aef5eaf411acb11bb48484f97b1df889bd738
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 5fb6984969c8c0f60ee84399ef18a49aa63648c889757c4080685ad119ecd903
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <okio.SegmentedByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: b189e83daa1cae39dacb5d56f8d20e560b21d5b6f8f0c6a35bc1a551d3d1c123
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.ProviderJcaJceHelper: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 14ead5b41e52dcc0971ab3bbf6947b9738bc0cfa14d4e782ddd7a129f6301c26
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 316cbc86e080130334eaabd60025d96084375d0058312a103cd3255ba6f0aeb
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLImpl$1: java.security.Signature createSignature(java.lang.String)>
		SHA-256: e6c86e62f2a45fdca03169241f9cc04a210ef3982aa5c101b35f406ee1a95576
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.SSLContext
		Statement: $r10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer80654)
		Method: <io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: 1c38b1f447da2bec1e5c9e1a8638af806edce0eb1cf38ebe8ea076ab7c6b3524
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.CryptoServicesRegistrar: java.security.SecureRandom getSecureRandom()>
		SHA-256: 375867338a8d572664475cac25bcfa294db8f2af8faff8d50836d5d6dcf8ab15
		Secure: true
	Object:
		Variable: $r11
		Type: javax.net.ssl.TrustManager[]
		Statement: $r11 = virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: 9df56f49b03ca7cf80cc0a9aa018dae1e9b158cf1481bc6dff3a494cfe4207ff
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <io.netty.util.internal.ThreadLocalRandom$1: void run()>
		SHA-256: f3294adcc5f456ef0e813edd3ef66c3a43347470e41173ad73320a0893ac82a3
		Secure: true
	Object:
		Variable: $r28
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r28.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r25, $r26, $r1, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey: void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: b3802d7cb63f540e31ef8229278a20fec3e66464310cefc3feba948601554bd2
		Secure: true
	Object:
		Variable: $r27
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r27.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r6, $r15)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 17ea506228f5dc57471137e0b695352a3774e9c7e597031eeeb9157ef0e2b937
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r2, $r1)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CRLImpl$2: java.security.Signature createSignature(java.lang.String)>
		SHA-256: bb3e4b3d0e509f0c0a3496d9de661c169fc3a1f90b1ad1ea71cf860bf05d0744
		Secure: false
	Object:
		Variable: $r21
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r21.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r14, $r15, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(org.bouncycastle.asn1.x9.X962Parameters,org.bouncycastle.math.ec.ECCurve)>
		SHA-256: 49063db5056501dc5b91a4e377b49a58eeeabe81598cccd9ccf90a92bea4339c
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.SecureRandom: byte[] generateSeed(int)>(varReplacer9372)
		Method: <io.netty.util.internal.ThreadLocalRandom$1: void run()>
		SHA-256: c9544646196a9fe3544159b71d1e57c8b7b08285b8354ef003bc2634346a4a63
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher: com.google.common.hash.HashCode hash()>
		SHA-256: 498aa274b0e0dc658a96e5b82797c2ef859caa8cc0a4a03329fbcf0be8023051
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer55976)
		Method: <immortan.utils.AES$: javax.crypto.Cipher cipher(byte[],byte[],int)>
		SHA-256: 1d72885ee61bccf2d35aba108c771fa67238c0be575290f508a4b83eea0a897e
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <fr.acinq.eclair.package$: scodec.bits.ByteVector randomBytes(int)>
		SHA-256: f70e67605e102c82522f51fbf2321641146b582c6aa27e718c1eeaedcf4954bc
		Secure: true
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl: void checkSignature(java.security.PublicKey,java.security.Signature,org.bouncycastle.asn1.ASN1Encodable,byte[])>
		SHA-256: 8553228850a28dccfcd21a20f2060e653a1ddcb611fdb99685269cb9f9189b34
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.KeyGenerator
		Statement: $r4 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer80843, varReplacer80844)
		Method: <com.guardanis.applock.utils.CipherGenerator: javax.crypto.Cipher generateAuthCipher(android.content.Context,boolean,int)>
		SHA-256: fc1b4d87c6ddbd26e70bcac9f85021deec64081268e66d50616dd68e063c79c
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer54123)
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslEngine: javax.crypto.spec.SecretKeySpec masterKey()>
		SHA-256: c951bc0b31939aa9fc397bee633a42f491ff02d85ac4698ba2a797ee5ec9d259
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: c908257ebef1e44e27421c3dc6127a4c79990e1515e273132ea2c2cb020fcdee
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.google.common.hash.MessageDigestHashFunction: java.security.MessageDigest getMessageDigest(java.lang.String)>
		SHA-256: f4e887286d0504cb5722b1da9a4eac06d6ea434977af7216dbf1f6217c285838
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.security.Provider)>($r2, $r0)
		Method: <io.netty.handler.ssl.OpenSslX509KeyManagerFactory: io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi newOpenSslKeyManagerFactorySpi(java.lang.String,java.security.Provider)>
		SHA-256: 3b80fac0b5bb98178f7aad616cf6f46ce4843933637dad1d2380b3118572829d
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 84f17b7e3930c76e2b174d27b9668ee8d3209ae5512e2c539d541e6ef4265515
		Secure: false
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLEngine
		Statement: virtualinvoke $r0.<javax.net.ssl.SSLEngine: void setEnabledCipherSuites(java.lang.String[])>($r6)
		Method: <io.netty.handler.ssl.JdkSslContext: java.util.Set supportedCiphers(javax.net.ssl.SSLEngine)>
		SHA-256: fa3cf8dcf2d83c4aa0f5f0eafac09ac9d086f4235ea298c2eb53ff68e703eac1
		Secure: false
	Object:
		Variable: $r27
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r27.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r6, $r15, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: c67a58db466f44792924e383c9800713831ce853e3ca81f3580a8d50f581e617
		Secure: true
	Object:
		Variable: r0
		Type: org.bouncycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r2, $r3, $r4, $i0)
		Method: <org.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>
		SHA-256: b36d50207c12d926e435b859cb9848007d52f50b2e62c847e597de1f84f657c6
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer55975)
		Method: <immortan.utils.AES$: javax.crypto.Cipher cipher(byte[],byte[],int)>
		SHA-256: 6a17683ffc473a1b5e12e775f75f282c29e6db0e2a881f28de8eb8a7bfd152d8
		Secure: false
	Object:
		Variable: $r8
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r8 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r16)
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslClientContext: io.netty.handler.ssl.OpenSslSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)>
		SHA-256: cecdb33f089084802662f64cad57aa40f7a55d20d7ea26e4fe871808623d7631
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.sparrowwallet.hummingbird.fountain.RandomXoshiro256StarStar: byte[] hash(byte[],int,int)>
		SHA-256: af5835e5e98cecbdc122208f255c5326c926efdeea338d50395eb1092bea2961
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <scodec.codecs.CipherFactory$SimpleCipherFactory: javax.crypto.Cipher newCipher()>
		SHA-256: 74996441b8b06473dcc143862f9858e907b288a8fbcab78db761499c80c5d17e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer69108)
		Method: <io.netty.handler.codec.http.websocketx.WebSocketUtil$2: java.security.MessageDigest initialValue()>
		SHA-256: ccb2e304b71915a499d618924325dc1d3e785a64e0e105a6ad517982d8a205af
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl$2: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 9bdbc70b91d84215e77e2ee317e4a584498eaf7fe8252c2f59e6b037d2be2ede
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.AlgorithmParameters
		Statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.X509SignatureUtil: void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)>
		SHA-256: 5542b69dc5336cc3d00547288fa7f3d8d3237d121f2ce57576e26391c36e1a8d
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLEngine
		Statement: virtualinvoke $r2.<javax.net.ssl.SSLEngine: void setEnabledCipherSuites(java.lang.String[])>($r1)
		Method: <io.netty.handler.ssl.JdkSslEngine: void setEnabledCipherSuites(java.lang.String[])>
		SHA-256: b257e9833cfed48894dcc7e4196e496d46be6bf84436c83e890144d4cf7619d9
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer73181, $r2)
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 113ce7d2d6774126cc6ba5b35ef470191f4665097f551c83d4e9f6c8fc483421
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <fr.acinq.eclair.package$: void <init>()>
		SHA-256: 49b97aa79cefb2eaae0fd25f691c6301ee03634166363ddefa4d4292b5a0965c
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl$1: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 699705b7782404721061643f7b5ab151bbfbf05df467e4b36c8c100dfb31d1aa
		Secure: false

Findings in Java Class: scodec.codecs.CertificateCodec

	 in Method: scodec.Attempt decode(scodec.bits.BitVector)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #40836d7152dad32da65a7ff5f07684dd81e700131628ae2f55919eed39aef993)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r6 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r4)


Findings in Java Class: org.bouncycastle.x509.AttributeCertificateHolder

	 in Method: boolean match(java.security.cert.Certificate)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #d697029211dedca946ae5e8c3371a47b5a2ac39aa919ab0b297a791ed90769d7)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r15 = virtualinvoke $r14.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: scodec.codecs.ChecksumFactory$$anon$1

	 in Method: scodec.codecs.Signer newSigner()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #6d0403f583ce09ac298b089d0ff4907a6fc877fb90f465ed7daf9c4ce2061354)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r1.<scodec.codecs.ChecksumFactory$DigestSigner: void <init>(java.security.MessageDigest)>($r2)


Findings in Java Class: immortan.utils.AES$

	 in Method: scodec.bits.ByteVector decode(byte[],byte[],byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #6a17683ffc473a1b5e12e775f75f282c29e6db0e2a881f28de8eb8a7bfd152d8)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)


	 in Method: javax.crypto.Cipher cipher(byte[],byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer55976)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r5, $r2)


Findings in Java Class: scodec.codecs.SignatureFactory$SignatureFactoryVerifying$class

	 in Method: scodec.codecs.Signer newVerifier(scodec.codecs.SignatureFactory$SignatureFactoryVerifying)
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #f8c775f2f4b697045f56dd1cf26322c86469c61013a35a157cb6ef23ef73d3dd)
			Operation on object of type java.security.Signature object not completed. Expected call to verify, update
			at statement: specialinvoke $r3.<scodec.codecs.SignatureSigner: void <init>(java.security.Signature)>($r1)


Findings in Java Class: scodec.codecs.SignatureFactory$SignatureFactorySigning$class

	 in Method: scodec.codecs.Signer newSigner(scodec.codecs.SignatureFactory$SignatureFactorySigning)
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #f8c775f2f4b697045f56dd1cf26322c86469c61013a35a157cb6ef23ef73d3dd)
			Operation on object of type java.security.Signature object not completed. Expected call to update
			at statement: specialinvoke $r3.<scodec.codecs.SignatureSigner: void <init>(java.security.Signature)>($r1)


Findings in Java Class: scodec.codecs.CipherCodec

	 in Method: scodec.Attempt scodec$codecs$CipherCodec$$encrypt(scodec.bits.BitVector)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #74996441b8b06473dcc143862f9858e907b288a8fbcab78db761499c80c5d17e)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest$okio(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ae39b036c5eeeba58d380660f68e23806935f12d2f5c9cefe65440425aa34f4a)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ae39b036c5eeeba58d380660f68e23806935f12d2f5c9cefe65440425aa34f4a)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: okio.SegmentedByteString

	 in Method: okio.ByteString digest$okio(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r6 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: com.google.common.hash.MacHashFunction$MacHasher

	 in Method: com.google.common.hash.HashCode hash()
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #6dfe92fb5526abc60bb706d9a02bc7267374c73eb4cfabeec75ce74a35a0603d)
			Unexpected call to method <javax.crypto.Mac: byte[] doFinal()> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: byte[] doFinal(byte[]),javax.crypto.Mac: void update(java.nio.ByteBuffer),javax.crypto.Mac: void update(byte),javax.crypto.Mac: void update(byte[],int,int)
			at statement: $r2 = virtualinvoke $r1.<javax.crypto.Mac: byte[] doFinal()>()


Findings in Java Class: com.google.common.hash.AbstractCompositeHashFunction

	 in Method: com.google.common.hash.Hasher newHasher()
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6dfe92fb5526abc60bb706d9a02bc7267374c73eb4cfabeec75ce74a35a0603d)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $r4 = specialinvoke r0.<com.google.common.hash.AbstractCompositeHashFunction: com.google.common.hash.Hasher fromHashers(com.google.common.hash.Hasher[])>($r2)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f4e887286d0504cb5722b1da9a4eac06d6ea434977af7216dbf1f6217c285838)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = specialinvoke r0.<com.google.common.hash.AbstractCompositeHashFunction: com.google.common.hash.Hasher fromHashers(com.google.common.hash.Hasher[])>($r2)


	 in Method: com.google.common.hash.Hasher newHasher(int)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f4e887286d0504cb5722b1da9a4eac06d6ea434977af7216dbf1f6217c285838)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = specialinvoke r0.<com.google.common.hash.AbstractCompositeHashFunction: com.google.common.hash.Hasher fromHashers(com.google.common.hash.Hasher[])>($r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6dfe92fb5526abc60bb706d9a02bc7267374c73eb4cfabeec75ce74a35a0603d)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $r4 = specialinvoke r0.<com.google.common.hash.AbstractCompositeHashFunction: com.google.common.hash.Hasher fromHashers(com.google.common.hash.Hasher[])>($r2)


Findings in Java Class: com.google.common.hash.AbstractHashFunction

	 in Method: com.google.common.hash.HashCode hashObject(java.lang.Object,com.google.common.hash.Funnel)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6dfe92fb5526abc60bb706d9a02bc7267374c73eb4cfabeec75ce74a35a0603d)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $r4 = interfaceinvoke $r3.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f4e887286d0504cb5722b1da9a4eac06d6ea434977af7216dbf1f6217c285838)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = interfaceinvoke $r3.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()


	 in Method: com.google.common.hash.HashCode hashBytes(byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6dfe92fb5526abc60bb706d9a02bc7267374c73eb4cfabeec75ce74a35a0603d)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $r3 = interfaceinvoke $r2.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f4e887286d0504cb5722b1da9a4eac06d6ea434977af7216dbf1f6217c285838)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = interfaceinvoke $r2.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()


Findings in Java Class: com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher

	 in Method: com.google.common.hash.HashCode hash()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #f4e887286d0504cb5722b1da9a4eac06d6ea434977af7216dbf1f6217c285838)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #f4e887286d0504cb5722b1da9a4eac06d6ea434977af7216dbf1f6217c285838)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: io.netty.handler.codec.http.websocketx.WebSocketUtil$2

	 in Method: java.security.MessageDigest initialValue()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ccb2e304b71915a499d618924325dc1d3e785a64e0e105a6ad517982d8a205af)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer69108)


Findings in Java Class: io.netty.util.concurrent.FastThreadLocal

	 in Method: void addToVariablesToRemove(io.netty.util.internal.InternalThreadLocalMap,io.netty.util.concurrent.FastThreadLocal)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ccb2e304b71915a499d618924325dc1d3e785a64e0e105a6ad517982d8a205af)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ca14103144d10e160f1418e357e07d5bc25cba7ddac63a3e26c68d28de749dde)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #7bf86b0db422f7052c3cfa714b005be4ee9e3722f000cd8097418f1ad9362b1e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r1)


Findings in Java Class: io.netty.util.internal.InternalThreadLocalMap

	 in Method: boolean setIndexedVariable(int,java.lang.Object)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ccb2e304b71915a499d618924325dc1d3e785a64e0e105a6ad517982d8a205af)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r2 = r0.<io.netty.util.internal.InternalThreadLocalMap: java.lang.Object[] indexedVariables>

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ca14103144d10e160f1418e357e07d5bc25cba7ddac63a3e26c68d28de749dde)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r2 = r0.<io.netty.util.internal.InternalThreadLocalMap: java.lang.Object[] indexedVariables>

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #7bf86b0db422f7052c3cfa714b005be4ee9e3722f000cd8097418f1ad9362b1e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r2 = r0.<io.netty.util.internal.InternalThreadLocalMap: java.lang.Object[] indexedVariables>


Findings in Java Class: io.netty.handler.codec.http.websocketx.WebSocketUtil$1

	 in Method: java.security.MessageDigest initialValue()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ca14103144d10e160f1418e357e07d5bc25cba7ddac63a3e26c68d28de749dde)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer69110)


Findings in Java Class: io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1

	 in Method: java.security.MessageDigest initialValue()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7bf86b0db422f7052c3cfa714b005be4ee9e3722f000cd8097418f1ad9362b1e)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer69114)


Findings in Java Class: okhttp3.internal.platform.ConscryptPlatform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #bd21cb3570793a45b4a94d6d679c23bcf27088e5b99b55a7f7a0da67333aef1f)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer73176, $r2)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer65642)


	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer65666, $r3, varReplacer65666)


Findings in Java Class: okhttp3.internal.platform.Platform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #82d6bb50d9aa45fa4a88e559ff7c6b614e083e81b1a461f11a9776c4ec81d231)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer73178)


	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer65670, $r3, varReplacer65670)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer65670, $r3, varReplacer65670)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer65670, $r3, varReplacer65670)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer65648)


Findings in Java Class: okhttp3.internal.platform.BouncyCastlePlatform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #113ce7d2d6774126cc6ba5b35ef470191f4665097f551c83d4e9f6c8fc483421)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer73181, $r2)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer65658)


Findings in Java Class: okhttp3.Cache$Entry

	 in Method: java.util.List readCertificateList(okio.BufferedSource)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #75e8124607849457843fff72fd162d004b6089ae574a6f0b87f5273cc12ee782)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r6 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer76346)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #75e8124607849457843fff72fd162d004b6089ae574a6f0b87f5273cc12ee782)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r11 = virtualinvoke $r6.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r10)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #75e8124607849457843fff72fd162d004b6089ae574a6f0b87f5273cc12ee782)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r11 = virtualinvoke $r6.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r10)


Findings in Java Class: io.netty.handler.ssl.Java9SslUtils

	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer77099, varReplacer77099, varReplacer77099)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer77099, varReplacer77099, varReplacer77099)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #78645459c58df3a84ad907d25b74547b9d21019497e6ab1616a989a4e251000f)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer77098)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer77099, varReplacer77099, varReplacer77099)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateImpl

	 in Method: void doVerify(java.security.PublicKey,org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator)
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #e9e8cb8ac81d36b794392d6ba6f9b8fc3971cab30eab75fc8d3ba1c7a3fee18c)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #bb3e4b3d0e509f0c0a3496d9de661c169fc3a1f90b1ad1ea71cf860bf05d0744)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #79c336de81c921f1ea057560928e61c40104b4c1212f5587a8a0631ff36224ca)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #e6c86e62f2a45fdca03169241f9cc04a210ef3982aa5c101b35f406ee1a95576)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #699705b7782404721061643f7b5ab151bbfbf05df467e4b36c8c100dfb31d1aa)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #3d7e5a90b7faeaf46d7a1c79a9933f96b4f03e47a1f3f9eb05e4fc884d6a5f72)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #14ead5b41e52dcc0971ab3bbf6947b9738bc0cfa14d4e782ddd7a129f6301c26)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #97be8dab0496858e66e093fcd45a46436fbb0aea4da2b5c43d783b70ed2fc426)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #d16ebf62a60d8aa8f6194474fc6146539ac5c18bef47975ccaff739c39080269)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #9bdbc70b91d84215e77e2ee317e4a584498eaf7fe8252c2f59e6b037d2be2ede)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #320a8e49b02c7b5ef28d8e1d6e1aef5eaf411acb11bb48484f97b1df889bd738)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #66f26381b2b186fbed59de5f1091ee81e1ff14794fdb45154aac9feab8965356)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = interfaceinvoke $r5.<org.bouncycastle.jcajce.provider.asymmetric.x509.SignatureCreator: java.security.Signature createSignature(java.lang.String)>($r16)


	 in Method: void checkSignature(java.security.PublicKey,java.security.Signature,org.bouncycastle.asn1.ASN1Encodable,byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r2)


Findings in Java Class: io.netty.handler.ssl.JdkSslClientContext

	 in Method: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f276ac9942c2d5ec5d0e38078e9cf7f2129e7987c118a0247261af5cd83e75dc)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer80574, $r2)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r10, $r11, varReplacer80575)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r10, $r11, varReplacer80575)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #34fe2be0bf90a0f2c4d54bac39cb69c86c6d763c2350f280485d4e42457e5326)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer80577)


Findings in Java Class: io.netty.handler.ssl.OpenSslX509TrustManagerWrapper

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #3460aa463eb894d5b675e4355c837dc90dd6c665b57f86274ab914b2a0496f48)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer80627)


	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer80611, $r11, varReplacer80611)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer80611, $r11, varReplacer80611)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer80611, $r11, varReplacer80611)


Findings in Java Class: io.netty.handler.ssl.SslContext

	 in Method: javax.net.ssl.KeyManagerFactory buildKeyManagerFactory(java.security.KeyStore,java.lang.String,char[],javax.net.ssl.KeyManagerFactory)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #9f44c18a7b7aca5aa9492f380ea0ee7d7bf32a572f2a664b930ec6ca683f35c5)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r0, $r2)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #9f44c18a7b7aca5aa9492f380ea0ee7d7bf32a572f2a664b930ec6ca683f35c5)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r0, $r2)


Findings in Java Class: io.netty.handler.ssl.JdkSslServerContext

	 in Method: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r11, $r12, varReplacer80656)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #1c38b1f447da2bec1e5c9e1a8638af806edce0eb1cf38ebe8ea076ab7c6b3524)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer80654)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #8a1fe2d2afc41d7488cf64ec16751590dc2ea919f7f16b7f0bbcfe93bbe3fd41)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer80651, $r2)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r11, $r12, varReplacer80656)


Findings in Java Class: com.guardanis.applock.services.FingerprintLockService

	 in Method: void attemptFingerprintManagerAuthentication(android.content.Context,com.guardanis.applock.services.FingerprintLockService$AuthenticationDelegate)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #54119171c7b454e3cfb5ac92f8dabe3246a78f4b95cf104502a6abf4210a84ed)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to getInstance
			at statement: virtualinvoke $r7.<androidx.core.hardware.fingerprint.FingerprintManagerCompat: void authenticate(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,androidx.core.os.CancellationSignal,androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler)>($r2, varReplacer73078, $r3, $r4, varReplacer73079)


Findings in Java Class: com.guardanis.applock.utils.CipherGenerator

	 in Method: javax.crypto.Cipher generateAuthCipher(android.content.Context,boolean,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer80838, $r11)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #65015552bf1826284719127ebf40e85d75172fdcfa8e8d30b2782cbeff88238f)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer80839)


Findings in Java Class: io.netty.handler.ssl.JdkSslContext

	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer82725, varReplacer82725, varReplacer82725)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer82725, varReplacer82725, varReplacer82725)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #9d2d84d94470805fe708cddeddadda394fe012f4eaa8eee7abf7de861aadac31)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer82721)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer82725, varReplacer82725, varReplacer82725)


	 in Method: java.util.Set supportedCiphers(javax.net.ssl.SSLEngine)
		TypestateError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #fa3cf8dcf2d83c4aa0f5f0eafac09ac9d086f4235ea298c2eb53ff68e703eac1)
			Unexpected call to method setEnabledCipherSuites on object of type javax.net.ssl.SSLEngine. Expect a call to one of the following methods clearPassword
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLEngine: void setEnabledCipherSuites(java.lang.String[])>($r6)


	 in Method: void <init>(javax.net.ssl.SSLContext,boolean,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #fa3cf8dcf2d83c4aa0f5f0eafac09ac9d086f4235ea298c2eb53ff68e703eac1)
			Operation on object of type javax.net.ssl.SSLEngine object not completed. Expected call to clearPassword
			at statement: staticinvoke <io.netty.util.ReferenceCountUtil: boolean release(java.lang.Object)>($r14)


Findings in Java Class: io.netty.handler.codec.haproxy.HAProxyMessage

	 in Method: void deallocate()
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #fa3cf8dcf2d83c4aa0f5f0eafac09ac9d086f4235ea298c2eb53ff68e703eac1)
			Operation on object of type javax.net.ssl.SSLEngine object not completed. Expected call to clearPassword
			at statement: interfaceinvoke $r5.<io.netty.util.ResourceLeakTracker: boolean close(java.lang.Object)>(r0)


Findings in Java Class: io.netty.handler.codec.mqtt.MqttPublishMessage

	 in Method: io.netty.buffer.ByteBuf content()
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #fa3cf8dcf2d83c4aa0f5f0eafac09ac9d086f4235ea298c2eb53ff68e703eac1)
			Operation on object of type javax.net.ssl.SSLEngine object not completed. Expected call to clearPassword
			at statement: $r1 = specialinvoke r0.<io.netty.handler.codec.mqtt.MqttMessage: java.lang.Object payload()>()


Findings in Java Class: io.netty.util.ResourceLeakDetector$DefaultResourceLeak

	 in Method: boolean close(java.lang.Object)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #fa3cf8dcf2d83c4aa0f5f0eafac09ac9d086f4235ea298c2eb53ff68e703eac1)
			Operation on object of type javax.net.ssl.SSLEngine object not completed. Expected call to clearPassword
			at statement: staticinvoke <io.netty.util.ResourceLeakDetector$DefaultResourceLeak: void reachabilityFence0(java.lang.Object)>($r1)


Findings in Java Class: io.netty.handler.ssl.ReferenceCountedOpenSslEngine

	 in Method: void setEnabledCipherSuites(java.lang.String[])
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #fa3cf8dcf2d83c4aa0f5f0eafac09ac9d086f4235ea298c2eb53ff68e703eac1)
			Operation on object of type javax.net.ssl.SSLEngine object not completed. Expected call to clearPassword
			at statement: $z0 = specialinvoke r0.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine: boolean isDestroyed()>()


	 in Method: javax.crypto.spec.SecretKeySpec masterKey()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer54123)


Findings in Java Class: io.netty.util.internal.ReferenceCountUpdater

	 in Method: boolean retryRelease0(io.netty.util.ReferenceCounted,int)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #fa3cf8dcf2d83c4aa0f5f0eafac09ac9d086f4235ea298c2eb53ff68e703eac1)
			Operation on object of type javax.net.ssl.SSLEngine object not completed. Expected call to clearPassword
			at statement: $i1 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: int get(java.lang.Object)>($r1)


Findings in Java Class: io.netty.handler.ssl.ReferenceCountedOpenSslServerContext

	 in Method: io.netty.handler.ssl.OpenSslServerSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #3b80fac0b5bb98178f7aad616cf6f46ce4843933637dad1d2380b3118572829d)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke $r38.<io.netty.handler.ssl.OpenSslX509KeyManagerFactory: void <init>()>()

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #cd95ac08401507b4f1df55c079f4647037409d923f160e9cd8d6cfb051f9c73f)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke $r38.<io.netty.handler.ssl.OpenSslX509KeyManagerFactory: void <init>()>()

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r22.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer82782)

		TypestateError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #d00b93e2065e292e9e215168340c984ec86f4f81d60085fe65d96a22ac978723)
			Unexpected call to method getTrustManagers on object of type javax.net.ssl.TrustManagerFactory. Expect a call to one of the following methods init
			at statement: $r23 = virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()


Findings in Java Class: io.netty.handler.ssl.ReferenceCountedOpenSslClientContext

	 in Method: io.netty.handler.ssl.OpenSslSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #3b80fac0b5bb98178f7aad616cf6f46ce4843933637dad1d2380b3118572829d)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke $r30.<io.netty.handler.ssl.OpenSslX509KeyManagerFactory: void <init>()>()

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #cd95ac08401507b4f1df55c079f4647037409d923f160e9cd8d6cfb051f9c73f)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke $r30.<io.netty.handler.ssl.OpenSslX509KeyManagerFactory: void <init>()>()

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r22.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer80552)


Findings in Java Class: io.netty.handler.ssl.JdkSslEngine

	 in Method: void setEnabledCipherSuites(java.lang.String[])
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #b257e9833cfed48894dcc7e4196e496d46be6bf84436c83e890144d4cf7619d9)
			Operation on object of type javax.net.ssl.SSLEngine object not completed. Expected call to clearPassword
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLEngine: void setEnabledCipherSuites(java.lang.String[])>($r1)


Findings in Java Class: okhttp3.internal.platform.OpenJSSEPlatform

	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer65653)


Findings in Java Class: com.google.common.hash.MacHashFunction

	 in Method: javax.crypto.Mac getMac(java.lang.String,java.security.Key)
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void init(java.security.Key)>($r2)


Findings in Java Class: org.bouncycastle.jce.provider.X509CertificateObject

	 in Method: void checkSignature(java.security.PublicKey,java.security.Signature)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r2.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: org.bouncycastle.jce.provider.X509SignatureUtil

	 in Method: void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)
		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r4)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil

	 in Method: void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)
		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: virtualinvoke $r5.<java.security.AlgorithmParameters: void init(byte[])>($r7)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 113

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 33
	IncompleteOperationError: 44
	ConstraintError: 18
	TypestateError: 10
	HardCodedError: 1
	NeverTypeOfError: 1
=====================================================================
