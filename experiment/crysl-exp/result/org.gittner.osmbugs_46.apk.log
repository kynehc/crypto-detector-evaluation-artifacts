0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer34597)
		Method: <org.apache.http.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: 9fece8a0da7b5143bd3162b7178529ecefc0a8ba018cec38299901e7ed3de053
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: 680c47ea8368fb5330a6512f392b4c24181a0f8e9f968ac96396d96fdc643e03
		Secure: true
	Object:
		Variable: $r7
		Type: java.net.PasswordAuthentication
		Statement: specialinvoke $r7.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r4, $r8)
		Method: <org.apache.http.impl.client.SystemDefaultCredentialsProvider: java.net.PasswordAuthentication getProxyCredentials(java.lang.String,org.apache.http.auth.AuthScope)>
		SHA-256: 54269faa48899bf6e1a1c59e5fe7efd8baaaeb98c5de10c15ef29445a85aa752
		Secure: false
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke $r25.<java.security.MessageDigest: byte[] digest(byte[])>($r24)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: d6819f5a090592a9c309f7dee8c1d3060c928c197153632cc3c4595ac59ae53a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer46732)
		Method: <com.google.android.play.core.splitcompat.p: java.lang.String b(byte[])>
		SHA-256: 9b422d960c1bcaaaa3bb70798848d292b7af0800c27f271c8510371e7f7da656
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer63325)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: dcd3ea36408c56c7359a331378a81bf839646b03539b80d382a54f9fe42a462a
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Mac
		Statement: $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer38869)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 44638a95b2d4a129820bea12047322f30949e01c8d44c7da21cde63c35f36aa7
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r7.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5)
		Method: <oauth.signpost.signature.HmacSha256MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 8daa49230f4aa8e4d06b164bf789a3f1e7958d174ce14dde933a66c5b0ddc6e6
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer38860)
		Method: <oauth.signpost.signature.HmacSha256MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 2d734a457433e0db95b40f99e09db2d2f044f703c96b0b6fa71c75f369dc86c2
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>
		SHA-256: 87142a8c4369ab14d23fa8690b807f0d900b1807831c8c0f8e6b4de4b8735e3b
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer63315)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: b3bfe59c9a407abf6b5e12409175dd6be110e7c1dfcce9aa650592961cf5ed0d
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer53643)
		Method: <com.github.scribejava.core.services.HMACSha1SignatureService: java.lang.String doSign(java.lang.String,java.lang.String)>
		SHA-256: ee6b9e0c4633f9a58ca03283075a98adfc1d844428eef96bfcd6d608a4d51136
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.http.impl.auth.HttpEntityDigester: void close()>
		SHA-256: 6e2f49082bf8a753b36c08d597efa7282d12c9a9b9a86cb704dfeec77e918e7c
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r6)
		Method: <com.google.android.play.core.internal.i: byte[][] n(int[],com.google.android.play.core.internal.c[])>
		SHA-256: adb5dd05016cf0b339c5956a76e75811031ab2595b745e98e0b388b6f0785216
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.google.android.play.core.internal.i: byte[][] n(int[],com.google.android.play.core.internal.c[])>
		SHA-256: 98878541baafc9dd6332a55aae1ca8dd15c0ed4fc254b2b0aef718dc6b1c67e
		Secure: true
	Object:
		Variable: varReplacer38872
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer38872)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 706d74433036d016eed5e29cd37aae3da91b45d249827c46c16de2c50ddaced1
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r7.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: bece1140c0577cf6f297d91e1b0ca43d0606b323d3d9a50af430d2391ba581cd
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r4)
		Method: <com.github.scribejava.core.services.HMACSha1SignatureService: java.lang.String doSign(java.lang.String,java.lang.String)>
		SHA-256: 516fc8e4737b146b7fabb6e7773235d6eb04664caa3183dca389bb730211d7d2
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Mac
		Statement: $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer38862)
		Method: <oauth.signpost.signature.HmacSha256MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: cda7fb75f902933a9baa2bcaf571454c6072a263cf61e980d3d2276dbda41b41
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer63259)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: 52b0dee77add329d69b516b0e0303870f23a5a4dfa03a45f83bee8fd650c9dd1
		Secure: true
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke $r25.<java.security.MessageDigest: byte[] digest(byte[])>($r24)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: d6819f5a090592a9c309f7dee8c1d3060c928c197153632cc3c4595ac59ae53a
		Secure: false
	Object:
		Variable: varReplacer53647
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer53647)
		Method: <com.github.scribejava.core.services.HMACSha1SignatureService: java.lang.String doSign(java.lang.String,java.lang.String)>
		SHA-256: 5a23ac3f3b1be146f5c91251ca4f5063d1e19dc08f6481894313c274bbf0a183
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.play.core.splitcompat.p: java.lang.String b(byte[])>
		SHA-256: aa83f445c53f2ac466aed5cd30a9df4345a76a77e47415f523384d040a50d529
		Secure: true
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke $r25.<java.security.MessageDigest: byte[] digest(byte[])>($r24)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: d6819f5a090592a9c309f7dee8c1d3060c928c197153632cc3c4595ac59ae53a
		Secure: false
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke $r16.<java.security.MessageDigest: byte[] digest(byte[])>($r24)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: d36648b94075615d212b0236bc5cdfc92309766fe7b341b21d50caf50b71db90
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer38872)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 52f08e0624f65f6bda5418815519578d63ea5c990087e4e6c385678e89aa3511
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: 7f633aab27c580a5c0fc6c5d05050debe1a3f35a224ea39fdf4f1240ed29d56
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r24.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <com.google.android.play.core.internal.i: java.security.cert.X509Certificate[] l(java.nio.ByteBuffer,java.util.Map,java.security.cert.CertificateFactory)>
		SHA-256: a0712033a46f31c952e0ecdcc6d7150f6961ac3bbb78a61b089ad4d1e122fedf
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $i2 = virtualinvoke $r7.<java.security.MessageDigest: int digest(byte[],int,int)>($r10, $i2, $i11)
		Method: <com.google.android.play.core.internal.i: byte[][] n(int[],com.google.android.play.core.internal.c[])>
		SHA-256: aeb5957810e76f65024899e7dc108f15ce8cfd65154b9f8279e64ba1dbf372eb
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 3bcbf4d912455255294e9bee4d91f33f3fa55dd4a67dc970c48252366cf97c1f
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 8dda2f10cd4911a51ea6f84d756034bbd2b170b00e8eb73d84894dc35d4275e0
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.cert.CertificateFactory
		Statement: $r4 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer35882)
		Method: <com.google.android.play.core.internal.i: java.security.cert.X509Certificate[][] k(java.nio.channels.FileChannel,com.google.android.play.core.internal.e)>
		SHA-256: 17f828ecc6fb0ac28365dae5dadef0bff67df98c8340234605735cad89990564
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer62665)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 5ba2c3968f2e42efe27232b14ed47d502533174d700b39c5843ab3645a8b0058
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r6)
		Method: <com.google.android.play.core.internal.i: byte[][] n(int[],com.google.android.play.core.internal.c[])>
		SHA-256: adb5dd05016cf0b339c5956a76e75811031ab2595b745e98e0b388b6f0785216
		Secure: true
	Object:
		Variable: $r21
		Type: java.security.KeyFactory
		Statement: $r21 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r15)
		Method: <com.google.android.play.core.internal.i: java.security.cert.X509Certificate[] l(java.nio.ByteBuffer,java.util.Map,java.security.cert.CertificateFactory)>
		SHA-256: 5e07fb8aed4afd26c4e7c07a0eb64a665824cfe8c8f17c03c9bff698892431e4
		Secure: false
	Object:
		Variable: $r23
		Type: java.security.PublicKey
		Statement: $r23 = virtualinvoke $r21.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r22)
		Method: <com.google.android.play.core.internal.i: java.security.cert.X509Certificate[] l(java.nio.ByteBuffer,java.util.Map,java.security.cert.CertificateFactory)>
		SHA-256: 9297badfb884db38e75f3aea716f2d3771b55b2d36a789000460f002b7d31d9d
		Secure: false
	Object:
		Variable: varReplacer63315
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer63315)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: addb276ea88dde241b899bf2acf6b441ab9eadf3577164afab8cdd3e4770d61d
		Secure: false
	Object:
		Variable: varReplacer38860
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer38860)
		Method: <oauth.signpost.signature.HmacSha256MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 4ddcb8d8b28b0b704d3102b2b4965a616f80d2b9f363157b20fecb014ac3c945
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer34994)
		Method: <com.google.android.play.core.assetpacks.ck: java.lang.String a(java.util.List)>
		SHA-256: a4bf5a1e6355370dfca41d437218ce9e082b1f5ec2f1222c86b71d54bebfd6f1
		Secure: false
	Object:
		Variable: $r22
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r22.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r5)
		Method: <com.google.android.play.core.internal.i: java.security.cert.X509Certificate[] l(java.nio.ByteBuffer,java.util.Map,java.security.cert.CertificateFactory)>
		SHA-256: f1313e4d6e0094bc475ee8e3f5ddeee27bd54772ab64bd73f96e5856ed2e27e5
		Secure: false
	Object:
		Variable: $r24
		Type: java.security.Signature
		Statement: $r24 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r13)
		Method: <com.google.android.play.core.internal.i: java.security.cert.X509Certificate[] l(java.nio.ByteBuffer,java.util.Map,java.security.cert.CertificateFactory)>
		SHA-256: 5cc387c0e1ae0a58d0ff12bffaa2b919b68e326929d207d1262d881044049cb0
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer63288)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: c3965508d9d3078184506b3088373918fc87a225da8b3cafc8c51035144ce1a5
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer53647)
		Method: <com.github.scribejava.core.services.HMACSha1SignatureService: java.lang.String doSign(java.lang.String,java.lang.String)>
		SHA-256: 8152cf2951cabbda5c76ef269e60a29c9efade7e8558c4f5d48ca86575aa561
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer12014)
		Method: <com.github.kittinunf.fuel.core.FuelManager$socketFactory$2: javax.net.ssl.SSLSocketFactory invoke()>
		SHA-256: 3b2571111aa02fc79c4405661e9cea2b02ccff6998e048b8629933ec5c88066f
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>
		SHA-256: d5cf1f8de9a5f17cad5006e43f64e63b02f8f56706a9e139ea0baeb6f7532b60
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: a96b5c4940720f614ff024bce557b32cb3bf119f3666a750be2184fd24f8a784
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.cert.CertificateFactory
		Statement: $r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer35870)
		Method: <com.google.android.play.core.internal.av: java.security.cert.X509Certificate e(android.content.pm.Signature)>
		SHA-256: 7a5c4c3a4f93b58a10f6b99449f6c08dccfdb074c68cd88ff34f2cd35265677e
		Secure: false
	Object:
		Variable: varReplacer62663
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer62663)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 8adba6ac0bf7f8742c10860cb2a797f7ce2571351aaa5f8ad9cddf0a0cebd6ee
		Secure: false
	Object:
		Variable: $r15
		Type: java.lang.String
		Statement: $r21 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r15)
		Method: <com.google.android.play.core.internal.i: java.security.cert.X509Certificate[] l(java.nio.ByteBuffer,java.util.Map,java.security.cert.CertificateFactory)>
		SHA-256: ebd0e6ac0d620954c2102ff8d2cd93c926bc7636bb436032ad0ca3b2ddd7f019
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r4.<java.security.Signature: byte[] sign()>()
		Method: <com.github.scribejava.core.services.RSASha1SignatureService: java.lang.String getSignature(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 42b38bde5473bc23a9307b7c031e95eb6399762b6144d957ab7a96355d030658
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer49669)
		Method: <com.github.scribejava.core.services.RSASha1SignatureService: java.lang.String getSignature(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: f60733da3d500ddfb87bfac3169c1471722cd5a7102ceb23f407423f4863080e
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $z0 = virtualinvoke $r24.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <com.google.android.play.core.internal.i: java.security.cert.X509Certificate[] l(java.nio.ByteBuffer,java.util.Map,java.security.cert.CertificateFactory)>
		SHA-256: 83b90bf1133fa37afb25f6a8052dc455f484075545f7dedfbd3317bd069f2e97
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r4 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r3)
		Method: <com.github.kittinunf.fuel.core.FuelManager$socketFactory$2: javax.net.ssl.SSLSocketFactory invoke()>
		SHA-256: fd82073dbb84cf16934867a67c05cb8d37ccb9f881d0fe2657626abbc1c940e1
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 51809b40f955da1fb4b3dcfeefebf59f1dd607b449e09656926351c68b1d5de6
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: bbd35c0b9cc04d0eef73b2ad76dd3b0c8a90eec8bc1cf0e85b5f6d07c31b38bf
		Secure: true
	Object:
		Variable: $r6
		Type: javax.net.ssl.TrustManager[]
		Statement: $r6 = virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.github.kittinunf.fuel.core.FuelManager$socketFactory$2: javax.net.ssl.SSLSocketFactory invoke()>
		SHA-256: bd6ca2c2c99dab9af42ccf65c788dd3e33ad24c0f4c9f02b5def422342115f1d
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer63255)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: java.security.MessageDigest getMD5()>
		SHA-256: a1b53cc784a5d7632a45c2dcbddefb7b53440bf1d4cfd12f4867bed7684c19d4
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: $r3 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer58417)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: void <clinit>()>
		SHA-256: 14e2750b186e1e833f12bd0d507786ab0f5d9a71652ccb3b3a4dc70649a6e4e9
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer63287)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 9438188192b74d25041d9381c4f98977db45e4b37ccd56948042c31a734fab3
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.play.core.assetpacks.ck: java.lang.String a(java.util.List)>
		SHA-256: dc978efcce025a3e644a2e792a560cc1c76f5d2ebeb335d527013e1e9fe24823
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer62663)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 6385e68208c6bf55b9a41936b3216bb669fa3851d74e903d971cbf1e81b48f9d
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer63858)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: 1dad6f8263da9b626db5067fdb48e74c5074101b3834d4b2fb04a3e71231411f
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: f6730166425cdde60c0ca0f7f01862a2b9705ad5b213be5cd1a19bc89976254d
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <org.apache.http.impl.auth.DigestScheme: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd
		Secure: false

Findings in Java Class: com.github.kittinunf.fuel.core.FuelManager$socketFactory$2

	 in Method: javax.net.ssl.SSLSocketFactory invoke()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12015, $r6, varReplacer12015)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r2)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12015, $r6, varReplacer12015)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #3b2571111aa02fc79c4405661e9cea2b02ccff6998e048b8629933ec5c88066f)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer12014)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12015, $r6, varReplacer12015)


Findings in Java Class: org.apache.http.conn.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createDefault()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer34594, varReplacer34594, varReplacer34594)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer34594, varReplacer34594, varReplacer34594)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer34594, varReplacer34594, varReplacer34594)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #9fece8a0da7b5143bd3162b7178529ecefc0a8ba018cec38299901e7ed3de053)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer34597)


Findings in Java Class: com.google.android.play.core.assetpacks.ck

	 in Method: java.lang.String a(java.util.List)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a4bf5a1e6355370dfca41d437218ce9e082b1f5ec2f1222c86b71d54bebfd6f1)
			First parameter (with value "SHA256") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer34994)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #a4bf5a1e6355370dfca41d437218ce9e082b1f5ec2f1222c86b71d54bebfd6f1)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.google.android.play.core.internal.av

	 in Method: java.security.cert.X509Certificate e(android.content.pm.Signature)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #7a5c4c3a4f93b58a10f6b99449f6c08dccfdb074c68cd88ff34f2cd35265677e)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r4 = virtualinvoke $r1.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r2)


Findings in Java Class: com.google.android.play.core.internal.i

	 in Method: java.security.cert.X509Certificate[] l(java.nio.ByteBuffer,java.util.Map,java.security.cert.CertificateFactory)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r24.<java.security.Signature: void initVerify(java.security.PublicKey)>($r23)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r22.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r23 = virtualinvoke $r21.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r22)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #17f828ecc6fb0ac28365dae5dadef0bff67df98c8340234605735cad89990564)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r29 = virtualinvoke $r2.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r28)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #17f828ecc6fb0ac28365dae5dadef0bff67df98c8340234605735cad89990564)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r29 = virtualinvoke $r2.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r28)


	 in Method: java.security.cert.X509Certificate[][] k(java.nio.channels.FileChannel,com.google.android.play.core.internal.e)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #17f828ecc6fb0ac28365dae5dadef0bff67df98c8340234605735cad89990564)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r7 = staticinvoke <com.google.android.play.core.internal.i: java.security.cert.X509Certificate[] l(java.nio.ByteBuffer,java.util.Map,java.security.cert.CertificateFactory)>($r6, $r3, $r4)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #17f828ecc6fb0ac28365dae5dadef0bff67df98c8340234605735cad89990564)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r4 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer35882)


	 in Method: byte[][] n(int[],com.google.android.play.core.internal.c[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #adb5dd05016cf0b339c5956a76e75811031ab2595b745e98e0b388b6f0785216)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to java.security.MessageDigest: int digest(byte[],int,int), update, java.security.MessageDigest: byte[] digest(byte[]), java.security.MessageDigest: byte[] digest()
			at statement: $i2 = virtualinvoke $r7.<java.security.MessageDigest: int digest(byte[],int,int)>($r10, $i2, $i11)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #adb5dd05016cf0b339c5956a76e75811031ab2595b745e98e0b388b6f0785216)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r6)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #adb5dd05016cf0b339c5956a76e75811031ab2595b745e98e0b388b6f0785216)
			Unexpected call to method <java.security.MessageDigest: int digest(byte[],int,int)> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $i2 = virtualinvoke $r7.<java.security.MessageDigest: int digest(byte[],int,int)>($r10, $i2, $i11)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #adb5dd05016cf0b339c5956a76e75811031ab2595b745e98e0b388b6f0785216)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r2.<com.google.android.play.core.internal.c: void b(java.security.MessageDigest[],long,int)>($r5, $l5, $i9)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #adb5dd05016cf0b339c5956a76e75811031ab2595b745e98e0b388b6f0785216)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to java.security.MessageDigest: int digest(byte[],int,int), update, java.security.MessageDigest: byte[] digest(byte[]), java.security.MessageDigest: byte[] digest()
			at statement: $r4 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r4)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #adb5dd05016cf0b339c5956a76e75811031ab2595b745e98e0b388b6f0785216)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r5 = newarray (java.security.MessageDigest)[$i4]


Findings in Java Class: oauth.signpost.signature.HmacSha1MessageSigner

	 in Method: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer38872)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Mac: void init(java.security.Key)>($r6)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #44638a95b2d4a129820bea12047322f30949e01c8d44c7da21cde63c35f36aa7)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer38869)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #52f08e0624f65f6bda5418815519578d63ea5c990087e4e6c385678e89aa3511)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer38872)


Findings in Java Class: com.github.scribejava.core.services.RSASha1SignatureService

	 in Method: java.lang.String getSignature(java.lang.String,java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #f60733da3d500ddfb87bfac3169c1471722cd5a7102ceb23f407423f4863080e)
			First parameter (with value "SHA1withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer49669)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initSign(java.security.PrivateKey)>($r5)


Findings in Java Class: org.apache.http.impl.client.SystemDefaultCredentialsProvider

	 in Method: java.net.PasswordAuthentication getProxyCredentials(java.lang.String,org.apache.http.auth.AuthScope)
		NeverTypeOfError violating CrySL rule for java.net.PasswordAuthentication (on Object #54269faa48899bf6e1a1c59e5fe7efd8baaaeb98c5de10c15ef29445a85aa752)
			Second parameter should never be of type java.lang.String.
			at statement: specialinvoke $r7.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r4, $r8)

		HardCodedError violating CrySL rule for java.net.PasswordAuthentication (on Object #54269faa48899bf6e1a1c59e5fe7efd8baaaeb98c5de10c15ef29445a85aa752)
			Second parameter should never be hardcoded.
			at statement: specialinvoke $r7.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r4, $r8)

		NeverTypeOfError violating CrySL rule for java.net.PasswordAuthentication (on Object #54269faa48899bf6e1a1c59e5fe7efd8baaaeb98c5de10c15ef29445a85aa752)
			Second parameter should never be of type java.lang.String.
			at statement: specialinvoke $r7.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r4, $r8)

		HardCodedError violating CrySL rule for java.net.PasswordAuthentication (on Object #54269faa48899bf6e1a1c59e5fe7efd8baaaeb98c5de10c15ef29445a85aa752)
			Second parameter should never be hardcoded.
			at statement: specialinvoke $r7.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r4, $r8)


Findings in Java Class: com.github.scribejava.core.services.HMACSha1SignatureService

	 in Method: java.lang.String doSign(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #8152cf2951cabbda5c76ef269e60a29c9efade7e8558c4f5d48ca86575aa561)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer53647)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #ee6b9e0c4633f9a58ca03283075a98adfc1d844428eef96bfcd6d608a4d51136)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer53643)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Mac: void init(java.security.Key)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer53647)


Findings in Java Class: org.apache.http.impl.auth.DigestScheme

	 in Method: java.security.MessageDigest createMessageDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)


Findings in Java Class: org.apache.http.impl.auth.HttpEntityDigester

	 in Method: void write(byte[],int,int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd)
			Third parameter (with value 0)Variable preLenmust be  greater than 0
			at statement: virtualinvoke $r2.<java.security.MessageDigest: void update(byte[],int,int)>($r1, $i1, $i0)


	 in Method: void close()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.apache.http.impl.auth.NTLMEngineImpl

	 in Method: byte[] RC4(byte[],byte[])
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #6385e68208c6bf55b9a41936b3216bb669fa3851d74e903d971cbf1e81b48f9d)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer62663)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #6385e68208c6bf55b9a41936b3216bb669fa3851d74e903d971cbf1e81b48f9d)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer62663)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer62664, $r0)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #6385e68208c6bf55b9a41936b3216bb669fa3851d74e903d971cbf1e81b48f9d)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer62663)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5ba2c3968f2e42efe27232b14ed47d502533174d700b39c5843ab3645a8b0058)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer62665)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer62663)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #6385e68208c6bf55b9a41936b3216bb669fa3851d74e903d971cbf1e81b48f9d)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer62663)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #5ba2c3968f2e42efe27232b14ed47d502533174d700b39c5843ab3645a8b0058)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #6385e68208c6bf55b9a41936b3216bb669fa3851d74e903d971cbf1e81b48f9d)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer62663)


	 in Method: java.security.MessageDigest getMD5()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a1b53cc784a5d7632a45c2dcbddefb7b53440bf1d4cfd12f4867bed7684c19d4)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer63255)


	 in Method: java.security.Key createDESKey(byte[],int)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #b3bfe59c9a407abf6b5e12409175dd6be110e7c1dfcce9aa650592961cf5ed0d)
			Second parameter (with value "DES") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer63315)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer63315)


	 in Method: byte[] lmResponse(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #dcd3ea36408c56c7359a331378a81bf839646b03539b80d382a54f9fe42a462a)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer63325)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer63336, $r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #dcd3ea36408c56c7359a331378a81bf839646b03539b80d382a54f9fe42a462a)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


	 in Method: byte[] lmHash(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1dad6f8263da9b626db5067fdb48e74c5074101b3834d4b2fb04a3e71231411f)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer63858)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #1dad6f8263da9b626db5067fdb48e74c5074101b3834d4b2fb04a3e71231411f)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer63859, $r6)


Findings in Java Class: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen

	 in Method: byte[] getLanManagerSessionKey()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c3965508d9d3078184506b3088373918fc87a225da8b3cafc8c51035144ce1a5)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer63288)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer63286, $r4)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #c3965508d9d3078184506b3088373918fc87a225da8b3cafc8c51035144ce1a5)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #9438188192b74d25041d9381c4f98977db45e4b37ccd56948042c31a734fab3)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)


Findings in Java Class: oauth.signpost.signature.HmacSha256MessageSigner

	 in Method: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer38860)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Mac: void init(java.security.Key)>($r6)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 64

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 17
	IncompleteOperationError: 9
	TypestateError: 9
	HardCodedError: 2
	NeverTypeOfError: 6
	RequiredPredicateError: 23
=====================================================================
