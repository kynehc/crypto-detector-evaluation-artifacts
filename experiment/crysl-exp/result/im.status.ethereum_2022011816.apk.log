0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Alive 24068  5000
Alive 31333  5000
Alive 37812  5000
Alive 29730  5000
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer29864)
		Method: <com.facebook.react.modules.network.TLSSocketFactory: void <init>()>
		SHA-256: e77d661431147d8aaed6455967adbb7ec95ff56f95a1d1be5ecc085328d1c989
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.soloader.SoLoader$1: java.lang.String getLibHash(java.lang.String)>
		SHA-256: 842121e9d253cdf6db0e404fe95695ee0d6b5963fa7b8ac61ed9211e05a20b7c
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r10.<javax.crypto.KeyAgreement: byte[] generateSecret()>()
		Method: <im.status.keycard.applet.SecureChannelSession: void generateSecret(byte[])>
		SHA-256: cb79251413ffd4acd976032d63d738ee6d352df094f52ab77016c139b6dd3ce4
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer36680)
		Method: <im.status.keycard.applet.SecureChannelSession: byte[] oneShotEncrypt(byte[])>
		SHA-256: c3bcd518b78d68663d639f128dca89f5d9efdd17cfb5fc53172cbdfd67622e4b
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyFactory
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r8)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 6635af12fb8498a7bf018ada279831a6e3024bb07fe12c7daed2b6fbc372e6bb
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: cb79cd7b201479506b2f0eadb1108d9d0e823c44a83388b719962de82b4cd7cc
		Secure: false
	Object:
		Variable: varReplacer28269
		Type: int
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r6, $i0, varReplacer28269)
		Method: <im.status.keycard.applet.KeycardCommandSet: byte[] pairingPasswordToSecret(java.lang.String)>
		SHA-256: 3239891c8370d0171a6d932c75b8d75f1729d0ea124cb34713690afa7ddf3578
		Secure: false
	Object:
		Variable: varReplacer46138
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer46138)
		Method: <im.status.keycard.globalplatform.Crypto: byte[] macFull3des(byte[],byte[],byte[])>
		SHA-256: f577a2bc4609c33c9cb0c9f922266d3320d3d98035411cf37055750a1de143a6
		Secure: false
	Object:
		Variable: varReplacer45514
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer45514)
		Method: <im.status.keycard.applet.SecureChannelSession: void processOpenSecureChannelResponse(im.status.keycard.io.APDUResponse)>
		SHA-256: 262f694c1a2a611282bcdf850ed9898849bf856f76bdc21efde268addf60f545
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <im.status.keycard.applet.SecureChannelSession: void processOpenSecureChannelResponse(im.status.keycard.io.APDUResponse)>
		SHA-256: b42623fc693d3278210dcef6c70f2c33a4544451bee5ae2456a6196265188290
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: c9e1ff5450f21aae65af053d6ed29f81c5a7b267991078defbfa3059af0e266a
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <im.status.keycard.applet.SecureChannelSession: void autoPair(im.status.keycard.io.CardChannel,byte[])>
		SHA-256: e46244d771cb3cd815a8f1dc00b845688eed3824fb81685cd9ccd477fa73644c
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <im.status.keycard.applet.SecureChannelSession: byte[] encryptAPDU(byte[])>
		SHA-256: bcc05b6edc4c5902065debb254402bd2042fda9a22d47d4724adcf24ae3a0900
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.KeyAgreement
		Statement: $r10 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.lang.String)>(varReplacer34218, varReplacer34219)
		Method: <im.status.keycard.applet.SecureChannelSession: void generateSecret(byte[])>
		SHA-256: a0d36846e1621598658a96be7e67c56bd435421d518b2354e3db1b5a7e603b2
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r11, $r13, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,java.security.spec.ECParameterSpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration)>
		SHA-256: 3791d0e41e5884e70c40ed063afce31c8bbf57c28cb756f172c554e92147502c
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.cert.CertificateFactory
		Statement: $r0 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer65982)
		Method: <org.conscrypt.SSLUtils: java.security.cert.CertificateFactory getCertificateFactory()>
		SHA-256: 4250a9ec47cb1220df88a80b44858742124f6113d7bfb7daefa3a74be45f6888
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] generateSignature()>
		SHA-256: 153ecb1a57e7fd3a3f9212bf84d10102d6cb1bcca8396308797653bf2209f59c
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <im.status.keycard.globalplatform.GlobalPlatformCommandSet: void openSecureChannel(boolean)>
		SHA-256: 70c7f9c48250b9bb5283b2ba4efd62ecde99ff13c1beaebb525bc1919b828ba4
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.pqc.math.linearalgebra.GF2Matrix: void <init>(int,char)>
		SHA-256: f6029f09e7eaad0a79299673ca4a747029813212ccf99c394d2770a03fc5295a
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r4 = virtualinvoke $r1.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <im.status.keycard.applet.BIP32KeyPair: im.status.keycard.applet.BIP32KeyPair fromBinarySeed(byte[])>
		SHA-256: fc86360ad4f1e581b07b4ac61a89e230836ba520febdc9b3a428c4598a2a25b3
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.PublicKey
		Statement: $r6 = virtualinvoke $r14.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r12)
		Method: <im.status.keycard.applet.SecureChannelSession: void generateSecret(byte[])>
		SHA-256: 4f623dde7d3ea2f459373a7f63307f36d73c7aee159bd695122b98d8c574cb52
		Secure: false
	Object:
		Variable: $r8
		Type: java.lang.String
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r8)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: fb24971f565cb4681c3c1e192adc31a35b4a987353817f6def6d3d265ac75389
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: c908257ebef1e44e27421c3dc6127a4c79990e1515e273132ea2c2cb020fcdee
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.facebook.android.crypto.keychain.SecureRandomFix: void tryInstallLinuxPRNGSecureRandom()>
		SHA-256: 2376e6dc1519f744edd23e77e53d51a4a18899ef01a364c4e1cb5435f35f259d
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer45515, varReplacer45516)
		Method: <im.status.keycard.applet.SecureChannelSession: void processOpenSecureChannelResponse(im.status.keycard.io.APDUResponse)>
		SHA-256: af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 967c4f01112b22279695bcf89b6dc1c0b602dca9315f91b4be9227fd5d047c2a
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.AlgorithmParameters
		Statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r4)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil: void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)>
		SHA-256: 5542b69dc5336cc3d00547288fa7f3d8d3237d121f2ce57576e26391c36e1a8d
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.AlgorithmParameters
		Statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.X509SignatureUtil: void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)>
		SHA-256: 5542b69dc5336cc3d00547288fa7f3d8d3237d121f2ce57576e26391c36e1a8d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer54289)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 46a187b1248a66248082d14e30bb8ea1caa819c0bbb0263da7d4f5a6a3bddf60
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer46122)
		Method: <im.status.keycard.globalplatform.Crypto: byte[] ecb3des(byte[],byte[])>
		SHA-256: a6cd1739de11a0507354580d2c549c05049d97c1cc9e9512bd756fac37954777
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.PrivateKey
		Statement: $r11 = virtualinvoke $r5.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <im.status.keycard.applet.SecureChannelSession: void generateSecret(byte[])>
		SHA-256: 235fd4ef1d6b5cc09e9d6fb701634af03ec6502a84e64abc4a08e083fded786d
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>
		SHA-256: 55c0ef59d2e8f2d9e7c3b9d886f8a0561a8e9e82e242551a90594b801b63073c
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r7, varReplacer5142, varReplacer5143)
		Method: <im.status.keycard.applet.Mnemonic: byte[] toBinarySeed(java.lang.String,java.lang.String)>
		SHA-256: 56c5fe2b92e5bd7d1b2d50921daa4012693db93603646ea255a294e47f02abb7
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r17.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r14, $r15, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(org.bouncycastle.asn1.x9.X962Parameters,org.bouncycastle.math.ec.ECCurve)>
		SHA-256: 586465352ab9af4baa8bd6b84d1dc9d3dd1da757db32b3c2f23070a01ae1e9c0
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r1.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <im.status.keycard.applet.BIP32KeyPair: im.status.keycard.applet.BIP32KeyPair fromBinarySeed(byte[])>
		SHA-256: a5baadc7323fe5622ac0924b598c69e9173c51a5630f41e9e30ba422a1e997fd
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <im.status.keycard.applet.SecureChannelSession: void <init>()>
		SHA-256: aa0a8e05dc5072e0f422bfc8a565528fb5328a55f6aba61836223c0ae2b3ad12
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r13)
		Method: <org.bouncycastle.pqc.jcajce.provider.xmss.XMSSMTKeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 642b20980867fde35e949495a6570c7235d943d9503f4075de34752290065e8d
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: f325059ee6f08c9776202e677308b0f19ca0767a6821e36b4f64a531d072fa45
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: 52666556eb0b9e0106968c3639d610cef0bbf743129b6a2f13e952dd3c4ccbd6
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer36537, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: aec541a5af9b334dabde0369e7d10fc39c24eb3a8db7e1bd86c25b51ba2e2a34
		Secure: false
	Object:
		Variable: varReplacer46145
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer46145)
		Method: <im.status.keycard.globalplatform.Crypto: byte[] encryptICV(byte[],byte[])>
		SHA-256: bf67bdc44c555a259654682b5701adae2e4a41165711f4d5c7b44ff99eb1d270
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer29906)
		Method: <com.facebook.soloader.SoLoader$1: java.lang.String getLibHash(java.lang.String)>
		SHA-256: 5191b108021ada32a81b502eb03ce7c80faeabc8ab685d058233a155935ddeda
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <im.status.keycard.globalplatform.Crypto: byte[] mac3des(byte[],byte[],byte[])>
		SHA-256: ca83843592485faea59a1e967231607f39e689d7548611fb1d067d0902269271
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.KeyPair
		Statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: b9c461d81d3bc41eecc0783441f280f41b2f629e19018ff708aa15ce8ab9d299
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer36536, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: c9cde70333fc17061de7c87c3d00678e9327e3c9b4abde4a73ed5d33a4bb5f91
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r4, $r2)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: 4b73d9ea47b70e095beb17e2b4e8c62bcb1a3b70cdd913b654094befd6fbd016
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: dea0af93b06734ae35228a014521e6e031131dd2b357359826afa61f9a6de1b
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r3, $r6, $r7)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey: void <init>(org.bouncycastle.crypto.params.DSAPrivateKeyParameters)>
		SHA-256: 2d5d5ac1c460f68032e60a336ee4552b59000b4adb566ea09230715136a1ffd8
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)
		Method: <org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 17334494b52ec35b1326cfe9e6dde617617d7542d35ee9062a8472ea15417839
		Secure: false
	Object:
		Variable: r0
		Type: org.bouncycastle.jcajce.spec.DHDomainParameterSpec
		Statement: specialinvoke r0.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r1, $r3, $i1)
		Method: <org.bouncycastle.jcajce.spec.DHDomainParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int,int)>
		SHA-256: 9cdde17292729ed12e67e00ef32f20bc0ba0a50cc823d5bcab3268462fa45fcd
		Secure: true
	Object:
		Variable: $r14
		Type: java.security.KeyPair
		Statement: specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r15, $r16)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: aadd026eb861686e693690e72b434ddb064fe8bbbf9e5c4e4de2a60a071d8baf
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r12, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey,java.security.spec.ECParameterSpec)>
		SHA-256: 3ba938937705aba5e3c3d277dfcc715f8b43a8b6ac333db58c7d4cf1d9df1f2a
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <im.status.keycard.applet.SecureChannelSession: void autoPair(im.status.keycard.io.CardChannel,byte[])>
		SHA-256: b1ecc739edd8c500578d615b887c4d864cb607160ca7f95b3839dbab9babe6a2
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.PublicKey
		Statement: $r6 = virtualinvoke $r5.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <im.status.keycard.applet.SecureChannelSession: void generateSecret(byte[])>
		SHA-256: 9cdc01a33259ba5a6dc1fa82039e232655789c322449f84436251a85f020c8bd
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <im.status.keycard.globalplatform.Crypto: byte[] deriveSCP02SessionKey(byte[],byte[],byte[])>
		SHA-256: 16b2c221fbd46bb84913ed187c5556b36d26ae603b8eb6b351cdd237bfce829e
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.KeyPair
		Statement: specialinvoke $r9.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r10, $r12)
		Method: <org.bouncycastle.pqc.jcajce.provider.sphincs.Sphincs256KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 754f2c5762d55be498e5162b98780867e124a08b4b680aee07b2fa547e5cc083
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer36532)
		Method: <okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: c13dc495c4d7026c3ac19aef8cf12edc2086633ca819091b5ced8206108c546c
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.JCEElGamalPublicKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: 2f96be90287037dd5aa521a81412c6567fe97ad3bdc0a3e0dd37cb2855cfb876
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer36677, varReplacer36678)
		Method: <im.status.keycard.applet.SecureChannelSession: byte[] oneShotEncrypt(byte[])>
		SHA-256: 9b9b8515c2ff78c0d1f2f06111ff577ad819a8e94f7df99ec0637bdaee439f3
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.KeyFactory
		Statement: $r14 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer34213, varReplacer34214)
		Method: <im.status.keycard.applet.SecureChannelSession: void generateSecret(byte[])>
		SHA-256: c0937fbaf2d31dbb054a22fead8485d0865b887b5d307a826eae218e963245dc
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyPair
		Statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13)
		Method: <org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 7e607f2b0148a3c2f0cc3a50502aa1d8d622c22ef1a312f9fed011b06d0c82f4
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer46133, varReplacer46134)
		Method: <im.status.keycard.globalplatform.Crypto: byte[] macFull3des(byte[],byte[],byte[])>
		SHA-256: 7f318586c31dcd4ad9d4e00f44b9ee709869cea8e345d6792d4384e6015f7ddc
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PublicKey,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 7edea5eeeb5a77eb822f8f79191943ec26ee9bbe4edb21587a9ed6b3c079652b
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <im.status.keycard.applet.Mnemonic: byte[] toBinarySeed(java.lang.String,java.lang.String)>
		SHA-256: fcc5836b5932ee68c92fe3848f9388583d4644a193eb92ed06d4a4f01fc3017b
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.Signature
		Statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject: void verify(java.security.PublicKey)>
		SHA-256: 12ceb637520f44953be41c6cc4cf0d880ddfab3b0759a27bcd8537de2150d294
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r12)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.gost.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 6c7ef9fa4e7bff262cf03d9de0acc4ec162191195a2243ed7af7fe97a2eb9e56
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer36534)
		Method: <okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 447b9b931f1296c4f02df54e742f66ebb388331b8788babeaca194a5d4ccc7a7
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r13.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r12, $r15, $r8, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,org.bouncycastle.jce.spec.ECParameterSpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration)>
		SHA-256: 86df246b8c1578d3501a486e27f08db6d1aa41db6923499c742aa2e3fe110297
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <im.status.keycard.applet.SecureChannelSession: byte[] decryptAPDU(byte[])>
		SHA-256: 11852b5fb24eb350bb42867ddb0c5cad7c125ca11fe599c7743327e6b00f5dd4
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer54291)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: ff0ebf72ba1626c39ae04237d313d92c2284105befa2dbed808798ad619b6778
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: e75571d33abb1b5e330ac5b78fcc009ac5fa3b4053acda20dad8234c0598d879
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r4)
		Method: <im.status.keycard.applet.SecureChannelSession: im.status.keycard.io.APDUResponse mutuallyAuthenticate(im.status.keycard.io.CardChannel)>
		SHA-256: fc8bc5559a30bf503f696eca9947a04cb7cb91b9bec15671f86dd459157a2166
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: a9c19b12994234db6ec00ed5b541d5738b556e23d3870b731ea4245dbf932de7
		Secure: true
	Object:
		Variable: $r17
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r17.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r14, $r15, varReplacer53021)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(org.bouncycastle.asn1.x9.X962Parameters,org.bouncycastle.math.ec.ECCurve)>
		SHA-256: a5253c6889133942c5030d7087634cda2cf94f17cc87c0e847ff76caf4999833
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>
		SHA-256: cebe45f59ca6821eb5e75723e2592c61a7970e6687e96537a7fa5d2712864b7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKeyFactory
		Statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer28270, varReplacer28271)
		Method: <im.status.keycard.applet.KeycardCommandSet: byte[] pairingPasswordToSecret(java.lang.String)>
		SHA-256: 8432fde78fcd36b43802e3bf39b764414d58a32b97349c375ab1f833a4216567
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r7 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <im.status.keycard.applet.SecureChannelSession: void autoPair(im.status.keycard.io.CardChannel,byte[])>
		SHA-256: d69a1c23034a0892f9015a4ed4d35882c2bbf5150b60c9fc4f86be97f0cc38b5
		Secure: false
	Object:
		Variable: varReplacer34213
		Type: java.lang.String
		Statement: $r14 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer34213, varReplacer34214)
		Method: <im.status.keycard.applet.SecureChannelSession: void generateSecret(byte[])>
		SHA-256: 7aadc9918cc4a6cecb1ec51d26cd7f7213aceedfc4c56576438f0025132f32ba
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.KeyPair
		Statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: b9c461d81d3bc41eecc0783441f280f41b2f629e19018ff708aa15ce8ab9d299
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r0, $r6, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertSpec(java.security.spec.EllipticCurve,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 5e446648189ea5990cccb15904e2d7a7e504603858a88d76ba384a4c530a6923
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.Mac
		Statement: $r1 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer5892)
		Method: <im.status.keycard.applet.BIP32KeyPair: im.status.keycard.applet.BIP32KeyPair fromBinarySeed(byte[])>
		SHA-256: ca4e8d0926d21ee7a145a3e756d5132b7780838b3328503464664928c5a58c76
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r0)
		Method: <okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: a8764d384e0e6acd4407dba0e4c2025660362892494036c03c4b52a40e75c66b
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: specialinvoke r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <com.facebook.android.crypto.keychain.FixedSecureRandom: void nextBytes(byte[])>
		SHA-256: 70b25306152117ce04aca8cabcfa9cd24cdc03b96ca10ad5f992dff3a78e0d03
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <im.status.keycard.globalplatform.Crypto: byte[] macFull3des(byte[],byte[],byte[])>
		SHA-256: 740ee3ddff0013922ebfd674e9cba5bbbeb78066a802e9705685af5cf0963140
		Secure: false
	Object:
		Variable: varReplacer36680
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer36680)
		Method: <im.status.keycard.applet.SecureChannelSession: byte[] oneShotEncrypt(byte[])>
		SHA-256: 79fe4281a28498f032a6b9a79bce2c4bac7236bb721ec57adb2bd1180d4d051c
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer35612, varReplacer35613)
		Method: <im.status.keycard.globalplatform.Crypto: byte[] deriveSCP02SessionKey(byte[],byte[],byte[])>
		SHA-256: d684e0be53c6b0dd2818d06f1360459bbde87dd56c599cd15d357aca39358435
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer46131, varReplacer46132)
		Method: <im.status.keycard.globalplatform.Crypto: byte[] macFull3des(byte[],byte[],byte[])>
		SHA-256: 5d41c847414ff426599f5d1ea3431d38d62cfb9347a6fc3460e39e7f188f2e88
		Secure: false
	Object:
		Variable: $r27
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r27.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r24, $r26, $r1, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey: void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 9deb6609bc4306ea107c391861256ce8967efc9e995facc6f07a2930a991dcbf
		Secure: true
	Object:
		Variable: varReplacer46122
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer46122)
		Method: <im.status.keycard.globalplatform.Crypto: byte[] ecb3des(byte[],byte[])>
		SHA-256: c93956877c81511842771c7b3f8d05669a1d9006458d19ed7a060387f390e7b8
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r6, $i0, varReplacer28269)
		Method: <im.status.keycard.applet.KeycardCommandSet: byte[] pairingPasswordToSecret(java.lang.String)>
		SHA-256: 23a5040c954ae1cf4a6dec6af05e434b9cca382ed4e39dabdb01aa844ba525c
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: d02affd279e8743b6fd64cdf0e2dd47c30a5603be2e61d5718cf63d25b2d1a15
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r12, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PublicKey,java.security.spec.ECParameterSpec)>
		SHA-256: 1d2898e3d3b44f1b76b2c9a30718bd32f18e4a5f6903d4c54ee6ab6b4453a2d
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r12, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey,java.security.spec.ECParameterSpec)>
		SHA-256: 493fa9240f9e173840410f81e7dfc7583eef5d11bd5490d3eabf120ecd5536b5
		Secure: true
	Object:
		Variable: $r13
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r13.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r9, $r12, $r4, $i1)
		Method: <org.conscrypt.OpenSSLECGroupContext: java.security.spec.ECParameterSpec getECParameterSpec()>
		SHA-256: 7223ae8f08ed0dba3dafb06f8e07e30310aca7c9be856d88494b5d1bd531fdf8
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <im.status.ethereum.pushnotifications.PushNotification: void <init>(com.facebook.react.bridge.ReactApplicationContext)>
		SHA-256: 5a07b9e605cedb78e772085b4b1abf8f7efacc133b4c89bdfd6c0c5944aeb8a
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <im.status.ethereum.keycard.SmartCardSecrets: long randomLong(long)>
		SHA-256: 9814d44e92b66bfb954ae730bfecf084eca0fa2868a290dc55d35d50d2819f76
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer54292)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: e7e52b3801fbb66e472c07c425b725244e84b529196e9a02c837fb12e41d5e30
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.NamedJcaJceHelper: java.security.Signature createSignature(java.lang.String)>
		SHA-256: cb6dbedb66709ff933343a7a19443259032632b9744c262530a2bb4dc73beae9
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.JCEElGamalPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: 6b8822e70d4604e23c0ea07692bf2c9c1daaa36d64fb48b6df14aae465189041
		Secure: true
	Object:
		Variable: $r15
		Type: java.security.MessageDigest
		Statement: $r15 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r14, varReplacer38159)
		Method: <org.bouncycastle.x509.AttributeCertificateHolder: boolean match(java.security.cert.Certificate)>
		SHA-256: 8f26d907f74012c6179273b1573ac272ca1d9493d07ab8b377eeaa3c1c2e0781
		Secure: true
	Object:
		Variable: $r27
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r27.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r6, $r15)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 17ea506228f5dc57471137e0b695352a3774e9c7e597031eeeb9157ef0e2b937
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey: java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve,org.bouncycastle.crypto.params.ECDomainParameters)>
		SHA-256: 8932abb3effe3ac7b4693b86e1e64f9620a092735469fa0a27ce4f58e149492e
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.common.util.SecureHashUtil: java.lang.String makeSHA1HashBase64(byte[])>
		SHA-256: c6bb4832d15267321b64294e36949b1fc4731b855443ce4eba77a8ad3eaece90
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>
		SHA-256: cebe45f59ca6821eb5e75723e2592c61a7970e6687e96537a7fa5d2712864b7
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer46119, varReplacer46120)
		Method: <im.status.keycard.globalplatform.Crypto: byte[] ecb3des(byte[],byte[])>
		SHA-256: 44454a983d8ea216bb3ec66e0d1c57cab1cc411eecf448811b561b4018f4590
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 181aa94d9dfb4131bf99e325443dd030be8d0745e2fdbe58d6599dfe9ccd41a6
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <im.status.keycard.applet.KeycardCommandSet: byte[] pairingPasswordToSecret(java.lang.String)>
		SHA-256: f0d016da1c5399eb7e208f32d3961098c6765a37a3d8eca9ee4f1ea3300ed3e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <org.bouncycastle.crypto.signers.PSSSigner: byte[] generateSignature()>
		SHA-256: 5971d6538d25f1e396808264bf05345b660a017c8af8ec968b717cf263b5ce6a
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer27506)
		Method: <com.facebook.android.crypto.keychain.SecureRandomFix: void tryInstallLinuxPRNGSecureRandom()>
		SHA-256: 34eb87578a3db3d78097bf7323a34b2829f4cbdcfcac005213000cf0247b416c
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer35607)
		Method: <im.status.keycard.globalplatform.Crypto: byte[] deriveSCP02SessionKey(byte[],byte[],byte[])>
		SHA-256: 2e206b065526db0e962fd569430af39f3e321af9fa0282859475067ad421f6b0
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer36531)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 5ec3165acb8321e91925bb4020a20c17ee9c3224ed01d10bbb90ba7e91b8b552
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 181aa94d9dfb4131bf99e325443dd030be8d0745e2fdbe58d6599dfe9ccd41a6
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer36529)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 4b7116d3f64c7ba3eb7db2f90d50c42cf57f2216372d6acfc9704037a13d8ac
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PublicKey,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 7edea5eeeb5a77eb822f8f79191943ec26ee9bbe4edb21587a9ed6b3c079652b
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer19634)
		Method: <com.facebook.common.util.SecureHashUtil: java.lang.String makeSHA1HashBase64(byte[])>
		SHA-256: 5916c9fa2c44de3eb3d4c073a2081c59066210a716f02caff222e678a96078a3
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer46146, varReplacer46147)
		Method: <im.status.keycard.globalplatform.Crypto: byte[] encryptICV(byte[],byte[])>
		SHA-256: 21d4f440aee7e2b571b3fa502b6a7ed4435f166af8106e6d4275b7388a5fae59
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <im.status.keycard.applet.SecureChannelSession: void autoPair(im.status.keycard.io.CardChannel,byte[])>
		SHA-256: 257ccc8f7cde276a8fe05d315c672e454f03967b51175f7cae33554f86f1a7cf
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <im.status.keycard.applet.SecureChannelSession: byte[] oneShotEncrypt(byte[])>
		SHA-256: 3235f1a001d412ab2a863b801aac8224aaa1d1d5a27359653424243cac389687
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer53763)
		Method: <com.bumptech.glide.load.engine.cache.SafeKeyGenerator$1: com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer create()>
		SHA-256: 7d8ddaf9bc95ec999d7c6e9a5d97600944cad988d45768be0b83731ad0fa1db1
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <org.bouncycastle.crypto.encodings.PKCS1Encoding: byte[] encodeBlock(byte[],int,int)>
		SHA-256: 85d332321dc5f8e0e93243185cceb3f361c013eda36223e03f5cc72d1a741bc7
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKeyFactory
		Statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer5139, varReplacer5140)
		Method: <im.status.keycard.applet.Mnemonic: byte[] toBinarySeed(java.lang.String,java.lang.String)>
		SHA-256: 306bf318a65ec62d5e082c2190b89fee89eab20a5c3f74195ce32b4ebff382b9
		Secure: false
	Object:
		Variable: varReplacer35596
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer35596)
		Method: <im.status.keycard.globalplatform.Crypto: byte[] mac3des(byte[],byte[],byte[])>
		SHA-256: 1a0dd8062214cd848db5a335606bfdbbb5ec3986cd69316690b934492ea5e595
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <im.status.keycard.globalplatform.GlobalPlatformCommandSet: void openSecureChannel(boolean)>
		SHA-256: 7a08c284116baf0777594653a019d5aacbc48918ed7604631953a5f3b403ffb7
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)
		Method: <org.conscrypt.OpenSSLECKeyPairGenerator: java.security.KeyPair generateKeyPair()>
		SHA-256: aef20e7032630e11deed3f628a08d19dda84b6e7e544aa0bf3edd4943ce413d3
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: a79a1700ae9d8d44f13ea218f751e7024f8f1222b1b2ae17cdbab7b56d352181
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PublicKey: java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve,org.bouncycastle.crypto.params.ECDomainParameters)>
		SHA-256: 177c38da02803216ffa75d860ebfa1e8c15bf6b9ff3285beec343e328eacc366
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>(varReplacer28278, varReplacer28279)
		Method: <im.status.keycard.applet.SecureChannelSession: void autoPair(im.status.keycard.io.CardChannel,byte[])>
		SHA-256: bd509bb79e85fdf3f6916b9292268bb4684a4e5045e307ec62cabd37dbcfd85c
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>
		SHA-256: 55c0ef59d2e8f2d9e7c3b9d886f8a0561a8e9e82e242551a90594b801b63073c
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer45514)
		Method: <im.status.keycard.applet.SecureChannelSession: void processOpenSecureChannelResponse(im.status.keycard.io.APDUResponse)>
		SHA-256: 6e1b24ff90292aa1ce8f10400bb1d304e91cf6e9dc0e18d18d69f3f1534af30c
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyPair
		Statement: $r5 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <im.status.keycard.applet.SecureChannelSession: void generateSecret(byte[])>
		SHA-256: 63bf948d76f95bd21b5682411312b5fb51a2c15230600188ad1eec775b9a2877
		Secure: false
	Object:
		Variable: varReplacer5143
		Type: int
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r7, varReplacer5142, varReplacer5143)
		Method: <im.status.keycard.applet.Mnemonic: byte[] toBinarySeed(java.lang.String,java.lang.String)>
		SHA-256: 7ba3e5e84569da2d2028351495bd6988900c601e1cb2d2d7a95d55747f75ebe0
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyPair
		Statement: specialinvoke $r8.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r10)
		Method: <org.bouncycastle.pqc.jcajce.provider.newhope.NHKeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: cba3f930fac70fcda0f15dcac6eba393ef4b6e4521aecbae2c2f176779ad6790
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.ProviderJcaJceHelper: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 14ead5b41e52dcc0971ab3bbf6947b9738bc0cfa14d4e782ddd7a129f6301c26
		Secure: false
	Object:
		Variable: varReplacer35607
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer35607)
		Method: <im.status.keycard.globalplatform.Crypto: byte[] deriveSCP02SessionKey(byte[],byte[],byte[])>
		SHA-256: 3833854410cbded187e0f5a96b331dd420dde7cf19ee631af0d752d86efb276f
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r5, varReplacer76416)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void verify(java.security.PublicKey)>
		SHA-256: 40789b9dc3bb288e0f5bad48dd01d938c37fdd36a1b2eeb13e9f75977b99be5b
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r3.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r2, $r5, $r6)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey: void <init>(org.bouncycastle.crypto.params.DSAPublicKeyParameters)>
		SHA-256: 9390edae09a93724017ade479bb47ea94287e6460977d2dad3759cd566636f64
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 967c4f01112b22279695bcf89b6dc1c0b602dca9315f91b4be9227fd5d047c2a
		Secure: true
	Object:
		Variable: r0
		Type: org.bouncycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r2, $r3, $r4, $i0)
		Method: <org.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>
		SHA-256: b36d50207c12d926e435b859cb9848007d52f50b2e62c847e597de1f84f657c6
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.cert.CertificateFactory
		Statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer70621)
		Method: <okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)>
		SHA-256: 493ebe3603c57c722192065ad2a91663b9706ec452cf92e2ea8a8ab1bdcc1d70
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer54300)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 187cb9d03222460b3e4091c3ac410e47355015045ca292aacd68e7a0fcff83e4
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r5)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void verify(java.security.PublicKey)>
		SHA-256: 112e0b98b9789074d4ec3ee999f422c7c115607a7d5cddcfc5fefe2723a7aec7
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer45523)
		Method: <im.status.keycard.applet.SecureChannelSession: void processOpenSecureChannelResponse(im.status.keycard.io.APDUResponse)>
		SHA-256: bbfa1d513c0b4111a59ed5b596964e9d9d637cb2c0b1b67c8cac9b609a632534
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <im.status.keycard.globalplatform.Crypto: byte[] macFull3des(byte[],byte[],byte[])>
		SHA-256: ac8cedb69df424f3050ea06ee1d2c31dcd54015f6bb2dd84f0fbd7ad02489c4f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer46138)
		Method: <im.status.keycard.globalplatform.Crypto: byte[] macFull3des(byte[],byte[],byte[])>
		SHA-256: 1f7302ee1bb9d33e05f59ef6703320a2fd4341e8ba6d3b7f5215e8abdcdee92e
		Secure: false
	Object:
		Variable: varReplacer5891
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer5891)
		Method: <im.status.keycard.applet.BIP32KeyPair: im.status.keycard.applet.BIP32KeyPair fromBinarySeed(byte[])>
		SHA-256: 3892b5825d61301e6b39fc9fe3a6177bdc8b1b976c25e16c2a7616cd8e251b29
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey: java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve,org.bouncycastle.crypto.params.ECDomainParameters)>
		SHA-256: 4bf68a34c81d1edf795aedd92ddee186f149b3050b72dd9d67beac9a5963e08a
		Secure: true
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: c9e1ff5450f21aae65af053d6ed29f81c5a7b267991078defbfa3059af0e266a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer54295)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 3b06d8cef0b8f1365df674a6b9632f333a051f3cd0d64db5ff2089c183f9e649
		Secure: false
	Object:
		Variable: r0
		Type: com.facebook.android.crypto.keychain.FixedSecureRandom
		Statement: specialinvoke r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.facebook.android.crypto.keychain.FixedSecureRandom: void <init>()>
		SHA-256: c6036e9e7c875fe564fdde7319a908d8e330139e306440a672f8af29a3147138
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <im.status.keycard.applet.SecureChannelSession: void autoPair(im.status.keycard.io.CardChannel,byte[])>
		SHA-256: 43c27c2360b89fdf32e7bd7e0658121381485fdfcb2f6ff587aad5d498194a0d
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 9d110d3f3943f5f1538d33e3d18932b71ca7accf2f86c174ab417a2b10712fb0
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)
		Method: <org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: c6bb43f893190c388a16172ecf23e0b3f08b68f394f78a97ebfe490a5b717770
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: c9e1ff5450f21aae65af053d6ed29f81c5a7b267991078defbfa3059af0e266a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e
		Secure: false
	Object:
		Variable: r0
		Type: org.bouncycastle.x509.ExtendedPKIXParameters
		Statement: specialinvoke r0.<java.security.cert.PKIXParameters: void <init>(java.util.Set)>($r1)
		Method: <org.bouncycastle.x509.ExtendedPKIXParameters: void <init>(java.util.Set)>
		SHA-256: bc4db4edf85d5095c872f763083d4cdd57eaf413157a98ff957c0439448eaca6
		Secure: true
	Object:
		Variable: $r16
		Type: byte[]
		Statement: $r16 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.bouncycastle.x509.AttributeCertificateHolder: boolean match(java.security.cert.Certificate)>
		SHA-256: 733e42bbdc4639c4f728ddf34e9b407d27b5d8c13567d81937f01e426dc09e8e
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <im.status.keycard.applet.SecureChannelSession: byte[] oneShotEncrypt(byte[])>
		SHA-256: f5723755a4545f5fcce1e105936c6a01370b0a0528c7104a8c29b3ab711a6175
		Secure: false
	Object:
		Variable: $r27
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r27.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r6, $r15, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: c67a58db466f44792924e383c9800713831ce853e3ca81f3580a8d50f581e617
		Secure: true
	Object:
		Variable: r0
		Type: org.bouncycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r7, $r8, $r2, $i0)
		Method: <org.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>
		SHA-256: bcf570b34f8a17ec2bf4d52452528fe052d0e6bfbcbc0e9448c15568d3730cec
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyPairGenerator
		Statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer34216, varReplacer34217)
		Method: <im.status.keycard.applet.SecureChannelSession: void generateSecret(byte[])>
		SHA-256: 528d64076f3d96b72128ce939797d78a4c295767ad26fc3923c5bacceb30dd90
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer46139)
		Method: <im.status.keycard.globalplatform.Crypto: byte[] macFull3des(byte[],byte[],byte[])>
		SHA-256: 931977949488655fe18e7429760bdd6438621fa9ebbc33b50b67740d9aa0c18
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r9)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 7ac05a324707752a8fcdd9787a5fcda4e6af85c295ea6bb9f2ffcf779c41a30d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.Signature
		Statement: $r1 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.util.DefaultJcaJceHelper: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 66f26381b2b186fbed59de5f1091ee81e1ff14794fdb45154aac9feab8965356
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer35588, varReplacer35589)
		Method: <im.status.keycard.globalplatform.Crypto: byte[] mac3des(byte[],byte[],byte[])>
		SHA-256: fe371a622a32cb7f1c28e9e310aeca819a2e5f274959e8120068884bd289b86c
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer35596)
		Method: <im.status.keycard.globalplatform.Crypto: byte[] mac3des(byte[],byte[],byte[])>
		SHA-256: 85eb0c1d3b95c4977ca939fcb0670c2f0b9de5e2ef8a77bdf145a016ca45570
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.CryptoServicesRegistrar: java.security.SecureRandom getSecureRandom()>
		SHA-256: 582698de09c351e067e554bf94377392090de64bd016bfd274eb14d55c98501f
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer46145)
		Method: <im.status.keycard.globalplatform.Crypto: byte[] encryptICV(byte[],byte[])>
		SHA-256: 4bd4c943c6152da0dada46b17383e3ca18ca2fe7f5ef0afb9c73cd065436f2b1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer54294)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 787592b972a2fff86ae06a780dc81b1bde1e624abdb3bbb08cfef9fb0949b713
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r10, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: ca8c57f00e636666523b3803cf2d449c7668aea2653306a5d436a81914fd7df0
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r13)
		Method: <org.bouncycastle.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 9ad7aedb2297f46d3f8d0b119cf3f27a3d55f3e7bb77a0eadc01e0b2656f927f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer5891)
		Method: <im.status.keycard.applet.BIP32KeyPair: im.status.keycard.applet.BIP32KeyPair fromBinarySeed(byte[])>
		SHA-256: b51dc7cf2903fa1c7971b8143a98af3876143ac241e903e3941e7c5de6e1c8cb
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey: java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve,org.bouncycastle.crypto.params.ECDomainParameters)>
		SHA-256: 1ed34635d886298f1ac65535003eb919395a61c4e94f473f6395f42d219d6f5f
		Secure: true
	Object:
		Variable: varReplacer46139
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer46139)
		Method: <im.status.keycard.globalplatform.Crypto: byte[] macFull3des(byte[],byte[],byte[])>
		SHA-256: 143b846bcdbedb081cacd6ae0b691567182bec6febd5960fb540c38ad6c6fc24
		Secure: false

Findings in Java Class: im.status.keycard.applet.Mnemonic

	 in Method: byte[] toBinarySeed(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r7, varReplacer5142, varReplacer5143)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #56c5fe2b92e5bd7d1b2d50921daa4012693db93603646ea255a294e47f02abb7)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r7, varReplacer5142, varReplacer5143)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #56c5fe2b92e5bd7d1b2d50921daa4012693db93603646ea255a294e47f02abb7)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r7, varReplacer5142, varReplacer5143)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r8 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #56c5fe2b92e5bd7d1b2d50921daa4012693db93603646ea255a294e47f02abb7)
			Third parameter (with value 2048)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r7, varReplacer5142, varReplacer5143)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #56c5fe2b92e5bd7d1b2d50921daa4012693db93603646ea255a294e47f02abb7)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r8 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)


Findings in Java Class: com.facebook.common.util.SecureHashUtil

	 in Method: java.lang.String makeSHA1HashBase64(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5916c9fa2c44de3eb3d4c073a2081c59066210a716f02caff222e678a96078a3)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer19634)


Findings in Java Class: im.status.keycard.applet.KeycardCommandSet

	 in Method: byte[] pairingPasswordToSecret(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r8 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #23a5040c954ae1cf4a6dec6af05e434b9cca382ed4e39dabdb01aa844ba525c)
			Third parameter (with value 10)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r6, $i0, varReplacer28269)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #23a5040c954ae1cf4a6dec6af05e434b9cca382ed4e39dabdb01aa844ba525c)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r8 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #23a5040c954ae1cf4a6dec6af05e434b9cca382ed4e39dabdb01aa844ba525c)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r6, $i0, varReplacer28269)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #23a5040c954ae1cf4a6dec6af05e434b9cca382ed4e39dabdb01aa844ba525c)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r6, $i0, varReplacer28269)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r6, $i0, varReplacer28269)


Findings in Java Class: im.status.keycard.applet.SecureChannelSession

	 in Method: void autoPair(im.status.keycard.io.CardChannel,byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bd509bb79e85fdf3f6916b9292268bb4684a4e5045e307ec62cabd37dbcfd85c)
			First parameter (with value "SHA256") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>(varReplacer28278, varReplacer28279)


	 in Method: void generateSecret(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyAgreement
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r10.<javax.crypto.KeyAgreement: void init(java.security.Key)>($r11)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #528d64076f3d96b72128ce939797d78a4c295767ad26fc3923c5bacceb30dd90)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), genKeyPair, initialize, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r5 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #c0937fbaf2d31dbb054a22fead8485d0865b887b5d307a826eae218e963245dc)
			First parameter (with value "ECDSA") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r14 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer34213, varReplacer34214)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #528d64076f3d96b72128ce939797d78a4c295767ad26fc3923c5bacceb30dd90)
			First parameter (with value "ECDH") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer34216, varReplacer34217)

		TypestateError violating CrySL rule for java.security.KeyPairGenerator (on Object #528d64076f3d96b72128ce939797d78a4c295767ad26fc3923c5bacceb30dd90)
			Unexpected call to method generateKeyPair on object of type java.security.KeyPairGenerator. Expect a call to one of the following methods initialize
			at statement: $r5 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		RequiredPredicateError violating CrySL rule for javax.crypto.KeyAgreement
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r10.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>($r7, varReplacer34212)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r6 = virtualinvoke $r14.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r12)


	 in Method: byte[] oneShotEncrypt(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer36680)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer36684, $r5, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer36684, $r5, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #9b9b8515c2ff78c0d1f2f06111ff577ad819a8e94f7df99ec0637bdaee439f3)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9b9b8515c2ff78c0d1f2f06111ff577ad819a8e94f7df99ec0637bdaee439f3)
			First parameter (with value "AES/CBC/ISO7816-4Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer36677, varReplacer36678)


	 in Method: void processOpenSecureChannelResponse(im.status.keycard.io.APDUResponse)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			First parameter (with value "AES/CBC/ISO7816-4Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer45515, varReplacer45516)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bbfa1d513c0b4111a59ed5b596964e9d9d637cb2c0b1b67c8cac9b609a632534)
			First parameter (with value "SHA512") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer45523)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer45514)


	 in Method: byte[] encryptAPDU(byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


	 in Method: byte[] decryptAPDU(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer33737, $r1, $r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: com.facebook.react.modules.network.TLSSocketFactory

	 in Method: void <init>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer29865, varReplacer29865, varReplacer29865)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #e77d661431147d8aaed6455967adbb7ec95ff56f95a1d1be5ecc085328d1c989)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer29864)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer29865, varReplacer29865, varReplacer29865)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer29865, varReplacer29865, varReplacer29865)


Findings in Java Class: com.facebook.soloader.SoLoader$1

	 in Method: java.lang.String getLibHash(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #5191b108021ada32a81b502eb03ce7c80faeabc8ab685d058233a155935ddeda)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5191b108021ada32a81b502eb03ce7c80faeabc8ab685d058233a155935ddeda)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer29906)


Findings in Java Class: im.status.keycard.globalplatform.Crypto

	 in Method: byte[] mac3des(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #fe371a622a32cb7f1c28e9e310aeca819a2e5f274959e8120068884bd289b86c)
			First parameter (with value "DESede/CBC/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer35588, varReplacer35589)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #fe371a622a32cb7f1c28e9e310aeca819a2e5f274959e8120068884bd289b86c)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, varReplacer35591, varReplacer35592)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer35590, $r4, $r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer35590, $r4, $r0)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #85eb0c1d3b95c4977ca939fcb0670c2f0b9de5e2ef8a77bdf145a016ca45570)
			Second parameter (with value "DESede") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer35596)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer35596)


	 in Method: byte[] deriveSCP02SessionKey(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer35607)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #2e206b065526db0e962fd569430af39f3e321af9fa0282859475067ad421f6b0)
			Second parameter (with value "DESede") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer35607)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer35615, $r5, $r7)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d684e0be53c6b0dd2818d06f1360459bbde87dd56c599cd15d357aca39358435)
			First parameter (with value "DESede/CBC/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer35612, varReplacer35613)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #d684e0be53c6b0dd2818d06f1360459bbde87dd56c599cd15d357aca39358435)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer35615, $r5, $r7)


	 in Method: byte[] ecb3des(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer46123, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #44454a983d8ea216bb3ec66e0d1c57cab1cc411eecf448811b561b4018f4590)
			First parameter (with value "DESede/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer46119, varReplacer46120)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #44454a983d8ea216bb3ec66e0d1c57cab1cc411eecf448811b561b4018f4590)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #a6cd1739de11a0507354580d2c549c05049d97c1cc9e9512bd756fac37954777)
			Second parameter (with value "DES") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer46122)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer46122)


	 in Method: byte[] macFull3des(byte[],byte[],byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #5d41c847414ff426599f5d1ea3431d38d62cfb9347a6fc3460e39e7f188f2e88)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r1, varReplacer46136, $i0)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #7f318586c31dcd4ad9d4e00f44b9ee709869cea8e345d6792d4384e6015f7ddc)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r0 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r1, $i0, varReplacer46143)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #1f7302ee1bb9d33e05f59ef6703320a2fd4341e8ba6d3b7f5215e8abdcdee92e)
			Second parameter (with value "DES") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer46138)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer46142, $r3, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer46142, $r3, $r6)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7f318586c31dcd4ad9d4e00f44b9ee709869cea8e345d6792d4384e6015f7ddc)
			First parameter (with value "DESede/CBC/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer46133, varReplacer46134)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #931977949488655fe18e7429760bdd6438621fa9ebbc33b50b67740d9aa0c18)
			Second parameter (with value "DESede") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer46139)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer46138)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5d41c847414ff426599f5d1ea3431d38d62cfb9347a6fc3460e39e7f188f2e88)
			First parameter (with value "DES/CBC/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer46131, varReplacer46132)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #1f7302ee1bb9d33e05f59ef6703320a2fd4341e8ba6d3b7f5215e8abdcdee92e)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer46138)


	 in Method: byte[] encryptICV(byte[],byte[])
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #4bd4c943c6152da0dada46b17383e3ca18ca2fe7f5ef0afb9c73cd065436f2b1)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer46145)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer46148, $r3)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #4bd4c943c6152da0dada46b17383e3ca18ca2fe7f5ef0afb9c73cd065436f2b1)
			Second parameter (with value "DES") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer46145)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer46145)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #21d4f440aee7e2b571b3fa502b6a7ed4435f166af8106e6d4275b7388a5fae59)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer46146, varReplacer46147)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #21d4f440aee7e2b571b3fa502b6a7ed4435f166af8106e6d4275b7388a5fae59)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


Findings in Java Class: okhttp3.internal.platform.Platform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #4b7116d3f64c7ba3eb7db2f90d50c42cf57f2216372d6acfc9704037a13d8ac)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer36529)


Findings in Java Class: okhttp3.internal.platform.AndroidPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #c13dc495c4d7026c3ac19aef8cf12edc2086633ca819091b5ced8206108c546c)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer36532)


Findings in Java Class: okhttp3.internal.platform.ConscryptPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #c9cde70333fc17061de7c87c3d00678e9327e3c9b4abde4a73ed5d33a4bb5f91)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer36536, $r2)


Findings in Java Class: org.bouncycastle.x509.AttributeCertificateHolder

	 in Method: boolean match(java.security.cert.Certificate)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #8f26d907f74012c6179273b1573ac272ca1d9493d07ab8b377eeaa3c1c2e0781)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r16 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: im.status.ethereum.keycard.SmartCard

	 in Method: void removeKeyWithUnpair(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r3 = virtualinvoke $r2.<im.status.keycard.applet.KeycardCommandSet: im.status.keycard.applet.ApplicationInfo getApplicationInfo()>()


	 in Method: java.lang.String exportKey(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r3 = virtualinvoke $r2.<im.status.keycard.applet.KeycardCommandSet: im.status.keycard.io.APDUResponse exportCurrentKey(boolean)>(varReplacer5738)


	 in Method: void removeKey(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r1.<im.status.keycard.applet.KeycardCommandSet: im.status.keycard.io.APDUResponse removeKey()>()


	 in Method: void changePUK(java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r1.<im.status.keycard.applet.KeycardCommandSet: im.status.keycard.io.APDUResponse changePUK(java.lang.String)>($r3)


	 in Method: java.lang.String sign(java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r6 = virtualinvoke $r3.<im.status.keycard.applet.KeycardCommandSet: im.status.keycard.io.APDUResponse sign(byte[])>($r4)


	 in Method: void changePairingPassword(java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r1.<im.status.keycard.applet.KeycardCommandSet: im.status.keycard.io.APDUResponse changePairingPassword(java.lang.String)>($r3)


	 in Method: com.facebook.react.bridge.WritableMap getApplicationInfo()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke r0.<im.status.ethereum.keycard.SmartCard: void openSecureChannel(im.status.keycard.applet.KeycardCommandSet)>($r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r5 = virtualinvoke $r2.<im.status.keycard.applet.KeycardCommandSet: im.status.keycard.io.APDUResponse getStatus(byte)>(varReplacer4756)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $z0 = virtualinvoke r0.<im.status.ethereum.keycard.SmartCard: boolean tryDefaultPairing(im.status.keycard.applet.KeycardCommandSet,java.lang.String,com.facebook.react.bridge.WritableMap)>($r2, $r8, $r9)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $z0 = virtualinvoke r0.<im.status.ethereum.keycard.SmartCard: boolean tryDefaultPairing(im.status.keycard.applet.KeycardCommandSet,java.lang.String,com.facebook.react.bridge.WritableMap)>($r2, $r8, $r9)


	 in Method: void saveMnemonic(java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r3.<im.status.keycard.applet.KeycardCommandSet: im.status.keycard.io.APDUResponse loadKey(byte[])>($r4)


	 in Method: void unpair(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r3 = virtualinvoke $r2.<im.status.keycard.applet.KeycardCommandSet: im.status.keycard.applet.ApplicationInfo getApplicationInfo()>()


	 in Method: com.facebook.react.bridge.WritableMap getKeys(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r7 = virtualinvoke $r2.<im.status.keycard.applet.KeycardCommandSet: im.status.keycard.applet.ApplicationInfo getApplicationInfo()>()


	 in Method: com.facebook.react.bridge.WritableMap importKeys(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r10 = virtualinvoke $r2.<im.status.keycard.applet.KeycardCommandSet: im.status.keycard.applet.ApplicationInfo getApplicationInfo()>()


	 in Method: java.lang.String signWithPath(java.lang.String,java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r8 = virtualinvoke $r4.<im.status.keycard.applet.KeycardCommandSet: im.status.keycard.io.APDUResponse signWithPath(byte[],java.lang.String,boolean)>($r5, $r2, varReplacer6048)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r8 = virtualinvoke $r4.<im.status.keycard.applet.KeycardCommandSet: im.status.keycard.io.APDUResponse sign(byte[])>($r5)


	 in Method: void deriveKey(java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r5 = virtualinvoke $r3.<im.status.keycard.applet.KeycardCommandSet: im.status.keycard.io.APDUResponse getStatus(byte)>(varReplacer4645)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r5 = virtualinvoke $r3.<im.status.keycard.applet.KeycardCommandSet: im.status.keycard.io.APDUResponse deriveKey(java.lang.String)>($r1)


	 in Method: void changePin(java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r1.<im.status.keycard.applet.KeycardCommandSet: im.status.keycard.io.APDUResponse changePIN(java.lang.String)>($r3)


	 in Method: com.facebook.react.bridge.WritableMap generateAndLoadKey(java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r6 = virtualinvoke $r3.<im.status.keycard.applet.KeycardCommandSet: im.status.keycard.io.APDUResponse select()>()


	 in Method: java.lang.String exportKeyWithPath(java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r4 = virtualinvoke $r3.<im.status.keycard.applet.KeycardCommandSet: im.status.keycard.io.APDUResponse exportKey(java.lang.String,boolean,boolean)>($r1, varReplacer5576, varReplacer5577)


	 in Method: java.lang.String generateMnemonic(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r4 = virtualinvoke $r3.<im.status.keycard.applet.KeycardCommandSet: im.status.keycard.io.APDUResponse generateMnemonic(int)>(varReplacer5999)


	 in Method: void unblockPin(java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #af44429d3aba38a6eade183115422e4d9cab5846029acc5cbc4d80edc3c9913a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r4 = virtualinvoke $r3.<im.status.keycard.applet.KeycardCommandSet: im.status.keycard.io.APDUResponse unblockPIN(java.lang.String,java.lang.String)>($r1, $r2)


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: kotlin.collections.builders.ListBuilder

	 in Method: void checkIsMutable()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #7d8ddaf9bc95ec999d7c6e9a5d97600944cad988d45768be0b83731ad0fa1db1)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: r0 = r0.<kotlin.collections.builders.ListBuilder: kotlin.collections.builders.ListBuilder root>


Findings in Java Class: com.bumptech.glide.integration.okhttp3.OkHttpStreamFetcher

	 in Method: void onFailure(okhttp3.Call,java.io.IOException)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #7d8ddaf9bc95ec999d7c6e9a5d97600944cad988d45768be0b83731ad0fa1db1)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r3.<com.bumptech.glide.load.data.DataFetcher$DataCallback: void onLoadFailed(java.lang.Exception)>($r1)


Findings in Java Class: com.bumptech.glide.load.engine.ResourceCacheGenerator

	 in Method: boolean startNext()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #7d8ddaf9bc95ec999d7c6e9a5d97600944cad988d45768be0b83731ad0fa1db1)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $z0 = specialinvoke r0.<com.bumptech.glide.load.engine.ResourceCacheGenerator: boolean hasNextModelLoader()>()


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #e7e52b3801fbb66e472c07c425b725244e84b529196e9a02c837fb12e41d5e30)
			First parameter (with value "prime192v1") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer54292)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #46a187b1248a66248082d14e30bb8ea1caa819c0bbb0263da7d4f5a6a3bddf60)
			First parameter (with value "P-521") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer54289)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #187cb9d03222460b3e4091c3ac410e47355015045ca292aacd68e7a0fcff83e4)
			First parameter (with value "P-224") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer54300)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #ff0ebf72ba1626c39ae04237d313d92c2284105befa2dbed808798ad619b6778)
			First parameter (with value "prime239v1") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer54291)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #3b06d8cef0b8f1365df674a6b9632f333a051f3cd0d64db5ff2089c183f9e649)
			First parameter (with value "P-384") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer54295)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #787592b972a2fff86ae06a780dc81b1bde1e624abdb3bbb08cfef9fb0949b713)
			First parameter (with value "prime256v1") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer54294)


	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)


Findings in Java Class: org.conscrypt.SSLUtils

	 in Method: java.security.cert.X509Certificate decodeX509Certificate(java.security.cert.CertificateFactory,byte[])
		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #4250a9ec47cb1220df88a80b44858742124f6113d7bfb7daefa3a74be45f6888)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r3 = virtualinvoke $r2.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r1)


	 in Method: java.security.cert.X509Certificate[] decodeX509CertificateChain(byte[][])
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #4250a9ec47cb1220df88a80b44858742124f6113d7bfb7daefa3a74be45f6888)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r4 = staticinvoke <org.conscrypt.SSLUtils: java.security.cert.X509Certificate decodeX509Certificate(java.security.cert.CertificateFactory,byte[])>($r2, $r3)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #4250a9ec47cb1220df88a80b44858742124f6113d7bfb7daefa3a74be45f6888)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r2 = staticinvoke <org.conscrypt.SSLUtils: java.security.cert.CertificateFactory getCertificateFactory()>()


Findings in Java Class: okhttp3.Cache$Entry

	 in Method: java.util.List readCertificateList(okio.BufferedSource)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #493ebe3603c57c722192065ad2a91663b9706ec452cf92e2ea8a8ab1bdcc1d70)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer70621)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #493ebe3603c57c722192065ad2a91663b9706ec452cf92e2ea8a8ab1bdcc1d70)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #493ebe3603c57c722192065ad2a91663b9706ec452cf92e2ea8a8ab1bdcc1d70)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)


Findings in Java Class: org.conscrypt.OpenSSLX509Certificate

	 in Method: java.security.PublicKey getPublicKey()
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r9)


	 in Method: void verifyInternal(java.security.PublicKey,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil

	 in Method: void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)
		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r4)


Findings in Java Class: org.bouncycastle.jce.provider.X509SignatureUtil

	 in Method: void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)
		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r4)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.ecgost12.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.xmss.XMSSMTKeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r13)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer28213, $r7, varReplacer28213)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer28213, $r7, varReplacer28213)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer28213, $r7, varReplacer28213)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r15, $r16)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r15, $r16)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.sphincs.Sphincs256KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r9.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r10, $r12)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r9.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r10, $r12)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject

	 in Method: void checkSignature(java.security.PublicKey,java.security.Signature)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r2.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.gost.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r12)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r12)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)


Findings in Java Class: im.status.keycard.applet.BIP32KeyPair

	 in Method: im.status.keycard.applet.BIP32KeyPair fromBinarySeed(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer5891)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r1.<javax.crypto.Mac: void init(java.security.Key)>($r2)


Findings in Java Class: okhttp3.internal.Util

	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer28215)


Findings in Java Class: org.conscrypt.OpenSSLECKeyPairGenerator

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.newhope.NHKeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r8.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r10)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r8.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r10)


Findings in Java Class: org.bouncycastle.jce.provider.X509CertificateObject

	 in Method: void checkSignature(java.security.PublicKey,java.security.Signature)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r2.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r13)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 182

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 33
	HardCodedError: 2
	RequiredPredicateError: 81
	TypestateError: 14
	NeverTypeOfError: 4
	ConstraintError: 34
=====================================================================
