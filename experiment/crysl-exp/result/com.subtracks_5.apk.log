0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer23397)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: a062f9317f55dbc6fe045e76fb2e260d2ef25b17fd0f9f25750b6109595d9720
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer23400)
		Method: <okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: da5d7229cfeed2ded2c708a6a2ef4e75f468d97889a4800011f946fbfffd3675
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <e.b.d.k.c: java.lang.String a(byte[])>
		SHA-256: a8c75d72c4e68846339c9dabce3390287a664288805e8e26b4aef0c8da50cf16
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.cert.CertificateFactory
		Statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer34016)
		Method: <okhttp3.Cache$Entry: java.util.List readCertificateList(g.e)>
		SHA-256: c69e5942666f9bd60223b37bbf9d8febf29d03ac3f9100cd129fbff73e02cc5a
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11473)
		Method: <com.facebook.soloader.SoLoader$a: java.lang.String b(java.lang.String)>
		SHA-256: 68c52a3904b27d66428614a0078b3e575b074a1e1c5798a461a8487cb2655f3b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.exoplayer2.upstream.f0.u: long n(java.io.File)>
		SHA-256: dc4493ac9ddb2735728b7a1d5b7cf7f83da77ae9ad655677952d8bfe8b0943ef
		Secure: true
	Object:
		Variable: $r16
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r16.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r15)
		Method: <com.google.android.exoplayer2.upstream.f0.o$b: boolean k(java.util.HashMap,android.util.SparseArray)>
		SHA-256: 150e6239412615130af7554ac7628c49ab1e51c4a0458d66ba720e6917be4f1f
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer33050)
		Method: <com.google.android.exoplayer2.upstream.f0.o: javax.crypto.Cipher i()>
		SHA-256: ba87770e4c710dae5ec67cb8e805ea7be47e8c701788eb3009fa7e023a826462
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer26045)
		Method: <e.a.a.n.o.a0.j$a: e.a.a.n.o.a0.j$b a()>
		SHA-256: cbfc1e0802686cd89535d2d2b2c0bd204f4f59010c13bf6365996941b53b7376
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <g.f: g.f g(java.lang.String)>
		SHA-256: e0eae91db7e79e6930c38c0dc8ea49b201bbb87a870769e4f3f8ea25b646a699
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r0)
		Method: <okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: a8764d384e0e6acd4407dba0e4c2025660362892494036c03c4b52a40e75c66b
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: dea0af93b06734ae35228a014521e6e031131dd2b357359826afa61f9a6de1b
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer33049)
		Method: <com.google.android.exoplayer2.upstream.f0.o$b: void <init>(java.io.File,byte[],boolean)>
		SHA-256: 34ac0914a4960d23d8c1d64ced7e38b7a3a227efda8b6ad600d44915665dc877
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.google.android.exoplayer2.upstream.f0.o$b: void m(java.util.HashMap)>
		SHA-256: 9ba42032a67da3469dfee3ea1d8f42156125c91ca5c3ab74559210b9cadc9e82
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer33051, varReplacer33052)
		Method: <com.google.android.exoplayer2.upstream.f0.o: javax.crypto.Cipher i()>
		SHA-256: 7ebea6bd871d3dfb06ef2ac4a0b07529eeae9693d38724585c989eea4529b10
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.soloader.SoLoader$a: java.lang.String b(java.lang.String)>
		SHA-256: 66d6863a07769ca7c70dbe415c0998aaa6d16d88ac6772ff5e752c0b85275174
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer23405, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: f5185d4a46c9b899ed0dfd26ea13f16b077f316049a6ed2f4db6da4f80b8c460
		Secure: false
	Object:
		Variable: varReplacer33049
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer33049)
		Method: <com.google.android.exoplayer2.upstream.f0.o$b: void <init>(java.io.File,byte[],boolean)>
		SHA-256: 2cf6c07197e50193cfca0fa85b704f061abaccbd8693c9a953c002f704b3481c
		Secure: false
	Object:
		Variable: $r18
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r18.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r11, $r14)
		Method: <com.google.android.exoplayer2.upstream.f0.o$b: boolean k(java.util.HashMap,android.util.SparseArray)>
		SHA-256: 9dced4d20c2afeb7e7c29bdc04d27d4d3c39510211d1ddfdeb5fb04c47aeb39a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer23402)
		Method: <okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 30f572b20db20be575ad5cdbfcd4af09e37ebd7582de21157cc3d13d0fd5615e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer23396)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: c141be0ebbf95999ae5cc94cfc152dfbf9bf8fdafc010f9a645df4f8e838215
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r12.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r5, $r10)
		Method: <com.google.android.exoplayer2.upstream.f0.o$b: void m(java.util.HashMap)>
		SHA-256: 43ff809454e348323d396cf8a29e4416d50b1516d21f4ea652e4a43c6985ec13
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer23403, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 39dbba69b099705a2d134a72a6333bf164c7f4c1654c87f0c4f8bf39c14e8ca6
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11128)
		Method: <e.b.d.k.c: java.lang.String a(byte[])>
		SHA-256: 595c8ff5cae269161de99b4577deb57162e605a854574a0b063a3912292509e0
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <g.f: g.f g(java.lang.String)>
		SHA-256: ecd07b4613912466cf27cdd512d979899d284840d41656ebbcfea101f8214319
		Secure: false

Findings in Java Class: e.b.d.k.c

	 in Method: java.lang.String a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #595c8ff5cae269161de99b4577deb57162e605a854574a0b063a3912292509e0)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11128)


Findings in Java Class: com.facebook.soloader.SoLoader$a

	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #68c52a3904b27d66428614a0078b3e575b074a1e1c5798a461a8487cb2655f3b)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11473)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #68c52a3904b27d66428614a0078b3e575b074a1e1c5798a461a8487cb2655f3b)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.google.android.exoplayer2.upstream.f0.o$b

	 in Method: boolean k(java.util.HashMap,android.util.SparseArray)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #9dced4d20c2afeb7e7c29bdc04d27d4d3c39510211d1ddfdeb5fb04c47aeb39a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r10.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r18)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r16.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r15)


	 in Method: void m(java.util.HashMap)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #43ff809454e348323d396cf8a29e4416d50b1516d21f4ea652e4a43c6985ec13)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: specialinvoke $r2.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r12)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


	 in Method: void <init>(java.io.File,byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer33049)


Findings in Java Class: g.f

	 in Method: g.f g(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ecd07b4613912466cf27cdd512d979899d284840d41656ebbcfea101f8214319)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ecd07b4613912466cf27cdd512d979899d284840d41656ebbcfea101f8214319)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: okhttp3.internal.platform.Platform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #a062f9317f55dbc6fe045e76fb2e260d2ef25b17fd0f9f25750b6109595d9720)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer23397)


Findings in Java Class: okhttp3.internal.platform.AndroidPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #30f572b20db20be575ad5cdbfcd4af09e37ebd7582de21157cc3d13d0fd5615e)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer23402)


Findings in Java Class: okhttp3.internal.platform.ConscryptPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #39dbba69b099705a2d134a72a6333bf164c7f4c1654c87f0c4f8bf39c14e8ca6)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer23403, $r2)


Findings in Java Class: okhttp3.Cache$Entry

	 in Method: java.util.List readCertificateList(g.e)
		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #c69e5942666f9bd60223b37bbf9d8febf29d03ac3f9100cd129fbff73e02cc5a)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #c69e5942666f9bd60223b37bbf9d8febf29d03ac3f9100cd129fbff73e02cc5a)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #c69e5942666f9bd60223b37bbf9d8febf29d03ac3f9100cd129fbff73e02cc5a)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer34016)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer18962, $r7, varReplacer18962)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer18962, $r7, varReplacer18962)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer18962, $r7, varReplacer18962)


Findings in Java Class: okhttp3.internal.Util

	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer18966)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 25

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 4
	ConstraintError: 7
	TypestateError: 2
	RequiredPredicateError: 7
=====================================================================
