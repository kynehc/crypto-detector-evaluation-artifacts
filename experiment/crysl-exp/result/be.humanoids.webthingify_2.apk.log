0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r6
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r6 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r0)
		Method: <fi.iki.elonen.NanoHTTPD: javax.net.ssl.SSLServerSocketFactory makeSSLSocketFactory(java.lang.String,char[])>
		SHA-256: 56df3a1c7e378a2516a47533e37e7083e4a1cd114826b05be7d866340b9353df
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <fi.iki.elonen.NanoWSD: java.lang.String makeAcceptKey(java.lang.String)>
		SHA-256: 11348e863528be06761eee1bb52f8765e46accb8024ffd840ac2ca918d929e88
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9391)
		Method: <fi.iki.elonen.NanoHTTPD: javax.net.ssl.SSLServerSocketFactory makeSSLSocketFactory(java.security.KeyStore,javax.net.ssl.KeyManager[])>
		SHA-256: 8f807e77ed020d0ca096710b660f03e58492a0080614012f42fefb95bbe46294
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r2)
		Method: <fi.iki.elonen.NanoHTTPD: javax.net.ssl.SSLServerSocketFactory makeSSLSocketFactory(java.security.KeyStore,javax.net.ssl.KeyManager[])>
		SHA-256: 96ea8dae7b5bd40298b8a165c42d91a7089d35ac3b1d354f8cedc5d877594fe4
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11987)
		Method: <fi.iki.elonen.NanoWSD: java.lang.String makeAcceptKey(java.lang.String)>
		SHA-256: 59a0884fd177788dac6e6d5645a1a555a76bb2b1a0ec220b7f39680f8ddb434d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <fi.iki.elonen.NanoHTTPD: javax.net.ssl.SSLServerSocketFactory makeSSLSocketFactory(java.lang.String,char[])>
		SHA-256: 16730a8728017d75b8094d9fd3064fa386c8d9c784b464c6682fa3a232406b9
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.TrustManager[]
		Statement: $r5 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <fi.iki.elonen.NanoHTTPD: javax.net.ssl.SSLServerSocketFactory makeSSLSocketFactory(java.security.KeyStore,javax.net.ssl.KeyManager[])>
		SHA-256: 5f7747bd15d53d7d955b759cce506f5f61786fb993a6d18e628f20c9bfb09007
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.KeyManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <fi.iki.elonen.NanoHTTPD: javax.net.ssl.SSLServerSocketFactory makeSSLSocketFactory(java.security.KeyStore,javax.net.ssl.KeyManagerFactory)>
		SHA-256: cf7d8e33369475ef18be0da36f9cd98cf666f22a59e1c9868996961e4184f3ec
		Secure: false

Findings in Java Class: fi.iki.elonen.NanoHTTPD

	 in Method: javax.net.ssl.SSLServerSocketFactory makeSSLSocketFactory(java.lang.String,char[])
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #16730a8728017d75b8094d9fd3064fa386c8d9c784b464c6682fa3a232406b9)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r5, $r1)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #16730a8728017d75b8094d9fd3064fa386c8d9c784b464c6682fa3a232406b9)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r5, $r1)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #56df3a1c7e378a2516a47533e37e7083e4a1cd114826b05be7d866340b9353df)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r6.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r3, $r1)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #56df3a1c7e378a2516a47533e37e7083e4a1cd114826b05be7d866340b9353df)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r6.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r3, $r1)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #16730a8728017d75b8094d9fd3064fa386c8d9c784b464c6682fa3a232406b9)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r6.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r3, $r1)


	 in Method: javax.net.ssl.SSLServerSocketFactory makeSSLSocketFactory(java.security.KeyStore,javax.net.ssl.KeyManager[])
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r1, $r5, varReplacer9392)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r1, $r5, varReplacer9392)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r1, $r5, varReplacer9392)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #8f807e77ed020d0ca096710b660f03e58492a0080614012f42fefb95bbe46294)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9391)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r0)


Findings in Java Class: fi.iki.elonen.NanoWSD

	 in Method: java.lang.String makeAcceptKey(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #59a0884fd177788dac6e6d5645a1a555a76bb2b1a0ec220b7f39680f8ddb434d)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11987)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 8

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 1
	HardCodedError: 2
	RequiredPredicateError: 5
	NeverTypeOfError: 2
	ConstraintError: 2
=====================================================================
