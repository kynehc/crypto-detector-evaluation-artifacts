0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r24
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r24 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>($r4, $r11)
		Method: <f.a.a.b.a.v.s.a: javax.net.ssl.SSLContext j(java.lang.String)>
		SHA-256: 38c015fe27b77c6c12a3db25416e78a1e6043398c99087327264794a4839a70b
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <f.a.a.b.a.v.t.d: void b(java.lang.String,java.lang.String)>
		SHA-256: 560e747413fbd61cc7eee10e19523ab8829425ca3be6c962283d1f449541a763
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.lang.String)>($r11, $r12)
		Method: <f.a.a.b.a.v.s.a: javax.net.ssl.SSLContext j(java.lang.String)>
		SHA-256: efbd5bc57847423975b1957cb7035001e12405f179d6dfb69c749f0eebf5e394
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.KeyManager[]
		Statement: $r17 = virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <f.a.a.b.a.v.s.a: javax.net.ssl.SSLContext j(java.lang.String)>
		SHA-256: 4f86d2d9d64909883871246db3ee9cb9eb905012a2f9d2376f50d15f30f21de5
		Secure: false
	Object:
		Variable: $r24
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r24 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r4)
		Method: <f.a.a.b.a.v.s.a: javax.net.ssl.SSLContext j(java.lang.String)>
		SHA-256: 4027d4234c16158dec68a15e9aae04346618dd850791a5be6b58223306cb943f
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r11)
		Method: <f.a.a.b.a.v.s.a: javax.net.ssl.SSLContext j(java.lang.String)>
		SHA-256: 4e4a540378a079900aee7284b44d78bece4bc14feaa395bd1ac134b90c848076
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <f.a.a.b.a.v.t.c: byte[] b()>
		SHA-256: f441a70e7f1628771f6766cc806eae55ee7fffa7dc64e1480c4862f6933e09ef
		Secure: true
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLContext
		Statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r4)
		Method: <f.a.a.b.a.v.s.a: javax.net.ssl.SSLContext j(java.lang.String)>
		SHA-256: f7568c8f46e0e992991024bebf7571033f840643a8a56ec1ded722130b4940ae
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.KeyStore
		Statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <f.a.a.b.a.v.s.a: javax.net.ssl.SSLContext j(java.lang.String)>
		SHA-256: 64c0c400f7f31c74c534ec3ca49c17d084f772b57a518b0b6ede7a711a3900f
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.KeyStore
		Statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <f.a.a.b.a.v.s.a: javax.net.ssl.SSLContext j(java.lang.String)>
		SHA-256: 64c0c400f7f31c74c534ec3ca49c17d084f772b57a518b0b6ede7a711a3900f
		Secure: false
	Object:
		Variable: $i5
		Type: int
		Statement: $i5 = virtualinvoke $r3.<java.security.SecureRandom: int nextInt(int)>(varReplacer7853)
		Method: <f.a.a.b.a.v.t.c: byte[] b()>
		SHA-256: 623c2ed75bca9474172c8c84495af19c3bd90338f49cfd655c44b8d40330c1a5
		Secure: true
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLContext
		Statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r4, $r3)
		Method: <f.a.a.b.a.v.s.a: javax.net.ssl.SSLContext j(java.lang.String)>
		SHA-256: 82ebb75a3a1ae39d2f12d6a0d2e7f9ecc5a2aca231d6d234ca433864692866f0
		Secure: false
	Object:
		Variable: $i6
		Type: int
		Statement: $i6 = virtualinvoke $r3.<java.security.SecureRandom: int nextInt(int)>(varReplacer7854)
		Method: <f.a.a.b.a.v.t.c: byte[] b()>
		SHA-256: ddbba307f63b3c17053d9360f6abb98712e4d2852dd2d808af556ff029fe6a4c
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7888)
		Method: <f.a.a.b.a.v.t.d: void b(java.lang.String,java.lang.String)>
		SHA-256: 505579fe79e41fb32ec78bd57544d3897ad146ab45027c10d0197d665a3cf3ba
		Secure: false
	Object:
		Variable: $i1
		Type: int
		Statement: $i1 = virtualinvoke $r3.<java.security.SecureRandom: int nextInt(int)>(varReplacer7852)
		Method: <f.a.a.b.a.v.t.c: byte[] b()>
		SHA-256: ba68fd8a42cf3193ee8e82b7cccd73dd1ab181cf706fbc11d40291aa256be239
		Secure: true
	Object:
		Variable: $i4
		Type: int
		Statement: $i4 = virtualinvoke $r3.<java.security.SecureRandom: int nextInt(int)>(varReplacer7850)
		Method: <f.a.a.b.a.v.t.c: byte[] b()>
		SHA-256: 8b12df8a52d400e3a01a58f74410af8ea209c0afe2c22f498efef8992c618ce8
		Secure: true
	Object:
		Variable: $r25
		Type: javax.net.ssl.TrustManager[]
		Statement: $r25 = virtualinvoke $r24.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <f.a.a.b.a.v.s.a: javax.net.ssl.SSLContext j(java.lang.String)>
		SHA-256: d9ae76287a4b69570dbe75921be0e19530906c89d544d35bce7304d0981521a8
		Secure: false

Findings in Java Class: f.a.a.b.a.v.t.d

	 in Method: void b(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #505579fe79e41fb32ec78bd57544d3897ad146ab45027c10d0197d665a3cf3ba)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7888)


Findings in Java Class: f.a.a.b.a.v.s.a

	 in Method: javax.net.ssl.SSLContext j(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r25, varReplacer10039)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #4e4a540378a079900aee7284b44d78bece4bc14feaa395bd1ac134b90c848076)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #4e4a540378a079900aee7284b44d78bece4bc14feaa395bd1ac134b90c848076)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f7568c8f46e0e992991024bebf7571033f840643a8a56ec1ded722130b4940ae)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r4)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #64c0c400f7f31c74c534ec3ca49c17d084f772b57a518b0b6ede7a711a3900f)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #64c0c400f7f31c74c534ec3ca49c17d084f772b57a518b0b6ede7a711a3900f)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #64c0c400f7f31c74c534ec3ca49c17d084f772b57a518b0b6ede7a711a3900f)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #64c0c400f7f31c74c534ec3ca49c17d084f772b57a518b0b6ede7a711a3900f)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #4e4a540378a079900aee7284b44d78bece4bc14feaa395bd1ac134b90c848076)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #4e4a540378a079900aee7284b44d78bece4bc14feaa395bd1ac134b90c848076)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r25, varReplacer10039)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #82ebb75a3a1ae39d2f12d6a0d2e7f9ecc5a2aca231d6d234ca433864692866f0)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r4, $r3)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #64c0c400f7f31c74c534ec3ca49c17d084f772b57a518b0b6ede7a711a3900f)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #64c0c400f7f31c74c534ec3ca49c17d084f772b57a518b0b6ede7a711a3900f)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r24.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r14)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r25, varReplacer10039)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 17

	CryptoAnalysis found the following violations. For details see description above.
	NeverTypeOfError: 5
	ConstraintError: 3
	RequiredPredicateError: 5
	HardCodedError: 5
=====================================================================
