0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Alive 30289  5000
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <org.fdroid.fdroid.Utils: java.lang.String getBinaryHash(java.io.File,java.lang.String)>
		SHA-256: ade6bb1f64f33bac826b58f7f5a6b93774bb7c4d7c597901179b94049fcda92d
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.pqc.math.linearalgebra.GF2Matrix: void <init>(int,char)>
		SHA-256: f6029f09e7eaad0a79299673ca4a747029813212ccf99c394d2770a03fc5295a
		Secure: true
	Object:
		Variable: r0
		Type: org.bouncycastle.x509.ExtendedPKIXParameters
		Statement: specialinvoke r0.<java.security.cert.PKIXParameters: void <init>(java.util.Set)>($r1)
		Method: <org.bouncycastle.x509.ExtendedPKIXParameters: void <init>(java.util.Set)>
		SHA-256: bc4db4edf85d5095c872f763083d4cdd57eaf413157a98ff957c0439448eaca6
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PublicKey,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 7edea5eeeb5a77eb822f8f79191943ec26ee9bbe4edb21587a9ed6b3c079652b
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.cert.CertificateFactory
		Statement: $r3 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer47449)
		Method: <kellinwood.security.zipsigner.ZipSigner: java.security.cert.X509Certificate readPublicKey(java.net.URL)>
		SHA-256: a92308f88d7d14a0770a607f515f88613faec504b7306cd0b166daec564dd9fa
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest()>()
		Method: <kellinwood.security.zipsigner.ZipSigner: void writeSignatureBlock(kellinwood.security.zipsigner.KeySet,byte[],java.io.OutputStream)>
		SHA-256: b22908bb754e0c4e4a15f6ae02a29a8c81aa265d85287618b45dbfc6e8edf311
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.KeyPair
		Statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: b9c461d81d3bc41eecc0783441f280f41b2f629e19018ff708aa15ce8ab9d299
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: c908257ebef1e44e27421c3dc6127a4c79990e1515e273132ea2c2cb020fcdee
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.cert.CertificateFactory
		Statement: $r2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.bouncycastle.cert.jcajce.NamedCertHelper: java.security.cert.CertificateFactory createCertificateFactory(java.lang.String)>
		SHA-256: 7af7af102744f29108e79384d9ad966c7cdb212255b7ad669bab054a7fd5a599
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.Cipher
		Statement: $r12 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer44388)
		Method: <kellinwood.security.zipsigner.ZipSigner: void writeSignatureBlock(kellinwood.security.zipsigner.KeySet,byte[],java.io.OutputStream)>
		SHA-256: 3bcf5d62137d6d1340c423bf794c15090025f9ebb3882281260bbcc7f6bf3306
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.util.DefaultJcaJceHelper: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: d5732c60dfdd260fa2584e01723a020872061316c1136df9f421e4c02f29b5db
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <org.fdroid.fdroid.Utils: java.lang.String hashBytes(byte[],java.lang.String)>
		SHA-256: 17b656ad16fd490313c1546eb246d578ac6a2f5bede382ab7dbccec47c6c3247
		Secure: false
	Object:
		Variable: $r27
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r27.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r6, $r15)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 17ea506228f5dc57471137e0b695352a3774e9c7e597031eeeb9157ef0e2b937
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer44369)
		Method: <kellinwood.security.zipsigner.ZipSigner: void generateSignatureFile(java.util.jar.Manifest,java.io.OutputStream)>
		SHA-256: 5a26d65846b037f82236fb94dcab3406e5bcb5ef1676818be5906a237e250ef9
		Secure: false
	Object:
		Variable: r0
		Type: org.bouncycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r2, $r3, $r4, $i0)
		Method: <org.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>
		SHA-256: b36d50207c12d926e435b859cb9848007d52f50b2e62c847e597de1f84f657c6
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r3, $r6, $r7)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey: void <init>(org.bouncycastle.crypto.params.DSAPrivateKeyParameters)>
		SHA-256: 2d5d5ac1c460f68032e60a336ee4552b59000b4adb566ea09230715136a1ffd8
		Secure: true
	Object:
		Variable: $r14
		Type: java.security.MessageDigest
		Statement: $r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r13, varReplacer44848)
		Method: <org.bouncycastle.x509.AttributeCertificateHolder: boolean match(java.security.cert.Certificate)>
		SHA-256: 5ccd538d353b73eff40401b908ddf9599c8d567523eca519a20d2405686c8ca5
		Secure: true
	Object:
		Variable: varReplacer47448
		Type: java.lang.String
		Statement: $r9 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer47448)
		Method: <kellinwood.security.zipsigner.ZipSigner: java.security.PrivateKey readPrivateKey(java.net.URL,java.lang.String)>
		SHA-256: f40d8c70001be270801f249b806fbd22c40d0475fe8ce733ec25b972f4fea573
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <kellinwood.security.zipsigner.ZipSignature: byte[] sign()>
		SHA-256: 4bcbfdf172bf77cd0001de31fa5e6ca8f0b5fc4eee961268f6f98ee12fa46ac3
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.fdroid.fdroid.Utils: java.lang.String getBinaryHash(java.io.File,java.lang.String)>
		SHA-256: db2c85971baf20cf0cecf28da6720c02586076d4587e86ae5fada3abd9bc3e9f
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <org.fdroid.fdroid.Hasher: void init(java.lang.String)>
		SHA-256: a3bf33341d15b4c170db88ae653f4df46270d882dc557bb05a0127166d351847
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.KeyFactory
		Statement: $r9 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer47447)
		Method: <kellinwood.security.zipsigner.ZipSigner: java.security.PrivateKey readPrivateKey(java.net.URL,java.lang.String)>
		SHA-256: c827f1a9bac95d0144b310d5d1dee5a9b522fda05ddd63af19fc1f782fbf373
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r17 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r16)
		Method: <org.fdroid.fdroid.nearby.LocalRepoKeyStore: void <init>(android.content.Context)>
		SHA-256: 91423c93f528f9aeab55d7c25ffab4a176c3ba0a3090451c3c045ef95e47585
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r13.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r12, $r15, $r8, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,org.bouncycastle.jce.spec.ECParameterSpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration)>
		SHA-256: 86df246b8c1578d3501a486e27f08db6d1aa41db6923499c742aa2e3fe110297
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer44368)
		Method: <kellinwood.security.zipsigner.ZipSigner: java.util.jar.Manifest addDigestsToManifest(java.util.Map)>
		SHA-256: fccd0916dc40efe4190031b95a46a5c5ff053393c104465d4935e25a826a0bc6
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <org.fdroid.fdroid.Utils: java.lang.String hashBytes(byte[],java.lang.String)>
		SHA-256: 1a913163a1173135f69ad78c53e3dc9829a60ee5922f411b80546c06d35d4ce
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1488)
		Method: <org.fdroid.fdroid.Utils: java.lang.String calcFingerprint(byte[])>
		SHA-256: bc018c6f0d6db038ad0f7e67a6a0501ea91c372203826243819de75b885c7d5e
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 181aa94d9dfb4131bf99e325443dd030be8d0745e2fdbe58d6599dfe9ccd41a6
		Secure: true
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <kellinwood.security.zipsigner.ZipSigner: java.lang.String autoDetectKey(java.lang.String,java.util.Map)>
		SHA-256: 529eec0a157969297d762dbc315756a495a6bea106d857506f2bdd0b116e4e5a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.NamedJcaJceHelper: java.security.Signature createSignature(java.lang.String)>
		SHA-256: cb6dbedb66709ff933343a7a19443259032632b9744c262530a2bb4dc73beae9
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.PrivateKey
		Statement: $r7 = virtualinvoke $r4.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <org.fdroid.fdroid.nearby.LocalRepoKeyStore: void addToStore(java.lang.String,java.security.KeyPair,java.security.cert.Certificate)>
		SHA-256: dccfca0201f342d97dec180a2a33a8cb04fe52e55014a3afdb01c40ebd1c6578
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.KeyPair
		Statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13)
		Method: <org.bouncycastle.pqc.jcajce.provider.lms.LMSKeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 9b17ba9431c8d9f9785438794cfcb1737e28924f956dfb41c65965889e6c317d
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.JCEElGamalPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: 6b8822e70d4604e23c0ea07692bf2c9c1daaa36d64fb48b6df14aae465189041
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.fdroid.fdroid.Utils: java.lang.String calcFingerprint(byte[])>
		SHA-256: 816e517041aa206837f041ad29c63f15b32b3ae6c156a5e6e051c6c793537002
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r12, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey,java.security.spec.ECParameterSpec)>
		SHA-256: 3ba938937705aba5e3c3d277dfcc715f8b43a8b6ac333db58c7d4cf1d9df1f2a
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer47452)
		Method: <kellinwood.security.zipsigner.ZipSignature: void <init>()>
		SHA-256: 7ee66be51535d248dbbc540340001620e230934ca6d1124b2ba5d4502fa39ebf
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer39537)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 81f60dbf99871b0efe10eb57091e96ea3613681587261a77ff08de6674fb774b
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r7)
		Method: <kellinwood.security.zipsigner.ZipSigner: java.security.spec.KeySpec decryptPrivateKey(byte[],java.lang.String)>
		SHA-256: aa78a677288a4b74d12bd267a983894bb0a4d57966c26f95a7812d82121bede8
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r29
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r29.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r26, $r27, $r1, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey: void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 69d36116f62acb406343ba2a4bd3c5dfb318c67056454f8adafd51a6e6f7e175
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <kellinwood.security.zipsigner.ZipSigner: java.security.spec.KeySpec decryptPrivateKey(byte[],java.lang.String)>
		SHA-256: 8fbeed9c7e515407f910a272d88d7a66d83dfb847bfb326974c40c057841f463
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.AlgorithmParameters
		Statement: $r2 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.ProviderJcaJceHelper: java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String)>
		SHA-256: c8b20f17b82de52ab097a55145288f3a16a7d8b203dd25e179f63dac5e41d4d7
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r4)
		Method: <org.fdroid.fdroid.nearby.LocalRepoKeyStore: void <init>(android.content.Context)>
		SHA-256: ab83beb6aee7657fe6ac77ba43c6537f3493772f89129b51132c6d17c2d12daa
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.KeyPair
		Statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13)
		Method: <org.bouncycastle.pqc.jcajce.provider.lms.LMSKeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 9b17ba9431c8d9f9785438794cfcb1737e28924f956dfb41c65965889e6c317d
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer47453)
		Method: <kellinwood.security.zipsigner.ZipSignature: void <init>()>
		SHA-256: 717e2c46f6524c945c73d5206df9a3113932177d504bcc92e809ad7263620c82
		Secure: false
	Object:
		Variable: $r11
		Type: javax.net.ssl.KeyManager[]
		Statement: $r11 = virtualinvoke $r10.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.fdroid.fdroid.nearby.LocalRepoKeyStore: void addToStore(java.lang.String,java.security.KeyPair,java.security.cert.Certificate)>
		SHA-256: ccf4e798589c1e8511e676a7e37d2ee3fa4e9cb629b66019fc2d52ac0bd3e459
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r12)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.gost.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 6c7ef9fa4e7bff262cf03d9de0acc4ec162191195a2243ed7af7fe97a2eb9e56
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer39540)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: a2fe90be677c36edaafecc16c953251943d608337b36f886a34e9d36d047f8a3
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.MessageDigest
		Statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer44385)
		Method: <kellinwood.security.zipsigner.ZipSigner: void writeSignatureBlock(kellinwood.security.zipsigner.KeySet,byte[],java.io.OutputStream)>
		SHA-256: db49fd80fc00f8f7f1359dab92461f15e531e796c9bb51e99a63d72f0ba8e1d1
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r7.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <org.fdroid.fdroid.nearby.LocalRepoKeyStore: void signZip(java.io.File,java.io.File)>
		SHA-256: 68b7640879fc8480d03dd362fe3fc5fda46cc65c07a03c008b418bc62d02bc4c
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.KeyPair
		Statement: specialinvoke $r9.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r1, $r10)
		Method: <org.bouncycastle.pqc.jcajce.provider.qtesla.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: cf588b1500b5c69c9d3f0cc4edd459cfc6e8c872f610644704d13f5210c80ee5
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer39541)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 8a1e2080c6642de2e70b2e094e3c266af4ddc4449fb5d60a6ab598b707442232
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r3)
		Method: <kellinwood.security.zipsigner.ZipSigner: java.security.spec.KeySpec decryptPrivateKey(byte[],java.lang.String)>
		SHA-256: 48d956af7dda60dd3f9ef78b41965f6c593409adf75b4e489d11d7709e092788
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey: java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve,org.bouncycastle.crypto.params.ECDomainParameters)>
		SHA-256: 1ed34635d886298f1ac65535003eb919395a61c4e94f473f6395f42d219d6f5f
		Secure: true
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: c9e1ff5450f21aae65af053d6ed29f81c5a7b267991078defbfa3059af0e266a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer39533)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 8e864e0eebef37ec26c3dfc825477dd42d23453dc875ad3eb8cccac16e37f966
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.DigestOutputStream
		Statement: specialinvoke $r7.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r8, $r6)
		Method: <kellinwood.security.zipsigner.ZipSigner: void generateSignatureFile(java.util.jar.Manifest,java.io.OutputStream)>
		SHA-256: db6aa29f9360056ea1d3e28c7be6d5f1b4847ea67ea78f7a2c28fd8d79c1f652
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.KeyPair
		Statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: b9c461d81d3bc41eecc0783441f280f41b2f629e19018ff708aa15ce8ab9d299
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 967c4f01112b22279695bcf89b6dc1c0b602dca9315f91b4be9227fd5d047c2a
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.KeyPair
		Statement: specialinvoke $r8.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r10)
		Method: <org.bouncycastle.pqc.jcajce.provider.newhope.NHKeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: cba3f930fac70fcda0f15dcac6eba393ef4b6e4521aecbae2c2f176779ad6790
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey: java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve,org.bouncycastle.crypto.params.ECDomainParameters)>
		SHA-256: 8932abb3effe3ac7b4693b86e1e64f9620a092735469fa0a27ce4f58e149492e
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)
		Method: <org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 17334494b52ec35b1326cfe9e6dde617617d7542d35ee9062a8472ea15417839
		Secure: false
	Object:
		Variable: $r15
		Type: byte[]
		Statement: $r15 = virtualinvoke $r14.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.bouncycastle.x509.AttributeCertificateHolder: boolean match(java.security.cert.Certificate)>
		SHA-256: e7db0241527fc7f51059b6cf44875cdfb7ec12450eceba80c4767b3d6fe41b20
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r0, $r3, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertSpec(java.security.spec.EllipticCurve,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: d870d280483a2664c58e06c9542abbdec00b481f8724a400848a80df0b6e4f5f
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.ProviderJcaJceHelper: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: 4426af26dc3fc58a067c5a58b3c0542c3dfa1bc92e57d2921b3ab11f647f0193
		Secure: true
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: c9e1ff5450f21aae65af053d6ed29f81c5a7b267991078defbfa3059af0e266a
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer44333)
		Method: <kellinwood.security.zipsigner.ZipSigner: java.lang.String autoDetectKey(java.lang.String,java.util.Map)>
		SHA-256: 2cd17dd4754f182c66dfec2c6968ebec178fe9d2e2fc75c59ff7fc078534afd6
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.NamedJcaJceHelper: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: b0d5cd113028009cca34a566f603cb63613569a1586081066100dacfc7c80673
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer47111)
		Method: <com.bumptech.glide.load.engine.cache.SafeKeyGenerator$1: com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer create()>
		SHA-256: 785a9359a4ef91697cbbc55ef02f3f3ede489d796f168ff19ca04c566fc7bb53
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.AlgorithmParameters
		Statement: $r2 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.NamedJcaJceHelper: java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String)>
		SHA-256: 56833da8ae3d4d36272676cbcfa817da382e9d7b4afee7b28b5bc0913a1acaac
		Secure: false
	Object:
		Variable: $r27
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r27.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r6, $r15, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: c67a58db466f44792924e383c9800713831ce853e3ca81f3580a8d50f581e617
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r6)
		Method: <org.bouncycastle.cert.crmf.jcajce.JcePKMACValuesCalculator: byte[] calculateMac(byte[],byte[])>
		SHA-256: 55eb535ec698f1bdaa9b9339c4f90a63f5a7b71223f9954d433aa3fd06fab83
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r12, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PublicKey,java.security.spec.ECParameterSpec)>
		SHA-256: 1d2898e3d3b44f1b76b2c9a30718bd32f18e4a5f6903d4c54ee6ab6b4453a2d
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r13)
		Method: <org.bouncycastle.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 9ad7aedb2297f46d3f8d0b119cf3f27a3d55f3e7bb77a0eadc01e0b2656f927f
		Secure: false
	Object:
		Variable: $r21
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r21.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r14, $r15, varReplacer36531)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(org.bouncycastle.asn1.x9.X962Parameters,org.bouncycastle.math.ec.ECCurve)>
		SHA-256: 82e90205fae96926e76b11d802051e995f91e3aeae8b4298980eb4d08371573b
		Secure: true
	Object:
		Variable: r0
		Type: org.bouncycastle.jcajce.spec.DHDomainParameterSpec
		Statement: specialinvoke r0.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r1, $r3, $i1)
		Method: <org.bouncycastle.jcajce.spec.DHDomainParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int,int)>
		SHA-256: 9cdde17292729ed12e67e00ef32f20bc0ba0a50cc823d5bcab3268462fa45fcd
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.cert.CertificateFactory
		Statement: $r2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <org.bouncycastle.cert.jcajce.ProviderCertHelper: java.security.cert.CertificateFactory createCertificateFactory(java.lang.String)>
		SHA-256: 6d3ec0a71779c0e723ed502888987ff1a41ed16ed17219921981d9d289d341c2
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.PrivateKey
		Statement: $r10 = virtualinvoke $r9.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r7)
		Method: <kellinwood.security.zipsigner.ZipSigner: java.security.PrivateKey readPrivateKey(java.net.URL,java.lang.String)>
		SHA-256: 64ff5f4266cf692420a9b22ee4f722d23ed00856ea0bbd87bdca9f629c4e273b
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyPair
		Statement: specialinvoke $r7.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r6, $r8)
		Method: <org.fdroid.fdroid.nearby.LocalRepoKeyStore: java.security.KeyPair getKerplappKeypair()>
		SHA-256: 68f061e2c0ecbd208088b0b1f1930c47dacb5260daa9b786f25540758aa87de8
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r12, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey,java.security.spec.ECParameterSpec)>
		SHA-256: 493fa9240f9e173840410f81e7dfc7583eef5d11bd5490d3eabf120ecd5536b5
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r3.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r2, $r5, $r6)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey: void <init>(org.bouncycastle.crypto.params.DSAPublicKeyParameters)>
		SHA-256: 9390edae09a93724017ade479bb47ea94287e6460977d2dad3759cd566636f64
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r10, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: ca8c57f00e636666523b3803cf2d449c7668aea2653306a5d436a81914fd7df0
		Secure: true
	Object:
		Variable: $r21
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r21.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r14, $r15, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(org.bouncycastle.asn1.x9.X962Parameters,org.bouncycastle.math.ec.ECCurve)>
		SHA-256: 49063db5056501dc5b91a4e377b49a58eeeabe81598cccd9ccf90a92bea4339c
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.JCEElGamalPublicKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: 2f96be90287037dd5aa521a81412c6567fe97ad3bdc0a3e0dd37cb2855cfb876
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r3, $r5, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(org.bouncycastle.asn1.x9.X9ECParameters)>
		SHA-256: a4b7a5874d7ddc91e3fe1c6f80927286981244105f50c9286ac1b1cb27893d7d
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPairGenerator
		Statement: $r1 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer20922)
		Method: <org.fdroid.fdroid.nearby.LocalRepoKeyStore: java.security.KeyPair generateRandomKeypair()>
		SHA-256: af3aa14a39bf8efc47c6feb57dd787bdfca3e9b6ac20aa8d4daab9f1c9785b48
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer39539)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: d16583f3839fece5299df73d14e47916218361b259839bbbd8cd1629cce45ca
		Secure: false
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer21660)
		Method: <info.guardianproject.netcipher.NetCipher: info.guardianproject.netcipher.client.TlsOnlySocketFactory getTlsOnlySocketFactory(boolean)>
		SHA-256: cb7e5d8d9030bbd53866324dd13527832ea5203d250c7c2f159f8a9d77fafb42
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 967c4f01112b22279695bcf89b6dc1c0b602dca9315f91b4be9227fd5d047c2a
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.PrivateKey
		Statement: $r10 = virtualinvoke $r9.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r7)
		Method: <kellinwood.security.zipsigner.ZipSigner: java.security.PrivateKey readPrivateKey(java.net.URL,java.lang.String)>
		SHA-256: 64ff5f4266cf692420a9b22ee4f722d23ed00856ea0bbd87bdca9f629c4e273b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.ProviderJcaJceHelper: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 14ead5b41e52dcc0971ab3bbf6947b9738bc0cfa14d4e782ddd7a129f6301c26
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.KeyFactory
		Statement: $r9 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer47448)
		Method: <kellinwood.security.zipsigner.ZipSigner: java.security.PrivateKey readPrivateKey(java.net.URL,java.lang.String)>
		SHA-256: 8f6b4f4a49b26957119df4c78d5cce132703ac49634237f8b000e0262a2a9a8b
		Secure: false
	Object:
		Variable: $r18
		Type: javax.net.ssl.KeyManager[]
		Statement: $r18 = virtualinvoke $r17.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.fdroid.fdroid.nearby.LocalRepoKeyStore: void <init>(android.content.Context)>
		SHA-256: d1188e36b032eaf8baf3915e4f50ac94caf88083d81c842ff424beade3a86c32
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.KeyPair
		Statement: specialinvoke $r9.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r10, $r12)
		Method: <org.bouncycastle.pqc.jcajce.provider.sphincs.Sphincs256KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 754f2c5762d55be498e5162b98780867e124a08b4b680aee07b2fa547e5cc083
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey: java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve,org.bouncycastle.crypto.params.ECDomainParameters)>
		SHA-256: 4bf68a34c81d1edf795aedd92ddee186f149b3050b72dd9d67beac9a5963e08a
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.fdroid.fdroid.Hasher: java.lang.String getHash()>
		SHA-256: ebda90feddfd1f85d4065da59e0e324f8c94f268db1aeaa13400af6ea32596c6
		Secure: true
	Object:
		Variable: $r23
		Type: byte[]
		Statement: $r23 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>()
		Method: <kellinwood.security.zipsigner.ZipSigner: java.util.jar.Manifest addDigestsToManifest(java.util.Map)>
		SHA-256: 12eef1bb1fa2768373e44cee96219f71d8db949dc7a961c33c56c07611988a4b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.Signature
		Statement: $r1 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.util.DefaultJcaJceHelper: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 66f26381b2b186fbed59de5f1091ee81e1ff14794fdb45154aac9feab8965356
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyPair
		Statement: $r2 = virtualinvoke $r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.fdroid.fdroid.nearby.LocalRepoKeyStore: java.security.KeyPair generateRandomKeypair()>
		SHA-256: 6172e16f913b99350bf4cef7c702488671de91326b0d21dba3705c14a9aef8ec
		Secure: true
	Object:
		Variable: $r6
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r6)
		Method: <org.bouncycastle.cert.crmf.jcajce.JcePKMACValuesCalculator: byte[] calculateMac(byte[],byte[])>
		SHA-256: 4285b0b336ff13a2ca84a5fdd03ee2fb749bcf650a7075e378932054b1c6d205
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: c9e1ff5450f21aae65af053d6ed29f81c5a7b267991078defbfa3059af0e266a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.cert.CertificateFactory
		Statement: $r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.cert.jcajce.DefaultCertHelper: java.security.cert.CertificateFactory createCertificateFactory(java.lang.String)>
		SHA-256: f8fbf85b40c81fe63a566f3acad5c05c9b245103f283f549e11ae2fb09219e7b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.CryptoServicesRegistrar: java.security.SecureRandom getSecureRandom()>
		SHA-256: 375867338a8d572664475cac25bcfa294db8f2af8faff8d50836d5d6dcf8ab15
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.AlgorithmParameters
		Statement: $r1 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.util.DefaultJcaJceHelper: java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String)>
		SHA-256: 8d123772629184fc0669650c061426f57f5203aa49ca1fae65ed6e679e158734
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: a9c19b12994234db6ec00ed5b541d5738b556e23d3870b731ea4245dbf932de7
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)
		Method: <org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: c6bb43f893190c388a16172ecf23e0b3f08b68f394f78a97ebfe490a5b717770
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PublicKey,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 7edea5eeeb5a77eb822f8f79191943ec26ee9bbe4edb21587a9ed6b3c079652b
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PublicKey: java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve,org.bouncycastle.crypto.params.ECDomainParameters)>
		SHA-256: 177c38da02803216ffa75d860ebfa1e8c15bf6b9ff3285beec343e328eacc366
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <org.fdroid.fdroid.compat.PRNGFixes: void installLinuxPRNGSecureRandom()>
		SHA-256: fbec00fe93d15517143af9e354e3e3fbfd9140a2563664ef8b53a88162c8254b
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <org.fdroid.fdroid.nearby.LocalRepoKeyStore: java.security.cert.Certificate generateSelfSignedCertChain(java.security.KeyPair,org.bouncycastle.asn1.x500.X500Name,java.lang.String)>
		SHA-256: f78068e12c1bfc6d05a131243299fd9bbeefbf527b6b0953247bf664ab177c4a
		Secure: true
	Object:
		Variable: $r14
		Type: java.security.KeyPair
		Statement: specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r15, $r16)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: aadd026eb861686e693690e72b434ddb064fe8bbbf9e5c4e4de2a60a071d8baf
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r4.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <org.fdroid.fdroid.nearby.LocalRepoKeyStore: java.security.cert.Certificate generateSelfSignedCertChain(java.security.KeyPair,org.bouncycastle.asn1.x500.X500Name,java.lang.String)>
		SHA-256: 4fb6b6dfbf1e7feebb7cfa6b0080bb97d6c6e0d16c7f5237d1aa05b64f95a4b0
		Secure: true
	Object:
		Variable: varReplacer47447
		Type: java.lang.String
		Statement: $r9 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer47447)
		Method: <kellinwood.security.zipsigner.ZipSigner: java.security.PrivateKey readPrivateKey(java.net.URL,java.lang.String)>
		SHA-256: f38a4aa95a1cf70a9d62811d8bc41f89b2fab5cd03abcd2985536462ecb91e7b
		Secure: false
	Object:
		Variable: r0
		Type: org.bouncycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r7, $r8, $r2, $i0)
		Method: <org.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>
		SHA-256: bcf570b34f8a17ec2bf4d52452528fe052d0e6bfbcbc0e9448c15568d3730cec
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r13)
		Method: <org.bouncycastle.pqc.jcajce.provider.xmss.XMSSMTKeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 642b20980867fde35e949495a6570c7235d943d9503f4075de34752290065e8d
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 181aa94d9dfb4131bf99e325443dd030be8d0745e2fdbe58d6599dfe9ccd41a6
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyPair
		Statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13)
		Method: <org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 7e607f2b0148a3c2f0cc3a50502aa1d8d622c22ef1a312f9fed011b06d0c82f4
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r11, $r13, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,java.security.spec.ECParameterSpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration)>
		SHA-256: 3791d0e41e5884e70c40ed063afce31c8bbf57c28cb756f172c554e92147502c
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.PublicKey
		Statement: $r9 = virtualinvoke $r4.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <org.fdroid.fdroid.nearby.LocalRepoKeyStore: java.security.cert.Certificate generateSelfSignedCertChain(java.security.KeyPair,org.bouncycastle.asn1.x500.X500Name,java.lang.String)>
		SHA-256: a410cd3978008e3f6570f310c89937d23f9a37b04d5634a8302f8c264ada94b6
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer680)
		Method: <org.fdroid.fdroid.compat.PRNGFixes: void installLinuxPRNGSecureRandom()>
		SHA-256: 7f320bf4d0f16aa14215dc3651e7dcea660cd674916bec4bcf2c26b283023aff
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer39534)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: b56fe1759e67f59084b9ac855d56f474657b2989f6bb2f7bedcaf6575ead5553
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: 52666556eb0b9e0106968c3639d610cef0bbf743129b6a2f13e952dd3c4ccbd6
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r9)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 21a56a7c597c5942e2b69eefce9c2dc9f00b1a8f1a883f5e5c66586ef6dfe110
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r10 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r3)
		Method: <org.fdroid.fdroid.nearby.LocalRepoKeyStore: void addToStore(java.lang.String,java.security.KeyPair,java.security.cert.Certificate)>
		SHA-256: 85003c1152edc96ef22a738b709abdf31c372591c9b574707beffd71b50960b9
		Secure: false

Findings in Java Class: kellinwood.security.zipsigner.ZipSigner

	 in Method: java.security.spec.KeySpec decryptPrivateKey(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedAlg
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(varReplacer49807, $r8, $r10)

		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(varReplacer49807, $r8, $r10)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r8 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r7)


	 in Method: java.lang.String autoDetectKey(java.lang.String,java.util.Map)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #2cd17dd4754f182c66dfec2c6968ebec178fe9d2e2fc75c59ff7fc078534afd6)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer44333)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #2cd17dd4754f182c66dfec2c6968ebec178fe9d2e2fc75c59ff7fc078534afd6)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r12 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2cd17dd4754f182c66dfec2c6968ebec178fe9d2e2fc75c59ff7fc078534afd6)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer44333)


	 in Method: java.util.jar.Manifest addDigestsToManifest(java.util.Map)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #fccd0916dc40efe4190031b95a46a5c5ff053393c104465d4935e25a826a0bc6)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r23 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #fccd0916dc40efe4190031b95a46a5c5ff053393c104465d4935e25a826a0bc6)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r23 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fccd0916dc40efe4190031b95a46a5c5ff053393c104465d4935e25a826a0bc6)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer44368)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #fccd0916dc40efe4190031b95a46a5c5ff053393c104465d4935e25a826a0bc6)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer44368)


	 in Method: void generateSignatureFile(java.util.jar.Manifest,java.io.OutputStream)
		IncompleteOperationError violating CrySL rule for java.security.DigestOutputStream (on Object #db6aa29f9360056ea1d3e28c7be6d5f1b4847ea67ea78f7a2c28fd8d79c1f652)
			Operation on object of type java.security.DigestOutputStream object not completed. Expected call to write
			at statement: specialinvoke $r2.<java.io.PrintStream: void <init>(java.io.OutputStream,boolean,java.lang.String)>($r7, varReplacer44375, varReplacer44376)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5a26d65846b037f82236fb94dcab3406e5bcb5ef1676818be5906a237e250ef9)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer44369)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #5a26d65846b037f82236fb94dcab3406e5bcb5ef1676818be5906a237e250ef9)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r5 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()


	 in Method: void writeSignatureBlock(kellinwood.security.zipsigner.KeySet,byte[],java.io.OutputStream)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #3bcf5d62137d6d1340c423bf794c15090025f9ebb3882281260bbcc7f6bf3306)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r12.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #db49fd80fc00f8f7f1359dab92461f15e531e796c9bb51e99a63d72f0ba8e1d1)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer44385)


	 in Method: java.security.cert.X509Certificate readPublicKey(java.net.URL)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #a92308f88d7d14a0770a607f515f88613faec504b7306cd0b166daec564dd9fa)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r4 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r2)


	 in Method: java.security.PrivateKey readPrivateKey(java.net.URL,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r10 = virtualinvoke $r9.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r7)


Findings in Java Class: org.fdroid.fdroid.Utils

	 in Method: java.lang.String calcFingerprint(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bc018c6f0d6db038ad0f7e67a6a0501ea91c372203826243819de75b885c7d5e)
			First parameter (with value "sha256") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1488)


	 in Method: java.lang.String getBinaryHash(java.io.File,java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #ade6bb1f64f33bac826b58f7f5a6b93774bb7c4d7c597901179b94049fcda92d)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r6 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


	 in Method: java.lang.String hashBytes(byte[],java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #17b656ad16fd490313c1546eb246d578ac6a2f5bede382ab7dbccec47c6c3247)
			First parameter (with value "md5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


Findings in Java Class: org.fdroid.fdroid.Hasher

	 in Method: java.lang.String getHash()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #a3bf33341d15b4c170db88ae653f4df46270d882dc557bb05a0127166d351847)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r6 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest()>()


	 in Method: boolean isFileMatchingHash(java.io.File,java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a3bf33341d15b4c170db88ae653f4df46270d882dc557bb05a0127166d351847)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $z0 = virtualinvoke $r3.<org.fdroid.fdroid.Hasher: boolean match(java.lang.String)>($r2)


Findings in Java Class: org.fdroid.fdroid.nearby.LocalRepoKeyStore

	 in Method: void <init>(android.content.Context)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #91423c93f528f9aeab55d7c25ffab4a176c3ba0a3090451c3c045ef95e47585)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r17.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r5, $r8)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #91423c93f528f9aeab55d7c25ffab4a176c3ba0a3090451c3c045ef95e47585)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r17.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r5, $r8)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r17.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r5, $r8)


	 in Method: void addToStore(java.lang.String,java.security.KeyPair,java.security.cert.Certificate)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r10.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r6, $r8)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #85003c1152edc96ef22a738b709abdf31c372591c9b574707beffd71b50960b9)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r10.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r6, $r8)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #85003c1152edc96ef22a738b709abdf31c372591c9b574707beffd71b50960b9)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r10.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r6, $r8)


	 in Method: java.security.KeyPair generateRandomKeypair()
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #af3aa14a39bf8efc47c6feb57dd787bdfca3e9b6ac20aa8d4daab9f1c9785b48)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to genKeyPair, java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r2 = virtualinvoke $r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()


	 in Method: java.security.KeyPair getKerplappKeypair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r7.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r6, $r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r7.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r6, $r8)


Findings in Java Class: info.guardianproject.netcipher.NetCipher

	 in Method: info.guardianproject.netcipher.client.TlsOnlySocketFactory getTlsOnlySocketFactory(boolean)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer21657, varReplacer21657, varReplacer21657)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer21657, varReplacer21657, varReplacer21657)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #cb7e5d8d9030bbd53866324dd13527832ea5203d250c7c2f159f8a9d77fafb42)
			First parameter (with value "TLSv1") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer21660)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer21657, varReplacer21657, varReplacer21657)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #8a1e2080c6642de2e70b2e094e3c266af4ddc4449fb5d60a6ab598b707442232)
			First parameter (with value "prime192v1") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer39541)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #a2fe90be677c36edaafecc16c953251943d608337b36f886a34e9d36d047f8a3)
			First parameter (with value "P-521") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer39540)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #d16583f3839fece5299df73d14e47916218361b259839bbbd8cd1629cce45ca)
			First parameter (with value "P-224") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer39539)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #b56fe1759e67f59084b9ac855d56f474657b2989f6bb2f7bedcaf6575ead5553)
			First parameter (with value "prime239v1") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer39534)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #81f60dbf99871b0efe10eb57091e96ea3613681587261a77ff08de6674fb774b)
			First parameter (with value "P-384") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer39537)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #8e864e0eebef37ec26c3dfc825477dd42d23453dc875ad3eb8cccac16e37f966)
			First parameter (with value "prime256v1") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer39533)


	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)


Findings in Java Class: org.bouncycastle.jcajce.util.DefaultJcaJceHelper

	 in Method: java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String)
		ConstraintError violating CrySL rule for java.security.AlgorithmParameters (on Object #8d123772629184fc0669650c061426f57f5203aa49ca1fae65ed6e679e158734)
			First parameter (with value "PSS") should be any of {AES, DiffieHellman, DH, OAEP, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r1 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>($r2)


Findings in Java Class: org.bouncycastle.jcajce.util.NamedJcaJceHelper

	 in Method: java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String)
		ConstraintError violating CrySL rule for java.security.AlgorithmParameters (on Object #56833da8ae3d4d36272676cbcfa817da382e9d7b4afee7b28b5bc0913a1acaac)
			First parameter (with value "PSS") should be any of {AES, DiffieHellman, DH, OAEP, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>($r3, $r1)

		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: $r2 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>($r3, $r1)


Findings in Java Class: org.bouncycastle.jcajce.util.ProviderJcaJceHelper

	 in Method: java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String)
		ConstraintError violating CrySL rule for java.security.AlgorithmParameters (on Object #c8b20f17b82de52ab097a55145288f3a16a7d8b203dd25e179f63dac5e41d4d7)
			First parameter (with value "PSS") should be any of {AES, DiffieHellman, DH, OAEP, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r1)

		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: $r2 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r1)


Findings in Java Class: org.bouncycastle.cert.jcajce.JcaX509CertificateConverter

	 in Method: java.security.cert.X509Certificate getCertificate(org.bouncycastle.cert.X509CertificateHolder)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #7af7af102744f29108e79384d9ad966c7cdb212255b7ad669bab054a7fd5a599)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r6 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r4)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #f8fbf85b40c81fe63a566f3acad5c05c9b245103f283f549e11ae2fb09219e7b)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r6 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r4)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #6d3ec0a71779c0e723ed502888987ff1a41ed16ed17219921981d9d289d341c2)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r6 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r4)


Findings in Java Class: org.bouncycastle.x509.AttributeCertificateHolder

	 in Method: boolean match(java.security.cert.Certificate)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #5ccd538d353b73eff40401b908ddf9599c8d567523eca519a20d2405686c8ca5)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r15 = virtualinvoke $r14.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.bumptech.glide.load.engine.DataCacheGenerator

	 in Method: boolean startNext()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #785a9359a4ef91697cbbc55ef02f3f3ede489d796f168ff19ca04c566fc7bb53)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r8.<com.bumptech.glide.load.data.DataFetcher: void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback)>($r10, r0)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #785a9359a4ef91697cbbc55ef02f3f3ede489d796f168ff19ca04c566fc7bb53)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r9 = interfaceinvoke $r8.<com.bumptech.glide.load.data.DataFetcher: java.lang.Class getDataClass()>()


Findings in Java Class: com.bumptech.glide.load.engine.ResourceCacheGenerator

	 in Method: boolean startNext()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #785a9359a4ef91697cbbc55ef02f3f3ede489d796f168ff19ca04c566fc7bb53)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $z0 = specialinvoke r0.<com.bumptech.glide.load.engine.ResourceCacheGenerator: boolean hasNextModelLoader()>()


Findings in Java Class: kellinwood.security.zipsigner.ZipSignature

	 in Method: void <init>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7ee66be51535d248dbbc540340001620e230934ca6d1124b2ba5d4502fa39ebf)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer47452)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #717e2c46f6524c945c73d5206df9a3113932177d504bcc92e809ad7263620c82)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer47453)


	 in Method: byte[] sign()
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #717e2c46f6524c945c73d5206df9a3113932177d504bcc92e809ad7263620c82)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: byte[] update(byte[])>($r2)


	 in Method: void initSign(java.security.PrivateKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer47454, $r1)


Findings in Java Class: org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1

	 in Method: org.bouncycastle.operator.DigestCalculator get(org.bouncycastle.asn1.x509.AlgorithmIdentifier)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d5732c60dfdd260fa2584e01723a020872061316c1136df9f421e4c02f29b5db)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r6.<org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1$1: void <init>(org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$DigestOutputStream)>(r0, $r1, $r5)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b0d5cd113028009cca34a566f603cb63613569a1586081066100dacfc7c80673)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r6.<org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1$1: void <init>(org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$DigestOutputStream)>(r0, $r1, $r5)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4426af26dc3fc58a067c5a58b3c0542c3dfa1bc92e57d2921b3ab11f647f0193)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r6.<org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1$1: void <init>(org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$DigestOutputStream)>(r0, $r1, $r5)


Findings in Java Class: org.bouncycastle.operator.jcajce.OperatorHelper

	 in Method: boolean notDefaultPSSParams(org.bouncycastle.asn1.ASN1Sequence)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d5732c60dfdd260fa2584e01723a020872061316c1136df9f421e4c02f29b5db)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i1 = virtualinvoke $r8.<java.security.MessageDigest: int getDigestLength()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b0d5cd113028009cca34a566f603cb63613569a1586081066100dacfc7c80673)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i1 = virtualinvoke $r8.<java.security.MessageDigest: int getDigestLength()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4426af26dc3fc58a067c5a58b3c0542c3dfa1bc92e57d2921b3ab11f647f0193)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i1 = virtualinvoke $r8.<java.security.MessageDigest: int getDigestLength()>()


	 in Method: java.security.Signature createSignature(org.bouncycastle.asn1.x509.AlgorithmIdentifier)
		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: virtualinvoke $r12.<java.security.AlgorithmParameters: void init(byte[])>($r13)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.ecgost12.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.lms.LMSKeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.gost.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r12)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r12)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.qtesla.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r9.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r1, $r10)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r9.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r1, $r10)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.newhope.NHKeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r8.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r10)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r8.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r10)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)


Findings in Java Class: org.bouncycastle.cert.crmf.jcajce.JcePKMACValuesCalculator

	 in Method: byte[] calculateMac(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r6)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r13)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.sphincs.Sphincs256KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r9.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r10, $r12)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r9.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r10, $r12)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r15, $r16)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r15, $r16)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.xmss.XMSSMTKeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r13)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r9)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r9)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 132

	CryptoAnalysis found the following violations. For details see description above.
	TypestateError: 7
	ConstraintError: 18
	IncompleteOperationError: 20
	NeverTypeOfError: 2
	RequiredPredicateError: 52
	ForbiddenMethodError: 1
	HardCodedError: 2
=====================================================================
