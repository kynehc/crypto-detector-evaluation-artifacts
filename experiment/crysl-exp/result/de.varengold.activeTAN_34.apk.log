0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r11
		Type: javax.crypto.KeyGenerator
		Statement: $r11 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer12425, varReplacer12426)
		Method: <a.b.a: a.d.r a()>
		SHA-256: 787e96dfca5fdcecfd9e0e7d49a9188e59cd51d3c611fe9a5ff288fcd60a77b4
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyStore
		Statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer449)
		Method: <c.a.a.f.b.b: java.security.KeyStore d()>
		SHA-256: 4262ab8c5f3a635577b76c9d665feb97f6ea26191d2b213006e3351322d159d7
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)
		Method: <c.a.a.c.g: java.security.PublicKey a(android.content.Context)>
		SHA-256: 76a2e579663204628cf995736bb9dfe65a6bc673c7130ccd418df7c046be0f4b
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6615)
		Method: <c.a.a.f.a.d: boolean f(c.a.a.f.a.a)>
		SHA-256: f2460948f78b338a6b840561588e3ea3d3ba5199cd99993c5aa2e4c905d62eb5
		Secure: false
	Object:
		Variable: varReplacer6669
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer6669)
		Method: <c.a.a.c.g: java.security.PublicKey a(android.content.Context)>
		SHA-256: ff6856aed8c02192b767bc71754d952d4591a942f5f404389616ed355d683b89
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.Key
		Statement: $r7 = virtualinvoke $r6.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r5, varReplacer443)
		Method: <c.a.a.f.b.b: javax.crypto.SecretKey c(java.lang.String)>
		SHA-256: 60b40f4f6b908dc14e28c3d683b2b340dc51b29cfe655aa8987f8291e8b88bdd
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>($r6)
		Method: <c.a.a.e.b.s: java.lang.Object b(java.lang.Object)>
		SHA-256: 3d8cb9869699b7cb7e065d0af953f59a1b05cc4d6fd52224623ba4d028ca849c
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer4526)
		Method: <c.a.a.f.b.b: java.lang.String e(c.a.a.f.b.a)>
		SHA-256: d73baeef3eb6445dd0834f1d3d4e4471b8ecc05abfcec4f31eb60702b0ab2335
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r22.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <de.efdis.tangenerator.gui.transaction.VerifyTransactionDetailsActivity: java.lang.String J(c.a.a.f.a.a)>
		SHA-256: da5cbdbba3d748fc37fc2153d089f2ce1dd53e26ef3524891536cad0a9499c2f
		Secure: true
	Object:
		Variable: varReplacer1376
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer1376)
		Method: <c.a.a.f.b.b: boolean f(int)>
		SHA-256: b7c52c313f564a5244919600dac6c972acb13ea431913d88bca73e37ae9f4187
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: virtualinvoke $r14.<java.security.SecureRandom: void nextBytes(byte[])>($r6)
		Method: <de.efdis.tangenerator.gui.initialization.InitializeTokenActivity: void M()>
		SHA-256: bd1452341eb590a8fa4150fbdc39d9c73793983ef8e8e0b357c566abc265ade3
		Secure: true
	Object:
		Variable: $r17
		Type: byte[]
		Statement: $z0 = virtualinvoke $r7.<java.security.Signature: boolean verify(byte[])>($r17)
		Method: <b.b.a.a.a: java.lang.String I(android.content.Context,byte[])>
		SHA-256: cf01c3e25818575c6851bf0d34e219d99f21a3a45b7143e8095aa73b694ec8c2
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer6669)
		Method: <c.a.a.c.g: java.security.PublicKey a(android.content.Context)>
		SHA-256: 5a7f98db3b4e6ce7cc053d616127b07dee473dc95615745bf48fb464f0a42988
		Secure: false
	Object:
		Variable: varReplacer4526
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer4526)
		Method: <c.a.a.f.b.b: java.lang.String e(c.a.a.f.b.a)>
		SHA-256: 224872e80757eda1c6eb6be76b4bf5a0f38646450d4485b0df5b614ac36bfedf
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <c.a.a.b.l: int a(c.a.a.f.a.a,byte[])>
		SHA-256: d29e9447cc80aad08e1553b49e1b1634373e2453d2792916e85f8c6735b3f082
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.KeyStore
		Statement: $r9 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer12435)
		Method: <a.b.a: a.d.r a()>
		SHA-256: 911d942e69162b63627063a2879c995a79ab0dc52caf2bac4e9af70b588c8bcb
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <c.a.a.f.b.b: boolean f(int)>
		SHA-256: 85aad18978fa42a992313d39c7527fb1b36c1529bd150785f97d26ca450e92cc
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.SecureRandom
		Statement: specialinvoke $r14.<java.security.SecureRandom: void <init>()>()
		Method: <de.efdis.tangenerator.gui.initialization.InitializeTokenActivity: void M()>
		SHA-256: cf55ebaaa3eb6d181322c9ae6f366859aae705dd3588ce0919692cbdceaca2d3
		Secure: true
	Object:
		Variable: $r13
		Type: java.security.Key
		Statement: $r13 = virtualinvoke $r9.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer12441, varReplacer12442)
		Method: <a.b.a: a.d.r a()>
		SHA-256: 6c6534a0ebe61323bb0644aca602ccc88825c4bc5d2ac57ee2784721f2dee492
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer445)
		Method: <c.a.a.f.b.b: javax.crypto.SecretKey c(java.lang.String)>
		SHA-256: b70d3571d74e998af92fcf8c58d2293efeeec063de982d738c847be5d45ef300
		Secure: false
	Object:
		Variable: $r15
		Type: javax.crypto.Cipher
		Statement: $r15 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12440)
		Method: <a.b.a: a.d.r a()>
		SHA-256: d8bddc56baaaf80c1ebe7df2c5f67c388fc8ba2ad48e944eb0c25720f53a2233
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1370)
		Method: <c.a.a.f.b.b: boolean f(int)>
		SHA-256: b857cf8e70dbede4969efc33af9ffcdd06c12e8f3a9ee314a727c1abf965ba67
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer6649)
		Method: <c.a.a.c.g: void c()>
		SHA-256: caaba866708c6a6a6508f5d7d5deff5858d2f90c68ee34604cacede8e5927621
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer1376)
		Method: <c.a.a.f.b.b: boolean f(int)>
		SHA-256: e8fc88b2086406588952ceb64b125769d6482d7be22da727ec73c9968db21f48
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <c.a.a.e.b.s: java.lang.Object b(java.lang.Object)>
		SHA-256: 8432d08801e5142d604a0254d99036c10ee3a3d1d9820b4e2c5840d28f343ed9
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Mac
		Statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.lang.String)>(varReplacer5937, varReplacer5938)
		Method: <c.a.a.b.a: javax.crypto.Mac a()>
		SHA-256: ab7463c191d30a93a300d6b6197c3c9c58bb401212f5d5cc1dd41999ba051357
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r7.<java.security.Signature: boolean verify(byte[])>($r17)
		Method: <b.b.a.a.a: java.lang.String I(android.content.Context,byte[])>
		SHA-256: 60784b11e824009716b1b4a3e6a5d10326f3e8087620af8f794af64755b8da8b
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6644)
		Method: <c.a.a.c.g: void c()>
		SHA-256: 8b9dfd146b48661bf4e0960122970b0120712938c5e5c981dedf90ebf9dcb186
		Secure: false
	Object:
		Variable: $r22
		Type: java.security.MessageDigest
		Statement: $r22 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11834)
		Method: <de.efdis.tangenerator.gui.transaction.VerifyTransactionDetailsActivity: java.lang.String J(c.a.a.f.a.a)>
		SHA-256: ac594baa13425da9064ddbd0932ab30fee119d36455e04b1f24ba9441b096574
		Secure: true

Findings in Java Class: c.a.a.f.b.b

	 in Method: javax.crypto.SecretKey c(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b70d3571d74e998af92fcf8c58d2293efeeec063de982d738c847be5d45ef300)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer445)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer448, $r8)


	 in Method: java.security.KeyStore d()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #4262ab8c5f3a635577b76c9d665feb97f6ea26191d2b213006e3351322d159d7)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer449)


	 in Method: java.lang.String e(c.a.a.f.b.a)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer4526)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #4262ab8c5f3a635577b76c9d665feb97f6ea26191d2b213006e3351322d159d7)
			Operation on object of type java.security.KeyStore object not completed. Expected call to store
			at statement: virtualinvoke $r1.<java.security.KeyStore: void setEntry(java.lang.String,java.security.KeyStore$Entry,java.security.KeyStore$ProtectionParameter)>($r8, $r10, $r11)


	 in Method: boolean f(int)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1374, $r5, $r12)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #4262ab8c5f3a635577b76c9d665feb97f6ea26191d2b213006e3351322d159d7)
			Operation on object of type java.security.KeyStore object not completed. Expected call to store
			at statement: virtualinvoke $r6.<java.security.KeyStore: void setEntry(java.lang.String,java.security.KeyStore$Entry,java.security.KeyStore$ProtectionParameter)>($r2, $r8, $r9)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b857cf8e70dbede4969efc33af9ffcdd06c12e8f3a9ee314a727c1abf965ba67)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1370)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer1376)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1374, $r5, $r12)


Findings in Java Class: c.a.a.b.a

	 in Method: javax.crypto.Mac a()
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #ab7463c191d30a93a300d6b6197c3c9c58bb401212f5d5cc1dd41999ba051357)
			First parameter (with value "AESMAC") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.lang.String)>(varReplacer5937, varReplacer5938)


Findings in Java Class: c.a.a.b.l

	 in Method: int a(c.a.a.f.a.a,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r3)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #ab7463c191d30a93a300d6b6197c3c9c58bb401212f5d5cc1dd41999ba051357)
			Unexpected call to method init on object of type javax.crypto.Mac. Expect a call to one of the following methods getInstance
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r3)


Findings in Java Class: c.a.a.f.a.d

	 in Method: boolean f(c.a.a.f.a.a)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer6617, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f2460948f78b338a6b840561588e3ea3d3ba5199cd99993c5aa2e4c905d62eb5)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6615)


Findings in Java Class: c.a.a.c.g

	 in Method: void c()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8b9dfd146b48661bf4e0960122970b0120712938c5e5c981dedf90ebf9dcb186)
			First parameter (with value "RSA/ECB/OAEPPadding") should be any of RSA/ECB/{NoPadding, PKCS1Padding, OAEPWithMD5AndMGF1Padding, OAEPWithSHA-224AndMGF1Padding, OAEPWithSHA-256AndMGF1Padding, OAEPWithSHA-384AndMGF1Padding, OAEPWithSHA-512AndMGF1Padding}
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6644)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer6648, $r2)


	 in Method: java.security.PublicKey a(android.content.Context)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)


Findings in Java Class: b.b.a.a.a

	 in Method: java.lang.String I(android.content.Context,byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #8b9dfd146b48661bf4e0960122970b0120712938c5e5c981dedf90ebf9dcb186)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #caaba866708c6a6a6508f5d7d5deff5858d2f90c68ee34604cacede8e5927621)
			Operation on object of type java.security.Signature object not completed. Expected call to verify
			at statement: virtualinvoke $r7.<java.security.Signature: void update(byte[])>($r3)


Findings in Java Class: a.b.a

	 in Method: a.d.r a()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d8bddc56baaaf80c1ebe7df2c5f67c388fc8ba2ad48e944eb0c25720f53a2233)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r15 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12440)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #911d942e69162b63627063a2879c995a79ab0dc52caf2bac4e9af70b588c8bcb)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r9 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer12435)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r15.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer12424, $r14)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 29

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 12
	TypestateError: 2
	IncompleteOperationError: 3
	ConstraintError: 8
=====================================================================
