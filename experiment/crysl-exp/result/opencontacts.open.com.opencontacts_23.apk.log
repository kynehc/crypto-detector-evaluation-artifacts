0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)
		Method: <j.a.a.b.f.a: void <init>(java.lang.String)>
		SHA-256: 1777524bc2fa3af1ca80c4679c0b2d6b8af24c32b5624eb03233e336cabc72c4
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <h.c.e.a: void <clinit>()>
		SHA-256: 4d4a2bb541b3635ab064c68012d998df1c09c14bd781e91d1ec6cb6bc417bf26
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer19398)
		Method: <k.i0.j.h: javax.net.ssl.SSLContext m()>
		SHA-256: 8273f7dca02585e6811f492a79cdb44f53e76cfe1fd58016a1ccadcff94fab37
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r2)
		Method: <j.a.a.b.f.a: void c(byte[])>
		SHA-256: 870752a830bff5aa71c0eb6c66afd9dfc30b6a48bca42e5eadf90215e42b52cd
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <l.h: l.h c(java.lang.String)>
		SHA-256: 7a62705013d140fd456ede4e0644f3751e6554dd8c5c7909869b95f322f2be41
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r2)
		Method: <j.a.a.b.f.a: void c(byte[])>
		SHA-256: d6919d94440d0eab1a155449018570f400f9c8a59e22c57e4b339dd7f86d6f3a
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer19402, $r2)
		Method: <k.i0.j.g: javax.net.ssl.SSLContext m()>
		SHA-256: eef6197aec241639baed9e021e927684c7f163216dff0e81390ec529c6a252b5
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <l.x: l.h c(java.lang.String)>
		SHA-256: cac3a8921c0ecf1d3a78041a3b01565538babb474b9a5db9df4def50d3fa6c9a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <j.a.a.b.h: byte[] d(int)>
		SHA-256: 70688d7eef035886df8246d07e897b5d2aed77fc5b97da79878fee85f8496ed5
		Secure: true
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest()>()
		Method: <h.c.e.a$b: void run()>
		SHA-256: 7503b7d346d2c4d6b4068b701296864bd853b832e3fbfcd543d494ef778e7cef
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.SecureRandom
		Statement: specialinvoke $r11.<java.security.SecureRandom: void <init>()>()
		Method: <opencontacts.open.com.opencontacts.utils.NetworkUtils: k.a0$a getUnsafeOkHttpClientBuilder()>
		SHA-256: d1db959dc2271cb86402cecfbe15c59593b28635463dfa8c8fe4889f0a1e3160
		Secure: true
	Object:
		Variable: $i2
		Type: int
		Statement: $i2 = virtualinvoke $r1.<java.security.SecureRandom: int nextInt(int)>(varReplacer26611)
		Method: <j.a.a.b.h: byte[] d(int)>
		SHA-256: db327f3a5fbe805eacc961ce4ffd017e937b572b2e37d7b0eaf70bc187375984
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <l.x: l.h c(java.lang.String)>
		SHA-256: a6c05a3bdda0e820fbbcce4f5904e8a8cf7ed657060c1e836666fd93534e2b6e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8503)
		Method: <opencontacts.open.com.opencontacts.utils.NetworkUtils: k.a0$a getUnsafeOkHttpClientBuilder()>
		SHA-256: 5bcf9025d56f4670ef217342ca408a1f93d8216ac16f5cdcf24730d98854561d
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer17826, varReplacer17827)
		Method: <k.i0.j.c: javax.net.ssl.X509TrustManager o()>
		SHA-256: 7625732df6bfb7b3916642e069d48cd935b0f1a8c4d5fd7cfebfeca19cd21626
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <k.i0.j.d: javax.net.ssl.X509TrustManager o()>
		SHA-256: a34ad8d86b652fa71a1784d9f182aa64a3c216ee8de503c46a73dc51f3087c3b
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer19403, $r2)
		Method: <k.i0.j.c: javax.net.ssl.SSLContext m()>
		SHA-256: a652d0623fdaead048387eaf82effac05b8f366a8a1f0146fd5bc2e681a849cb
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <k.i0.j.g: javax.net.ssl.X509TrustManager o()>
		SHA-256: 26635e1f6e50977ea9036fab1d7ea4d8fc4844fa478d9179411a32fe3c0a34e7
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <j.a.a.b.b: void <init>(char[],j.a.a.f.p.a)>
		SHA-256: 1b0a43487cf53147814bbadf7571d0f41725654f6363842d88baca73e195e65c
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <k.i0.j.d: javax.net.ssl.X509TrustManager o()>
		SHA-256: ab810cd89b3cbafbfe53daa64cb3badf928278ee6192424597b551bb74325b46
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <j.a.a.b.f.a: byte[] a(byte[])>
		SHA-256: 459e55e650afc4bc902255b6e28ff626f4221b2c07f75dfa172b7fc5d65635a6
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <k.i0.j.h: javax.net.ssl.X509TrustManager o()>
		SHA-256: 89c519fb5c53040abfd451f8c76e1cb4b3d66a265ddb8a64853e6d503f2cb4b7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <k.i0.j.h: javax.net.ssl.X509TrustManager o()>
		SHA-256: e96f48aec6cc97f7532bcbe531c167aa82c80310434b106dfa2f0748e41ce496
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer467)
		Method: <h.c.e.a$b: void run()>
		SHA-256: ddd571239ee0e69e4507d912a938f7403e413756245ca45ac9c658803e8b8a5c
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <k.i0.j.c: javax.net.ssl.X509TrustManager o()>
		SHA-256: 5b3ac97e809537d5c0508fcc4ad2f3a133ee2cbf70757bb86fa788a0dc8ad012
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <l.h: l.h c(java.lang.String)>
		SHA-256: b437009f9c3c9517da4042a13ecedeeb623dd5aad0b327b5545a84d4a6050d6c
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer19400, $r2)
		Method: <k.i0.j.d: javax.net.ssl.SSLContext m()>
		SHA-256: 5b28e45c5f9e8ce6c8c308bb49e4926a34223b3372c6f16b6e21254fe44ec4b2
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <j.a.a.b.f.a: byte[] d()>
		SHA-256: c3406efdc5346288ce34774999d8cd34eeb50b99ae74e90d2da2fc7574b14e4
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <k.i0.j.g: javax.net.ssl.X509TrustManager o()>
		SHA-256: d5902af5b12cbea8d29b04e4ea1cbe171ede53e2df358f38e0e53e0bb63d0f5c
		Secure: false

Findings in Java Class: h.c.e.a$b

	 in Method: void run()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ddd571239ee0e69e4507d912a938f7403e413756245ca45ac9c658803e8b8a5c)
			First parameter (with value "SHA") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer467)


Findings in Java Class: opencontacts.open.com.opencontacts.utils.NetworkUtils

	 in Method: k.a0$a getUnsafeOkHttpClientBuilder()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #5bcf9025d56f4670ef217342ca408a1f93d8216ac16f5cdcf24730d98854561d)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8503)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8504, $r14, $r0)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8504, $r14, $r0)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8504, $r14, $r0)


Findings in Java Class: k.i0.j.h

	 in Method: javax.net.ssl.SSLContext m()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #8273f7dca02585e6811f492a79cdb44f53e76cfe1fd58016a1ccadcff94fab37)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer19398)


	 in Method: javax.net.ssl.SSLSocketFactory n(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer17833, $r10, varReplacer17833)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer17833, $r10, varReplacer17833)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer17833, $r10, varReplacer17833)


	 in Method: javax.net.ssl.X509TrustManager o()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer17812)


Findings in Java Class: k.i0.j.d

	 in Method: javax.net.ssl.SSLContext m()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #5b28e45c5f9e8ce6c8c308bb49e4926a34223b3372c6f16b6e21254fe44ec4b2)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer19400, $r2)


	 in Method: javax.net.ssl.X509TrustManager o()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer17818)


	 in Method: javax.net.ssl.SSLSocketFactory n(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer17840, $r5, varReplacer17840)


Findings in Java Class: k.i0.j.c

	 in Method: javax.net.ssl.SSLContext m()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #a652d0623fdaead048387eaf82effac05b8f366a8a1f0146fd5bc2e681a849cb)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer19403, $r2)


	 in Method: javax.net.ssl.X509TrustManager o()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer17828)


Findings in Java Class: l.h

	 in Method: l.h c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7a62705013d140fd456ede4e0644f3751e6554dd8c5c7909869b95f322f2be41)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: l.x

	 in Method: l.h c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a6c05a3bdda0e820fbbcce4f5904e8a8cf7ed657060c1e836666fd93534e2b6e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #a6c05a3bdda0e820fbbcce4f5904e8a8cf7ed657060c1e836666fd93534e2b6e)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: j.a.a.b.f.a

	 in Method: void <init>(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #1777524bc2fa3af1ca80c4679c0b2d6b8af24c32b5624eb03233e336cabc72c4)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)


	 in Method: byte[] d()
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #1777524bc2fa3af1ca80c4679c0b2d6b8af24c32b5624eb03233e336cabc72c4)
			Unexpected call to method <javax.crypto.Mac: byte[] doFinal()> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: byte[] doFinal(byte[]),javax.crypto.Mac: void update(java.nio.ByteBuffer),javax.crypto.Mac: void update(byte),javax.crypto.Mac: void update(byte[],int,int)
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal()>()


	 in Method: byte[] a(byte[])
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #1777524bc2fa3af1ca80c4679c0b2d6b8af24c32b5624eb03233e336cabc72c4)
			Unexpected call to method doFinal on object of type javax.crypto.Mac.
			at statement: $r2 = virtualinvoke $r1.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)


	 in Method: void c(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r2)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #d6919d94440d0eab1a155449018570f400f9c8a59e22c57e4b339dd7f86d6f3a)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r2)


Findings in Java Class: opencontacts.open.com.opencontacts.data.datastore.VCardImporterAsyncTask

	 in Method: java.util.List doInBackground(java.lang.Void[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #1777524bc2fa3af1ca80c4679c0b2d6b8af24c32b5624eb03233e336cabc72c4)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $r14 = virtualinvoke $r13.<ezvcard.b.h.d: java.util.List a()>()


Findings in Java Class: ezvcard.b.h.c

	 in Method: java.util.List a()
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #1777524bc2fa3af1ca80c4679c0b2d6b8af24c32b5624eb03233e336cabc72c4)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $z0 = specialinvoke r0.<ezvcard.b.h.c: boolean b()>()


Findings in Java Class: j.a.a.b.c

	 in Method: byte[] a(byte[],char[],j.a.a.f.p.a)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #1777524bc2fa3af1ca80c4679c0b2d6b8af24c32b5624eb03233e336cabc72c4)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $r0 = virtualinvoke $r4.<j.a.a.b.f.b: byte[] f(char[],int)>($r1, $i2)


Findings in Java Class: j.a.a.h.f

	 in Method: void o(j.a.a.h.f$a,j.a.a.g.a)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #1777524bc2fa3af1ca80c4679c0b2d6b8af24c32b5624eb03233e336cabc72c4)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $r16 = virtualinvoke $r13.<j.a.a.e.b.k: j.a.a.f.h m()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #1777524bc2fa3af1ca80c4679c0b2d6b8af24c32b5624eb03233e336cabc72c4)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: virtualinvoke $r13.<j.a.a.e.b.k: void close()>()


Findings in Java Class: k.i0.j.g

	 in Method: javax.net.ssl.X509TrustManager o()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer17822)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 29

	CryptoAnalysis found the following violations. For details see description above.
	TypestateError: 3
	RequiredPredicateError: 13
	IncompleteOperationError: 5
	ConstraintError: 9
=====================================================================
