0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r18
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r18.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r17)
		Method: <f7.k$b: void g(java.util.HashMap,android.util.SparseArray)>
		SHA-256: 6340522ea8319def95c5209613cb9f7689713cd621995a267b9fcf1b7fdad71e
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r10)
		Method: <com.google.android.exoplayer2.source.rtsp.c: java.lang.String a(com.google.android.exoplayer2.source.rtsp.h$a,android.net.Uri,int)>
		SHA-256: f92d972f4c352410a5e841dd31a85cd8af7535196131d1080b8ff4cbc8d1053e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer24442, $r2)
		Method: <ua.c: javax.net.ssl.SSLContext i()>
		SHA-256: 8c792ff5fc2b9efcec5f9063e7b02946146daffddd3093db87f5bc3d85d77bbb
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <f7.k$b: void <init>(java.io.File,byte[],boolean)>
		SHA-256: b1031fd98196e10629d9528a4c5337d6a26faed558c0a56f73b7339228fdd605
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r8.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r6, $r1)
		Method: <n6.a: long b(e7.n)>
		SHA-256: fe61dd82264964f7a5339452ec57037dce4d9b2a6f2cb283cf06463a72e01dc6
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer24443, $r2)
		Method: <ua.c: javax.net.ssl.SSLContext i()>
		SHA-256: 363425a33a8f58109a164e0602ce80963c2338e1ac372489c894f85054b0ab6e
		Secure: false
	Object:
		Variable: $r15
		Type: javax.net.ssl.TrustManager[]
		Statement: $r15 = virtualinvoke $r14.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <ma.w: void <init>(ma.w$b)>
		SHA-256: b30d2b474ab3bdb76592fdd9748be1fe0e92f47eb345536414064565e14db501
		Secure: false
	Object:
		Variable: $r14
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r14 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r13)
		Method: <ma.w: void <init>(ma.w$b)>
		SHA-256: 4eff0d0e349861f105f457c59860c688ee65cdf050442235aefd001cf9b3d68b
		Secure: false
	Object:
		Variable: varReplacer15191
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer15191)
		Method: <n6.a: long b(e7.n)>
		SHA-256: fd9d2ee00480137bc96251c9b6ecb71e9291ab2621e52e894d97f6a9e7fe700d
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <n6.a: long b(e7.n)>
		SHA-256: 1dafea86af9248a9205139b4107a11fb3f34ca71280f52f63997e24c642f17f6
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13988)
		Method: <com.google.android.exoplayer2.source.rtsp.c: java.lang.String a(com.google.android.exoplayer2.source.rtsp.h$a,android.net.Uri,int)>
		SHA-256: fb456ba0311fabfbf2190cd9969dc4564e05102749277531c347ea2ca0efb31b
		Secure: false
	Object:
		Variable: $r13
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r13.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r6, $r11)
		Method: <f7.k$b: void c(java.util.HashMap)>
		SHA-256: 5fb5960c79cd80d2368fce47eb65b1474d1c61b96470d505aa27deaf4d3c171e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer24436)
		Method: <ua.b: javax.net.ssl.SSLContext i()>
		SHA-256: 579eaf7d24cede30b2664b7d448d4e80ce13a0f401a7beac22a462939035b783
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r10)
		Method: <com.google.android.exoplayer2.source.rtsp.c: java.lang.String a(com.google.android.exoplayer2.source.rtsp.h$a,android.net.Uri,int)>
		SHA-256: f92d972f4c352410a5e841dd31a85cd8af7535196131d1080b8ff4cbc8d1053e
		Secure: false
	Object:
		Variable: varReplacer40281
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer40281)
		Method: <f7.k$b: void <init>(java.io.File,byte[],boolean)>
		SHA-256: d4b9775a818d3cbc000a71670e5a524400c2fe5308ec5532ede69fb3606dfcff
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer40283, varReplacer40284)
		Method: <f7.k$b: void <init>(java.io.File,byte[],boolean)>
		SHA-256: c5b357890c48a8f2cc4dff7816ea95f698fa3c30ae18039b30454baea453c356
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer15195)
		Method: <n6.a: long b(e7.n)>
		SHA-256: adbeb03f5602e015505bfb2ba2c8d2d3c4b2136407254331a5c99f2ac56051e9
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer40282)
		Method: <f7.k$b: void <init>(java.io.File,byte[],boolean)>
		SHA-256: 3a82ca1bf1d39932cd9a07af5b3ac39b022b05cd1beb9f814ad22e7c542316e3
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.cert.CertificateFactory
		Statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer48727)
		Method: <ma.c$d: java.util.List a(xa.i)>
		SHA-256: bc5b608dac2190f718530551bcf24a9296b78d2f80335cc753c13c47cffdc588
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r8)
		Method: <f7.k$b: void c(java.util.HashMap)>
		SHA-256: d359b20c4d24e992e4ca83de9df45875decef1f66c4c613fbe0a8f0c54743721
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <xa.j: xa.j f(java.lang.String)>
		SHA-256: 34ad0c66f6ab1403cc56362a680a7e3119d614a9b3f471ef367657d7d5648583
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer24439)
		Method: <ua.f: javax.net.ssl.SSLContext i()>
		SHA-256: 73750f60750f81af90c14c60d8733af3e5300dd5059b310b96e112a1c9392bc5
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <xa.z: xa.j f(java.lang.String)>
		SHA-256: 5a29ec190c8e69f9025a4eba91b7e48e1ccc3551123473f5c202480ff2913f2
		Secure: false
	Object:
		Variable: $r20
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r20.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r13, $r16)
		Method: <f7.k$b: void g(java.util.HashMap,android.util.SparseArray)>
		SHA-256: 26b4576a7a9076b73ba56dd63c85c6c84f3fd4ea9c329304272bd85dd0841f2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <xa.j: xa.j f(java.lang.String)>
		SHA-256: ea4e5b5e917f46ac0500e73e2787816c650ff7e0e5acce2f2d5321ecf467b2c7
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r10)
		Method: <com.google.android.exoplayer2.source.rtsp.c: java.lang.String a(com.google.android.exoplayer2.source.rtsp.h$a,android.net.Uri,int)>
		SHA-256: f92d972f4c352410a5e841dd31a85cd8af7535196131d1080b8ff4cbc8d1053e
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer40281)
		Method: <f7.k$b: void <init>(java.io.File,byte[],boolean)>
		SHA-256: 54b6073a5072924f712c420f4c2a4a077bf99e2eb911f43a22f59124caf59868
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer24437)
		Method: <ua.b: javax.net.ssl.SSLContext i()>
		SHA-256: 3e9c155ef015e5d209b7f71fe1dc3619d06aefa2c51ec0bbf437c31935ca9356
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <xa.z: xa.j f(java.lang.String)>
		SHA-256: 6b37a7de1401693f49c79e9a06f4d012f8d058abec98f2f163aca99e422d751d
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer15191)
		Method: <n6.a: long b(e7.n)>
		SHA-256: 69ba668a00fdacd6e2f1223bb19beb96d1ba0cd425a5ab1879268e078708b6db
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <f7.r: long n(java.io.File)>
		SHA-256: 13a17b739340f8576b4d2eafb477b8942c3adf680d9f127aff51a18152e8d909
		Secure: true

Findings in Java Class: com.google.android.exoplayer2.source.rtsp.c

	 in Method: java.lang.String a(com.google.android.exoplayer2.source.rtsp.h$a,android.net.Uri,int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fb456ba0311fabfbf2190cd9969dc4564e05102749277531c347ea2ca0efb31b)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13988)


Findings in Java Class: n6.a

	 in Method: long b(e7.n)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer15191)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer15193, $r3, $r5)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #adbeb03f5602e015505bfb2ba2c8d2d3c4b2136407254331a5c99f2ac56051e9)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer15195)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: f7.k$b

	 in Method: void g(java.util.HashMap,android.util.SparseArray)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #26b4576a7a9076b73ba56dd63c85c6c84f3fd4ea9c329304272bd85dd0841f2)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r12.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r20)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r18.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r17)


	 in Method: void c(java.util.HashMap)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #5fb5960c79cd80d2368fce47eb65b1474d1c61b96470d505aa27deaf4d3c171e)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: specialinvoke $r3.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r13)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r8)


	 in Method: void <init>(java.io.File,byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer40281)


Findings in Java Class: ua.b

	 in Method: javax.net.ssl.SSLContext i()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #3e9c155ef015e5d209b7f71fe1dc3619d06aefa2c51ec0bbf437c31935ca9356)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer24437)


Findings in Java Class: ua.f

	 in Method: javax.net.ssl.SSLContext i()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #73750f60750f81af90c14c60d8733af3e5300dd5059b310b96e112a1c9392bc5)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer24439)


Findings in Java Class: ua.c

	 in Method: javax.net.ssl.SSLContext i()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #8c792ff5fc2b9efcec5f9063e7b02946146daffddd3093db87f5bc3d85d77bbb)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer24442, $r2)


Findings in Java Class: xa.j

	 in Method: xa.j f(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ea4e5b5e917f46ac0500e73e2787816c650ff7e0e5acce2f2d5321ecf467b2c7)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: xa.z

	 in Method: xa.j f(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #5a29ec190c8e69f9025a4eba91b7e48e1ccc3551123473f5c202480ff2913f2)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5a29ec190c8e69f9025a4eba91b7e48e1ccc3551123473f5c202480ff2913f2)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: ma.c$d

	 in Method: java.util.List a(xa.i)
		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #bc5b608dac2190f718530551bcf24a9296b78d2f80335cc753c13c47cffdc588)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r10 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r9)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #bc5b608dac2190f718530551bcf24a9296b78d2f80335cc753c13c47cffdc588)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer48727)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #bc5b608dac2190f718530551bcf24a9296b78d2f80335cc753c13c47cffdc588)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r10 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r9)


Findings in Java Class: ma.w

	 in Method: void <init>(ma.w$b)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r14.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer12741)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r19.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12736, $r15, varReplacer12736)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r19.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12736, $r15, varReplacer12736)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r19.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12736, $r15, varReplacer12736)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 31

	CryptoAnalysis found the following violations. For details see description above.
	TypestateError: 2
	RequiredPredicateError: 10
	ConstraintError: 7
	IncompleteOperationError: 4
=====================================================================
