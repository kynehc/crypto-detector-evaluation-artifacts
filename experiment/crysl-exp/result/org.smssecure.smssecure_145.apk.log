0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Alive 15242  5000
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: varReplacer32654
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer32654)
		Method: <org.whispersystems.libsignal.kdf.DerivedMessageSecrets: void <init>(byte[])>
		SHA-256: 6dd75134ee341d47149a1538bfe467c7ffd9546da0f7efb98da74a06306bb860
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer4167)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: org.smssecure.smssecure.crypto.MasterSecret generateMasterSecret(android.content.Context,java.lang.String)>
		SHA-256: 9775aca7219a65dbee392c171c19296d7131289976a90f47a691e73336c1eb4
		Secure: false
	Object:
		Variable: varReplacer32650
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer32650)
		Method: <org.whispersystems.libsignal.ratchet.ChainKey: byte[] getBaseMaterial(byte[])>
		SHA-256: d839c686c89e5f9eacc10caf400eb4be2b44136cf04d4f223f1f3aef642c173a
		Secure: false
	Object:
		Variable: varReplacer21196
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer21196)
		Method: <org.smssecure.smssecure.crypto.MasterSecret: void <init>(android.os.Parcel)>
		SHA-256: 17c1edebd815df4d585228b43c4ddd7083f692da63fda360c8946f3ccc49664e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.squareup.okhttp.internal.Util: java.lang.String md5Hex(java.lang.String)>
		SHA-256: ff685f32e7a7f750cd456b35d0be518bacf6cdd5ba40802666534e9df3ec3217
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <org.smssecure.smssecure.crypto.AsymmetricMasterCipher: byte[] getDigestedBytes(byte[],int)>
		SHA-256: 432db8c456ea6170540e2b467676bc69e937d90541e784ea7f90c1c808c2c3a3
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <org.whispersystems.libsignal.ratchet.ChainKey: byte[] getBaseMaterial(byte[])>
		SHA-256: 8fb4835c5bab5ec63a45e8872f59bf24a48f2f4c6d745dfc352aacb8be38f264
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer187)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: org.smssecure.smssecure.crypto.MasterSecret getMasterSecret(android.content.Context,java.lang.String)>
		SHA-256: 638513b8787cc689fadd8a9f034ac4e64af520e96b3e5e73a8f52823680d5fb1
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.http.impl.auth.DigestSchemeHC4: java.lang.String createCnonce()>
		SHA-256: c025f58fb3b18983ff9d926f7445aa9e6f612f389c0952d6f0d47f55e5e01ca8
		Secure: true
	Object:
		Variable: varReplacer187
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer187)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: org.smssecure.smssecure.crypto.MasterSecret getMasterSecret(android.content.Context,java.lang.String)>
		SHA-256: 5e6cdc2687efea45994208fabb59bcf7765d65cc28d7b90dbd2daec66f0709b7
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <org.smssecure.smssecure.crypto.AttachmentCipherInputStream: void verifyMac(java.io.File,javax.crypto.Mac,org.whispersystems.libsignal.util.guava.Optional)>
		SHA-256: 3a3b761eff36984a8627447b61015f0725d5a74ddf9bb6df6616b64c42d87c7
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer16585)
		Method: <org.whispersystems.curve25519.JCESecureRandomProvider: void nextBytes(byte[])>
		SHA-256: 1f0797590cc5987db8e481de330226a77275b5df2ce3981bd5bb2b36de8684d5
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <org.smssecure.smssecure.preferences.widgets.RingtonePreferenceDialogFragmentCompat: java.io.File buildUniqueFile(java.io.File,java.lang.String,java.lang.String)>
		SHA-256: f6be9ede51038b99deaecea081c7f4ce356e88ef477cc910cfff69599298c647
		Secure: true
	Object:
		Variable: varReplacer4166
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4166)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: org.smssecure.smssecure.crypto.MasterSecret generateMasterSecret(android.content.Context,java.lang.String)>
		SHA-256: ae8ba5bf34a4fe6366a9705238c05f5e938f8b6a80e6b0c24aef5259d9b6e1b3
		Secure: true
	Object:
		Variable: varReplacer33930
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer33930)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] expand(byte[],byte[],int)>
		SHA-256: d5cea9c399b470c98cbb9a4d527437865ba516f0891c12b48fa5fe55c5c7dd76
		Secure: false
	Object:
		Variable: varReplacer36127
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer36127)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: a59a23d75c7f371ec7862159dc5c7be73e938b4b310d0fc6cb46d9c73ee06cb1
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer209)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: javax.crypto.Mac getMacForPassphrase(java.lang.String,byte[],int)>
		SHA-256: 7d3ab37fabd2cc5d5ce7943a6a85c1dcd26c80164768bfaf7ce4f0584c226367
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer32656)
		Method: <org.whispersystems.libsignal.SessionCipher: javax.crypto.Cipher getCipher(int,javax.crypto.spec.SecretKeySpec,javax.crypto.spec.IvParameterSpec)>
		SHA-256: 566a811e7dddf8d2d87458298b1f366288ae72b76c5a3874ad3bf9beecbd09ca
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] expand(byte[],byte[],int)>
		SHA-256: 3e233786151d239434b197b383e2e2f3502c681ec99902a2eeadf3d8d687d1b
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.SecretKey
		Statement: $r1 = virtualinvoke $r0.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: byte[] generateMacSecret()>
		SHA-256: 64449982ee5126cea3a5e02ed7661e985ffcc58c7630086970a6b0d9fdfea79d
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: byte[] macWithPassphrase(byte[],int,byte[],java.lang.String)>
		SHA-256: 7af1cd69489705354a151477fc090e11f4407ac64441a1b4ba5dcdf1a2cda4a5
		Secure: false
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke $r16.<java.security.MessageDigest: byte[] digest(byte[])>($r24)
		Method: <org.apache.http.impl.auth.DigestSchemeHC4: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: 6378d161b480a3832284871abf822dba710063b9ec06c3282ecefe0d3f3206e1
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <org.smssecure.smssecure.crypto.AttachmentCipherInputStream: void verifyMac(java.io.File,javax.crypto.Mac,org.whispersystems.libsignal.util.guava.Optional)>
		SHA-256: 1657565dca40feb0d10cae23d210c17f5e56645bda8eda6ffe7823df566a8478
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: javax.crypto.Cipher getCipherFromPassphrase(java.lang.String,byte[],int,int)>
		SHA-256: d815447f78c06f15bfb7e1bf8cae323fb2044e9a425d6cb0209e6628bdd7ad2f
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.bumptech.glide.load.engine.cache.SafeKeyGenerator: java.lang.String getSafeKey(com.bumptech.glide.load.Key)>
		SHA-256: 6763e0d09de34caa999df127c6d30dc02400c44c84c5c574d6dd222776edfb5c
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14671)
		Method: <org.smssecure.smssecure.crypto.EncryptingPartOutputStream: javax.crypto.Cipher initializeCipher(javax.crypto.Mac,javax.crypto.spec.SecretKeySpec)>
		SHA-256: 144366895a00075057298f3caa0759692118f3c6ccf03cb475eabdeb62edee94
		Secure: false
	Object:
		Variable: varReplacer4167
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer4167)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: org.smssecure.smssecure.crypto.MasterSecret generateMasterSecret(android.content.Context,java.lang.String)>
		SHA-256: 3250cfc82eeeb6bc7b43a47dd4339a4dd9cf94bd262f2e052b6437fb0f237a00
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer35138)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 686866faf5fed232b912887618f035ef03e22e31e6839bf4922e3b2e2b1e7e72
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer32655)
		Method: <org.whispersystems.libsignal.kdf.DerivedMessageSecrets: void <init>(byte[])>
		SHA-256: be24d255f1ce5e5f1bb8df21799c127c07621cd307dcaf58e5938c209890e313
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.cert.CertificateFactory
		Statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer33471)
		Method: <com.squareup.okhttp.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)>
		SHA-256: a6d08ca53009a7341201cec43e84112d9ec61fcea369c113a53faaf1115c300d
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3150)
		Method: <org.smssecure.smssecure.crypto.MasterCipher: void <init>(org.smssecure.smssecure.crypto.MasterSecret)>
		SHA-256: 7c0526ad15ac8b810aac8ffcd7de56249a6de71cca501810b5a35729cbaf9053
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer32654)
		Method: <org.whispersystems.libsignal.kdf.DerivedMessageSecrets: void <init>(byte[])>
		SHA-256: 13b23b033494e63714e536c3bb1d58608116939da41d37e26ae54d8a7d95ab1f
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer32649)
		Method: <org.whispersystems.libsignal.ratchet.ChainKey: byte[] getBaseMaterial(byte[])>
		SHA-256: 9120ba50994ff7a882b3def1c9eafb2c14bd8b1ccf36c29752889af20cedf30e
		Secure: false
	Object:
		Variable: varReplacer33873
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer33873)
		Method: <org.whispersystems.libsignal.state.SessionState: org.whispersystems.libsignal.ratchet.MessageKeys removeMessageKeys(org.whispersystems.libsignal.ecc.ECPublicKey,int)>
		SHA-256: 4389cd94ef733f7ac8148f44066560153cb834dba305fdeb6cd4b9f4302ce8fd
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer33928)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] expand(byte[],byte[],int)>
		SHA-256: 1d7baef99cac1c5cb36f5292fe7f6d78311e2b491df4d80ae162fba009dbd4f0
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer35617)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: a6a34887ca1cc158bb4dc68559452df432bfc713ee69604f5dc9af030131bb91
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: $r0 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer4188)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: byte[] generateSalt()>
		SHA-256: 707bf783f8c6dfb8c199398ce1d9ca21389f14f870089a911e8dc05e603dfc4
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] extract(byte[],byte[])>
		SHA-256: 361eed9cd14e6ff84c1daa2451338ec5c4dd793da69a1733393b9a61bdf2d763
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: byte[] verifyMac(byte[],int,byte[],java.lang.String)>
		SHA-256: b45c1bd1d3cd5d56a562b693decb6c0ab7ced791d1f4638dd926e4b6ddeea1ea
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer33930)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] expand(byte[],byte[],int)>
		SHA-256: f2f4d2df75157ac74634109febf26120354bf0636bf594550602d7965eee8ac2
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.SecretKey
		Statement: $r1 = virtualinvoke $r0.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: byte[] generateEncryptionSecret()>
		SHA-256: 49db452d53ba6edb504ae56ee4709060aad77948f207b3956bed904b5c92bb9f
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <org.smssecure.smssecure.crypto.AttachmentCipherInputStream: void <init>(java.io.File,byte[],org.whispersystems.libsignal.util.guava.Optional)>
		SHA-256: f4533e527a9753087dfc30dc452248445673101ebb18ae67ca32be1f6cd5233a
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.KeyGenerator
		Statement: $r0 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer4204)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: byte[] generateEncryptionSecret()>
		SHA-256: c6c96ad6bc6aa8131269049b117307b30c01dc880b8ab574c6960d620e901ab8
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer33874)
		Method: <org.whispersystems.libsignal.state.SessionState: org.whispersystems.libsignal.ratchet.MessageKeys removeMessageKeys(org.whispersystems.libsignal.ecc.ECPublicKey,int)>
		SHA-256: fe4b4be21644f4b0098b6d6097ec72cdd215f0374645da2242f85664776d1865
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <org.apache.http.impl.auth.DigestSchemeHC4: java.lang.String createCnonce()>
		SHA-256: 5232ec1244dd3b108e4fc57a96b9321f183e9d0ac37ba738a5dbf7bf19206353
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer415)
		Method: <org.smssecure.smssecure.crypto.PRNGFixes: void installLinuxPRNGSecureRandom()>
		SHA-256: 8ec1022be0a742ec30285d9b069da22515f228a2c7d12fce93d87653947d9eb7
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer27192)
		Method: <org.smssecure.smssecure.crypto.AttachmentCipherInputStream: void <init>(java.io.File,byte[],org.whispersystems.libsignal.util.guava.Optional)>
		SHA-256: 80f1ce1339920375f0b126cc248d1147a8b6f117f97220fd1692955a25c91dc1
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer33873)
		Method: <org.whispersystems.libsignal.state.SessionState: org.whispersystems.libsignal.ratchet.MessageKeys removeMessageKeys(org.whispersystems.libsignal.ecc.ECPublicKey,int)>
		SHA-256: 71de4e59bc9bb8a691d69cb55924adaac80c8ba020dabd7ab00c7d240eaeaf4a
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer32650)
		Method: <org.whispersystems.libsignal.ratchet.ChainKey: byte[] getBaseMaterial(byte[])>
		SHA-256: 7674eadbb08464d0c3ba0bd78861edb9869e27295fb032f1f9299c2eb6cc2b86
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer29629)
		Method: <org.smssecure.smssecure.crypto.AttachmentCipherInputStream: void verifyMac(java.io.File,javax.crypto.Mac,org.whispersystems.libsignal.util.guava.Optional)>
		SHA-256: 352742785f31f4e18a1e5a05295d9dc4cb96ccc6d489a065ab6705b355b3acfe
		Secure: false
	Object:
		Variable: varReplacer27185
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer27185)
		Method: <org.smssecure.smssecure.crypto.AttachmentCipherInputStream: void <init>(java.io.File,byte[],org.whispersystems.libsignal.util.guava.Optional)>
		SHA-256: 47136b16f506c7722653f8e21dfd3cfb32dbc3225a65c174df5f7aeb5ba3fa7c
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <org.whispersystems.libsignal.protocol.SignalMessage: byte[] getMac(org.whispersystems.libsignal.IdentityKey,org.whispersystems.libsignal.IdentityKey,javax.crypto.spec.SecretKeySpec,byte[])>
		SHA-256: 5afcb2de494e113f2c3e8ca8d1193526f79296059cd74267f4045387b4e53bb1
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer36123)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>
		SHA-256: 31da104f3a6906b571b52f175fda486f80d87c8e0de0fd4abf742fe26e6b7f50
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer26345)
		Method: <org.smssecure.smssecure.protocol.WirePrefix: java.lang.String calculateEncryptedMmsSubject()>
		SHA-256: 884b2b4297067fe408cfbedf3beac7cd7d9277f3b489e65150b7c60ae3927a73
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer3152)
		Method: <org.smssecure.smssecure.crypto.MasterCipher: void <init>(org.smssecure.smssecure.crypto.MasterSecret)>
		SHA-256: 8d5cf3d9bb8df28a5511945ddfbbb48904d11b572499242dcba018123f3d6561
		Secure: false
	Object:
		Variable: $r14
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)
		Method: <org.whispersystems.libsignal.state.SessionState: org.whispersystems.libsignal.ratchet.MessageKeys removeMessageKeys(org.whispersystems.libsignal.ecc.ECPublicKey,int)>
		SHA-256: 9eb8c1899b93ac2d0bf6cc25d1b2b35e39990f05cf39ad468e749dd3f9e4253f
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <org.whispersystems.curve25519.JCESecureRandomProvider: void nextBytes(byte[])>
		SHA-256: 44832361bdc950a41a177a5a770c2cdb1b4f012349b881ff8ad9aeb9b26f8bb6
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27732)
		Method: <com.bumptech.glide.load.engine.cache.SafeKeyGenerator: java.lang.String getSafeKey(com.bumptech.glide.load.Key)>
		SHA-256: ad3291099800415398bac091656ba5ec22b90b0f71920b6f7e12793e751b640
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Mac
		Statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer12956)
		Method: <org.smssecure.smssecure.crypto.DecryptingPartInputStream: javax.crypto.Mac initializeMac(javax.crypto.spec.SecretKeySpec)>
		SHA-256: 158b4d981b447a3b5f8e948b6dc9387d11e2982a5388c92ade9bf5a61119642e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer21196)
		Method: <org.smssecure.smssecure.crypto.MasterSecret: void <init>(android.os.Parcel)>
		SHA-256: 1da7becd2b03917d33125b726e3a2b8ab6cb9e75bb7848ccc15aa3a8b4a5f4d4
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3151)
		Method: <org.smssecure.smssecure.crypto.MasterCipher: void <init>(org.smssecure.smssecure.crypto.MasterSecret)>
		SHA-256: ecc0a7aff50ee490b26826bb403f9b27233b825c66ab923a9b4003a1d8ce03cd
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Mac
		Statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer14669)
		Method: <org.smssecure.smssecure.crypto.EncryptingPartOutputStream: javax.crypto.Mac initializeMac(javax.crypto.spec.SecretKeySpec)>
		SHA-256: a408b99bfee110b32363355a2bb2a1c84052ef6a94cb6bf5e29ab4690835edea
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer21379)
		Method: <org.whispersystems.curve25519.JCESha512Provider: void calculateDigest(byte[],byte[],long)>
		SHA-256: e245fe8e2ab0946900fdb0acae754c3f56bc1db98055b19261f811efa12b0954
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: f6730166425cdde60c0ca0f7f01862a2b9705ad5b213be5cd1a19bc89976254d
		Secure: false
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke $r16.<java.security.MessageDigest: byte[] digest(byte[])>($r24)
		Method: <org.apache.http.impl.auth.DigestSchemeHC4: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: 6378d161b480a3832284871abf822dba710063b9ec06c3282ecefe0d3f3206e1
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.whispersystems.curve25519.JCESha512Provider: void calculateDigest(byte[],byte[],long)>
		SHA-256: e672fc3788936ab7174dbb1b35b297edc3547513e55768aca9c3c93c8a3395d7
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer36095)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: bf9657e8c4ebda433ce59fc62d973433e564bafea2027b88914c1021823d9e31
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer36092)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 795b006338c68a25ffafe7a3d73cdd0bb1c1c584ff0d4d56ff61bbb031b0080e
		Secure: false
	Object:
		Variable: varReplacer32628
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer32628)
		Method: <org.smssecure.smssecure.crypto.AsymmetricMasterCipher: byte[] getDigestedBytes(byte[],int)>
		SHA-256: 81ef53e0c75ceee998e5cf8bc40abd7839c57e3700eff90e8755ca9f0e15cf8a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <org.smssecure.smssecure.crypto.DecryptingPartInputStream: javax.crypto.spec.IvParameterSpec readIv(int)>
		SHA-256: d1ca125ab939a7bcaa7af50b5ce0ea16ae8dbe10fc72789b1b06a84dd8bc92b2
		Secure: false
	Object:
		Variable: varReplacer210
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer210)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: javax.crypto.Mac getMacForPassphrase(java.lang.String,byte[],int)>
		SHA-256: a7be36c7b5259238fd8de54bea257b395c532809c38e26106b983b648a6b21fd
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r0, $i0)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: javax.crypto.Cipher getCipherFromPassphrase(java.lang.String,byte[],int,int)>
		SHA-256: f7d7eb5bc664e740aa9c7611f37117d5122a0848b9f2452c046be083723c1edc
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r3, varReplacer12771, $i0)
		Method: <org.smssecure.smssecure.crypto.MasterCipher: javax.crypto.Cipher getDecryptingCipher(javax.crypto.spec.SecretKeySpec,byte[])>
		SHA-256: 5e07cab1ce46fda5ccc51a910de1276bef6a75bbd6c64647af7d7ffe0e65e44a
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r0)
		Method: <org.smssecure.smssecure.protocol.WirePrefix: java.lang.String calculateEncryptedMmsSubject()>
		SHA-256: 2834cf825da7b6ed8ce3687b2dd9be8cf3fd32db9e73d5fdcdebf65e98926339
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer212)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: javax.crypto.SecretKey getKeyFromPassphrase(java.lang.String,byte[],int)>
		SHA-256: 71eaa5428e10f6cfb34da7358e3816554d583e3f44a8406dddb2c58b2b032981
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer21193)
		Method: <org.smssecure.smssecure.crypto.MasterSecret: void <init>(android.os.Parcel)>
		SHA-256: 7f59a662ef392b93751b00067aeffd1ab47de2047d8e9549d52160116d08a8ed
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <org.smssecure.smssecure.protocol.WirePrefix: java.lang.String calculatePrefix(byte[],int)>
		SHA-256: e23cfe503e963afb44bcb6c453f25d741351d0875e2cd136c36952b9a63d586f
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer27189)
		Method: <org.smssecure.smssecure.crypto.AttachmentCipherInputStream: void <init>(java.io.File,byte[],org.whispersystems.libsignal.util.guava.Optional)>
		SHA-256: a0b8d681e7290c69e5073728c6995115f51e137051f47fc52b3463a805650ae2
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer36148)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: 7891bafa08bf87c27d6dcf28ce16ae1ebc6eb972b2253f10f386b54fc214c064
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: byte[] verifyMac(byte[],int,byte[],java.lang.String)>
		SHA-256: d9cf3b52221f16633187b436ede4950dd68c7c3a081b6fb0c9182c566c1a778d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer671)
		Method: <org.smssecure.smssecure.protocol.WirePrefix: java.lang.String calculatePrefix(byte[],int)>
		SHA-256: 75bf62b00267e19aa1287924fbf8e75cf9f2992d0833d992db50cfae13e2a04b
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer32628)
		Method: <org.smssecure.smssecure.crypto.AsymmetricMasterCipher: byte[] getDigestedBytes(byte[],int)>
		SHA-256: eeee36d036ec4363cbadaad2bdd5ad106617f46dbf4d57e13ad7e139d264cf37
		Secure: false
	Object:
		Variable: varReplacer30890
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer30890)
		Method: <org.smssecure.smssecure.crypto.AsymmetricMasterCipher: javax.crypto.spec.SecretKeySpec deriveMacKey(byte[])>
		SHA-256: 6a736a6d021a4dd08f03b185ac792510e70143342d400a7257990cb2d83d2c62
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.smssecure.smssecure.permissions.Permissions$PermissionsBuilder: void executePermissionsRequest(org.smssecure.smssecure.permissions.PermissionsRequest)>
		SHA-256: d6a0d05aff60825785b2bafa1ac944124ce85cbc4ca9bfe6f520d5923d08479
		Secure: true
	Object:
		Variable: $r15
		Type: java.security.MessageDigest
		Statement: $r15 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17526)
		Method: <org.smssecure.smssecure.ConversationAdapter: void <init>(android.content.Context,org.smssecure.smssecure.crypto.MasterSecret,java.util.Locale,org.smssecure.smssecure.ConversationAdapter$ItemClickListener,android.database.Cursor,org.smssecure.smssecure.recipients.Recipients)>
		SHA-256: e4da11af952bb6226a1a0eb00dcd27fc2b581881eedd0dfa0ae7d0aa44a7b1ba
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer183)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: org.smssecure.smssecure.crypto.MasterSecret getMasterSecret(android.content.Context,java.lang.String)>
		SHA-256: b776f9593cd7fd983e104b7d081fdfd77e082ea435bb7592670d179574577eb7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer30887)
		Method: <org.smssecure.smssecure.crypto.AsymmetricMasterCipher: javax.crypto.spec.SecretKeySpec deriveCipherKey(byte[])>
		SHA-256: 7d2e243d3da134499ac49612660a6411e3bd6918a36114f35006e909015b7abf
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: javax.crypto.SecretKey getKeyFromPassphrase(java.lang.String,byte[],int)>
		SHA-256: 6be1871882479ff243cd1cdaac5f3235ca4a29f585fb5a7059cf9c327693903d
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 8dda2f10cd4911a51ea6f84d756034bbd2b170b00e8eb73d84894dc35d4275e0
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r0.<java.security.SecureRandom: int nextInt(int)>($i0)
		Method: <org.whispersystems.libsignal.util.KeyHelper: int getRandomSequence(int)>
		SHA-256: 206a61a9720bab9d71f6ba6857c92ed3f7fda7664b72fd3355e1f63ae04e8e27
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <org.apache.http.impl.auth.DigestSchemeHC4: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: f5a92d1196fd4833689179870dd62e371c9769fa855ba4f139b469c6b18b34a2
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <org.smssecure.smssecure.util.Util: byte[] getSecretBytes(int)>
		SHA-256: 11efb73b02e2dc8e132e97a1249f3298ef71cc0f8a7e83a6e5ccd1e4cf1c58b3
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4166)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: org.smssecure.smssecure.crypto.MasterSecret generateMasterSecret(android.content.Context,java.lang.String)>
		SHA-256: 69e9d112fd6d4e3273048e144746a59ba083a4ed1b4167e685bcb3cbc8b62ba3
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer33927)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] extract(byte[],byte[])>
		SHA-256: 5bd4c3eb07d08c21df4cc2380fdebbf2838b071dba09fd20a9b7d91b9c7cdd74
		Secure: false
	Object:
		Variable: varReplacer27189
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer27189)
		Method: <org.smssecure.smssecure.crypto.AttachmentCipherInputStream: void <init>(java.io.File,byte[],org.whispersystems.libsignal.util.guava.Optional)>
		SHA-256: d736804a45e9b8e96043b81ca756d304f5038cdaa8f52e3be6f56022ef019d94
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>
		SHA-256: 61965954da2703450175e336d331a8bc311810e943eebaeca9d739b64a0fdc1
		Secure: false
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke $r16.<java.security.MessageDigest: byte[] digest(byte[])>($r24)
		Method: <org.apache.http.impl.auth.DigestSchemeHC4: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: 6378d161b480a3832284871abf822dba710063b9ec06c3282ecefe0d3f3206e1
		Secure: false
	Object:
		Variable: varReplacer35617
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer35617)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: f7315b1f8a0f948c897f1727ca97befdfa0473d02fc96c54b99959256e7a65c0
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer27185)
		Method: <org.smssecure.smssecure.crypto.AttachmentCipherInputStream: void <init>(java.io.File,byte[],org.whispersystems.libsignal.util.guava.Optional)>
		SHA-256: f11cc3b5408e404f029bf5360bc96f9898be9e5a8f78ba5570603ea312bdb9c3
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer34379)
		Method: <okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>
		SHA-256: 21a5aaf29bea2e0120712811f14d3008f432e4e0e5f731e33ff6dbcd6958407a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer35562)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: void <clinit>()>
		SHA-256: 49d6f61f960b9a9b3120f34c681f530c9ab8fb41e7b58e03fa60d2709a47bbe5
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] extract(byte[],byte[])>
		SHA-256: 77738c0a376bd1be5b6a41999e448cb2557ed8c2bb6bfe91df3f0e78b78e87b1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer210)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: javax.crypto.Mac getMacForPassphrase(java.lang.String,byte[],int)>
		SHA-256: 240a295e3583883242b4178f1eb763e09480ffe41a4242a10d2b942f2de47e88
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer36734)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: e037356401e49319d071baa6ba1e9f145b167e8598e932d46d8db8b1ac81c4e5
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <org.whispersystems.libsignal.kdf.DerivedMessageSecrets: void <init>(byte[])>
		SHA-256: 266602d7632e3c738b2dbca5b04568563deadca842aad0961eeb5315d5cef995
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer30286)
		Method: <com.squareup.okhttp.internal.Util: java.lang.String md5Hex(java.lang.String)>
		SHA-256: ed56d39b2f1ef1e55686044a122c7ed3cb9f78b987d5a2e2c9f97561d29d8c01
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer32657)
		Method: <org.whispersystems.libsignal.protocol.SignalMessage: byte[] getMac(org.whispersystems.libsignal.IdentityKey,org.whispersystems.libsignal.IdentityKey,javax.crypto.spec.SecretKeySpec,byte[])>
		SHA-256: e486d310e3c32564cdf605544923206bc761a977306aacb2066627e559e4c090
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer27191)
		Method: <org.smssecure.smssecure.crypto.AttachmentCipherInputStream: void <init>(java.io.File,byte[],org.whispersystems.libsignal.util.guava.Optional)>
		SHA-256: de73150be4cd77ca20d7c101c428c9c39027a5d62d278fa3173e64aec22cd59e
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: byte[] generateSalt()>
		SHA-256: 2310cf561ddada38bc607f9ea9d24766c979d1b690ce5924fc61dbb4dbfa036c
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>
		SHA-256: 87142a8c4369ab14d23fa8690b807f0d900b1807831c8c0f8e6b4de4b8735e3b
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer36127)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: e7f4fe5884bc3ffa548dc2a71eb211e86604f86814c01206d468352c5f5c6e81
		Secure: false
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke $r16.<java.security.MessageDigest: byte[] digest(byte[])>($r24)
		Method: <org.apache.http.impl.auth.DigestSchemeHC4: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: 6378d161b480a3832284871abf822dba710063b9ec06c3282ecefe0d3f3206e1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer30890)
		Method: <org.smssecure.smssecure.crypto.AsymmetricMasterCipher: javax.crypto.spec.SecretKeySpec deriveMacKey(byte[])>
		SHA-256: e669131b6237f9af584e1625a60ea22b67e1bfc874c03eb8cede24ba948d8e4b
		Secure: false
	Object:
		Variable: varReplacer32655
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer32655)
		Method: <org.whispersystems.libsignal.kdf.DerivedMessageSecrets: void <init>(byte[])>
		SHA-256: 3aebb0cecbfd1165f757628d835385b06d150ce693a0eda37ddfc23030dcbe8d
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12958)
		Method: <org.smssecure.smssecure.crypto.DecryptingPartInputStream: javax.crypto.Cipher initializeCipher(javax.crypto.spec.SecretKeySpec)>
		SHA-256: 9867cc08dc89ad7f651a663bab73cc7c88d6ab2657b640d326960a2cc544ae8e
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.KeyGenerator
		Statement: $r0 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer4200)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: byte[] generateMacSecret()>
		SHA-256: 7829f6243765e6987d72f815a8700a7eeeb6a56c6b2b0112157b1379277c1f77
		Secure: false
	Object:
		Variable: varReplacer33926
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer33926)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] extract(byte[],byte[])>
		SHA-256: f2afdd7176cd12470f2d2508b019b3e9856361e7c54308f987e7fd1600932feb
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>
		SHA-256: d5cf1f8de9a5f17cad5006e43f64e63b02f8f56706a9e139ea0baeb6f7532b60
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer32629)
		Method: <org.smssecure.smssecure.crypto.AsymmetricMasterCipher: byte[] getDigestedBytes(byte[],int)>
		SHA-256: c43c2f996208e2d86fd6a3bf44acc1d96c83464d7ed2df380db393de675d3410
		Secure: false
	Object:
		Variable: varReplacer30887
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer30887)
		Method: <org.smssecure.smssecure.crypto.AsymmetricMasterCipher: javax.crypto.spec.SecretKeySpec deriveCipherKey(byte[])>
		SHA-256: 87b5e9660304304b0ccfa854e84957e6416cb990d1cdd9e6b4e8f6ffbd73bafd
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer35616)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: b1ad6ec3a49993cb36a5492e745bb190a01326d8d20a654ed268b90cea212616
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>
		SHA-256: 4704c3ea9d50e304ebaa64f80abc0358b23fd9e2c75b25360e6595ec058a5c98
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer23897)
		Method: <org.smssecure.smssecure.providers.SingleUseBlobProvider: android.net.Uri createUri(byte[])>
		SHA-256: 1d0242086bfc08f23005cc81ccc94a8c8de2b6e3ba76e84e7d3deedcf342eba0
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <org.smssecure.smssecure.crypto.EncryptingPartOutputStream: void close()>
		SHA-256: 2b06258b08ed41615d401ad90734ee75a0dc51b725cd617900fd6f6485d5c8d9
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <org.smssecure.smssecure.crypto.PRNGFixes: void installLinuxPRNGSecureRandom()>
		SHA-256: fbec00fe93d15517143af9e354e3e3fbfd9140a2563664ef8b53a88162c8254b
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: $r0 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer7943)
		Method: <org.whispersystems.libsignal.util.KeyHelper: int getRandomSequence(int)>
		SHA-256: 5eaa9c7bc064621a75e21ee86ad8a7ef9cb654e04b8f8fd2f8209d9ceb665439
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 3bcbf4d912455255294e9bee4d91f33f3fa55dd4a67dc970c48252366cf97c1f
		Secure: false
	Object:
		Variable: varReplacer21193
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer21193)
		Method: <org.smssecure.smssecure.crypto.MasterSecret: void <init>(android.os.Parcel)>
		SHA-256: 118c3bc12b57f1d2b3a4c534571192e04a4cf2a3f3bb35f8e0fe3d8a04deaebd
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: byte[] macWithPassphrase(byte[],int,byte[],java.lang.String)>
		SHA-256: 255c53f596a87cec2ecb62538f93d14df2992afcbda9f5acbdd795b57f3fbec5
		Secure: false
	Object:
		Variable: varReplacer33874
		Type: java.lang.String
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer33874)
		Method: <org.whispersystems.libsignal.state.SessionState: org.whispersystems.libsignal.ratchet.MessageKeys removeMessageKeys(org.whispersystems.libsignal.ecc.ECPublicKey,int)>
		SHA-256: 43158065e1b1a200ada5fc893f9023efb5a6c8f07cb4763cedc34eb3848a4b86
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4197)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: int generateIterationCount(java.lang.String,byte[])>
		SHA-256: 8558f3b27dd39367db84915f33fc3e3b4aa0cad6136ba66b0d17a08d3b959723
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <org.smssecure.smssecure.crypto.AttachmentCipherInputStream: void verifyMac(java.io.File,javax.crypto.Mac,org.whispersystems.libsignal.util.guava.Optional)>
		SHA-256: f13bae317f7abb612d710874b8e420189ee91848f05980a5be1347cef2495912
		Secure: false
	Object:
		Variable: varReplacer183
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer183)
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: org.smssecure.smssecure.crypto.MasterSecret getMasterSecret(android.content.Context,java.lang.String)>
		SHA-256: 72644b511d3a36becb1a25c372429da64a52baa6ab35779c3ddd5f8e1c8484c0
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 533790f741ccce52b37b13a1f5b15685cf6be9dbae4d3ca5f2ae063c0b550248
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r3.<java.security.SecureRandom: int nextInt(int)>(varReplacer7893)
		Method: <org.smssecure.smssecure.permissions.Permissions$PermissionsBuilder: void executePermissionsRequest(org.smssecure.smssecure.permissions.PermissionsRequest)>
		SHA-256: 40f350e454eab686d56418daf022fa0ce7826e12b2552af8edf5980f0ddc75a9
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: a79a1700ae9d8d44f13ea218f751e7024f8f1222b1b2ae17cdbab7b56d352181
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer36752)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>
		SHA-256: a319063eade91d595701f57194fec172680bc5afa21cb080384dcf6e6ee61a7e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer3922)
		Method: <org.smssecure.smssecure.util.Util: java.security.SecureRandom getSecureRandom()>
		SHA-256: 9c6b5fe391135a309e3a598cea64a8854e5e63cee85ab6f150e43d5dbd704b5d
		Secure: true
	Object:
		Variable: $r13
		Type: java.security.MessageDigest
		Statement: $r13 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer24722)
		Method: <org.smssecure.smssecure.ConversationListAdapter: void <init>(android.content.Context,org.smssecure.smssecure.crypto.MasterSecret,java.util.Locale,android.database.Cursor,org.smssecure.smssecure.ConversationListAdapter$ItemClickListener)>
		SHA-256: d106d1d49b49c561afdadbfc5ae00109d2a174b53870cd0c3adc54f813dfaf53
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = interfaceinvoke $r1.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <org.smssecure.smssecure.crypto.MasterSecretUtil: byte[] generateEncryptionSecret()>
		SHA-256: bbd0d05baf19e2a25d203aa944a03f73bb9a4e85c42e5b66ade5d49086ece7fd
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer33926)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] extract(byte[],byte[])>
		SHA-256: 993de08c3ddc17f41716e301d1bfd92ec870212f4a55d1c67ad8ae162a7ad99d
		Secure: false

Findings in Java Class: org.smssecure.smssecure.crypto.MasterSecretUtil

	 in Method: javax.crypto.SecretKey getKeyFromPassphrase(java.lang.String,byte[],int)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #71eaa5428e10f6cfb34da7358e3816554d583e3f44a8406dddb2c58b2b032981)
			First parameter (with value "PBEWITHSHA1AND128BITAES-CBC-BC") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer212)

		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[],byte[],int) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int)>($r3, $r0, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1)


	 in Method: int generateIterationCount(java.lang.String,byte[])
		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[],byte[],int) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r0.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int)>($r3, $r2, varReplacer4194)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #8558f3b27dd39367db84915f33fc3e3b4aa0cad6136ba66b0d17a08d3b959723)
			First parameter (with value "PBEWITHSHA1AND128BITAES-CBC-BC") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4197)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)


	 in Method: org.smssecure.smssecure.crypto.MasterSecret getMasterSecret(android.content.Context,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #b776f9593cd7fd983e104b7d081fdfd77e082ea435bb7592670d179574577eb7)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer183)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer187)


	 in Method: byte[] encryptWithPassphrase(byte[],int,byte[],java.lang.String)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #d815447f78c06f15bfb7e1bf8cae323fb2044e9a425d6cb0209e6628bdd7ad2f)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)


	 in Method: byte[] decryptWithPassphrase(byte[],int,byte[],java.lang.String)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #d815447f78c06f15bfb7e1bf8cae323fb2044e9a425d6cb0209e6628bdd7ad2f)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)


	 in Method: javax.crypto.Mac getMacForPassphrase(java.lang.String,byte[],int)
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #7d3ab37fabd2cc5d5ce7943a6a85c1dcd26c80164768bfaf7ce4f0584c226367)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer209)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer210)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r3)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #240a295e3583883242b4178f1eb763e09480ffe41a4242a10d2b942f2de47e88)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer210)


	 in Method: org.smssecure.smssecure.crypto.MasterSecret generateMasterSecret(android.content.Context,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer4167)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #9775aca7219a65dbee392c171c19296d7131289976a90f47a691e73336c1eb4)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer4167)


	 in Method: byte[] generateMacSecret()
		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #7829f6243765e6987d72f815a8700a7eeeb6a56c6b2b0112157b1379277c1f77)
			First parameter (with value "HmacSHA1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: $r0 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer4200)


	 in Method: javax.crypto.Cipher getCipherFromPassphrase(java.lang.String,byte[],int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i1, $r3, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedOAEP
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i1, $r3, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i1, $r3, $r1)


Findings in Java Class: org.smssecure.smssecure.protocol.WirePrefix

	 in Method: java.lang.String calculatePrefix(byte[],int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #75bf62b00267e19aa1287924fbf8e75cf9f2992d0833d992db50cfae13e2a04b)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer671)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #75bf62b00267e19aa1287924fbf8e75cf9f2992d0833d992db50cfae13e2a04b)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer671)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #75bf62b00267e19aa1287924fbf8e75cf9f2992d0833d992db50cfae13e2a04b)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)


Findings in Java Class: org.smssecure.smssecure.crypto.MasterCipher

	 in Method: void <init>(org.smssecure.smssecure.crypto.MasterSecret)
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #8d5cf3d9bb8df28a5511945ddfbbb48904d11b572499242dcba018123f3d6561)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer3152)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #8d5cf3d9bb8df28a5511945ddfbbb48904d11b572499242dcba018123f3d6561)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer3152)


	 in Method: javax.crypto.Cipher getDecryptingCipher(javax.crypto.spec.SecretKeySpec,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r3, varReplacer12771, $i0)


Findings in Java Class: org.smssecure.smssecure.crypto.DecryptingPartInputStream

	 in Method: javax.crypto.Mac initializeMac(javax.crypto.spec.SecretKeySpec)
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #158b4d981b447a3b5f8e948b6dc9387d11e2982a5388c92ade9bf5a61119642e)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer12956)


	 in Method: javax.crypto.Cipher initializeCipher(javax.crypto.spec.SecretKeySpec)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer12957, $r1, $r3)


	 in Method: javax.crypto.spec.IvParameterSpec readIv(int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: org.smssecure.smssecure.crypto.EncryptingPartOutputStream

	 in Method: javax.crypto.Mac initializeMac(javax.crypto.spec.SecretKeySpec)
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Mac: void init(java.security.Key)>($r1)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #a408b99bfee110b32363355a2bb2a1c84052ef6a94cb6bf5e29ab4690835edea)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer14669)


	 in Method: void write(byte[],int,int)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #144366895a00075057298f3caa0759692118f3c6ccf03cb475eabdeb62edee94)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r2, $i0, $i1)


	 in Method: void close()
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #144366895a00075057298f3caa0759692118f3c6ccf03cb475eabdeb62edee94)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal()>()


	 in Method: javax.crypto.Cipher initializeCipher(javax.crypto.Mac,javax.crypto.spec.SecretKeySpec)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer14672, $r2)


Findings in Java Class: org.smssecure.smssecure.providers.PersistentBlobProvider$2

	 in Method: void run()
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #a408b99bfee110b32363355a2bb2a1c84052ef6a94cb6bf5e29ab4690835edea)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to doFinal
			at statement: staticinvoke <org.smssecure.smssecure.util.Util: long copy(java.io.InputStream,java.io.OutputStream)>($r6, $r1)


Findings in Java Class: org.smssecure.smssecure.database.AttachmentDatabase

	 in Method: long setAttachmentData(org.smssecure.smssecure.crypto.MasterSecret,java.io.File,java.io.InputStream)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #a408b99bfee110b32363355a2bb2a1c84052ef6a94cb6bf5e29ab4690835edea)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to doFinal
			at statement: $l0 = staticinvoke <org.smssecure.smssecure.util.Util: long copy(java.io.InputStream,java.io.OutputStream)>($r1, $r2)


Findings in Java Class: org.smssecure.smssecure.ConversationAdapter

	 in Method: void <init>(android.content.Context,org.smssecure.smssecure.crypto.MasterSecret,java.util.Locale,org.smssecure.smssecure.ConversationAdapter$ItemClickListener,android.database.Cursor,org.smssecure.smssecure.recipients.Recipients)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e4da11af952bb6226a1a0eb00dcd27fc2b581881eedd0dfa0ae7d0aa44a7b1ba)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r15 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17526)


Findings in Java Class: org.smssecure.smssecure.crypto.MasterSecret

	 in Method: void <init>(android.os.Parcel)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer21193)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #1da7becd2b03917d33125b726e3a2b8ab6cb9e75bb7848ccc15aa3a8b4a5f4d4)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer21196)


Findings in Java Class: org.smssecure.smssecure.ConversationListAdapter

	 in Method: void <init>(android.content.Context,org.smssecure.smssecure.crypto.MasterSecret,java.util.Locale,android.database.Cursor,org.smssecure.smssecure.ConversationListAdapter$ItemClickListener)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d106d1d49b49c561afdadbfc5ae00109d2a174b53870cd0c3adc54f813dfaf53)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r13 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer24722)


Findings in Java Class: org.smssecure.smssecure.ConversationListFragment

	 in Method: void initializeListAdapter()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d106d1d49b49c561afdadbfc5ae00109d2a174b53870cd0c3adc54f813dfaf53)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r4.<android.support.v7.widget.RecyclerView: void setAdapter(android.support.v7.widget.RecyclerView$Adapter)>($r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d106d1d49b49c561afdadbfc5ae00109d2a174b53870cd0c3adc54f813dfaf53)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r4.<android.support.v7.widget.RecyclerView: void setAdapter(android.support.v7.widget.RecyclerView$Adapter)>($r3)


Findings in Java Class: android.support.v7.widget.RecyclerView$Adapter

	 in Method: void setHasStableIds(boolean)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d106d1d49b49c561afdadbfc5ae00109d2a174b53870cd0c3adc54f813dfaf53)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $z0 = virtualinvoke r0.<android.support.v7.widget.RecyclerView$Adapter: boolean hasObservers()>()


Findings in Java Class: org.smssecure.smssecure.crypto.AttachmentCipherInputStream

	 in Method: void verifyMac(java.io.File,javax.crypto.Mac,org.whispersystems.libsignal.util.guava.Optional)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #352742785f31f4e18a1e5a05295d9dc4cb96ccc6d489a065ab6705b355b3acfe)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer29629)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #352742785f31f4e18a1e5a05295d9dc4cb96ccc6d489a065ab6705b355b3acfe)
			Third parameter (with value 0)Variable preLenmust be  greater than 0
			at statement: virtualinvoke $r5.<java.security.MessageDigest: void update(byte[],int,int)>($r6, varReplacer29626, $i2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #352742785f31f4e18a1e5a05295d9dc4cb96ccc6d489a065ab6705b355b3acfe)
			First parameter (with value "SHA256") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer29629)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #80f1ce1339920375f0b126cc248d1147a8b6f117f97220fd1692955a25c91dc1)
			Unexpected call to method <javax.crypto.Mac: byte[] doFinal()> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: byte[] doFinal(byte[]),javax.crypto.Mac: void update(java.nio.ByteBuffer),javax.crypto.Mac: void update(byte),javax.crypto.Mac: void update(byte[],int,int)
			at statement: $r6 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #352742785f31f4e18a1e5a05295d9dc4cb96ccc6d489a065ab6705b355b3acfe)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to java.security.MessageDigest: void update(byte[],int,int), digest, java.security.MessageDigest: void update(java.nio.ByteBuffer), java.security.MessageDigest: void update(byte[]), java.security.MessageDigest: void update(byte)
			at statement: virtualinvoke $r5.<java.security.MessageDigest: void update(byte[],int,int)>($r6, varReplacer29626, $i2)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #80f1ce1339920375f0b126cc248d1147a8b6f117f97220fd1692955a25c91dc1)
			Third parameter (with value 0)Variable lenmust be  greater than 0
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void update(byte[],int,int)>($r6, varReplacer29630, $i2)


	 in Method: void <init>(java.io.File,byte[],org.whispersystems.libsignal.util.guava.Optional)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Mac: void init(java.security.Key)>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer27189)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #80f1ce1339920375f0b126cc248d1147a8b6f117f97220fd1692955a25c91dc1)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $i1 = virtualinvoke $r5.<javax.crypto.Mac: int getMacLength()>()


Findings in Java Class: com.bumptech.glide.load.engine.cache.SafeKeyGenerator

	 in Method: java.lang.String getSafeKey(com.bumptech.glide.load.Key)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #ad3291099800415398bac091656ba5ec22b90b0f71920b6f7e12793e751b640)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.squareup.okhttp.internal.Util

	 in Method: java.lang.String md5Hex(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ed56d39b2f1ef1e55686044a122c7ed3cb9f78b987d5a2e2c9f97561d29d8c01)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer30286)


	 in Method: okio.ByteString sha1(okio.ByteString)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #686866faf5fed232b912887618f035ef03e22e31e6839bf4922e3b2e2b1e7e72)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer35138)


Findings in Java Class: org.smssecure.smssecure.crypto.AsymmetricMasterCipher

	 in Method: javax.crypto.spec.SecretKeySpec deriveMacKey(byte[])
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #e669131b6237f9af584e1625a60ea22b67e1bfc874c03eb8cede24ba948d8e4b)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer30890)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer30890)


	 in Method: byte[] getDigestedBytes(byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer32628)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>($r1)


	 in Method: javax.crypto.spec.SecretKeySpec deriveCipherKey(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer30887)


Findings in Java Class: org.whispersystems.libsignal.SessionCipher

	 in Method: byte[] getPlaintext(org.whispersystems.libsignal.ratchet.MessageKeys,byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #566a811e7dddf8d2d87458298b1f366288ae72b76c5a3874ad3bf9beecbd09ca)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)


	 in Method: byte[] getCiphertext(org.whispersystems.libsignal.ratchet.MessageKeys,byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #566a811e7dddf8d2d87458298b1f366288ae72b76c5a3874ad3bf9beecbd09ca)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)


	 in Method: javax.crypto.Cipher getCipher(int,javax.crypto.spec.SecretKeySpec,javax.crypto.spec.IvParameterSpec)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r3, $r1)


Findings in Java Class: com.squareup.okhttp.Cache$Entry

	 in Method: java.util.List readCertificateList(okio.BufferedSource)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #a6d08ca53009a7341201cec43e84112d9ec61fcea369c113a53faaf1115c300d)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer33471)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #a6d08ca53009a7341201cec43e84112d9ec61fcea369c113a53faaf1115c300d)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #a6d08ca53009a7341201cec43e84112d9ec61fcea369c113a53faaf1115c300d)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)


Findings in Java Class: org.apache.http.impl.auth.DigestSchemeHC4

	 in Method: java.security.MessageDigest createMessageDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f5a92d1196fd4833689179870dd62e371c9769fa855ba4f139b469c6b18b34a2)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #21a5aaf29bea2e0120712811f14d3008f432e4e0e5f731e33ff6dbcd6958407a)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer34379)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer34376, $r7, varReplacer34376)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer34376, $r7, varReplacer34376)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer34376, $r7, varReplacer34376)


	 in Method: javax.net.ssl.X509TrustManager systemDefaultTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer34375)


Findings in Java Class: org.apache.http.impl.auth.NTLMEngineImpl

	 in Method: byte[] RC4(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer35615, $r0)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b1ad6ec3a49993cb36a5492e745bb190a01326d8d20a654ed268b90cea212616)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer35616)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer35617)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #b1ad6ec3a49993cb36a5492e745bb190a01326d8d20a654ed268b90cea212616)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #a6a34887ca1cc158bb4dc68559452df432bfc713ee69604f5dc9af030131bb91)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer35617)


	 in Method: byte[] ntlm2SessionResponse(byte[],byte[],byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #31da104f3a6906b571b52f175fda486f80d87c8e0de0fd4abf742fe26e6b7f50)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer36123)


	 in Method: java.security.Key createDESKey(byte[],int)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #e7f4fe5884bc3ffa548dc2a71eb211e86604f86814c01206d468352c5f5c6e81)
			Second parameter (with value "DES") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer36127)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer36127)


	 in Method: byte[] lmResponse(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7891bafa08bf87c27d6dcf28ce16ae1ebc6eb972b2253f10f386b54fc214c064)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer36148)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer36138, $r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #7891bafa08bf87c27d6dcf28ce16ae1ebc6eb972b2253f10f386b54fc214c064)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


	 in Method: byte[] lmHash(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e037356401e49319d071baa6ba1e9f145b167e8598e932d46d8db8b1ac81c4e5)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer36734)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #e037356401e49319d071baa6ba1e9f145b167e8598e932d46d8db8b1ac81c4e5)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer36740, $r5)


	 in Method: byte[] lmv2Hash(java.lang.String,java.lang.String,byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a319063eade91d595701f57194fec172680bc5afa21cb080384dcf6e6ee61a7e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: specialinvoke $r7.<org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>($r2)


	 in Method: byte[] ntlmv2Hash(java.lang.String,java.lang.String,byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a319063eade91d595701f57194fec172680bc5afa21cb080384dcf6e6ee61a7e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: specialinvoke $r7.<org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>($r2)


Findings in Java Class: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen

	 in Method: byte[] getLanManagerSessionKey()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #bf9657e8c4ebda433ce59fc62d973433e564bafea2027b88914c1021823d9e31)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer36095)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer36103, $r4)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #bf9657e8c4ebda433ce59fc62d973433e564bafea2027b88914c1021823d9e31)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #795b006338c68a25ffafe7a3d73cdd0bb1c1c584ff0d4d56ff61bbb031b0080e)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5

	 in Method: void <init>(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a319063eade91d595701f57194fec172680bc5afa21cb080384dcf6e6ee61a7e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer36752)


Findings in Java Class: org.whispersystems.libsignal.kdf.HKDF

	 in Method: byte[] extract(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer33926)


	 in Method: byte[] expand(byte[],byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer33930)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Mac: void init(java.security.Key)>($r2)


Findings in Java Class: org.whispersystems.libsignal.kdf.DerivedMessageSecrets

	 in Method: void <init>(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer32655)


Findings in Java Class: org.whispersystems.libsignal.ratchet.ChainKey

	 in Method: byte[] getBaseMaterial(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer32650)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r1)


Findings in Java Class: org.whispersystems.libsignal.protocol.SignalMessage

	 in Method: byte[] getMac(org.whispersystems.libsignal.IdentityKey,org.whispersystems.libsignal.IdentityKey,javax.crypto.spec.SecretKeySpec,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Mac: void init(java.security.Key)>($r1)


Findings in Java Class: org.whispersystems.libsignal.state.SessionState

	 in Method: org.whispersystems.libsignal.ratchet.MessageKeys removeMessageKeys(org.whispersystems.libsignal.ecc.ECPublicKey,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer33874)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 142

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 31
	TypestateError: 14
	RequiredPredicateError: 44
	ForbiddenMethodError: 2
	IncompleteOperationError: 15
=====================================================================
