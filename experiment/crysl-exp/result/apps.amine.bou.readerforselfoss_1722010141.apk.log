0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer11620, $r2)
		Method: <okhttp3.internal.platform.c: javax.net.ssl.SSLContext n()>
		SHA-256: bbad4d5d531980b53b898b44c56a1c1e605f393235af20abc48d89680d3372b8
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer7434, varReplacer7435)
		Method: <okhttp3.internal.platform.c: javax.net.ssl.X509TrustManager p()>
		SHA-256: 3f219b03d26e3a01b356b4deef682d76eaeb6e563f00a7a6812d2b77517a672f
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <m3.c: java.security.MessageDigest g(java.lang.String)>
		SHA-256: dbc5ffdefdd5604854ddd3b1bc73001904ed016c2665145a6e029f3eedc26c34
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <b7.x: b7.h c(java.lang.String)>
		SHA-256: a6c05a3bdda0e820fbbcce4f5904e8a8cf7ed657060c1e836666fd93534e2b6e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.h: javax.net.ssl.X509TrustManager p()>
		SHA-256: c8c5268cd3c97ab0f211eecf2228bf88047448c1465f6d7e18fab2258a56ae36
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer11613)
		Method: <okhttp3.internal.platform.h: javax.net.ssl.SSLContext n()>
		SHA-256: 2e6ae5b38daca199a7c3cc19566810ae3547df79b48b5ed8f47e3a29af591c41
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer25821)
		Method: <p2.j$a: p2.j$b b()>
		SHA-256: 922402ad69736666734f2474c837900b7d2462e3e766235b847f2e9a08386988
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.SecureRandom
		Statement: specialinvoke $r11.<java.security.SecureRandom: void <init>()>()
		Method: <y1.e: o6.a0$a b()>
		SHA-256: 292e8d81dd7c1b4962cb90c882d410ea6b7e086b592001c29b7e4617e1fe0ff8
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.g: javax.net.ssl.X509TrustManager p()>
		SHA-256: 57b063f60360f86cede8e7965910f189b1456ea18d121fe996f140544352e37a
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <b7.h: b7.h c(java.lang.String)>
		SHA-256: b437009f9c3c9517da4042a13ecedeeb623dd5aad0b327b5545a84d4a6050d6c
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.c: javax.net.ssl.X509TrustManager p()>
		SHA-256: b1de5745980723ee20ad952f3a703376b3a07706e588c5490ba7d0e11f016608
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <b7.x: b7.h c(java.lang.String)>
		SHA-256: cac3a8921c0ecf1d3a78041a3b01565538babb474b9a5db9df4def50d3fa6c9a
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer11618, $r2)
		Method: <okhttp3.internal.platform.d: javax.net.ssl.SSLContext n()>
		SHA-256: 159a4474a355149e51058711afd31873948d8bfd97ec06688f24c523258db032
		Secure: false
	Object:
		Variable: $r25
		Type: byte[]
		Statement: $r25 = virtualinvoke $r17.<java.security.MessageDigest: byte[] digest(byte[])>($r25)
		Method: <m3.c: n3.k f(m3.b,o6.c0,java.util.Map)>
		SHA-256: 5f5bad9b6da0f1e42fcb56c50b2e414f248a34903a79297ba1942b5294a09efc
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.h: javax.net.ssl.X509TrustManager p()>
		SHA-256: bac4bb314b7f1041242a758cca5d7c0d4015be692b64c2bd3353ce44f8e2f29f
		Secure: false
	Object:
		Variable: $r25
		Type: byte[]
		Statement: $r25 = virtualinvoke $r17.<java.security.MessageDigest: byte[] digest(byte[])>($r25)
		Method: <m3.c: n3.k f(m3.b,o6.c0,java.util.Map)>
		SHA-256: 5f5bad9b6da0f1e42fcb56c50b2e414f248a34903a79297ba1942b5294a09efc
		Secure: false
	Object:
		Variable: $r25
		Type: byte[]
		Statement: $r25 = virtualinvoke $r17.<java.security.MessageDigest: byte[] digest(byte[])>($r25)
		Method: <m3.c: n3.k f(m3.b,o6.c0,java.util.Map)>
		SHA-256: 5f5bad9b6da0f1e42fcb56c50b2e414f248a34903a79297ba1942b5294a09efc
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <okhttp3.internal.platform.g: javax.net.ssl.X509TrustManager p()>
		SHA-256: c7c4e9aa450fcde3d506807cb0a87c5a9355fafba24e91dc15465730647d4bb2
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.d: javax.net.ssl.X509TrustManager p()>
		SHA-256: 3746eafeaffa4cd6968eb1f433d59c4d6429ceb2f9622fbccd981041d66fe25a
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <b7.h: b7.h c(java.lang.String)>
		SHA-256: 7a62705013d140fd456ede4e0644f3751e6554dd8c5c7909869b95f322f2be41
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <m3.c: java.lang.String e()>
		SHA-256: 429580ee9f55950d1e0a403ad3784a49b57eff6aa7d267974dbbb799480a0ee9
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <m3.c: java.lang.String e()>
		SHA-256: d2e6df3060ff21a2c97ef53c8ed97fd58aa287e1fc395a51237fbc1a3f47e23e
		Secure: true
	Object:
		Variable: $r25
		Type: byte[]
		Statement: $r25 = virtualinvoke $r17.<java.security.MessageDigest: byte[] digest(byte[])>($r25)
		Method: <m3.c: n3.k f(m3.b,o6.c0,java.util.Map)>
		SHA-256: 5f5bad9b6da0f1e42fcb56c50b2e414f248a34903a79297ba1942b5294a09efc
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4347)
		Method: <y1.e: o6.a0$a b()>
		SHA-256: 8fa2fd3e9f9ef30adac4b6731fdd2f7d7269c04e1bd0719dc7670e6539ae3a6c
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.d: javax.net.ssl.X509TrustManager p()>
		SHA-256: d40cb02cf1c2472ad64c9ec7c1a99e890c25073ddb43468e413e1a03acac9b20
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer11616, $r2)
		Method: <okhttp3.internal.platform.g: javax.net.ssl.SSLContext n()>
		SHA-256: 52a35c7d191abe1a20524f0bc9ad1e6df4edc829492db69188dffd503ef372c1
		Secure: false

Findings in Java Class: y1.e

	 in Method: o6.a0$a b()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4348, $r14, $r3)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #8fa2fd3e9f9ef30adac4b6731fdd2f7d7269c04e1bd0719dc7670e6539ae3a6c)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4347)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4348, $r14, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4348, $r14, $r3)


Findings in Java Class: okhttp3.internal.platform.h

	 in Method: javax.net.ssl.SSLContext n()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2e6ae5b38daca199a7c3cc19566810ae3547df79b48b5ed8f47e3a29af591c41)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer11613)


	 in Method: javax.net.ssl.SSLSocketFactory o(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7438, $r10, varReplacer7438)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7438, $r10, varReplacer7438)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7438, $r10, varReplacer7438)


	 in Method: javax.net.ssl.X509TrustManager p()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer7418)


Findings in Java Class: okhttp3.internal.platform.d

	 in Method: javax.net.ssl.SSLContext n()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #159a4474a355149e51058711afd31873948d8bfd97ec06688f24c523258db032)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer11618, $r2)


	 in Method: javax.net.ssl.X509TrustManager p()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer7426)


	 in Method: javax.net.ssl.SSLSocketFactory o(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7444, $r5, varReplacer7444)


Findings in Java Class: okhttp3.internal.platform.c

	 in Method: javax.net.ssl.SSLContext n()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #bbad4d5d531980b53b898b44c56a1c1e605f393235af20abc48d89680d3372b8)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer11620, $r2)


	 in Method: javax.net.ssl.X509TrustManager p()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer7436)


Findings in Java Class: p2.j

	 in Method: java.lang.String a(k2.h)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #922402ad69736666734f2474c837900b7d2462e3e766235b847f2e9a08386988)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = interfaceinvoke $r2.<f0.e: java.lang.Object b()>()


Findings in Java Class: m3.c

	 in Method: java.security.MessageDigest g(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #dbc5ffdefdd5604854ddd3b1bc73001904ed016c2665145a6e029f3eedc26c34)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)


Findings in Java Class: b7.h

	 in Method: b7.h c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7a62705013d140fd456ede4e0644f3751e6554dd8c5c7909869b95f322f2be41)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: b7.x

	 in Method: b7.h c(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #a6c05a3bdda0e820fbbcce4f5904e8a8cf7ed657060c1e836666fd93534e2b6e)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a6c05a3bdda0e820fbbcce4f5904e8a8cf7ed657060c1e836666fd93534e2b6e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: okhttp3.internal.platform.g

	 in Method: javax.net.ssl.X509TrustManager p()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer7425)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 26

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 1
	RequiredPredicateError: 11
	TypestateError: 1
	ConstraintError: 7
=====================================================================
