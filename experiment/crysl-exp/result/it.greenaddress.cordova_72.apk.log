0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer15460, varReplacer15461)
		Method: <com.bitsofproof.supernode.wallet.KeyFormatter: com.bitsofproof.supernode.common.ECKeyPair parseBIP38NoEC(byte[],boolean)>
		SHA-256: ce44210ba1d2a7c9dfb15bf39e9283982b625e055d3992ad3af5abfe4eef8c1a
		Secure: false
	Object:
		Variable: varReplacer15470
		Type: java.lang.String
		Statement: specialinvoke r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer15470)
		Method: <com.bitsofproof.supernode.wallet.KeyFormatter: com.bitsofproof.supernode.common.ECKeyPair parseBIP38NoEC(byte[],boolean)>
		SHA-256: 310cb122de7bbf2fd2197aa8ea6d04ba8cf886b22f694576ffed5531edb609d4
		Secure: false
	Object:
		Variable: $r8
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r8 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r4)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.TrustManager[] getTrustManagers(java.security.KeyStore,java.util.Collection)>
		SHA-256: 54da2c2876dbf287d03eef7b5d9732448e8a31278c4c714211213c1106b3a53c
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,java.lang.String)>
		SHA-256: efaca850412af8e15c119003b7216ec99a80de8702b013658d88a9dd7d3d062d
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.bitsofproof.supernode.common.Hash: byte[] hash(byte[],int,int)>
		SHA-256: 81a3d5494b1bd7f1e4da27424a62252975c9a92dd088130c2a86d135b076ae88
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r2)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.KeyManager[] getKeyManagers(java.security.KeyStore)>
		SHA-256: 174b658ce53e81c07d4e54d6bfe910293f79c705d9b677b25a075a469d532229
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer4601, varReplacer4602)
		Method: <it.greenaddress.cordova.BIP38$3: void run()>
		SHA-256: 1241c409fafe41647c91c99a20cab9863376e589fea03875c2a816d7959dcb9d
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLEngine
		Statement: virtualinvoke $r1.<javax.net.ssl.SSLEngine: void setEnabledCipherSuites(java.lang.String[])>($r2)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: void customize(javax.net.ssl.SSLEngine)>
		SHA-256: 3db855a164a3e61c20e1472a6b39844bb720f7b4e6e5ffa20e203e2782bedcfb
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: a9c19b12994234db6ec00ed5b541d5738b556e23d3870b731ea4245dbf932de7
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r2)
		Method: <com.ququplay.websocket.InsecureX509TrustManager: void <init>(java.security.KeyStore,boolean,boolean)>
		SHA-256: aa3a47103c8bf5551417f358b018d6aa6fc7f2bc52490310fb9e310767169803
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer4504, varReplacer4505)
		Method: <it.greenaddress.cordova.BIP38$4: void run()>
		SHA-256: 325f7f9dc757943f5cc5fd5feacc60660b40f28334ca0c2d5bbc3b5c81885977
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer11111)
		Method: <com.github.ghetolay.jwamp.WampWebSocket: java.lang.String authSignature(java.lang.String,java.lang.String)>
		SHA-256: 1ec281fbebac0c9994de15496ff4fefb27503f7b123a2ebeecb176ce5cbe9b8a
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12982)
		Method: <org.java_websocket.drafts.Draft_76: byte[] createChallenge(java.lang.String,java.lang.String,byte[])>
		SHA-256: 21dd65c21329c3c4914331a2c56e1b4b96ac0985a86c9cd344ffef09af44758b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20743)
		Method: <com.squareup.okhttp.internal.Util: java.lang.String hash(java.lang.String)>
		SHA-256: 2a3f3da460aed01d81b67fd4b80a210f4b18c175088d9e5948272c5d91c22668
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r11.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r4, $r12)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: b6232ab4455b096bbc380e67e425400f639b173f62099cca0f8288ab688f0200
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <org.eclipse.jetty.util.security.CertificateUtils: java.security.KeyStore getKeyStore(java.io.InputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: c5ec6ccbae9f3d9d328e61ba742e0d201d1773bfaa584b78dc1339a7d179ed12
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.TrustManager[]
		Statement: $r10 = virtualinvoke $r8.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.TrustManager[] getTrustManagers(java.security.KeyStore,java.util.Collection)>
		SHA-256: bda6682f9855f1798f6ab26f475757bab959e404f0e5c16aa147e9e09907420c
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.ququplay.websocket.InsecureX509TrustManager: void <init>(java.security.KeyStore,boolean,boolean)>
		SHA-256: 2018c1c23b77659336dcf7cb514b3112094c18161bb7821a912ee702046eddec
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r4)
		Method: <com.github.ghetolay.jwamp.WampWebSocket: java.lang.String authSignature(java.lang.String,java.lang.String)>
		SHA-256: eb6f43634963faade318bd1d9c0b8d188560dc6321ee4900508461c3b56d2bb7
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r5, $r23)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: void doStart()>
		SHA-256: 36e42a542ab572665ab1a0b4cbf3ade7732cb9aae86fd8f94168f6fceafeaada
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer5140)
		Method: <com.lambdaworks.crypto.SCrypt: byte[] scryptJ(byte[],byte[],int,int,int,int)>
		SHA-256: 3214d9bd6817baef6fdab54625499825aa845dbf925652e259e47cfa94ac4a35
		Secure: false
	Object:
		Variable: varReplacer7950
		Type: java.lang.String
		Statement: specialinvoke r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer7950)
		Method: <it.greenaddress.cordova.BIP39: byte[] PRF(byte[],byte[])>
		SHA-256: 11a7e45b616abd8bcde0363d857db3a70cd7fd3c6b7c9161bb6247be44bbd558
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer4497)
		Method: <it.greenaddress.cordova.BIP38$4: void run()>
		SHA-256: a76b3aeb40410eedb1b911f54a9e82bc9aa18a439c0419f7c144ce77b367e47a
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.engines.RSABlindedEngine: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: 94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a
		Secure: true
	Object:
		Variable: $r30
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r30.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r21, $r23, $r17, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey: void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: fc5a46123419e9f79ead9c9fb083c0a1f80416372d9d7e25e5cd2ec7ec14cedc
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.cert.CertificateFactory
		Statement: $r3 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer21782)
		Method: <com.squareup.okhttp.HttpResponseCache$Entry: java.security.cert.Certificate[] readCertArray(com.squareup.okhttp.internal.StrictLineReader)>
		SHA-256: da4dc23720e5a72d00e50754b59eeb82429341dbd0606ebf676cc7148bef08c6
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>($r4)
		Method: <org.bouncycastle.crypto.encodings.PKCS1Encoding: byte[] encodeBlock(byte[],int,int)>
		SHA-256: 4819013ec02a19f964ac367c7eb8af224b504304e06aab9fd319e9eae6e83037
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r5)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: void doStart()>
		SHA-256: 1201909da498327af87ad7e04e0555c18f1f94fe3ea5bc520463398557161410
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r7.<javax.crypto.Mac: byte[] doFinal(byte[])>($r6)
		Method: <de.tavendo.autobahn.WampCraConnection: java.lang.String authSignature(java.lang.String,java.lang.String)>
		SHA-256: dd5b98e45f14c20cd5fff7aa89c3fcb799f931619d366ed55206c47237ca984c
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r6.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] generateSignature()>
		SHA-256: 4592a1112efe016717f1a082fb533912b14b56e7c526ed1d8074464b5c6b3921
		Secure: true
	Object:
		Variable: r4
		Type: byte[]
		Statement: virtualinvoke $r0.<javax.crypto.Mac: void doFinal(byte[],int)>(r4, varReplacer5217)
		Method: <com.lambdaworks.crypto.PBKDF: void pbkdf2(javax.crypto.Mac,byte[],int,byte[],int)>
		SHA-256: a0f8440665d652fe8d725164d22d4efb58702573b9824456c4913bb4bda1ad9d
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15961)
		Method: <com.bitsofproof.supernode.common.Hash: byte[] keyHash(byte[])>
		SHA-256: eb00a00d0dd5b6b5ef6759ab6ff0a83b7d768b3835e544a80b9e38ed18fbeb70
		Secure: true
	Object:
		Variable: $r9
		Type: javax.net.ssl.CertPathTrustManagerParameters
		Statement: specialinvoke $r9.<javax.net.ssl.CertPathTrustManagerParameters: void <init>(java.security.cert.CertPathParameters)>(r3)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.TrustManager[] getTrustManagers(java.security.KeyStore,java.util.Collection)>
		SHA-256: 7c1561656b7e66b21cc61b6049c624b4fd879b81c52b8b4a27d67a07d1c21927
		Secure: false
	Object:
		Variable: $r8
		Type: javax.net.ssl.SSLContext
		Statement: $r8 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10466)
		Method: <com.ququplay.websocket.CordovaClient: void <init>(java.net.URI,org.java_websocket.drafts.Draft,java.util.Map,org.json.JSONObject,org.apache.cordova.CallbackContext)>
		SHA-256: c36d24f94390c6e2abe9c4492d14ee2269be887b92cd9619652348ac636aae93
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <it.greenaddress.cordova.BIP39: byte[] PRF(byte[],byte[])>
		SHA-256: 3298c4ff721875d0e12e82317be81bc0ae982304696d77fb819ec1765d67800f
		Secure: false
	Object:
		Variable: $r8
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r8 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r4)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.TrustManager[] getTrustManagers(java.security.KeyStore,java.util.Collection)>
		SHA-256: 54da2c2876dbf287d03eef7b5d9732448e8a31278c4c714211213c1106b3a53c
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.engines.ElGamalEngine: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: cc0b332bb2ddc847ca308294e1c87841df1bdcc2359c6b4559abe498d8131c20
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.encodings.OAEPEncoding: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: 2927d56a192959dc3453ff63fb3830152d4c89781cce727cc1398f859f78edbf
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <org.java_websocket.drafts.Draft_10: java.lang.String generateFinalKey(java.lang.String)>
		SHA-256: fdc8b77f69a9cd65c5249c3b92ccd4be5eacebbcf4181e473999d82c8abe8e8c
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer15470)
		Method: <com.bitsofproof.supernode.wallet.KeyFormatter: com.bitsofproof.supernode.common.ECKeyPair parseBIP38NoEC(byte[],boolean)>
		SHA-256: 976693c5d9917b62babcbb848b348779ec787257e6fcff2b7f44fa9058944835
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9733)
		Method: <org.eclipse.jetty.websocket.WebSocketConnectionRFC6455: java.lang.String hashKey(java.lang.String)>
		SHA-256: 5c4cfa673f6fdb503a5e20ef7dbb0bf65b667d07c6ec0b46d2dfc09ac2349722
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.signers.ECNRSigner: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: 9280f6752b6e6221628d06f9d60b4341d2a16061cd2ae2c26b66d065728b8af7
		Secure: true
	Object:
		Variable: varReplacer12193
		Type: java.lang.String
		Statement: specialinvoke r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer12193)
		Method: <com.bitsofproof.supernode.wallet.KeyFormatter: byte[] bytesBIP38(com.bitsofproof.supernode.common.Key)>
		SHA-256: 24fd6211e014f9ea1c016d8b14e6688f13846f7f97170e7d88d01701bdef19dc
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <org.bouncycastle.crypto.signers.PSSSigner: byte[] generateSignature()>
		SHA-256: 7bb46be8410927887679833b3436133d228350583bc65057a371d925a6056b6c
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.signers.PSSSigner: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: c5c5cb9bec6c89f6dc02736158ef1a0d54025fad80cfb6f3cb224c7ec7320f20
		Secure: true
	Object:
		Variable: varReplacer5140
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer5140)
		Method: <com.lambdaworks.crypto.SCrypt: byte[] scryptJ(byte[],byte[],int,int,int,int)>
		SHA-256: 1ba8da3dfd9585e62b0af13785a0d5517f0fc4b594ba6ed5ab2d50b05761085d
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16953)
		Method: <org.java_websocket.drafts.Draft_10: java.lang.String generateFinalKey(java.lang.String)>
		SHA-256: 6934dc064129ed83ac1073ef27aef25e491adb7275605e739d144cc05ccc4fe1
		Secure: false
	Object:
		Variable: varReplacer19679
		Type: java.lang.String
		Statement: specialinvoke r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer19679)
		Method: <de.tavendo.autobahn.WampCraConnection: java.lang.String authSignature(java.lang.String,java.lang.String)>
		SHA-256: e3d57011dd931357ad01514d07f09ff19fe7e7a84a992914299726c8ff0a73ee
		Secure: false
	Object:
		Variable: $r14
		Type: javax.crypto.Cipher
		Statement: $r14 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer12179, varReplacer12180)
		Method: <com.bitsofproof.supernode.wallet.KeyFormatter: byte[] bytesBIP38(com.bitsofproof.supernode.common.Key)>
		SHA-256: 8447ca8e379babca03b3a685afb933c3c8c95866e909ec0767f8855addc0415f
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.signers.ECDSASigner: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: 15a17ef588bd5dd9ee400977479f85c58fcdc22fa11ae1e18eff26c65ec63bf1
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>($r2, $r3)
		Method: <org.eclipse.jetty.util.security.CertificateUtils: java.security.KeyStore getKeyStore(java.io.InputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: d45a75f3f5d414bc0f3a0fc4806a777b61ecada9bde97f4c8bc58eb21d2d4bac
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,java.lang.String)>
		SHA-256: 47bfb14a194fa34e90601dd0bcd280f97bec9c581610d4d5f8f0c7b1b87af55a
		Secure: false
	Object:
		Variable: r9
		Type: java.security.SecureRandom
		Statement: r9 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>($r5)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: void doStart()>
		SHA-256: 1d462fc682ad65105ea11dea2218d9f037862ffaa81737b1ccc1243c9e32bd6
		Secure: true
	Object:
		Variable: r0
		Type: org.bouncycastle.x509.ExtendedPKIXParameters
		Statement: specialinvoke r0.<java.security.cert.PKIXParameters: void <init>(java.util.Set)>($r1)
		Method: <org.bouncycastle.x509.ExtendedPKIXParameters: void <init>(java.util.Set)>
		SHA-256: bc4db4edf85d5095c872f763083d4cdd57eaf413157a98ff957c0439448eaca6
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2272)
		Method: <com.bitsofproof.supernode.common.Hash: byte[] hash(byte[],int,int)>
		SHA-256: fa75959a5be3cb88e2d00120073c765ff6001d1ebaed2e159bc04657bc185d11
		Secure: true
	Object:
		Variable: r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer19679)
		Method: <de.tavendo.autobahn.WampCraConnection: java.lang.String authSignature(java.lang.String,java.lang.String)>
		SHA-256: a64d76763a8ccff6b880079f031c87166ea30acaae254c9c2574c64fef3d7fa
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.signers.DSTU4145Signer: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: bb98eee2eb82fb2c71e59ff99dcc6ac412ba5d86e67e379f475f490796e58a35
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.bitsofproof.supernode.common.ECKeyPair: void <clinit>()>
		SHA-256: f51dc38dddc8a3306cf6087e9cb168587e27937eb3dce64b4a26d9e305a13f99
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.bitsofproof.supernode.common.Hash: byte[] keyHash(byte[])>
		SHA-256: a062928115255dcb118897eb52b95936618c39e96b14d3c4a7f16e7fae710756
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer7951)
		Method: <it.greenaddress.cordova.BIP39: byte[] PRF(byte[],byte[])>
		SHA-256: 15cb220d6cfa09517a426f6ee74ed67c1ff0d3d73470ac59edcf54aca470d580
		Secure: false
	Object:
		Variable: r0
		Type: org.bouncycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r2, $r3, $r4, $i0)
		Method: <org.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>
		SHA-256: b36d50207c12d926e435b859cb9848007d52f50b2e62c847e597de1f84f657c6
		Secure: true
	Object:
		Variable: r9
		Type: java.security.SecureRandom
		Statement: r9 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>($r5)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: void doStart()>
		SHA-256: 1d462fc682ad65105ea11dea2218d9f037862ffaa81737b1ccc1243c9e32bd6
		Secure: true
	Object:
		Variable: r3
		Type: byte[]
		Statement: $r2 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>(r3)
		Method: <org.java_websocket.drafts.Draft_76: byte[] createChallenge(java.lang.String,java.lang.String,byte[])>
		SHA-256: 546412718fe6a7b1fa9b8ee518fa43669138bb4368128e94648a4220b0c89d5c
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.TrustManager[]
		Statement: $r10 = virtualinvoke $r8.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.TrustManager[] getTrustManagers(java.security.KeyStore,java.util.Collection)>
		SHA-256: bda6682f9855f1798f6ab26f475757bab959e404f0e5c16aa147e9e09907420c
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: 6dae500fa4127477f702f7c8db5b65ac00e8420fed109375c053548083b8d090
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.pqc.crypto.gmss.GMSSSigner: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: 2dc8cd1c1fa7979cada7be8f8320f93342af2ff1963c7c499a3420b2b9545bfa
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.eclipse.jetty.websocket.WebSocketConnectionRFC6455: java.lang.String hashKey(java.lang.String)>
		SHA-256: a92e5fb54a9e23cec44a61babdd2e6d989bec74c53eef2b431fbf0b07e7145c9
		Secure: false
	Object:
		Variable: varReplacer15517
		Type: java.lang.String
		Statement: specialinvoke r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer15517)
		Method: <com.bitsofproof.supernode.wallet.KeyFormatter: com.bitsofproof.supernode.common.ECKeyPair parseBIP38EC(byte[],boolean,boolean)>
		SHA-256: 399688cdf518c2f7f664664f526ccbf1a07c212ebe09d01f1fa5aff5f9c80c9f
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)
		Method: <com.github.ghetolay.jwamp.WampWebSocket: java.lang.String authSignature(java.lang.String,java.lang.String)>
		SHA-256: a9efde69329d310b5279b5ff840d6114dd1b12addddd5672478efd2ee7e43a5d
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.bitsofproof.supernode.common.Hash: byte[] hash(byte[],int,int)>
		SHA-256: f7d1af14064ac0458528fd35e9a3fc768e4a7ee5fef51567f3c86d71b524dbc7
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer7950)
		Method: <it.greenaddress.cordova.BIP39: byte[] PRF(byte[],byte[])>
		SHA-256: 6397f9d412079d1a639db7d2a4d2785e90129b21e9a234e79ea09c144d1282b1
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.signers.ECGOST3410Signer: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: caabe0390e3d2386e10c04d6d72b0b44e335e1623efc6992e7ef060aaafe4388
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer15525, varReplacer15526)
		Method: <com.bitsofproof.supernode.wallet.KeyFormatter: com.bitsofproof.supernode.common.ECKeyPair parseBIP38EC(byte[],boolean,boolean)>
		SHA-256: 77a6a85822eaf06ffcb71caa9e11a838cec87c1c0171d2a19467df01ccb15c0a
		Secure: false
	Object:
		Variable: varReplacer11111
		Type: java.lang.String
		Statement: specialinvoke r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer11111)
		Method: <com.github.ghetolay.jwamp.WampWebSocket: java.lang.String authSignature(java.lang.String,java.lang.String)>
		SHA-256: 9452129f04811d7e9b673ff2438c1f711316d2833e5cae69893b933f2207d068
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: c908257ebef1e44e27421c3dc6127a4c79990e1515e273132ea2c2cb020fcdee
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.cert.CertificateFactory
		Statement: $r4 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer22862)
		Method: <org.eclipse.jetty.util.security.CertificateUtils: java.util.Collection loadCRL(java.lang.String)>
		SHA-256: 4c634be10f6a0dbfd3ec173f0e0eb19da66d16187ffb4e01c489984a9af7a632
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r8.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r4, $r9, $r10)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 780d8ed9245b878b95919a3d1d9f5b30065a116907fca525e3b9b6fb3db32c2e
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r5)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: void doStart()>
		SHA-256: 1201909da498327af87ad7e04e0555c18f1f94fe3ea5bc520463398557161410
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer5142)
		Method: <com.lambdaworks.crypto.SCrypt: byte[] scryptJ(byte[],byte[],int,int,int,int)>
		SHA-256: e245c5e0d2b77527fdcb2671184b30d35566dde6406ecf98490216256610150f
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.signers.GOST3410Signer: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: 61b7887e2cfe6269c9dc5ed1565a2d9c81d2ae6237d2a5bf20c73d26a54cd85c
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r11.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r4, $r12, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 17b4b930a4015277dc38236ece3f2b178712edf44398dea6b7f560110b300af0
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.pqc.crypto.rainbow.RainbowSigner: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: b0d1ba3da8064ca082b6ab923adae7a1f903b06296e62e14fc3b962758995d3f
		Secure: true
	Object:
		Variable: r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer4612)
		Method: <it.greenaddress.cordova.BIP38$3: void run()>
		SHA-256: 6b7890172b06368db2207ae0c872cbba738927381b54520ff49540d3c40b2a08
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer12193)
		Method: <com.bitsofproof.supernode.wallet.KeyFormatter: byte[] bytesBIP38(com.bitsofproof.supernode.common.Key)>
		SHA-256: 7b9cb4a6c15275e5f483192c0f0dc3f9543356808b743bfd4662f44493a0f9a9
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.squareup.okhttp.internal.Util: java.lang.String hash(java.lang.String)>
		SHA-256: 6384cc08f50833e68b46c16b560b399c28b52ece8e657000d93e3c63802d8562
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.JCEElGamalPublicKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: 2f96be90287037dd5aa521a81412c6567fe97ad3bdc0a3e0dd37cb2855cfb876
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r11.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r4, $r12)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: b6232ab4455b096bbc380e67e425400f639b173f62099cca0f8288ab688f0200
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.signers.DSASigner: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: 71587c8001c9c4cfb5eb3b36cf1bb7c68e59a9748c653f87dfd071a1ed0537e
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.JCEElGamalPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: 6b8822e70d4604e23c0ea07692bf2c9c1daaa36d64fb48b6df14aae465189041
		Secure: true
	Object:
		Variable: r3
		Type: java.security.cert.PKIXBuilderParameters
		Statement: specialinvoke r3.<java.security.cert.PKIXBuilderParameters: void <init>(java.security.KeyStore,java.security.cert.CertSelector)>($r1, $r5)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.TrustManager[] getTrustManagers(java.security.KeyStore,java.util.Collection)>
		SHA-256: 101a5f54b4da71464b1701ceadb5c013bb82b0281d59f84fc8107ac604a3f542
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.generators.ECKeyPairGenerator: void init(org.bouncycastle.crypto.KeyGenerationParameters)>
		SHA-256: b9c970d7ca75c43cb7258988e82963e870aab49d0877fadda916613732dffc1d
		Secure: true
	Object:
		Variable: $r27
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r27.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r22, $r14, $i1)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey: void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: b4dd7c1e2c823b4cc007413e349d8d3bd1a37b0ffb5cf19afb5358f9b106d105
		Secure: true
	Object:
		Variable: varReplacer4612
		Type: java.lang.String
		Statement: specialinvoke r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer4612)
		Method: <it.greenaddress.cordova.BIP38$3: void run()>
		SHA-256: a2720250ca71893f0a1b4b76d5fb760eab04738b9e70bca1e43b6991905072a4
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Mac
		Statement: $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)
		Method: <de.tavendo.autobahn.WampCraConnection: java.lang.String authSignature(java.lang.String,java.lang.String)>
		SHA-256: 38b150ebf1b38714eeca76618bf72c206034cae1d624a5cb493f4189dc36bce1
		Secure: false
	Object:
		Variable: varReplacer4497
		Type: java.lang.String
		Statement: specialinvoke r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer4497)
		Method: <it.greenaddress.cordova.BIP38$4: void run()>
		SHA-256: 91b60072a1e2a7e2d2390e174928320a3a58837c4da27a26b9458c70f1349073
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <it.greenaddress.cordova.BIP39: byte[] PRF(byte[],byte[])>
		SHA-256: a76f0ece3303a4c58c60abe4c34b9181814e7fe2368aafdd1baa17b51e9a58fb
		Secure: false
	Object:
		Variable: $r6
		Type: java.lang.Object[]
		Statement: $r6 = virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.KeyManager[] getKeyManagers(java.security.KeyStore)>
		SHA-256: 3d16222366f08f0d254b1d15641cbf9144ddc5fb00e2c66cf5562c697193dab1
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.encodings.PKCS1Encoding: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>(r3)
		Method: <org.java_websocket.drafts.Draft_76: byte[] createChallenge(java.lang.String,java.lang.String,byte[])>
		SHA-256: 592b7db3cea201bb6b7c8bb0696c75db8c70c2d21448cc61232def80b0829203
		Secure: false
	Object:
		Variable: $r25
		Type: java.security.cert.PKIXBuilderParameters
		Statement: specialinvoke $r25.<java.security.cert.PKIXBuilderParameters: void <init>(java.security.KeyStore,java.security.cert.CertSelector)>($r12, r3)
		Method: <org.eclipse.jetty.util.security.CertificateValidator: void validate(java.security.cert.Certificate[])>
		SHA-256: 2b2386f3d623c6b1e1d91a347d3b9c06da5c23fb74e1445829edcf5dd5650e63
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer15517)
		Method: <com.bitsofproof.supernode.wallet.KeyFormatter: com.bitsofproof.supernode.common.ECKeyPair parseBIP38EC(byte[],boolean,boolean)>
		SHA-256: 7b6f9c756c203d6fd530081db2c539c4596bc9bc36aca5fbe080f2804c323145
		Secure: false

Findings in Java Class: it.greenaddress.cordova.BIP38$4

	 in Method: void run()
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4514, r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #325f7f9dc757943f5cc5fd5feacc60660b40f28334ca0c2d5bbc3b5c81885977)
			First parameter (with value "AES/ECB/NoPadding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer4504, varReplacer4505)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #325f7f9dc757943f5cc5fd5feacc60660b40f28334ca0c2d5bbc3b5c81885977)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r3, varReplacer4515, varReplacer4516)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer4497)


Findings in Java Class: it.greenaddress.cordova.BIP38$3

	 in Method: void run()
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4606, r4)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #1241c409fafe41647c91c99a20cab9863376e589fea03875c2a816d7959dcb9d)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r5 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r5, varReplacer4621, varReplacer4622)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1241c409fafe41647c91c99a20cab9863376e589fea03875c2a816d7959dcb9d)
			First parameter (with value "AES/ECB/NoPadding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer4601, varReplacer4602)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer4612)


Findings in Java Class: com.lambdaworks.crypto.PBKDF

	 in Method: void pbkdf2(javax.crypto.Mac,byte[],int,byte[],int)
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #e245c5e0d2b77527fdcb2671184b30d35566dde6406ecf98490216256610150f)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void update(byte[])>(r4)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #e245c5e0d2b77527fdcb2671184b30d35566dde6406ecf98490216256610150f)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void update(byte[])>(r5)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e245c5e0d2b77527fdcb2671184b30d35566dde6406ecf98490216256610150f)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $i3 = virtualinvoke $r0.<javax.crypto.Mac: int getMacLength()>()


Findings in Java Class: com.lambdaworks.crypto.SCrypt

	 in Method: byte[] scryptJ(byte[],byte[],int,int,int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e245c5e0d2b77527fdcb2671184b30d35566dde6406ecf98490216256610150f)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: staticinvoke <com.lambdaworks.crypto.PBKDF: void pbkdf2(javax.crypto.Mac,byte[],int,byte[],int)>($r5, $r0, varReplacer5138, r4, $i3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer5140)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Mac: void init(java.security.Key)>($r7)


Findings in Java Class: com.facebook.internal.Utility

	 in Method: java.lang.String hashWithAlgorithm(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #efaca850412af8e15c119003b7216ec99a80de8702b013658d88a9dd7d3d062d)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #efaca850412af8e15c119003b7216ec99a80de8702b013658d88a9dd7d3d062d)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)


Findings in Java Class: org.eclipse.jetty.websocket.WebSocketConnectionRFC6455

	 in Method: java.lang.String hashKey(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5c4cfa673f6fdb503a5e20ef7dbb0bf65b667d07c6ec0b46d2dfc09ac2349722)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9733)


Findings in Java Class: com.ququplay.websocket.CordovaClient

	 in Method: void <init>(java.net.URI,org.java_websocket.drafts.Draft,java.util.Map,org.json.JSONObject,org.apache.cordova.CallbackContext)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #c36d24f94390c6e2abe9c4492d14ee2269be887b92cd9619652348ac636aae93)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r8 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10466)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer10474, $r16, varReplacer10474)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer10474, $r16, varReplacer10474)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer10474, $r16, varReplacer10474)


Findings in Java Class: com.bitsofproof.supernode.wallet.KeyFormatter

	 in Method: byte[] bytesBIP38(com.bitsofproof.supernode.common.Key)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer12193)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #8447ca8e379babca03b3a685afb933c3c8c95866e909ec0767f8855addc0415f)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r9 = virtualinvoke $r14.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r14.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer12187, r5)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8447ca8e379babca03b3a685afb933c3c8c95866e909ec0767f8855addc0415f)
			First parameter (with value "AES/ECB/NoPadding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r14 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer12179, varReplacer12180)


	 in Method: com.bitsofproof.supernode.common.ECKeyPair parseBIP38NoEC(byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer15470)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ce44210ba1d2a7c9dfb15bf39e9283982b625e055d3992ad3af5abfe4eef8c1a)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r1, varReplacer15468, varReplacer15469)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ce44210ba1d2a7c9dfb15bf39e9283982b625e055d3992ad3af5abfe4eef8c1a)
			First parameter (with value "AES/ECB/NoPadding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer15460, varReplacer15461)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer15462, r4)


	 in Method: com.bitsofproof.supernode.common.ECKeyPair parseBIP38EC(byte[],boolean,boolean)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #77a6a85822eaf06ffcb71caa9e11a838cec87c1c0171d2a19467df01ccb15c0a)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: r3 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r10)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer15533, r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #77a6a85822eaf06ffcb71caa9e11a838cec87c1c0171d2a19467df01ccb15c0a)
			First parameter (with value "AES/ECB/NoPadding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer15525, varReplacer15526)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer15517)


Findings in Java Class: org.java_websocket.drafts.Draft_76

	 in Method: byte[] createChallenge(java.lang.String,java.lang.String,byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #21dd65c21329c3c4914331a2c56e1b4b96ac0985a86c9cd344ffef09af44758b)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12982)


Findings in Java Class: org.java_websocket.drafts.Draft_10

	 in Method: java.lang.String generateFinalKey(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6934dc064129ed83ac1073ef27aef25e491adb7275605e739d144cc05ccc4fe1)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16953)


Findings in Java Class: com.squareup.okhttp.internal.Util

	 in Method: java.lang.String hash(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2a3f3da460aed01d81b67fd4b80a210f4b18c175088d9e5948272c5d91c22668)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20743)


Findings in Java Class: org.eclipse.jetty.io.nio.SelectorManager$SelectSet

	 in Method: void doSelect()
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #3db855a164a3e61c20e1472a6b39844bb720f7b4e6e5ffa20e203e2782bedcfb)
			Operation on object of type javax.net.ssl.SSLEngine object not completed. Expected call to clearPassword
			at statement: virtualinvoke $r6.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void schedule()>()

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #3db855a164a3e61c20e1472a6b39844bb720f7b4e6e5ffa20e203e2782bedcfb)
			Operation on object of type javax.net.ssl.SSLEngine object not completed. Expected call to clearPassword
			at statement: virtualinvoke $r6.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void schedule()>()

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #3db855a164a3e61c20e1472a6b39844bb720f7b4e6e5ffa20e203e2782bedcfb)
			Operation on object of type javax.net.ssl.SSLEngine object not completed. Expected call to clearPassword
			at statement: virtualinvoke $r6.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void schedule()>()

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #3db855a164a3e61c20e1472a6b39844bb720f7b4e6e5ffa20e203e2782bedcfb)
			Operation on object of type javax.net.ssl.SSLEngine object not completed. Expected call to clearPassword
			at statement: virtualinvoke $r6.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void schedule()>()

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #3db855a164a3e61c20e1472a6b39844bb720f7b4e6e5ffa20e203e2782bedcfb)
			Operation on object of type javax.net.ssl.SSLEngine object not completed. Expected call to clearPassword
			at statement: virtualinvoke $r6.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void schedule()>()

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #3db855a164a3e61c20e1472a6b39844bb720f7b4e6e5ffa20e203e2782bedcfb)
			Operation on object of type javax.net.ssl.SSLEngine object not completed. Expected call to clearPassword
			at statement: $r6 = (org.eclipse.jetty.io.nio.SelectChannelEndPoint) r5

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #3db855a164a3e61c20e1472a6b39844bb720f7b4e6e5ffa20e203e2782bedcfb)
			Operation on object of type javax.net.ssl.SSLEngine object not completed. Expected call to clearPassword
			at statement: virtualinvoke $r6.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void doUpdateKey()>()

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #3db855a164a3e61c20e1472a6b39844bb720f7b4e6e5ffa20e203e2782bedcfb)
			Operation on object of type javax.net.ssl.SSLEngine object not completed. Expected call to clearPassword
			at statement: virtualinvoke $r6.<org.eclipse.jetty.io.nio.SelectChannelEndPoint: void doUpdateKey()>()

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #3db855a164a3e61c20e1472a6b39844bb720f7b4e6e5ffa20e203e2782bedcfb)
			Operation on object of type javax.net.ssl.SSLEngine object not completed. Expected call to clearPassword
			at statement: virtualinvoke $r11.<java.nio.channels.SelectionKey: java.lang.Object attach(java.lang.Object)>($r6)


Findings in Java Class: org.eclipse.jetty.util.ssl.SslContextFactory

	 in Method: void doStart()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer21675, r6, r9)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #3db855a164a3e61c20e1472a6b39844bb720f7b4e6e5ffa20e203e2782bedcfb)
			Operation on object of type javax.net.ssl.SSLEngine object not completed. Expected call to clearPassword
			at statement: $r21 = virtualinvoke $r20.<javax.net.ssl.SSLEngine: java.lang.String[] getSupportedProtocols()>()

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #3db855a164a3e61c20e1472a6b39844bb720f7b4e6e5ffa20e203e2782bedcfb)
			Operation on object of type javax.net.ssl.SSLEngine object not completed. Expected call to clearPassword
			at statement: $r21 = virtualinvoke $r20.<javax.net.ssl.SSLEngine: java.lang.String[] getSupportedCipherSuites()>()

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer21675, r6, r9)


	 in Method: javax.net.ssl.KeyManager[] getKeyManagers(java.security.KeyStore)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #174b658ce53e81c07d4e54d6bfe910293f79c705d9b677b25a075a469d532229)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r5)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #174b658ce53e81c07d4e54d6bfe910293f79c705d9b677b25a075a469d532229)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r5)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r5)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #174b658ce53e81c07d4e54d6bfe910293f79c705d9b677b25a075a469d532229)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r5)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #174b658ce53e81c07d4e54d6bfe910293f79c705d9b677b25a075a469d532229)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r5)


	 in Method: javax.net.ssl.TrustManager[] getTrustManagers(java.security.KeyStore,java.util.Collection)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedManagerFactoryParameters
			at statement: virtualinvoke $r8.<javax.net.ssl.TrustManagerFactory: void init(javax.net.ssl.ManagerFactoryParameters)>($r9)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.CertPathTrustManagerParameters
			First parameter was not properly generated as generatedCertPathParameters
			at statement: specialinvoke $r9.<javax.net.ssl.CertPathTrustManagerParameters: void <init>(java.security.cert.CertPathParameters)>(r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r8.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r1)

		RequiredPredicateError violating CrySL rule for java.security.cert.PKIXBuilderParameters
			First parameter was not properly generated as generatedKeyStore
			at statement: specialinvoke r3.<java.security.cert.PKIXBuilderParameters: void <init>(java.security.KeyStore,java.security.cert.CertSelector)>($r1, $r5)


Findings in Java Class: com.squareup.okhttp.HttpResponseCache$Entry

	 in Method: java.security.cert.Certificate[] readCertArray(com.squareup.okhttp.internal.StrictLineReader)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #da4dc23720e5a72d00e50754b59eeb82429341dbd0606ebf676cc7148bef08c6)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r3 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer21782)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #da4dc23720e5a72d00e50754b59eeb82429341dbd0606ebf676cc7148bef08c6)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r8 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r7)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #da4dc23720e5a72d00e50754b59eeb82429341dbd0606ebf676cc7148bef08c6)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r8 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r7)


Findings in Java Class: org.eclipse.jetty.util.security.CertificateUtils

	 in Method: java.util.Collection loadCRL(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #4c634be10f6a0dbfd3ec173f0e0eb19da66d16187ffb4e01c489984a9af7a632)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate
			at statement: $r5 = virtualinvoke $r4.<java.security.cert.CertificateFactory: java.util.Collection generateCRLs(java.io.InputStream)>($r3)


	 in Method: java.security.KeyStore getKeyStore(java.io.InputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #d45a75f3f5d414bc0f3a0fc4806a777b61ecada9bde97f4c8bc58eb21d2d4bac)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r7.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r5, $r8)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #d45a75f3f5d414bc0f3a0fc4806a777b61ecada9bde97f4c8bc58eb21d2d4bac)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r7.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r5, $r8)


Findings in Java Class: org.bouncycastle.crypto.encodings.PKCS1Encoding

	 in Method: byte[] encodeBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i3 = virtualinvoke r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: int getInputBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i3 = virtualinvoke r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: int getInputBlockSize()>()

		TypestateError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Unexpected call to method nextBytes on object of type java.security.SecureRandom. Expect a call to one of the following methods init,getInstanceStrong,getInstance
			at statement: virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>($r4)


	 in Method: byte[] decodeBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i1 = virtualinvoke r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: int getOutputBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i1 = virtualinvoke r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: int getOutputBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i1 = interfaceinvoke $r2.<org.bouncycastle.crypto.AsymmetricBlockCipher: int getOutputBlockSize()>()


Findings in Java Class: org.bouncycastle.crypto.signers.ISO9796d2PSSSigner

	 in Method: void init(boolean,org.bouncycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r5.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>($z0, $r3)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r5.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>($z0, $r3)


Findings in Java Class: org.bouncycastle.crypto.encodings.ISO9796d1Encoding

	 in Method: void init(boolean,org.bouncycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r2.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>($z0, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r2.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>($z0, $r1)


Findings in Java Class: org.bouncycastle.crypto.signers.ISO9796d2Signer

	 in Method: void init(boolean,org.bouncycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r3.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>($z0, $r2)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r3.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>($z0, $r2)


Findings in Java Class: org.bouncycastle.crypto.signers.RSADigestSigner

	 in Method: void init(boolean,org.bouncycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r6.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>($z0, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r6.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>($z0, $r1)


Findings in Java Class: org.bouncycastle.crypto.signers.PSSSigner

	 in Method: void init(boolean,org.bouncycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r4.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>($z0, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r4.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>($z0, $r1)


Findings in Java Class: org.bouncycastle.crypto.encodings.OAEPEncoding

	 in Method: void init(boolean,org.bouncycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r4.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>($z0, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r4.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>($z0, $r1)


	 in Method: byte[] decodeBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r3 = specialinvoke r0.<org.bouncycastle.crypto.encodings.OAEPEncoding: byte[] maskGeneratorFunction1(byte[],int,int,int)>($r1, varReplacer26504, $i0, $i1)


Findings in Java Class: org.bouncycastle.crypto.signers.GenericSigner

	 in Method: void init(boolean,org.bouncycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r6.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>($z0, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r6.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>($z0, $r1)


Findings in Java Class: org.bouncycastle.crypto.tls.DefaultTlsEncryptionCredentials

	 in Method: byte[] decryptPreMasterSecret(byte[])
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r1 = virtualinvoke $r2.<org.bouncycastle.crypto.encodings.PKCS1Encoding: byte[] processBlock(byte[],int,int)>($r1, varReplacer25892, $i0)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r1 = virtualinvoke $r2.<org.bouncycastle.crypto.encodings.PKCS1Encoding: byte[] processBlock(byte[],int,int)>($r1, varReplacer25892, $i0)


Findings in Java Class: org.bouncycastle.crypto.tls.TlsRSAUtils

	 in Method: byte[] generateEncryptedPreMasterSecret(org.bouncycastle.crypto.tls.TlsContext,org.bouncycastle.crypto.params.RSAKeyParameters,java.io.OutputStream)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r9 = virtualinvoke $r6.<org.bouncycastle.crypto.encodings.PKCS1Encoding: byte[] processBlock(byte[],int,int)>($r3, varReplacer25110, $i0)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r9 = virtualinvoke $r6.<org.bouncycastle.crypto.encodings.PKCS1Encoding: byte[] processBlock(byte[],int,int)>($r3, varReplacer25110, $i0)


Findings in Java Class: org.bouncycastle.crypto.engines.ElGamalEngine

	 in Method: byte[] processBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.bouncycastle.crypto.engines.ElGamalEngine: int getInputBlockSize()>()


Findings in Java Class: org.bouncycastle.crypto.engines.NaccacheSternEngine

	 in Method: byte[] processBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i3 = virtualinvoke r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: int getInputBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i3 = virtualinvoke r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: int getInputBlockSize()>()


Findings in Java Class: de.tavendo.autobahn.WampCraConnection

	 in Method: java.lang.String authSignature(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer19679)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Mac: void init(java.security.Key)>(r5)


Findings in Java Class: it.greenaddress.cordova.BIP39

	 in Method: byte[] PRF(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer7950)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>(r3)


Findings in Java Class: com.ququplay.websocket.InsecureX509TrustManager

	 in Method: void <init>(java.security.KeyStore,boolean,boolean)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r1)


Findings in Java Class: com.github.ghetolay.jwamp.WampWebSocket

	 in Method: java.lang.String authSignature(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer11111)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Mac: void init(java.security.Key)>(r3)


Findings in Java Class: org.eclipse.jetty.util.security.CertificateValidator

	 in Method: void validate(java.security.cert.Certificate[])
		RequiredPredicateError violating CrySL rule for java.security.cert.PKIXBuilderParameters
			First parameter was not properly generated as generatedKeyStore
			at statement: specialinvoke $r25.<java.security.cert.PKIXBuilderParameters: void <init>(java.security.KeyStore,java.security.cert.CertSelector)>($r12, r3)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 101

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 12
	RequiredPredicateError: 30
	HardCodedError: 3
	NeverTypeOfError: 3
	TypestateError: 9
	IncompleteOperationError: 43
=====================================================================
