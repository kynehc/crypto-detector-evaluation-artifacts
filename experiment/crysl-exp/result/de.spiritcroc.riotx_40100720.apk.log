0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r17
		Type: byte[]
		Statement: $r17 = virtualinvoke $r25.<javax.crypto.Mac: byte[] doFinal(byte[])>($r15)
		Method: <org.matrix.android.sdk.internal.crypto.DefaultCryptoService$exportRoomKeys$3: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 968adc84ee74cdf05b8ea203a6d5598dcda0a69803e025c14a629df681500a2c
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer75445)
		Method: <kotlin.reflect.jvm.internal.impl.types.KotlinTypeKt: byte[] deriveKey(java.lang.String,java.lang.String,int,org.matrix.android.sdk.api.listeners.ProgressListener)>
		SHA-256: d73c77840cd9d9083665690fd40a1cac01a0c4dabc8217d898fa03e894345a77
		Secure: false
	Object:
		Variable: $r25
		Type: java.security.SecureRandom
		Statement: specialinvoke $r25.<java.security.SecureRandom: void <init>()>()
		Method: <org.matrix.android.sdk.internal.network.ssl.CertUtil: org.matrix.android.sdk.internal.network.ssl.CertUtil$PinnedSSLSocketFactory newPinnedSSLSocketFactory(org.matrix.android.sdk.api.auth.data.HomeServerConnectionConfig)>
		SHA-256: aa9993dad9865ff882b15447010d0955c7b17604b7eacc548672868caf7e14d1
		Secure: true
	Object:
		Variable: varReplacer109529
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer109529)
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: org.matrix.android.sdk.internal.crypto.attachments.EncryptionResult encryptAttachment(java.io.InputStream)>
		SHA-256: b62e2cbf990732f1e11a8539a90393646d0906e0c3333d665e63a8f43d073beb
		Secure: false
	Object:
		Variable: $r16
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r16.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r8)
		Method: <org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$getSecret$3: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 6186656c4951866d53c797df4b8b87a1f06dfa24f5ad77fbe5854e641904df54
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>($r5)
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: org.matrix.android.sdk.internal.crypto.attachments.EncryptionResult encryptAttachment(java.io.InputStream)>
		SHA-256: 26985171f72757da85248b06eb03b51d8b4d8fb336b0b5a07b2b41e6f79fc60
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer141603, $r3)
		Method: <org.matrix.android.sdk.internal.session.securestorage.SecretStoringUtils: java.lang.String decryptStringM(java.io.InputStream,java.lang.String)>
		SHA-256: 5100f90b26c157f5e02e4ce9ce575a19183579d14dc9dea6e54a9fd879154902
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 316cbc86e080130334eaabd60025d96084375d0058312a103cd3255ba6f0aeb
		Secure: false
	Object:
		Variable: $r16
		Type: byte[]
		Statement: virtualinvoke $r14.<java.security.SecureRandom: void nextBytes(byte[])>($r16)
		Method: <org.matrix.android.sdk.internal.crypto.DefaultCryptoService$exportRoomKeys$3: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 73889f3c83bda2990a6a052c7f39d12522186c5d01b000d9ec21c68973d19212
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer75967)
		Method: <org.matrix.android.sdk.internal.crypto.tools.HkdfSha256: byte[] deriveSecret(byte[],byte[],byte[],int)>
		SHA-256: c9a9f171eeb89de192424a733578a5df3312325b2277d913815c698a049bd02d
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: a729cfd5669df603070b7ba7d05b524b10a048ab1da974a5ccb1df973521b7d3
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer141610)
		Method: <org.matrix.android.sdk.internal.session.securestorage.SecretStoringUtils: java.lang.String decryptString(java.io.InputStream,java.lang.String)>
		SHA-256: f54bccc283a678163aaa6438ddd28b2b5e9bdb3931e818251352a84baec166a7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: c3dcfb07eabeaead2afa7b41e33d56187e303e14a7184c21b7bac99836f2c278
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer75965)
		Method: <org.matrix.android.sdk.internal.crypto.tools.HkdfSha256: byte[] deriveSecret(byte[],byte[],byte[],int)>
		SHA-256: 43c5900a5424f04d1fce8af6fab83ab59eceb815c0037fcd5bf1a9886e31fef4
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer141604)
		Method: <org.matrix.android.sdk.internal.session.securestorage.SecretStoringUtils: java.lang.String decryptStringM(java.io.InputStream,java.lang.String)>
		SHA-256: f51427b1309869b6f039d42f50113702cb6943a2183dcf0daf701ef130a51e50
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r8.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r7, $r4)
		Method: <org.matrix.android.sdk.internal.session.securestorage.SecretStoringUtils: byte[] rsaEncrypt(java.lang.String,byte[])>
		SHA-256: 1baeaa377ee3362e3573b1dcb1f44bbf08258cb8c0c5d9219f18bf091514f4f8
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r3)
		Method: <io.jsonwebtoken.impl.crypto.MacSigner: javax.crypto.Mac doGetMacInstance()>
		SHA-256: a1d1f1a96b2229cb8032249f276d2e6d47471c6890809e6db563b576e5d67a47
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r8.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r9, $r6)
		Method: <com.beautycoder.pflockscreen.security.PFSecurityUtilsOld: byte[] rsaDecrypt(byte[],java.lang.String)>
		SHA-256: d64eb59d89f86a505b1f3287689171b43d26d2296a8a5cebfb21f634ea852e5c
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer146703, $r3)
		Method: <com.beautycoder.pflockscreen.security.PFSecurityUtilsOld: byte[] rsaEncrypt(android.content.Context,byte[],java.lang.String)>
		SHA-256: 94e7e307c541447201fd03c27390b8f0249bf66f259e422615f2681de42f949b
		Secure: false
	Object:
		Variable: varReplacer75967
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer75967)
		Method: <org.matrix.android.sdk.internal.crypto.tools.HkdfSha256: byte[] deriveSecret(byte[],byte[],byte[],int)>
		SHA-256: cab15913aa3ff52daefeb948ed40bb4fe88de1b328a647b504a2fce506fbb686
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, varReplacer73785)
		Method: <org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$getSecret$3: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: dea1902e843c34d0ecc7807daae5673322c0ee8b8515c1c2649d98d4adf5cbdf
		Secure: false
	Object:
		Variable: $r25
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r25.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r18)
		Method: <org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$storeSecret$2: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 55cb36c3dd7a1f77baeccbdcb22982baaa993c8537fa600e35e3b7724af35b30
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer158469, $r2)
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: db8d3f7400f4d59779e89fcd685c2a4d64d71409b86c320c898a622b9152af17
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.matrix.android.sdk.internal.database.RealmKeysUtils: void <init>(android.content.Context,org.matrix.android.sdk.internal.session.securestorage.SecretStoringUtils)>
		SHA-256: 2528f1dadf777a8c774cd1f2b9fad30cabe3932a0fb68849f0953683e1220305
		Secure: true
	Object:
		Variable: $r16
		Type: javax.crypto.Mac
		Statement: $r16 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer71711)
		Method: <org.matrix.android.sdk.internal.crypto.DefaultCryptoService$importRoomKeys$2: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: bbea8fe11259108c2714e88831cdf3f480ac0537da9a56a092524219eb791da7
		Secure: false
	Object:
		Variable: $r15
		Type: byte[]
		Statement: virtualinvoke $r14.<java.security.SecureRandom: void nextBytes(byte[])>($r15)
		Method: <org.matrix.android.sdk.internal.crypto.DefaultCryptoService$exportRoomKeys$3: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 95883b5d5113bacfabed609252739f1681799efc74f235e57439b9458f4223f8
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer107354)
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: boolean decryptAttachment(java.io.InputStream,org.matrix.android.sdk.internal.crypto.attachments.ElementToDecrypt,java.io.OutputStream)>
		SHA-256: 9795a2ac886caf910ae3f354d21f5d356d852cfc8961bfff73a70642dab51176
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: org.matrix.android.sdk.internal.crypto.attachments.EncryptionResult encryptAttachment(java.io.InputStream)>
		SHA-256: f4d5303339da14f43289fcf9bb18535e05a8ecfc64372119fba6cd1c656fe0bc
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <okio.SegmentedByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: 9d21c3f9e3f612ea7264d21dc14a8967f32993fff60292ad252f8676282c7571
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 84f17b7e3930c76e2b174d27b9668ee8d3209ae5512e2c539d541e6ef4265515
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer141611, $r6)
		Method: <org.matrix.android.sdk.internal.session.securestorage.SecretStoringUtils: java.lang.String decryptString(java.io.InputStream,java.lang.String)>
		SHA-256: fdd430439e95dcc8a489f9b5b956d51e7cba18b324d1cac9b12ebfc144f0759c
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer75966)
		Method: <org.matrix.android.sdk.internal.crypto.tools.HkdfSha256: byte[] deriveSecret(byte[],byte[],byte[],int)>
		SHA-256: b679aa506e9e873316db5384601d7bbf779868ad5bb7163de1f996739c1fef16
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.cert.CertificateFactory
		Statement: $r2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer190352)
		Method: <com.dropbox.core.http.SSLConfig: void loadKeyStore(java.security.KeyStore,java.io.InputStream)>
		SHA-256: f2f2ace97466e6c59c848e4819133539d1f0e339d3ae6fe6c50e0c20aa9e2f13
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.TrustManager[]
		Statement: $r9 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.matrix.android.sdk.internal.network.ssl.CertUtil: org.matrix.android.sdk.internal.network.ssl.CertUtil$PinnedSSLSocketFactory newPinnedSSLSocketFactory(org.matrix.android.sdk.api.auth.data.HomeServerConnectionConfig)>
		SHA-256: 47525b3ff94f350d23bee651cbb457404b188a1081acc6d720ec5d845041a4d6
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.matrix.android.sdk.internal.network.ssl.TLSSocketFactory: void <init>(javax.net.ssl.TrustManager[],java.util.List)>
		SHA-256: c5c961a5cce10d649c3ddb802daec8e77a0892b2d62a96f7d9a0ecd599c11d50
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer117249)
		Method: <org.matrix.android.sdk.internal.network.ssl.TLSSocketFactory: void <init>(javax.net.ssl.TrustManager[],java.util.List)>
		SHA-256: f5c729d72c6c2e112ab1f9ea307805fe64c9094980a16f65e4d1f55ebbce89cc
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <okio.ByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: 9f3ba3dd35bfd88a8457060cd59e6e65af87cbea3e5170b1e5d11a5dc2171423
		Secure: false
	Object:
		Variable: $r24
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r24.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r19, varReplacer75033)
		Method: <org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$storeSecret$2: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 380aa41ca7d570405ac984c30134a369e24c4f301b9d44c037e28bbfbb0ade45
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer107328)
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: boolean decryptAttachment(java.io.InputStream,org.matrix.android.sdk.internal.crypto.attachments.ElementToDecrypt,java.io.OutputStream)>
		SHA-256: 3ed91f82ac9379eebd8eba016bb44f4eb49b51d2c3dda80f6a192ce0e948fc4d
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer153958)
		Method: <org.matrix.android.sdk.internal.session.securestorage.SecretStoringUtils: byte[] rsaDecrypt(java.lang.String,java.io.InputStream)>
		SHA-256: ef3f6dadd0f368221b14d2f81e4b7bf90709815d354a41039857e282c41c11e0
		Secure: false
	Object:
		Variable: $r15
		Type: javax.crypto.Cipher
		Statement: $r15 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer73786)
		Method: <org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$getSecret$3: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 912cbf6319233e4370b03e88914f2c05605adc7259154ad54ee3439573ce6e75
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: boolean decryptAttachment(java.io.InputStream,org.matrix.android.sdk.internal.crypto.attachments.ElementToDecrypt,java.io.OutputStream)>
		SHA-256: 70cd19a58c514e8797a1f9f685c794141f2ec03c743dcc16a520204c1991a1bb
		Secure: false
	Object:
		Variable: $r19
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r20, varReplacer71921)
		Method: <org.matrix.android.sdk.internal.crypto.DefaultCryptoService$exportRoomKeys$3: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 86fcbcfa3b89d1ca048a29272cd41ff63736438b040dc3478ef420e3dd4dc0d2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.SegmentedByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: 6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: org.matrix.android.sdk.internal.crypto.model.rest.EncryptedFileInfo encrypt(java.io.InputStream,java.io.File,kotlin.jvm.functions.Function2)>
		SHA-256: f7b2c0ad829755f9f5754696eac79611eb9d0e50599ac13bb9ce051ecdcf7bb9
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer137368)
		Method: <org.matrix.android.sdk.internal.session.securestorage.DefaultSecureStorageService: java.lang.Object loadSecureSecret(java.io.InputStream,java.lang.String)>
		SHA-256: 195a2afadd1b119cb637536475108a8b255792fd2852ad56310a37eaaae402ea
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.SSLContext
		Statement: $r17 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer81254)
		Method: <org.matrix.android.sdk.internal.network.ssl.CertUtil: org.matrix.android.sdk.internal.network.ssl.CertUtil$PinnedSSLSocketFactory newPinnedSSLSocketFactory(org.matrix.android.sdk.api.auth.data.HomeServerConnectionConfig)>
		SHA-256: 2a0761e3ea768f30af20104c7f4f9313b680653fed920d56f5c16fadbd3110ed
		Secure: false
	Object:
		Variable: $r19
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r17, varReplacer137367)
		Method: <org.matrix.android.sdk.internal.session.securestorage.DefaultSecureStorageService: java.lang.Object loadSecureSecret(java.io.InputStream,java.lang.String)>
		SHA-256: bc11e1c440de30446e0e7c62d595330fa89dc1f181aa6556665054348332a0d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer87244)
		Method: <com.facebook.cache.common.CacheKeyUtil: java.lang.String secureHashKey(com.facebook.cache.common.CacheKey)>
		SHA-256: 3cd6970b88beec4e3f0842927c97ce079074d450a4a15edcfd496c2738706635
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.bson.types.ObjectId: void <clinit>()>
		SHA-256: a346c1ce2497e0f2dff2c4f0eddc971b17bb523960b0ca5b48d250d4b7490939
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer109536)
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: org.matrix.android.sdk.internal.crypto.attachments.EncryptionResult encryptAttachment(java.io.InputStream)>
		SHA-256: 2eaa93dbac61380531feb3011d5c74409d9ab288c2e3abbf2b1e5066f9087aa7
		Secure: false
	Object:
		Variable: $r19
		Type: byte[]
		Statement: $r19 = virtualinvoke $r26.<javax.crypto.Mac: byte[] doFinal(byte[])>($r21)
		Method: <org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$storeSecret$2: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 1bff406008cf137b8d8243aa6150f0113cf1c40e92a1e2e258f819182d9f53f9
		Secure: false
	Object:
		Variable: varReplacer75966
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer75966)
		Method: <org.matrix.android.sdk.internal.crypto.tools.HkdfSha256: byte[] deriveSecret(byte[],byte[],byte[],int)>
		SHA-256: 74f0be28c6be57a9713da77fc41bb05c34300ad01e61344f342254093f32c875
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <org.matrix.android.sdk.internal.crypto.tools.HkdfSha256: byte[] deriveSecret(byte[],byte[],byte[],int)>
		SHA-256: 1bb5b615b5941af68063d343b5586fa665c712fc08e8e6f2aaaa4ba831688ec6
		Secure: false
	Object:
		Variable: varReplacer73785
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, varReplacer73785)
		Method: <org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$getSecret$3: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: a63b4f0b193d79c0e20ca92602e4e43c14a52d598a400d78dfb589f0c358727d
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r9.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r2, $r7)
		Method: <org.matrix.android.sdk.internal.session.securestorage.DefaultSecureStorageService: java.lang.Object loadSecureSecret(java.io.InputStream,java.lang.String)>
		SHA-256: d585171a7aa24d4b3d52fd62f5cd42ddc2909b94cdc077d8ab0c68ea228e8250
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <org.matrix.android.sdk.internal.crypto.tools.HkdfSha256: byte[] deriveSecret(byte[],byte[],byte[],int)>
		SHA-256: fe0e07206ed6fdfefd4292c64a8558bb9a82176425c5780003e754e9fc01eeaf
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r17.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r12)
		Method: <com.beautycoder.pflockscreen.security.PFSecurityUtils: javax.crypto.Cipher getEncodeCipher(android.content.Context,java.lang.String,boolean)>
		SHA-256: 521c63ce9f15d4fc6bc8fa8c1b1caa9261bac0b89e17d2248ac10115ef5f5e3c
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r16.<javax.crypto.Mac: byte[] doFinal(byte[])>($r11)
		Method: <org.matrix.android.sdk.internal.crypto.DefaultCryptoService$importRoomKeys$2: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: eb29b93a34ef102f36903b74df48c1c844377d093bbed459ff2f6c7f4c85c2f7
		Secure: false
	Object:
		Variable: $r23
		Type: javax.crypto.Cipher
		Statement: $r23 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer75035)
		Method: <org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$storeSecret$2: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 86d3c47bb3beac233d299fd6cdb9618ee6488cc479e5782cd0d44ff0a6565e24
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer109529)
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: org.matrix.android.sdk.internal.crypto.attachments.EncryptionResult encryptAttachment(java.io.InputStream)>
		SHA-256: 462ef3bb7b80c5f170f1ac85e672dadfc86702d25cc92db18dc0bbf7695c5f8
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.tapadoo.alerter.R$layout: java.lang.String generateSharedSecretV2()>
		SHA-256: e483500ea61f8e29034a58bc3af11f3b8e7a5168660abd86475a5a44eed86554
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.matrix.android.sdk.internal.network.ssl.CertUtil: byte[] generateFingerprint(java.security.cert.X509Certificate,java.lang.String)>
		SHA-256: dbdc3faae145a70b44a2dac19337306525e68156798f82829dee83f5217fd2c5
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.SecureRandom
		Statement: specialinvoke $r14.<java.security.SecureRandom: void <init>()>()
		Method: <org.matrix.android.sdk.internal.crypto.DefaultCryptoService$exportRoomKeys$3: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 1767f29150072d6ff30265132e8871c2510a891fe453080f32d0033f5a7089d3
		Secure: true
	Object:
		Variable: $r19
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r17, varReplacer71896)
		Method: <org.matrix.android.sdk.internal.crypto.DefaultCryptoService$exportRoomKeys$3: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: a46ad6a7bd2fbf1a2a13afb72fa01e087eb9d036293d980de434b47b70a18aa1
		Secure: false
	Object:
		Variable: $r18
		Type: byte[]
		Statement: virtualinvoke $r22.<java.security.SecureRandom: void nextBytes(byte[])>($r18)
		Method: <org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$storeSecret$2: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 767885086cb419e9e8045f8ca513f06aeffaa68ef39217da58542510dd043bb6
		Secure: true
	Object:
		Variable: $r14
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r14.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r11, $r8)
		Method: <com.beautycoder.pflockscreen.security.PFSecurityUtilsOld: byte[] rsaEncrypt(android.content.Context,byte[],java.lang.String)>
		SHA-256: f1f5f244973f21ed33a31102783c075f8abadc14d36b07b329f5d107574613f8
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.Signature: byte[] sign()>()
		Method: <io.jsonwebtoken.impl.crypto.RsaSigner: byte[] doSign(byte[])>
		SHA-256: 98f07673a5eb06121abff36bf0c3b12a7dbc2d4e321f0ed06df14792992e8580
		Secure: false
	Object:
		Variable: $r29
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r29.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r14, varReplacer71687)
		Method: <org.matrix.android.sdk.internal.crypto.DefaultCryptoService$importRoomKeys$2: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: f0cb9c55828f9f93ae3822ac0d2dba7481752c2ee0aab941207a02e764ededc4
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.dropbox.core.http.SSLConfig: void <clinit>()>
		SHA-256: 9caeebec05de5f90983fc8f83a60c9087e835e18652a437b0e01df438fbceab3
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.cache.common.CacheKeyUtil: java.lang.String secureHashKey(com.facebook.cache.common.CacheKey)>
		SHA-256: fdce5d9d2c3b3cc5e3df1625cef9c8c27bca84b45c918db93367aaf87964e5b9
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 15a76129680a3cd57380001c355c828c5afc3ba9ce32fff65b352ff3390bbd6
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r9.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r1, $r7)
		Method: <org.matrix.android.sdk.internal.session.securestorage.DefaultSecureStorageService: java.lang.Object loadSecureSecret(java.io.InputStream,java.lang.String)>
		SHA-256: ffcba1c23e7251bc9430a5499eb342ddc6e99d37c8b7a2bfd2ab225ff0ad7365
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 1027fce20723454b26980f38c5edb26bcec19bffa5b6443c75459b577c51d460
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <io.jsonwebtoken.impl.crypto.SignatureProvider: java.security.Signature getSignatureInstance()>
		SHA-256: 5245505faa1caa67a21a8f77bf7afcdbd914eeb8cbdcc06c6e02f21254765066
		Secure: false
	Object:
		Variable: $r25
		Type: javax.crypto.Mac
		Statement: $r25 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer71922)
		Method: <org.matrix.android.sdk.internal.crypto.DefaultCryptoService$exportRoomKeys$3: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: caa3d5e13326caa1ffb2488c7a8081712fc6c31fd6df0c7294fd05a7815748f6
		Secure: false
	Object:
		Variable: $r16
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r16.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r9, $r7)
		Method: <org.matrix.android.sdk.internal.session.securestorage.DefaultSecureStorageService: void securelyStoreObject(java.lang.Object,java.lang.String,java.io.OutputStream)>
		SHA-256: f43f042276a22abce42f6dfd0a6cdb00bbf1954f3f23157cf1cae640e607133a
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer108792)
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: org.matrix.android.sdk.internal.crypto.model.rest.EncryptedFileInfo encrypt(java.io.InputStream,java.io.File,kotlin.jvm.functions.Function2)>
		SHA-256: 81ac2d9fd039d2836b42d99441941f04dfeb0b1f898788fc27e30518120336d7
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyPairGenerator
		Statement: $r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer162477, varReplacer162478)
		Method: <com.beautycoder.pflockscreen.security.PFSecurityUtils: boolean generateKey1(java.lang.String,boolean)>
		SHA-256: 9dd9426beeed752d07f7ff6d6939c54c46d1db4ba49f62e02c8e49a1e5b83ab1
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer137369)
		Method: <org.matrix.android.sdk.internal.session.securestorage.DefaultSecureStorageService: java.lang.Object loadSecureSecret(java.io.InputStream,java.lang.String)>
		SHA-256: 8a4cfd586ae14de4b2ad303ed244670a6c23f0c0fe66478207d8002afeab7229
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.KeyGenerator
		Statement: $r6 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer141617, varReplacer141618)
		Method: <org.matrix.android.sdk.internal.session.securestorage.SecretStoringUtils: javax.crypto.SecretKey getOrGenerateSymmetricKeyForAliasM(java.lang.String)>
		SHA-256: 709f1ec0f791320dade2e9eb1a64016a185a76f76d40a80a7f6db15f484a3715
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r6.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r2, $r4)
		Method: <org.matrix.android.sdk.internal.session.securestorage.SecretStoringUtils: byte[] rsaDecrypt(java.lang.String,java.io.InputStream)>
		SHA-256: dce6ed9b5c8f1c52a8518ed18db2f23d95bc0fb84a78a17d98fc7e89d2ee69c4
		Secure: true
	Object:
		Variable: varReplacer108792
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer108792)
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: org.matrix.android.sdk.internal.crypto.model.rest.EncryptedFileInfo encrypt(java.io.InputStream,java.io.File,kotlin.jvm.functions.Function2)>
		SHA-256: bb5296033d1b148b8139f5c3a68631eb5c2e42e7142e1a76652943367367cbd9
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer158476, $r2)
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 65346f38b87f1c9dde29f80f9dbd1909d1254084115f9bbe607b907b6a120028
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: virtualinvoke $r3.<javax.crypto.Mac: void doFinal(byte[],int)>($r7, varReplacer75442)
		Method: <kotlin.reflect.jvm.internal.impl.types.KotlinTypeKt: byte[] deriveKey(java.lang.String,java.lang.String,int,org.matrix.android.sdk.api.listeners.ProgressListener)>
		SHA-256: fcb1532ed94797f7054ee659b025ce8f8b67f2826370637a3f2d894d883e59c3
		Secure: false
	Object:
		Variable: varReplacer141610
		Type: java.lang.String
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer141610)
		Method: <org.matrix.android.sdk.internal.session.securestorage.SecretStoringUtils: java.lang.String decryptString(java.io.InputStream,java.lang.String)>
		SHA-256: 899d446439886ab7a4c6d47fa05f3e0b3defafaf1b6b4b3409b4ba0adfbbd739
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer146372)
		Method: <com.beautycoder.pflockscreen.security.PFSecurityUtils: javax.crypto.Cipher getCipherInstance()>
		SHA-256: bcc755dc790842f480c0447e501efda50cb3edf6bc5adc3364ab2c057af02b24
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyPairGenerator
		Statement: $r5 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer162483, varReplacer162484)
		Method: <com.beautycoder.pflockscreen.security.PFSecurityUtilsOld: boolean generateKey(android.content.Context,java.lang.String,boolean)>
		SHA-256: 9526c82f735f1accde605491de8fd919becf1d48d00b50496684cfbe8dbd3a2b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer75688)
		Method: <org.matrix.android.sdk.internal.crypto.MXMegolmExportEncryption: byte[] deriveKeys(byte[],int,java.lang.String)>
		SHA-256: 386aa2ef5d079211f1a599b85f9e1947b4cebdab1d227226f3353877abec20c8
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer108810)
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: org.matrix.android.sdk.internal.crypto.model.rest.EncryptedFileInfo encrypt(java.io.InputStream,java.io.File,kotlin.jvm.functions.Function2)>
		SHA-256: f0b12cd963ace2f59d2e901bd0b20227bf0e87f79ec7d774c496933ecd9d5ff1
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <io.jsonwebtoken.impl.crypto.SignatureProvider: void <clinit>()>
		SHA-256: d777e14eab337e09fad46d648071f974b3d06ed5ddbe27d0fbb553277a45c475
		Secure: true
	Object:
		Variable: varReplacer127627
		Type: java.lang.String
		Statement: specialinvoke $r15.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer127627)
		Method: <org.matrix.android.sdk.internal.session.securestorage.DefaultSecureStorageService: void securelyStoreObject(java.lang.Object,java.lang.String,java.io.OutputStream)>
		SHA-256: 64f0f20e09659fec90e70da36c0b9d37d8c6987280745bd5014d5f30c2a2ff28
		Secure: false
	Object:
		Variable: varReplacer71896
		Type: java.lang.String
		Statement: specialinvoke $r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r17, varReplacer71896)
		Method: <org.matrix.android.sdk.internal.crypto.DefaultCryptoService$exportRoomKeys$3: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 1cb536aa12f256e06beec8e832a80ee36a65d7a10b5edd123148e4a615c8068c
		Secure: false
	Object:
		Variable: varReplacer137367
		Type: java.lang.String
		Statement: specialinvoke $r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r17, varReplacer137367)
		Method: <org.matrix.android.sdk.internal.session.securestorage.DefaultSecureStorageService: java.lang.Object loadSecureSecret(java.io.InputStream,java.lang.String)>
		SHA-256: 3a482e1a35e973578e8af2fba2f413c96a6225eeb263f4fbf2af50575fd12812
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r13.<javax.crypto.Mac: byte[] doFinal(byte[])>($r12)
		Method: <org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$getSecret$3: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: c995f0a9d5b21af2a7b25dc79f2b55743c86fa8a9e62528d1f9ca1ba77a8e998
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer75444)
		Method: <kotlin.reflect.jvm.internal.impl.types.KotlinTypeKt: byte[] deriveKey(java.lang.String,java.lang.String,int,org.matrix.android.sdk.api.listeners.ProgressListener)>
		SHA-256: 8d3cf998cbafe763231007bf9ab6665f87ec3dfea01be630b2c360803943dc97
		Secure: false
	Object:
		Variable: $r18
		Type: javax.crypto.spec.OAEPParameterSpec
		Statement: specialinvoke $r18.<javax.crypto.spec.OAEPParameterSpec: void <init>(java.lang.String,java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.spec.PSource)>(varReplacer146697, varReplacer146698, $r1, $r2)
		Method: <com.beautycoder.pflockscreen.security.PFSecurityUtils: javax.crypto.Cipher getEncodeCipher(android.content.Context,java.lang.String,boolean)>
		SHA-256: 982c29faee9fd974ad6887aed3346ef3523cb9054cba8775bf3243cf5a643d06
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <org.matrix.android.sdk.internal.network.ssl.CertUtil: byte[] generateFingerprint(java.security.cert.X509Certificate,java.lang.String)>
		SHA-256: c6af2a6ee60a41e6ded0c34a6a7cd00665ab50bafc701fdd2e26e6dc56c5ee32
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 5fb6984969c8c0f60ee84399ef18a49aa63648c889757c4080685ad119ecd903
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <com.tapadoo.alerter.R$layout: java.lang.String generateSharedSecretV2()>
		SHA-256: 355f072882b984e7a53c9d5d4a865d7dc8d5677dc599f6fbcaf00071335e841f
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <io.jsonwebtoken.impl.crypto.MacSigner: byte[] sign(byte[])>
		SHA-256: fb9b5309c47033cd7609de1d4dabb9acd46aaea0d84eb6f36565412c8a88ab30
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer73784)
		Method: <org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$getSecret$3: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: c52225836ad0e152fe560b3fc40cb3d88325fdb5ad6c4ddd44d841beb84ff3fd
		Secure: false
	Object:
		Variable: $r15
		Type: byte[]
		Statement: $r17 = virtualinvoke $r25.<javax.crypto.Mac: byte[] doFinal(byte[])>($r15)
		Method: <org.matrix.android.sdk.internal.crypto.DefaultCryptoService$exportRoomKeys$3: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 65435b7945f032562c88ef4fbefe480560625baff139a0dd9d0875bf49ce4ae4
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>($r5)
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: org.matrix.android.sdk.internal.crypto.model.rest.EncryptedFileInfo encrypt(java.io.InputStream,java.io.File,kotlin.jvm.functions.Function2)>
		SHA-256: e93c64f06de4a7d4726d480a2a46ded607167339d63751b900e69c1505186f34
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer81258)
		Method: <org.matrix.android.sdk.internal.network.ssl.CertUtil: org.matrix.android.sdk.internal.network.ssl.CertUtil$PinnedSSLSocketFactory newPinnedSSLSocketFactory(org.matrix.android.sdk.api.auth.data.HomeServerConnectionConfig)>
		SHA-256: 44f8ee8946c8efa7e0b86d4d9ef07e5eb393b9c5f47e675f5f50fc4084ab11d
		Secure: false
	Object:
		Variable: $r17
		Type: javax.crypto.Cipher
		Statement: $r17 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer71698)
		Method: <org.matrix.android.sdk.internal.crypto.DefaultCryptoService$importRoomKeys$2: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 4a7d11a1d2e326b3f3f02178b08cd7db7357c57dff775315499bd16f77622ef8
		Secure: false
	Object:
		Variable: $r30
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r30.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <org.matrix.android.sdk.internal.crypto.DefaultCryptoService$importRoomKeys$2: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 46d7a7558e761885a9b63a68703f82170e97226b11a306ea46b9e22a8e0c9c05
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyFactory
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r4)
		Method: <com.beautycoder.pflockscreen.security.PFSecurityUtils: javax.crypto.Cipher getEncodeCipher(android.content.Context,java.lang.String,boolean)>
		SHA-256: 85f4440e0d30690858c2d3f6c60a960fc8ca32f6c3d550d84dacf42737e7714a
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer141621)
		Method: <org.matrix.android.sdk.internal.session.securestorage.SecretStoringUtils: byte[] rsaEncrypt(java.lang.String,byte[])>
		SHA-256: 12bc307cf25d10f9f1bbdee0e9cc70f2a304eba0675c6cf58f04de9181c9ff8d
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Key
		Statement: $r4 = virtualinvoke $r3.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r2, varReplacer146375)
		Method: <com.beautycoder.pflockscreen.security.PFSecurityUtils: void initDecodeCipher(javax.crypto.Cipher,java.lang.String)>
		SHA-256: 12b8af94aa5518a28d792b088ec476f803dbbc2e04b81f07245223c0c8c67dcd
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer127628)
		Method: <org.matrix.android.sdk.internal.session.securestorage.DefaultSecureStorageService: void securelyStoreObject(java.lang.Object,java.lang.String,java.io.OutputStream)>
		SHA-256: 3d589ee4b3852fbc63b18437760f60a069ba89a725d3b0301ffe108b94fd4b94
		Secure: true
	Object:
		Variable: $r15
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r15.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer127627)
		Method: <org.matrix.android.sdk.internal.session.securestorage.DefaultSecureStorageService: void securelyStoreObject(java.lang.Object,java.lang.String,java.io.OutputStream)>
		SHA-256: 1fe606080d9e8ea1b5ed93572b15cb342916f3fd02c4dd71cf4c4019da524914
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: virtualinvoke $r2.<javax.crypto.Mac: void doFinal(byte[],int)>($r6, varReplacer75690)
		Method: <org.matrix.android.sdk.internal.crypto.MXMegolmExportEncryption: byte[] deriveKeys(byte[],int,java.lang.String)>
		SHA-256: 7445faec156f4d520de3ca1902f32cd23c37a8a98718baedeb5481450f8a1d74
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r1.<java.security.SecureRandom: int nextInt(int)>(varReplacer106026)
		Method: <org.bson.types.ObjectId: void <clinit>()>
		SHA-256: 59ee2e9905c353a51104d460017da5068a4a24d55602a928266a72e326511b55
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.Mac
		Statement: $r13 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer73792)
		Method: <org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$getSecret$3: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: ce410978cf37ae0fdf6055c3ed8db4cb790f4875edcb513fee80f860d037168c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: ea0840b94e95f767ea25aa35611d3fdb379cdb84c49be399c4ff7525b48fb7fc
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.stetho.websocket.WebSocketHandler: java.lang.String generateServerKey(java.lang.String)>
		SHA-256: 3a839c53a2e73deca07bbaf6104910cef5aa9fd6a0877ab2fecd0b969b6bc376
		Secure: false
	Object:
		Variable: varReplacer75033
		Type: java.lang.String
		Statement: specialinvoke $r24.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r19, varReplacer75033)
		Method: <org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$storeSecret$2: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: f007f3b2d8c0a073a44509c95d65847fca06ea5736af69f8e34631012414c79b
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>($r5)
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: org.matrix.android.sdk.internal.crypto.attachments.EncryptionResult encryptAttachment(java.io.InputStream)>
		SHA-256: 26985171f72757da85248b06eb03b51d8b4d8fb336b0b5a07b2b41e6f79fc60
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.cert.CertificateFactory
		Statement: $r6 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer177379)
		Method: <okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)>
		SHA-256: 7aef89c6f2f74e82588c5ba1f0a3e73f5d95ed6bfb0dcd9260224d1893f26581
		Secure: false
	Object:
		Variable: $r18
		Type: javax.crypto.Cipher
		Statement: $r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer71908)
		Method: <org.matrix.android.sdk.internal.crypto.DefaultCryptoService$exportRoomKeys$3: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 4869bdfdf883265553340ae0745b63260bce481b9bd0e2d10e905ff39d41da67
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: org.matrix.android.sdk.internal.crypto.attachments.EncryptionResult encryptAttachment(java.io.InputStream)>
		SHA-256: f63cf5d9034cf75e0334e6d0eafc8ea015a8f4e006349b5da17d9c26af745dda
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.Signature: byte[] sign()>()
		Method: <io.jsonwebtoken.impl.crypto.EllipticCurveSigner: byte[] doSign(byte[])>
		SHA-256: 1c50c9c03a1e85f4143def81dc9f4534f9a40d413b2e1d723db91a5aa4923b41
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer142737, varReplacer142738)
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 3a72a88ff30b350e81f7499d233b74dc99f0addca6e439da8b122fac20d96bd2
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r10 = virtualinvoke $r13.<javax.crypto.Mac: byte[] doFinal(byte[])>($r12)
		Method: <org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$getSecret$3: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: cb4095e8f8b0b796dbc635d58db7a660e7daaf8968c8403cd98fdc88f66d341b
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer30868)
		Method: <org.matrix.android.sdk.internal.util.HashKt: java.lang.String md5(java.lang.String)>
		SHA-256: 95db13dea29fcbc2ffe5194553f65131078bd60bbe7c0c4af851921a9ff03311
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer127624)
		Method: <org.matrix.android.sdk.internal.session.securestorage.DefaultSecureStorageService: void securelyStoreObject(java.lang.Object,java.lang.String,java.io.OutputStream)>
		SHA-256: e5082e6014bdb5a1ff846683b85d60b2b933a2300241c70090d78a92659f2d94
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer107331)
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: boolean decryptAttachment(java.io.InputStream,org.matrix.android.sdk.internal.crypto.attachments.ElementToDecrypt,java.io.OutputStream)>
		SHA-256: b2696e1730222f8611390ca0f20b3b3a1d7725a58213d201dbcfab93abd86c05
		Secure: false
	Object:
		Variable: varReplacer75030
		Type: java.lang.String
		Statement: specialinvoke $r24.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r21, varReplacer75030)
		Method: <org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$storeSecret$2: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 5ff3c705f8159b62a2af97d6d72371a959a7da13cf9892aad3985bdf4c5d0e7a
		Secure: false
	Object:
		Variable: varReplacer71921
		Type: java.lang.String
		Statement: specialinvoke $r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r20, varReplacer71921)
		Method: <org.matrix.android.sdk.internal.crypto.DefaultCryptoService$exportRoomKeys$3: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: d5fc3b9729e3e1ed1bd1172ae7fa907e03485fb283949019055b4b30251f80e7
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer139364)
		Method: <com.beautycoder.pflockscreen.security.PFSecurityUtilsOld: java.security.KeyStore loadKeyStore()>
		SHA-256: d84d435d4d1c3531088d574b6f3ffdda1fef1401d2b7a42e4af37abab8f82500
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Mac
		Statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer75687)
		Method: <org.matrix.android.sdk.internal.crypto.MXMegolmExportEncryption: byte[] deriveKeys(byte[],int,java.lang.String)>
		SHA-256: b0bb09ae59564a32da753b38984d59367929e83ee953d422b8382fbd6bb33ca6
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r7 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer190325)
		Method: <com.dropbox.core.http.SSLConfig: void <clinit>()>
		SHA-256: 37a4952017c0aa040ca03d1252d56075ed3cd34f17eef91fa5ce6e197617f97c
		Secure: false
	Object:
		Variable: $r22
		Type: java.security.SecureRandom
		Statement: specialinvoke $r22.<java.security.SecureRandom: void <init>()>()
		Method: <org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$storeSecret$2: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 996c8115b78df7747eda7e898974433e7af0b923190e1fe219c1f153a01a53f6
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer146382, $r2)
		Method: <com.beautycoder.pflockscreen.security.PFSecurityUtilsOld: byte[] rsaDecrypt(byte[],java.lang.String)>
		SHA-256: 61c3e74ff5d4812b4d1ee380e7d61fe1d27a93046e901db1c1f5c2eb928f10de
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer137370, $r6)
		Method: <org.matrix.android.sdk.internal.session.securestorage.DefaultSecureStorageService: java.lang.Object loadSecureSecret(java.io.InputStream,java.lang.String)>
		SHA-256: 48f366c05f92f4b9b2b9a8eb6f7a102068d485b6980428f2fa7fdd688c796570
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer158472, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 634bb07c595b19000afb34ca67f85e7e7314bc7a30464db998f9197bd74cf37b
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer137375, $r6)
		Method: <org.matrix.android.sdk.internal.session.securestorage.DefaultSecureStorageService: java.lang.Object loadSecureSecret(java.io.InputStream,java.lang.String)>
		SHA-256: eab3174716dea45c7be19ad528278760b9a076adf59ca14a2ede356b411f869c
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer108799)
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: org.matrix.android.sdk.internal.crypto.model.rest.EncryptedFileInfo encrypt(java.io.InputStream,java.io.File,kotlin.jvm.functions.Function2)>
		SHA-256: 3dd343da2d8cd8aa30c3272e5c9386789e9b6a90e360e6104cefc5badaed758b
		Secure: false
	Object:
		Variable: varReplacer71676
		Type: java.lang.String
		Statement: specialinvoke $r29.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r15, varReplacer71676)
		Method: <org.matrix.android.sdk.internal.crypto.DefaultCryptoService$importRoomKeys$2: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: ae0fc789bd58102bc1f8530a4ea85e0f170a6256cf78b04b5291db7e609ce62a
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: org.matrix.android.sdk.internal.crypto.model.rest.EncryptedFileInfo encrypt(java.io.InputStream,java.io.File,kotlin.jvm.functions.Function2)>
		SHA-256: fcd524916275ed605c14d6f33c99b36d1944a8037b0ccc1fc3a374cb53d5c75
		Secure: true
	Object:
		Variable: $r8
		Type: javax.net.ssl.TrustManager[]
		Statement: $r8 = virtualinvoke $r7.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.dropbox.core.http.SSLConfig: void <clinit>()>
		SHA-256: 4ef99ef933c715d1bdf0a33208b8f0ccc31cf2a597b374a35031aea3e568a865
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.KeyPairGenerator
		Statement: $r14 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer158074, varReplacer158075)
		Method: <org.matrix.android.sdk.internal.session.securestorage.SecretStoringUtils: java.security.KeyStore$PrivateKeyEntry getOrGenerateKeyPairForAlias(java.lang.String)>
		SHA-256: a3a9d423259db7ff4261b95eaea8584ad60820d30e49b9eaadc484833e9d096d
		Secure: false
	Object:
		Variable: varReplacer75445
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer75445)
		Method: <kotlin.reflect.jvm.internal.impl.types.KotlinTypeKt: byte[] deriveKey(java.lang.String,java.lang.String,int,org.matrix.android.sdk.api.listeners.ProgressListener)>
		SHA-256: fbcf1e4c903f9f83c74cd579628e4ef4f304d32033c77c6093e2b19809481502
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <io.jsonwebtoken.impl.crypto.SignatureProvider: void <clinit>()>
		SHA-256: bd77c10f408e393bf6a88a9f259346bb12383ce9f5ef6237ca9f00f578063397
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer75968)
		Method: <org.matrix.android.sdk.internal.crypto.tools.HkdfSha256: byte[] deriveSecret(byte[],byte[],byte[],int)>
		SHA-256: 54a9856e3d987aa9d72f669e18fb615df454b004c67e699d4597ccc52207098f
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: org.matrix.android.sdk.internal.crypto.attachments.EncryptionResult encryptAttachment(java.io.InputStream)>
		SHA-256: 26bb29e79dcc0cfa4a3945a9b681624803a4097c4af3e17697b956c0e2f660ec
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer158473)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: bea3ecbfb1d95875418cc6ad0873a2282fb42666d97a80114a0df195f0eefa8d
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <org.matrix.android.sdk.internal.crypto.tools.HkdfSha256: byte[] deriveSecret(byte[],byte[],byte[],int)>
		SHA-256: fe0e07206ed6fdfefd4292c64a8558bb9a82176425c5780003e754e9fc01eeaf
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <org.matrix.android.sdk.internal.crypto.tools.HkdfSha256: byte[] deriveSecret(byte[],byte[],byte[],int)>
		SHA-256: 1bb5b615b5941af68063d343b5586fa665c712fc08e8e6f2aaaa4ba831688ec6
		Secure: false
	Object:
		Variable: $r4
		Type: java.lang.String
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r4)
		Method: <com.beautycoder.pflockscreen.security.PFSecurityUtils: javax.crypto.Cipher getEncodeCipher(android.content.Context,java.lang.String,boolean)>
		SHA-256: 630e24553f3a5a7f079c32d5b7b99ef7d769bf9e9972ae0eda8703849554e183
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer139360)
		Method: <com.beautycoder.pflockscreen.security.PFSecurityUtils: java.security.KeyStore loadKeyStore()>
		SHA-256: ea7594f7f11f0c7ba7b11c817445e1944405fc502dba6cf26bdfdabe56e757f6
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer109544)
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: org.matrix.android.sdk.internal.crypto.attachments.EncryptionResult encryptAttachment(java.io.InputStream)>
		SHA-256: a255b5a5cd2c2611a5f2a7db82fc054a1dfeef21df0962db8911ee898a6fb14a
		Secure: true
	Object:
		Variable: varReplacer114531
		Type: java.lang.String
		Statement: specialinvoke $r21.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r17, varReplacer114531)
		Method: <org.matrix.android.sdk.internal.database.RealmKeysUtils: byte[] getRealmEncryptionKey(java.lang.String)>
		SHA-256: e880f008fca71a6c9e217aa97400149256724876393dae25e77c42ff416333fd
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.soloader.SoLoader$1: java.lang.String getLibHash(java.lang.String)>
		SHA-256: 842121e9d253cdf6db0e404fe95695ee0d6b5963fa7b8ac61ed9211e05a20b7c
		Secure: false
	Object:
		Variable: varReplacer73784
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer73784)
		Method: <org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$getSecret$3: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 80b2edbd97c12b9388a2c72f7a1cf620e449f5ae34cbd1bc767e0708947e9533
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer141609)
		Method: <org.matrix.android.sdk.internal.session.securestorage.SecretStoringUtils: java.lang.String decryptString(java.io.InputStream,java.lang.String)>
		SHA-256: f76d9d808a7bfac955b49d52b9d6de9176ed2f22410d962f96aea45bb709173c
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer155736)
		Method: <com.facebook.soloader.SoLoader$1: java.lang.String getLibHash(java.lang.String)>
		SHA-256: 1248c3375636a13ae45ba18039134581eb54b3d299f98d3504cc6818bf8360af
		Secure: false
	Object:
		Variable: varReplacer107331
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer107331)
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: boolean decryptAttachment(java.io.InputStream,org.matrix.android.sdk.internal.crypto.attachments.ElementToDecrypt,java.io.OutputStream)>
		SHA-256: 51589296af2a58a9693a2406aec8d353107a3b5702f218d7e28dcf95bb252355
		Secure: false
	Object:
		Variable: $r24
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r24.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r21, varReplacer75030)
		Method: <org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$storeSecret$2: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: b71de541e802ca83300e2921ad1649f4d2d4c0f7c6ed320eee9c921cc6389ebf
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer181941)
		Method: <com.facebook.stetho.websocket.WebSocketHandler: java.lang.String generateServerKey(java.lang.String)>
		SHA-256: c80ef960b1038632bf9da08142efe8a457c3ac36dabe43923b4b6d9212e47953
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.matrix.android.sdk.internal.util.HashKt: java.lang.String md5(java.lang.String)>
		SHA-256: 3b04e36f39347112fa2c98dafba3bb9eed3914495eed5705a1cb609ad19ea5c3
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: org.matrix.android.sdk.internal.crypto.model.rest.EncryptedFileInfo encrypt(java.io.InputStream,java.io.File,kotlin.jvm.functions.Function2)>
		SHA-256: 387f23aef01c0c4a0738055310a9777d1a90e10cf3355627c94877de1203de09
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: virtualinvoke $r9.<java.security.SecureRandom: void nextBytes(byte[])>($r5)
		Method: <org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$generateKey$2: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 2394a32fc55d9adf6197959dea07515eca78e86ed817bd3212f426149471e99f
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.SecureRandom
		Statement: specialinvoke $r9.<java.security.SecureRandom: void <init>()>()
		Method: <org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$generateKey$2: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 52004d05b03255993fdf2315cb8796cdf15f72d85cd4efd1221b6851f9252bc2
		Secure: true
	Object:
		Variable: $r7
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r7 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r6)
		Method: <org.matrix.android.sdk.internal.network.ssl.CertUtil: org.matrix.android.sdk.internal.network.ssl.CertUtil$PinnedSSLSocketFactory newPinnedSSLSocketFactory(org.matrix.android.sdk.api.auth.data.HomeServerConnectionConfig)>
		SHA-256: ccf0dd3ae985d9e90574aa27a71a6c7db0f70a6b2c490a66c861915f4c9337b3
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>($r5)
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: org.matrix.android.sdk.internal.crypto.model.rest.EncryptedFileInfo encrypt(java.io.InputStream,java.io.File,kotlin.jvm.functions.Function2)>
		SHA-256: e93c64f06de4a7d4726d480a2a46ded607167339d63751b900e69c1505186f34
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.bson.types.ObjectId: void <clinit>()>
		SHA-256: a346c1ce2497e0f2dff2c4f0eddc971b17bb523960b0ca5b48d250d4b7490939
		Secure: true
	Object:
		Variable: $r12
		Type: javax.net.ssl.SSLContext
		Statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer190331)
		Method: <com.dropbox.core.http.SSLConfig: void <clinit>()>
		SHA-256: 75f5c43321202df7f7bb9a3280aef7a80c45bdd211ca7b1dde838e006e8388b
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.PublicKey
		Statement: $r9 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r11)
		Method: <com.beautycoder.pflockscreen.security.PFSecurityUtils: javax.crypto.Cipher getEncodeCipher(android.content.Context,java.lang.String,boolean)>
		SHA-256: 4db94d97f767c29c8862e3ae92c9e2e047c0e3f8d5217b51217775bd17f513b7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.matrix.android.sdk.internal.session.securestorage.SecretStoringUtils: javax.crypto.SecretKey getOrGenerateSymmetricKeyForAliasM(java.lang.String)>
		SHA-256: 7f375910aecca825a9cc9b6b4c1e19844c1b9096b9e2e3387cbd9dd1370c55ab
		Secure: true
	Object:
		Variable: $r29
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r29.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r15, varReplacer71676)
		Method: <org.matrix.android.sdk.internal.crypto.DefaultCryptoService$importRoomKeys$2: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: b46881afbd4267407780ae1cd88444bc5ba92013cd59a456fd2aca7f57635a2c
		Secure: false
	Object:
		Variable: varReplacer71687
		Type: java.lang.String
		Statement: specialinvoke $r29.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r14, varReplacer71687)
		Method: <org.matrix.android.sdk.internal.crypto.DefaultCryptoService$importRoomKeys$2: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 4df52b218a0129889e9254de28937df10865167abda0d535ff4d46b06a0ddbb7
		Secure: false
	Object:
		Variable: $r16
		Type: javax.crypto.Cipher
		Statement: $r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer114550)
		Method: <org.matrix.android.sdk.internal.database.RealmKeysUtils: byte[] getRealmEncryptionKey(java.lang.String)>
		SHA-256: 1df8eba18fef2d4a8fbbe16a88d53e9f2265cd173b7b9429b38ca6aaca02a494
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer150693)
		Method: <com.bumptech.glide.load.engine.cache.SafeKeyGenerator$1: java.lang.Object create()>
		SHA-256: d9dbc9bfdef8c6b224ef18ac50002b7637d92683a4a8cf5dccd0f2f43e064ee2
		Secure: true
	Object:
		Variable: varReplacer75688
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer75688)
		Method: <org.matrix.android.sdk.internal.crypto.MXMegolmExportEncryption: byte[] deriveKeys(byte[],int,java.lang.String)>
		SHA-256: 4113ae651c6fa5b40a5f3009fb48c4c75fd29d0a85bdc9c4327df422125ddd23
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <org.matrix.android.sdk.internal.session.securestorage.SecretStoringUtils: void <init>(android.content.Context,org.matrix.android.sdk.internal.util.system.BuildVersionSdkIntProvider)>
		SHA-256: 876fe12b41171c169b3f63f8190084e5fa0d8ae1ce1527368f7d1450af8ee409
		Secure: true
	Object:
		Variable: $r21
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r21.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r16)
		Method: <org.matrix.android.sdk.internal.crypto.DefaultCryptoService$exportRoomKeys$3: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: bfbc29228b571ddc3a769550bc709171b00c9d554c5f540801a95ef14fba8ab6
		Secure: true
	Object:
		Variable: $r26
		Type: javax.crypto.Mac
		Statement: $r26 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer75028)
		Method: <org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$storeSecret$2: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 5300353825401785523882d185eff4a6df0ac64eb22ab0071e8c2538d025850a
		Secure: false
	Object:
		Variable: $r21
		Type: byte[]
		Statement: $r19 = virtualinvoke $r26.<javax.crypto.Mac: byte[] doFinal(byte[])>($r21)
		Method: <org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$storeSecret$2: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: e3771123e9bb3cab86d8def1ff88332ff125855a499ad8115e04ee7b6b60dc30
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments: boolean decryptAttachment(java.io.InputStream,org.matrix.android.sdk.internal.crypto.attachments.ElementToDecrypt,java.io.OutputStream)>
		SHA-256: 8b78f54b31e4f3cc793c76b1d2dcf8a12f67fc61d7dd5fc99df9231e86e379ca
		Secure: true
	Object:
		Variable: $r16
		Type: javax.crypto.Cipher
		Statement: $r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer114537)
		Method: <org.matrix.android.sdk.internal.database.RealmKeysUtils: byte[] getRealmEncryptionKey(java.lang.String)>
		SHA-256: a408c63dcde2c4fbbbaeb6558860dbd07495dd700086b82dbc5813d04e8b6bb1
		Secure: false
	Object:
		Variable: $r21
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r21.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r17, varReplacer114531)
		Method: <org.matrix.android.sdk.internal.database.RealmKeysUtils: byte[] getRealmEncryptionKey(java.lang.String)>
		SHA-256: 3a4ea6f88b84ed5243a8a8a907a17861c27e692b7247d5cbe95d9db1f053cf29
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer37876)
		Method: <org.matrix.android.sdk.internal.session.securestorage.SecretStoringUtils$keyStore$2: java.security.KeyStore invoke()>
		SHA-256: 2f0c02275f312624ccb1b6680dc4c0a3c5e17b6f21ebb7ee78d97d4e0725278b
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r1.<java.security.SecureRandom: int nextInt(int)>(varReplacer106025)
		Method: <org.bson.types.ObjectId: void <clinit>()>
		SHA-256: 80c5786243da717278f0e276e94950c46b5b2ec18df3287b0d3dddc8dcc7d42b
		Secure: true

Findings in Java Class: org.matrix.android.sdk.internal.util.HashKt

	 in Method: java.lang.String md5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #95db13dea29fcbc2ffe5194553f65131078bd60bbe7c0c4af851921a9ff03311)
			First parameter (with value "md5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer30868)


Findings in Java Class: org.matrix.android.sdk.internal.session.securestorage.SecretStoringUtils$keyStore$2

	 in Method: java.security.KeyStore invoke()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #2f0c02275f312624ccb1b6680dc4c0a3c5e17b6f21ebb7ee78d97d4e0725278b)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer37876)


Findings in Java Class: org.matrix.android.sdk.internal.crypto.DefaultCryptoService$importRoomKeys$2

	 in Method: java.lang.Object invokeSuspend(java.lang.Object)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r29.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r14, varReplacer71687)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r16.<javax.crypto.Mac: void init(java.security.Key)>($r29)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r17.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer71679, $r29, $r30)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #4a7d11a1d2e326b3f3f02178b08cd7db7357c57dff775315499bd16f77622ef8)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r4 = virtualinvoke $r17.<javax.crypto.Cipher: byte[] update(byte[])>($r13)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r30.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: org.matrix.android.sdk.internal.crypto.DefaultCryptoService$exportRoomKeys$3

	 in Method: java.lang.Object invokeSuspend(java.lang.Object)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #4869bdfdf883265553340ae0745b63260bce481b9bd0e2d10e905ff39d41da67)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r20 = virtualinvoke $r18.<javax.crypto.Cipher: byte[] update(byte[])>($r20)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r20, varReplacer71921)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r25.<javax.crypto.Mac: void init(java.security.Key)>($r19)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r18.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer71899, $r19, $r21)


Findings in Java Class: org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$getSecret$3

	 in Method: java.lang.Object invokeSuspend(java.lang.Object)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r16.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r8)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #912cbf6319233e4370b03e88914f2c05605adc7259154ad54ee3439573ce6e75)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r7 = virtualinvoke $r15.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r12)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, varReplacer73785)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r15.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer73795, $r1, $r16)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r13.<javax.crypto.Mac: void init(java.security.Key)>($r1)


Findings in Java Class: org.matrix.android.sdk.internal.crypto.secrets.DefaultSharedSecretStorageService$storeSecret$2

	 in Method: java.lang.Object invokeSuspend(java.lang.Object)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #86d3c47bb3beac233d299fd6cdb9618ee6488cc479e5782cd0d44ff0a6565e24)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r21 = virtualinvoke $r23.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r21)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r24.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r19, varReplacer75033)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r23.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer75026, $r24, $r25)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r26.<javax.crypto.Mac: void init(java.security.Key)>($r24)


Findings in Java Class: kotlin.reflect.jvm.internal.impl.types.KotlinTypeKt

	 in Method: byte[] deriveKey(java.lang.String,java.lang.String,int,org.matrix.android.sdk.api.listeners.ProgressListener)
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #d73c77840cd9d9083665690fd40a1cac01a0c4dabc8217d898fa03e894345a77)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer75445)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer75445)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #8d3cf998cbafe763231007bf9ab6665f87ec3dfea01be630b2c360803943dc97)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r3.<javax.crypto.Mac: void update(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>($r4)


Findings in Java Class: org.matrix.android.sdk.internal.crypto.MXMegolmExportEncryption

	 in Method: byte[] deriveKeys(byte[],int,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Mac: void init(java.security.Key)>($r3)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #386aa2ef5d079211f1a599b85f9e1947b4cebdab1d227226f3353877abec20c8)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer75688)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #b0bb09ae59564a32da753b38984d59367929e83ee953d422b8382fbd6bb33ca6)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r2.<javax.crypto.Mac: void update(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer75688)


Findings in Java Class: org.matrix.android.sdk.internal.crypto.tools.HkdfSha256

	 in Method: byte[] deriveSecret(byte[],byte[],byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer75967)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #43c5900a5424f04d1fce8af6fab83ab59eceb815c0037fcd5bf1a9886e31fef4)
			Unexpected call to method doFinal on object of type javax.crypto.Mac.
			at statement: $r2 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r5)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #c9a9f171eeb89de192424a733578a5df3312325b2277d913815c698a049bd02d)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer75967)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #43c5900a5424f04d1fce8af6fab83ab59eceb815c0037fcd5bf1a9886e31fef4)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to javax.crypto.Mac: byte[] doFinal(byte[]), update
			at statement: $r2 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #43c5900a5424f04d1fce8af6fab83ab59eceb815c0037fcd5bf1a9886e31fef4)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r5)


Findings in Java Class: org.matrix.android.sdk.internal.network.ssl.CertUtil

	 in Method: org.matrix.android.sdk.internal.network.ssl.CertUtil$PinnedSSLSocketFactory newPinnedSSLSocketFactory(org.matrix.android.sdk.api.auth.data.HomeServerConnectionConfig)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer81251, $r9, $r18)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer81251, $r9, $r18)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer81251, $r9, $r18)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer81257)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2a0761e3ea768f30af20104c7f4f9313b680653fed920d56f5c16fadbd3110ed)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r17 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer81254)


	 in Method: byte[] generateFingerprint(java.security.cert.X509Certificate,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c6af2a6ee60a41e6ded0c34a6a7cd00665ab50bafc701fdd2e26e6dc56c5ee32)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


Findings in Java Class: com.facebook.cache.common.CacheKeyUtil

	 in Method: java.lang.String secureHashKey(com.facebook.cache.common.CacheKey)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3cd6970b88beec4e3f0842927c97ce079074d450a4a15edcfd496c2738706635)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer87244)


Findings in Java Class: org.matrix.android.sdk.internal.crypto.attachments.MXEncryptedAttachments

	 in Method: boolean decryptAttachment(java.io.InputStream,org.matrix.android.sdk.internal.crypto.attachments.ElementToDecrypt,java.io.OutputStream)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer107349, $r9, $r10)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer107331)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #3ed91f82ac9379eebd8eba016bb44f4eb49b51d2c3dda80f6a192ce0e948fc4d)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r7 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r6, varReplacer107333, $i1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #3ed91f82ac9379eebd8eba016bb44f4eb49b51d2c3dda80f6a192ce0e948fc4d)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r6 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal()>()

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #9795a2ac886caf910ae3f354d21f5d356d852cfc8961bfff73a70642dab51176)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>()


	 in Method: org.matrix.android.sdk.internal.crypto.model.rest.EncryptedFileInfo encrypt(java.io.InputStream,java.io.File,kotlin.jvm.functions.Function2)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #3dd343da2d8cd8aa30c3272e5c9386789e9b6a90e360e6104cefc5badaed758b)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r14 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r11, varReplacer108798, $i3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer108792)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer108797, $r9, $r10)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #3dd343da2d8cd8aa30c3272e5c9386789e9b6a90e360e6104cefc5badaed758b)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r11 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal()>()


	 in Method: org.matrix.android.sdk.internal.crypto.attachments.EncryptionResult encryptAttachment(java.io.InputStream)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #2eaa93dbac61380531feb3011d5c74409d9ab288c2e3abbf2b1e5066f9087aa7)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r11 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal()>()

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer109555, $r9, $r10)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer109529)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #2eaa93dbac61380531feb3011d5c74409d9ab288c2e3abbf2b1e5066f9087aa7)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r12 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r11, varReplacer109561, $i1)


Findings in Java Class: org.matrix.android.sdk.internal.database.RealmKeysUtils

	 in Method: byte[] getRealmEncryptionKey(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r21.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r17, varReplacer114531)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #a408c63dcde2c4fbbbaeb6558860dbd07495dd700086b82dbc5813d04e8b6bb1)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r22 = virtualinvoke $r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r22)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #1df8eba18fef2d4a8fbbe16a88d53e9f2265cd173b7b9429b38ca6aaca02a494)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r19 = virtualinvoke $r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r19)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r16.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer114533, $r21)


Findings in Java Class: org.matrix.android.sdk.internal.network.ssl.TLSSocketFactory

	 in Method: void <init>(javax.net.ssl.TrustManager[],java.util.List)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer117248, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer117248, $r2, $r4)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f5c729d72c6c2e112ab1f9ea307805fe64c9094980a16f65e4d1f55ebbce89cc)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer117249)


Findings in Java Class: org.matrix.android.sdk.internal.session.securestorage.DefaultSecureStorageService

	 in Method: void securelyStoreObject(java.lang.Object,java.lang.String,java.io.OutputStream)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #f43f042276a22abce42f6dfd0a6cdb00bbf1954f3f23157cf1cae640e607133a)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: specialinvoke $r10.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r16)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer127630, $r15)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #3d589ee4b3852fbc63b18437760f60a069ba89a725d3b0301ffe108b94fd4b94)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r11 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r11)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r15.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer127627)


	 in Method: java.lang.Object loadSecureSecret(java.io.InputStream,java.lang.String)
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #bc11e1c440de30446e0e7c62d595330fa89dc1f181aa6556665054348332a0d)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r17, varReplacer137367)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r17, varReplacer137367)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #d585171a7aa24d4b3d52fd62f5cd42ddc2909b94cdc077d8ab0c68ea228e8250)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>($r9, varReplacer137365)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #ffcba1c23e7251bc9430a5499eb342ddc6e99d37c8b7a2bfd2ab225ff0ad7365)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>($r9, varReplacer137366)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer137373, $r5, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer137372, $r19, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer137370, $r6)


Findings in Java Class: com.beautycoder.pflockscreen.security.PFSecurityUtils

	 in Method: java.security.KeyStore loadKeyStore()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #ea7594f7f11f0c7ba7b11c817445e1944405fc502dba6cf26bdfdabe56e757f6)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer139360)


	 in Method: java.lang.String encode(android.content.Context,java.lang.String,java.lang.String,boolean)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #bcc755dc790842f480c0447e501efda50cb3edf6bc5adc3364ab2c057af02b24)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)


	 in Method: java.lang.String decode(java.lang.String,java.lang.String)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #bcc755dc790842f480c0447e501efda50cb3edf6bc5adc3364ab2c057af02b24)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r4 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)


	 in Method: javax.crypto.Cipher getEncodeCipher(android.content.Context,java.lang.String,boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.OAEPParameterSpec
			First parameter was not properly generated as preparedMGF1
			at statement: specialinvoke $r18.<javax.crypto.spec.OAEPParameterSpec: void <init>(java.lang.String,java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.spec.PSource)>(varReplacer146697, varReplacer146698, $r1, $r2)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r17.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r12)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer146695, $r9, $r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r9 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r11)


	 in Method: boolean generateKey1(java.lang.String,boolean)
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedRSA
			at statement: virtualinvoke $r2.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r5)


Findings in Java Class: com.beautycoder.pflockscreen.security.PFSecurityUtilsOld

	 in Method: java.security.KeyStore loadKeyStore()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #d84d435d4d1c3531088d574b6f3ffdda1fef1401d2b7a42e4af37abab8f82500)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer139364)


	 in Method: byte[] rsaDecrypt(byte[],java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #d64eb59d89f86a505b1f3287689171b43d26d2296a8a5cebfb21f634ea852e5c)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to close
			at statement: $i0 = virtualinvoke $r8.<javax.crypto.CipherInputStream: int read()>()

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer146381, $r7)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #d84d435d4d1c3531088d574b6f3ffdda1fef1401d2b7a42e4af37abab8f82500)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>($r2, varReplacer146380)


	 in Method: byte[] rsaEncrypt(android.content.Context,byte[],java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #f1f5f244973f21ed33a31102783c075f8abadc14d36b07b329f5d107574613f8)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: specialinvoke $r14.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r11, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer146701, $r10)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #d84d435d4d1c3531088d574b6f3ffdda1fef1401d2b7a42e4af37abab8f82500)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r6 = virtualinvoke $r4.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>($r3, varReplacer146704)


	 in Method: boolean generateKey(android.content.Context,java.lang.String,boolean)
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedRSA
			at statement: virtualinvoke $r5.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r12)


Findings in Java Class: org.matrix.android.sdk.internal.session.securestorage.SecretStoringUtils

	 in Method: java.lang.String decryptStringM(java.io.InputStream,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer141605, $r7, $r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer141603, $r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f51427b1309869b6f039d42f50113702cb6943a2183dcf0daf701ef130a51e50)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)


	 in Method: java.lang.String decryptString(java.io.InputStream,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer141608, $r11, $r10)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer141608, $r11, $r10)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer141610)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #f54bccc283a678163aaa6438ddd28b2b5e9bdb3931e818251352a84baec166a7)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer141610)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer141611, $r6)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f76d9d808a7bfac955b49d52b9d6de9176ed2f22410d962f96aea45bb709173c)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r6 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)


	 in Method: byte[] rsaDecrypt(java.lang.String,java.io.InputStream)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer153959, $r5)


	 in Method: byte[] rsaEncrypt(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer141619, $r6)


	 in Method: java.security.KeyStore$PrivateKeyEntry getOrGenerateKeyPairForAlias(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedRSA
			at statement: virtualinvoke $r14.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r13)


Findings in Java Class: com.facebook.soloader.SoLoader$1

	 in Method: java.lang.String getLibHash(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #1248c3375636a13ae45ba18039134581eb54b3d299f98d3504cc6818bf8360af)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1248c3375636a13ae45ba18039134581eb54b3d299f98d3504cc6818bf8360af)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer155736)


Findings in Java Class: okhttp3.internal.platform.ConscryptPlatform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #634bb07c595b19000afb34ca67f85e7e7314bc7a30464db998f9197bd74cf37b)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer158472, $r2)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer142728)


	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer142746, $r5, varReplacer142746)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer142746, $r5, varReplacer142746)


Findings in Java Class: okhttp3.internal.platform.Platform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #bea3ecbfb1d95875418cc6ad0873a2282fb42666d97a80114a0df195f0eefa8d)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer158473)


	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer142740, $r10, varReplacer142740)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer142740, $r10, varReplacer142740)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer142740, $r10, varReplacer142740)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer142733)


Findings in Java Class: okhttp3.internal.platform.BouncyCastlePlatform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #65346f38b87f1c9dde29f80f9dbd1909d1254084115f9bbe607b907b6a120028)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer158476, $r2)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer142734)


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest$okio(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ea0840b94e95f767ea25aa35611d3fdb379cdb84c49be399c4ff7525b48fb7fc)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: okio.SegmentedByteString

	 in Method: okio.ByteString digest$okio(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: okhttp3.Cache$Entry

	 in Method: java.util.List readCertificateList(okio.BufferedSource)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #7aef89c6f2f74e82588c5ba1f0a3e73f5d95ed6bfb0dcd9260224d1893f26581)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r6 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer177379)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #7aef89c6f2f74e82588c5ba1f0a3e73f5d95ed6bfb0dcd9260224d1893f26581)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r10 = virtualinvoke $r6.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r9)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #7aef89c6f2f74e82588c5ba1f0a3e73f5d95ed6bfb0dcd9260224d1893f26581)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r10 = virtualinvoke $r6.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r9)


Findings in Java Class: com.facebook.stetho.websocket.WebSocketHandler

	 in Method: java.lang.String generateServerKey(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c80ef960b1038632bf9da08142efe8a457c3ac36dabe43923b4b6d9212e47953)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer181941)


Findings in Java Class: com.dropbox.core.http.SSLConfig

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #37a4952017c0aa040ca03d1252d56075ed3cd34f17eef91fa5ce6e197617f97c)
			First parameter (with value "X509") should be any of {PKIX, SunX509}
			at statement: $r7 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer190325)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer190335, $r8, varReplacer190335)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer190335, $r8, varReplacer190335)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r7.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer190335, $r8, varReplacer190335)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #75f5c43321202df7f7bb9a3280aef7a80c45bdd211ca7b1dde838e006e8388b)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer190331)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #9caeebec05de5f90983fc8f83a60c9087e835e18652a437b0e01df438fbceab3)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer190327, $r4)


	 in Method: java.util.List deserializeCertificates(java.security.cert.CertificateFactory,java.io.InputStream)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #f2f2ace97466e6c59c848e4819133539d1f0e339d3ae6fe6c50e0c20aa9e2f13)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r7 = virtualinvoke $r4.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r3)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #f2f2ace97466e6c59c848e4819133539d1f0e339d3ae6fe6c50e0c20aa9e2f13)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r7 = virtualinvoke $r4.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r3)


	 in Method: void loadKeyStore(java.security.KeyStore,java.io.InputStream)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #f2f2ace97466e6c59c848e4819133539d1f0e339d3ae6fe6c50e0c20aa9e2f13)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r3 = staticinvoke <com.dropbox.core.http.SSLConfig: java.util.List deserializeCertificates(java.security.cert.CertificateFactory,java.io.InputStream)>($r2, $r1)


Findings in Java Class: io.jsonwebtoken.impl.crypto.MacSigner

	 in Method: javax.crypto.Mac doGetMacInstance()
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r1)


Findings in Java Class: okhttp3.internal.platform.OpenJSSEPlatform

	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer142723)


Findings in Java Class: io.jsonwebtoken.impl.crypto.RsaSigner

	 in Method: byte[] doSign(byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initSign(java.security.PrivateKey)>($r3)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 185

	CryptoAnalysis found the following violations. For details see description above.
	NeverTypeOfError: 5
	HardCodedError: 1
	ConstraintError: 17
	TypestateError: 25
	IncompleteOperationError: 13
	RequiredPredicateError: 73
=====================================================================
