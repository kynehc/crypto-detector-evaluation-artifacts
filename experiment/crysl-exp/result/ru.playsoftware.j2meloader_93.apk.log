0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r14
		Type: byte[]
		Statement: $i2 = virtualinvoke $r18.<java.security.MessageDigest: int digest(byte[],int,int)>($r14, varReplacer21986, varReplacer21987)
		Method: <a2.q: byte[] d(java.io.Writer,boolean)>
		SHA-256: a40d586b718a2a7b79528e144eb72d50e590d127aee8b8e05421e86d5d84cf59
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.SSLContext
		Statement: $r17 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer23864)
		Method: <y6.b: void <init>(android.content.Context)>
		SHA-256: 306561f6d2de6605632fee6d7464c740852dc30c31d79146f42b3ba0fc72490c
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r12.<javax.crypto.Mac: byte[] doFinal(byte[])>($r10)
		Method: <o5.a: void <init>(u5.a,char[],byte[],byte[])>
		SHA-256: 8c6a69b791c148437940940448448f3f88a9b837d29c59e8f0cc949fc5058c82
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.cert.CertificateFactory
		Statement: $r13 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.lang.String)>(varReplacer23866, varReplacer23867)
		Method: <y6.b: void <init>(android.content.Context)>
		SHA-256: 50aa711b4cc34454be16a1cce27521e2f16e01a310003832b19a635e15b44636
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyStore
		Statement: $r10 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <y6.b: void <init>(android.content.Context)>
		SHA-256: 53e3815681465fe84b7c982cbda5592c12c682eed9d0e65352f6616e24dde3ac
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.PublicKey
		Statement: $r10 = virtualinvoke $r8.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r9)
		Method: <f5.c: boolean p(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 4b9e138fc6be7e4acf5bacfd2cfc5d7f90c6b880cb63e178c039c2dafd99be9
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $z0 = virtualinvoke $r11.<java.security.Signature: boolean verify(byte[])>($r7)
		Method: <f5.c: boolean p(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 443ebee9d697167aefc2674f7fe560e46c047bfdc575cfa7ee5faf6d2686911
		Secure: false
	Object:
		Variable: $r18
		Type: javax.net.ssl.TrustManager[]
		Statement: $r18 = virtualinvoke $r16.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <y6.b: void <init>(android.content.Context)>
		SHA-256: bb958e47545418eee3b012bf21c550bd02c59e443333dee8a487ba966ff35c52
		Secure: true
	Object:
		Variable: $r18
		Type: java.security.MessageDigest
		Statement: $r18 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer21984)
		Method: <a2.q: byte[] d(java.io.Writer,boolean)>
		SHA-256: bce26393102cd8d488e3225147afb1dbea83d212a2c165d72c5aef1db70f50a6
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r9.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r7)
		Method: <f5.c: boolean p(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: d1bbeb7f5b0c236376c15f0abb3e5075ac6e3a587bcaf0a4bba2df1ff0942e42
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r5)
		Method: <p5.a: void a(byte[])>
		SHA-256: 3af4345866155f1c046c5dafc3fbfa5fab0f38fa103afc85202041eebef5f3d4
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyFactory
		Statement: $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer9062)
		Method: <f5.c: boolean p(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: c5862c6981963b2f242c5b63ac1300f1ef5fa76e85b2afa60a9e68f16fa9fbd2
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r11.<java.security.Signature: boolean verify(byte[])>($r7)
		Method: <f5.c: boolean p(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: e0c4320ba37ddcefd368cb7608023184b0f0322bd3407334da84616de038f525
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.Signature
		Statement: $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer9052)
		Method: <f5.c: boolean p(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: e87551f56d552d34602fc0c3bb5a64c16e20c851103c66efb19d81a5ae7ab2e2
		Secure: false
	Object:
		Variable: $r5
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r5)
		Method: <p5.a: void a(byte[])>
		SHA-256: 1a1bcd09ca3293c817d13cec1beba33220d029fd322b91d0f0948aefc9ecc46f
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r9)
		Method: <y6.b: void <init>(android.content.Context)>
		SHA-256: d6804a3d139cc616b19a2b428b9695a5f873a6a9503358b107dc3dc5d5d48b8b
		Secure: true
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r6 = virtualinvoke $r12.<javax.crypto.Mac: byte[] doFinal(byte[])>($r10)
		Method: <o5.a: void <init>(u5.a,char[],byte[],byte[])>
		SHA-256: d7857d6d6cac4308ccd61e3cd47f9b27bf755f4fee346da42aab4b9da05946d0
		Secure: false
	Object:
		Variable: varReplacer9062
		Type: java.lang.String
		Statement: $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer9062)
		Method: <f5.c: boolean p(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: a1bd27ad00d6f0e84d4ff94a83317513f3996d6985af26c60d9d98eec8346cb2
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)
		Method: <p5.a: void <init>(java.lang.String)>
		SHA-256: 1777524bc2fa3af1ca80c4679c0b2d6b8af24c32b5624eb03233e336cabc72c4
		Secure: false

Findings in Java Class: f5.c

	 in Method: boolean p(java.lang.String,java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #e87551f56d552d34602fc0c3bb5a64c16e20c851103c66efb19d81a5ae7ab2e2)
			First parameter (with value "SHA1withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer9052)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r11.<java.security.Signature: void initVerify(java.security.PublicKey)>($r10)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r10 = virtualinvoke $r8.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r9)


Findings in Java Class: a2.q

	 in Method: byte[] d(java.io.Writer,boolean)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bce26393102cd8d488e3225147afb1dbea83d212a2c165d72c5aef1db70f50a6)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r18 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer21984)


Findings in Java Class: y6.b

	 in Method: void <init>(android.content.Context)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #306561f6d2de6605632fee6d7464c740852dc30c31d79146f42b3ba0fc72490c)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r17 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer23864)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer23870, $r18, varReplacer23870)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #50aa711b4cc34454be16a1cce27521e2f16e01a310003832b19a635e15b44636)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r14 = virtualinvoke $r13.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r12)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer23870, $r18, varReplacer23870)


Findings in Java Class: p5.a

	 in Method: void <init>(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #1777524bc2fa3af1ca80c4679c0b2d6b8af24c32b5624eb03233e336cabc72c4)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)


	 in Method: void a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r1)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #3af4345866155f1c046c5dafc3fbfa5fab0f38fa103afc85202041eebef5f3d4)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r5)


Findings in Java Class: o5.a

	 in Method: void <init>(u5.a,char[],byte[],byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #1777524bc2fa3af1ca80c4679c0b2d6b8af24c32b5624eb03233e336cabc72c4)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: virtualinvoke $r5.<p5.a: void a(byte[])>($r7)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #1777524bc2fa3af1ca80c4679c0b2d6b8af24c32b5624eb03233e336cabc72c4)
			Unexpected call to method doFinal on object of type javax.crypto.Mac.
			at statement: $r6 = virtualinvoke $r12.<javax.crypto.Mac: byte[] doFinal(byte[])>($r10)


Findings in Java Class: t5.k

	 in Method: u5.g m(u5.f)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #1777524bc2fa3af1ca80c4679c0b2d6b8af24c32b5624eb03233e336cabc72c4)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: specialinvoke $r24.<t5.e: void <init>(t5.j,u5.g,char[],int)>($r16, $r2, $r18, $i2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #1777524bc2fa3af1ca80c4679c0b2d6b8af24c32b5624eb03233e336cabc72c4)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: specialinvoke $r25.<t5.a: void <init>(t5.j,u5.g,char[],int)>($r16, $r2, $r18, $i2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #1777524bc2fa3af1ca80c4679c0b2d6b8af24c32b5624eb03233e336cabc72c4)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: specialinvoke $r26.<t5.l: void <init>(t5.j,u5.g,char[],int)>($r16, $r2, $r18, $i2)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 19

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 5
	TypestateError: 1
	ConstraintError: 5
	RequiredPredicateError: 7
=====================================================================
