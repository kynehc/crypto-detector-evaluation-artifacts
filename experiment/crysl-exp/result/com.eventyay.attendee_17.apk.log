0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.Signature
		Statement: $r1 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <m.a.c.s.b: java.security.Signature g(java.lang.String)>
		SHA-256: 86895f2119f2c7e88f7c8f65cec69379cfc580a3a3c9b074e47628aeb5e38f32
		Secure: false
	Object:
		Variable: $r14
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer83565)
		Method: <h.e.a.b0.i.u: javax.crypto.SecretKey a(javax.crypto.SecretKey,h.e.a.e,byte[],byte[])>
		SHA-256: 5438feb099ac720c7329eea46b1bd7a6701c77441496a68dae93a746506f5c38
		Secure: false
	Object:
		Variable: varReplacer94165
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer94163, varReplacer94163, varReplacer94165)
		Method: <h.e.a.b0.i.j: void <init>(javax.crypto.SecretKey)>
		SHA-256: 2369343a2d83b9cd577d920ef59d85b97166a0ca206b4d7166355ba2ce3686ab
		Secure: false
	Object:
		Variable: varReplacer85446
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer85446)
		Method: <h.e.a.b0.i.k: javax.crypto.SecretKey a(javax.crypto.SecretKey,int,byte[])>
		SHA-256: 9f7948db448cbb6e97984008cf5fc0a05eda9df29f34c9b4f6e98d86d8618fd2
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <h.f.a.a.l2: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: aad23f547bbbe2c3ba70ba24521ff83f9ab5d1e6502fb1f18b967c7b5d8fbed9
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <h.f.a.a.l3: java.lang.String b(java.lang.String)>
		SHA-256: ef4076d0b48d519b074d8e1360d1936b4e22b6f4c1d2540fb51002737b4ab148
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <k.k0.i.e: javax.net.ssl.X509TrustManager c()>
		SHA-256: aa0d0fcef790efe039e819c5f4aee608039ea905525468e6652fdf5d1416caa7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer94167, varReplacer94167, varReplacer94169)
		Method: <h.e.a.b0.i.j: void <init>(javax.crypto.SecretKey)>
		SHA-256: 130c589c168735d0e2f72c39bad72ed6a8f64ae6b7ca2b4194857317e8675e80
		Secure: false
	Object:
		Variable: $r15
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r15.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer83524, $r7)
		Method: <h.e.a.b0.i.c: h.e.a.b0.i.f a(javax.crypto.SecretKey,h.e.a.f0.f,byte[],byte[],java.security.Provider)>
		SHA-256: 72957c7c5128440aad8bef725d396cbac4bec0a929e0404465591ba85acd622b
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r4 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <h.e.a.b0.i.c: h.e.a.b0.i.f a(javax.crypto.SecretKey,h.e.a.f0.f,byte[],byte[],java.security.Provider)>
		SHA-256: 5d1b20d8cfa554721edcdf905fd32b744ed57cd6f9c3edd5e4af191b77a5d6b3
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer68346)
		Method: <h.f.a.a.s0: void <init>()>
		SHA-256: 4a6de06d6c0bedee61e6939ebe6dfe3e66af346a83a1e0dc9cb3df2fd838a254
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <m.a.c.s.e: java.security.Signature g(java.lang.String)>
		SHA-256: 3b3e55a703761827daea4641acfc729446517be3a074ae85f2e93d999aa029d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: cb79cd7b201479506b2f0eadb1108d9d0e823c44a83388b719962de82b4cd7cc
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer71693, $r2)
		Method: <k.k0.i.e: javax.net.ssl.SSLContext b()>
		SHA-256: fd81d0f2dfe9b077d70971c49705277eebefc42be79e41d7bfc9b4894915306a
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r3, varReplacer67307)
		Method: <h.e.a.d0.e: void <clinit>()>
		SHA-256: af8c7e67ee73a767c160d5bb656527b1414397b97c621c755261b34b54b21de1
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r9.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)
		Method: <com.stripe.android.stripe3ds2.a.d: java.security.interfaces.ECPublicKey a(byte[])>
		SHA-256: 59305f4160e53b275b0a55d56846845ce8a27f74cf6574d4f43ae421586a861
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r12, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PrivateKey: void <init>(java.lang.String,m.a.b.y0.d0,org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PublicKey,java.security.spec.ECParameterSpec)>
		SHA-256: 1d2898e3d3b44f1b76b2c9a30718bd32f18e4a5f6903d4c54ee6ab6b4453a2d
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.KeyAgreement
		Statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>(varReplacer70262)
		Method: <h.e.a.b0.i.p: javax.crypto.SecretKey a(java.security.interfaces.ECPublicKey,java.security.PrivateKey,java.security.Provider)>
		SHA-256: ef99d026747f1c5d95403ac13b603eb718c61fbd67405ad81fc4a7c6ae0fdea2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.AlgorithmParameters
		Statement: $r2 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r1, $r0)
		Method: <h.e.a.b0.i.d: java.security.AlgorithmParameters a(java.lang.String,java.security.Provider)>
		SHA-256: 1a74f901cced466ff0ca8e41be6cf0f4f6c580a1c189e53b51e3f51ef2e1244a
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer83577)
		Method: <h.e.a.b0.i.b: javax.crypto.Cipher a(javax.crypto.SecretKey,boolean,byte[],java.security.Provider)>
		SHA-256: 834fd575171418fdad736995601cf93134068fd4f4202e53fd74300c8a806945
		Secure: false
	Object:
		Variable: r0
		Type: m.a.c.r.b
		Statement: specialinvoke r0.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r1, $r3, $i1)
		Method: <m.a.c.r.b: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int,int)>
		SHA-256: 13cb92f8285da543dd20c781c50e9376afaca46dfb4be1140585309c51de4eaa
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r0, $r6, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertSpec(java.security.spec.EllipticCurve,m.a.d.h.e)>
		SHA-256: 5e446648189ea5990cccb15904e2d7a7e504603858a88d76ba384a4c530a6923
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, $r4)
		Method: <h.e.a.b0.i.s: byte[] a(java.lang.String,byte[],byte[],java.security.Provider)>
		SHA-256: 7397e8415603691bd52bd2108e5b131a13cc2a6727682d90e971cb0e976dec96
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <l.i: l.i b(java.lang.String)>
		SHA-256: d3f5caf22661a936ed4bb469723774d415b659e664da0c1e791bfef8c9c1d613
		Secure: false
	Object:
		Variable: varReplacer94154
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer94152, varReplacer94152, varReplacer94154)
		Method: <h.e.a.b0.i.j: void <init>(javax.crypto.SecretKey)>
		SHA-256: 8c2c5ef5f5d90d87c1e95813d7cc90ef4cfff6f658b518b94b2dd87ea63665b8
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer70260)
		Method: <h.e.a.b0.i.p: javax.crypto.SecretKey a(java.security.interfaces.ECPublicKey,java.security.PrivateKey,java.security.Provider)>
		SHA-256: 406f29322cd04cfd4862c10af40fbaf7f58553ec4df09939d7189627d4d4c1cc
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer94152, varReplacer94152, varReplacer94154)
		Method: <h.e.a.b0.i.j: void <init>(javax.crypto.SecretKey)>
		SHA-256: 47c6d2a96a70975111c45477b6a120db61eb3b39f667d9820483f880a9da64d1
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <h.f.a.a.x: java.lang.String a(java.lang.String)>
		SHA-256: 9ef2ddb6d466a7de686da04a0ff3cff1ba29ba97186797fad0aeeefef5039c5f
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <h.e.a.b0.i.c: h.e.a.b0.i.f a(javax.crypto.SecretKey,h.e.a.f0.f,byte[],byte[],java.security.Provider)>
		SHA-256: d5ed833af3565835e64cae0cef2c1fa4f557f205aa41ca73bb73b7046e0c5e21
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.Signature
		Statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject: void verify(java.security.PublicKey)>
		SHA-256: 12ceb637520f44953be41c6cc4cf0d880ddfab3b0759a27bcd8537de2150d294
		Secure: false
	Object:
		Variable: varReplacer94150
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer94148, varReplacer94149, varReplacer94150)
		Method: <h.e.a.b0.i.j: void <init>(javax.crypto.SecretKey)>
		SHA-256: 22e6523a35578e0a2a0c90cfe8133d1a3b4f8b0bcb4a901d4ae4498a1b97e135
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r3, $r5, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(m.a.a.i3.i)>
		SHA-256: a4b7a5874d7ddc91e3fe1c6f80927286981244105f50c9286ac1b1cb27893d7d
		Secure: true
	Object:
		Variable: $r12
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r12 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r2)
		Method: <h.f.a.a.s0: javax.net.ssl.TrustManager[] b()>
		SHA-256: 9e60d6d9fe4913e386f2113d287d906ce30a80f5d30344973ba26ab894e93c4c
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <h.e.a.b0.i.s: javax.crypto.Mac a(javax.crypto.SecretKey,java.security.Provider)>
		SHA-256: fe196c0ebec969bb57f8502ded82a0ec97b9e35b904b3c5d5cd0202fc6fce211
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: c9e1ff5450f21aae65af053d6ed29f81c5a7b267991078defbfa3059af0e266a
		Secure: false
	Object:
		Variable: varReplacer94169
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer94167, varReplacer94167, varReplacer94169)
		Method: <h.e.a.b0.i.j: void <init>(javax.crypto.SecretKey)>
		SHA-256: 6cb3735d5fdca8db871c860409a6d4ea081df31088371c11aa41028f3b992970
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.cert.CertificateFactory
		Statement: $r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer47066)
		Method: <h.e.a.f0.o: java.security.cert.X509Certificate b(byte[])>
		SHA-256: 83a1e01b03286021bec8f4bb8e79a2f1dbdbe10a9640475db09cb113921c53fb
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyFactory
		Statement: $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer49384)
		Method: <com.stripe.android.stripe3ds2.a.d: void <init>()>
		SHA-256: 93931d5f2a8172b7ea7057ab7ecb2e6bf6563d84a482008debbe13c2d0b92f4c
		Secure: true
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $z0 = virtualinvoke $r12.<java.security.Signature: boolean verify(byte[])>($r9)
		Method: <h.e.a.b0.c: boolean a(h.e.a.s,byte[],h.e.a.f0.c)>
		SHA-256: 1b07d11da84dc79bb65ddc94dd5b334436afcbbdaf798e13bde1fa43179a2d12
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <h.f.a.a.s0: javax.net.ssl.TrustManager[] b()>
		SHA-256: e798682418e3e036a32bf20c74d403c4cd20b8aeed2436ea7f6a12009bdc497a
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <m.a.b.l: java.security.SecureRandom a()>
		SHA-256: dbc5d03685ca25e6193675e714c0013cec75b59b5ef057983c470dfccac57af8
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: varReplacer83548
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer83548)
		Method: <h.e.a.f0.l: javax.crypto.SecretKey a(javax.crypto.SecretKey)>
		SHA-256: b7ad153eb47e0ebc2000e8a725093eab3d2fe90bc839447043292671665b4932
		Secure: false
	Object:
		Variable: $r15
		Type: java.security.MessageDigest
		Statement: $r15 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r14, varReplacer63488)
		Method: <m.a.h.a: boolean match(java.security.cert.Certificate)>
		SHA-256: 630eb70eb2a5ee962717f2b8c2b6b36b83ce585a051014c1f708edd15792a53a
		Secure: true
	Object:
		Variable: varReplacer70260
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer70260)
		Method: <h.e.a.b0.i.p: javax.crypto.SecretKey a(java.security.interfaces.ECPublicKey,java.security.PrivateKey,java.security.Provider)>
		SHA-256: 67a91f6e5a5eebc91b61acb727fc2800ddf0dcd34a79dd7182e98109ef39be52
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r14
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r14.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer90161, $r3)
		Method: <h.e.a.b0.i.c: byte[] a(javax.crypto.SecretKey,byte[],byte[],byte[],byte[],java.security.Provider)>
		SHA-256: e4c707a3043ecf7212fc81d873e83a705e4b08200dffb4bf4b692e215c27a5fa
		Secure: false
	Object:
		Variable: $r16
		Type: byte[]
		Statement: $r16 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest()>()
		Method: <m.a.h.a: boolean match(java.security.cert.Certificate)>
		SHA-256: d4c045621f982f0d70cade71b33a4a455d9eb948ef4e4bbd38fe4d5821c3523d
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer103240)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 642aae1312d481a09fa5d88e2b7c54b3eb154b1cf965d2a0f0d2d59d0a9362a5
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <h.e.a.b0.i.u: javax.crypto.SecretKey b(javax.crypto.SecretKey,h.e.a.e,byte[],byte[])>
		SHA-256: aac5cf66d4cea6ce01eaa2a99af4d78985908f46a0ac175f47a4741d0f1d89e7
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer75283)
		Method: <h.f.a.a.l2: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 79aa89e81e403d552f6f555c0cfad7a1b9ab27e9b9c62961c2d15971d6e99d82
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer83548)
		Method: <h.e.a.f0.l: javax.crypto.SecretKey a(javax.crypto.SecretKey)>
		SHA-256: 72db6f945d12e0aee89bfca946d7f2c54f26e45642c3c9e162487cef35c30c73
		Secure: false
	Object:
		Variable: r0
		Type: m.a.d.h.d
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r2, $r3, $r4, $i0)
		Method: <m.a.d.h.d: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>
		SHA-256: 7e9b05a9fade4d91041d4f4e2c7f0ba14fb1f3e9dccbc5e7eae98ca435376130
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey: java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve,m.a.b.y0.y)>
		SHA-256: 4bf68a34c81d1edf795aedd92ddee186f149b3050b72dd9d67beac9a5963e08a
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Mac
		Statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer75284)
		Method: <h.f.a.a.l2: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: f47d960074387a2d75947da00dde9b83b4845e2917d02f15385a4f52d96d790e
		Secure: false
	Object:
		Variable: varReplacer75983
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer75983)
		Method: <com.stripe.android.stripe3ds2.a.o: void <init>(byte[],byte)>
		SHA-256: 64ae610a1b10bed41166352b69c88d2909fed1ad89e0dae8635eb02e048f8943
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PrivateKey: void <init>(java.lang.String,m.a.b.y0.d0,org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PublicKey,m.a.d.h.e)>
		SHA-256: 7edea5eeeb5a77eb822f8f79191943ec26ee9bbe4edb21587a9ed6b3c079652b
		Secure: true
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>
		SHA-256: 55c0ef59d2e8f2d9e7c3b9d886f8a0561a8e9e82e242551a90594b801b63073c
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer83518)
		Method: <h.e.a.b0.i.l: javax.crypto.SecretKey a(h.e.a.e,java.security.SecureRandom)>
		SHA-256: a27177fb3639a27488eaa4a70b590d19a8eaee9dd9924c435ccd1e6944d99d71
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r1, $r0)
		Method: <h.e.a.b0.i.i: javax.crypto.Cipher a(java.lang.String,java.security.Provider)>
		SHA-256: 205a8a3c7f2732eb457ffe80b6617b0d45d946105b745956b82e7250563fbebb
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey: void <init>(java.lang.String,m.a.b.y0.d0,org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey,m.a.d.h.e)>
		SHA-256: 967c4f01112b22279695bcf89b6dc1c0b602dca9315f91b4be9227fd5d047c2a
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PublicKey: java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve,m.a.b.y0.y)>
		SHA-256: 177c38da02803216ffa75d860ebfa1e8c15bf6b9ff3285beec343e328eacc366
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r3, varReplacer67291)
		Method: <h.e.a.d0.e: void <clinit>()>
		SHA-256: 5b655c884c93930343dca4fe8dc16b4e767bcb98934089004043f8fd45c08eff
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.JCEElGamalPublicKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: 2f96be90287037dd5aa521a81412c6567fe97ad3bdc0a3e0dd37cb2855cfb876
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r3.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>($r1)
		Method: <com.stripe.android.stripe3ds2.a.n: java.security.KeyPair a()>
		SHA-256: a8b3ddad11049de4b16ba313a728e271dc14dc1a89e71b191d3f001923386cdc
		Secure: true
	Object:
		Variable: varReplacer85444
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer85444)
		Method: <h.e.a.b0.i.k: javax.crypto.SecretKey a(javax.crypto.SecretKey,int,byte[])>
		SHA-256: da31fc2b55d83f20d304722aa6e57fd4eb1be79cfe92ab819a03e9407d303a74
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <h.e.a.b0.i.c: byte[] a(javax.crypto.SecretKey,byte[],byte[],byte[],byte[],java.security.Provider)>
		SHA-256: 91dbdd264b62061bb7be20681bcf13f595b9cc50c916eaca531c7ad3e4fc669c
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyFactory
		Statement: $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer66989)
		Method: <h.e.a.d0.d: java.security.interfaces.ECPublicKey a(java.security.Provider)>
		SHA-256: 96e3b2ccaecfcfcb3ca923c1f5b4115f9fe01f0ce2aed24b807bbb7d0601c424
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <k.k0.i.f: javax.net.ssl.X509TrustManager c()>
		SHA-256: de6e0896ebd2703fccbbf592fff283e0b204ae30b66cb635d1d4b1e9313421a0
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.AlgorithmParameters
		Statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r4)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil: void setSignatureParameters(java.security.Signature,m.a.a.f)>
		SHA-256: 5542b69dc5336cc3d00547288fa7f3d8d3237d121f2ce57576e26391c36e1a8d
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer74006)
		Method: <h.f.a.a.l3: java.lang.String a(java.lang.String)>
		SHA-256: d36d410061e8dc604ef9b4b1e2ddfb070ad0113881ce7f33ef37140e6abc9ec
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.MessageDigest
		Statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r6)
		Method: <h.e.a.b0.i.u: javax.crypto.SecretKey a(javax.crypto.SecretKey,h.e.a.e,byte[],byte[])>
		SHA-256: 8252832de9a055a455d3f27daa04515f496b03d3f7e8fc8162c0913210470d6
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <h.e.a.b0.i.b: byte[] a(java.security.SecureRandom)>
		SHA-256: a45744caa3ce5d28da2e9d9ae9a594583d77b296a969ee2b41bf7bb370ca7aac
		Secure: true
	Object:
		Variable: varReplacer82406
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer82406)
		Method: <h.e.a.b0.a: void <init>(byte[])>
		SHA-256: 6c7f034297d57d1a572207bdc263f11b40ae6f8934e89a3a64fefd33ce0eaa23
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <h.f.a.a.h1: void a(k.a0$a)>
		SHA-256: 46e6304f0ae31de64b246278abcad4b452b3d3023058c2993f647658dd29d3bf
		Secure: true
	Object:
		Variable: $r27
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r27.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r6, $r15)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(m.a.a.h3.h0)>
		SHA-256: 17ea506228f5dc57471137e0b695352a3774e9c7e597031eeeb9157ef0e2b937
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer103242)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 92cd6bed0725430ac50878a127978074b501147883271757e2ff71f1d547c1f6
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer74004)
		Method: <h.f.a.a.l3: java.lang.String a(java.lang.String)>
		SHA-256: e0c937528eea80cd69c01713dbeda2a86430d615169f312c009c21c9ab66441d
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: c9e1ff5450f21aae65af053d6ed29f81c5a7b267991078defbfa3059af0e266a
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r4)
		Method: <h.e.a.b0.i.y: java.security.Signature a(h.e.a.r,java.security.Provider)>
		SHA-256: 4b0fced06f56e40f57a8e073f118c5b40a0f57ee9579ee0bf4a0bdbf0e3e1238
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, $r4)
		Method: <h.f.a.a.x: java.lang.String a(h.f.a.a.c0,java.lang.String)>
		SHA-256: fd288ffcf60eff9a17c9bf198b4fa2b4d10d634b2e3565e0bf8dd951b3b77e09
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.OAEPParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.OAEPParameterSpec: void <init>(java.lang.String,java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.spec.PSource)>(varReplacer83509, varReplacer83510, $r0, $r1)
		Method: <h.e.a.b0.i.b0: byte[] a(java.security.interfaces.RSAPublicKey,javax.crypto.SecretKey,java.security.Provider)>
		SHA-256: 12ed300f0c33e00f8d7118f70349342176445f5c9cc7b3bf3adea389bc88f1d6
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <l.w: l.i b(java.lang.String)>
		SHA-256: e1445b89330e3a378a3c477161dd8789ed7d4ba9ad8488a767cd24afb8f77cb3
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r10 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r0)
		Method: <h.f.a.a.h1: k.a0$a a(int,boolean,boolean,java.lang.String,java.lang.String)>
		SHA-256: f11924d886b0b5f733219b85b7fbddd7d5b7253ec605aaa37c008ea014dc78
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer103237)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 719b5cf5d5e0e1135383baf605ce4c0ccfc5f0f5dbc091258af4f4f2120a0898
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r9.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <h.e.a.b0.f: boolean a(h.e.a.s,byte[],h.e.a.f0.c)>
		SHA-256: d879aa69bf3cf49fd19cccfef636a99c165b5eb136264756c737b20e45c6d3b1
		Secure: false
	Object:
		Variable: varReplacer94162
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer94160, varReplacer94161, varReplacer94162)
		Method: <h.e.a.b0.i.j: void <init>(javax.crypto.SecretKey)>
		SHA-256: f04c36d02b8bd6dc403bb3946323d20b859bcb270f7d7863b76ff72de5ba49ff
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <h.e.a.b0.i.u: javax.crypto.SecretKey a(javax.crypto.SecretKey,h.e.a.e,byte[],byte[])>
		SHA-256: 46b3dd0ddd3aa320c81f0e9d1837b1b5871f5bc23f354a2bea8e40dbe39cab2c
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer60408)
		Method: <h.f.a.a.l3: java.lang.String b(java.lang.String)>
		SHA-256: fc1b5a24c851bb3e6c5861ff912f7b855f6abdc3c0005bc10638ab42f52a5372
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r12)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.gost.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 6c7ef9fa4e7bff262cf03d9de0acc4ec162191195a2243ed7af7fe97a2eb9e56
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.KeyPair
		Statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: b9c461d81d3bc41eecc0783441f280f41b2f629e19018ff708aa15ce8ab9d299
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <h.e.a.b0.i.a0: byte[] a(java.security.interfaces.RSAPublicKey,javax.crypto.SecretKey,java.security.Provider)>
		SHA-256: 22d95b5c2e2cb3806a7d419fb9b39285e9eaba7bb7b30b37e7c1ad702689e318
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: 52666556eb0b9e0106968c3639d610cef0bbf743129b6a2f13e952dd3c4ccbd6
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r10, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey: void <init>(m.a.a.h3.h0)>
		SHA-256: ca8c57f00e636666523b3803cf2d449c7668aea2653306a5d436a81914fd7df0
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyPairGenerator
		Statement: $r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r1)
		Method: <com.stripe.android.stripe3ds2.a.n: java.security.KeyPair a()>
		SHA-256: d3b07ac17c3ba0015452930d55972c3ed18d874b3504e60fed091e677a000703
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r27
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r27.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r6, $r15, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(m.a.a.h3.h0)>
		SHA-256: c67a58db466f44792924e383c9800713831ce853e3ca81f3580a8d50f581e617
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.KeyAgreement
		Statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>(varReplacer70261, $r2)
		Method: <h.e.a.b0.i.p: javax.crypto.SecretKey a(java.security.interfaces.ECPublicKey,java.security.PrivateKey,java.security.Provider)>
		SHA-256: c55fb366b2777f048de60e23ea7201a968f700bab4d86abb7a53ffaba3266a5
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer71689, $r2)
		Method: <k.k0.i.b: javax.net.ssl.SSLContext b()>
		SHA-256: 852b5d8be0d12bebf19b0530fc5a0a3f81c51111d37294b74c0afea8241cfbfb
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <l.w: l.i b(java.lang.String)>
		SHA-256: 4684d722c445c526b89de03be28f87b20622ff783b74ce7d5359616fafcc667b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer94160, varReplacer94161, varReplacer94162)
		Method: <h.e.a.b0.i.j: void <init>(javax.crypto.SecretKey)>
		SHA-256: 4438d4606aae6d3d8dba6dbb6286c75bc4618e0114306b56c04a4a44bcb74cd2
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer75983)
		Method: <com.stripe.android.stripe3ds2.a.o: void <init>(byte[],byte)>
		SHA-256: 757dcec1d0ce4c79eb37dc86fda0d82f9cf21ade935e06d56085288e26516b32
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer60410)
		Method: <h.f.a.a.l3: java.lang.String b(java.lang.String)>
		SHA-256: 928b78b3bdfc0229f893dba3a4577b3945b61275e719e6069481ea59d0793d5
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer83525)
		Method: <h.e.a.b0.i.c: h.e.a.b0.i.f a(javax.crypto.SecretKey,h.e.a.f0.f,byte[],byte[],java.security.Provider)>
		SHA-256: dc94aced0c7a6a537055961643ef949a4735e5a750a554aead7800034d8f6617
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.stripe.android.StripeTextUtils: java.lang.String shaHashInput$stripe_release(java.lang.String)>
		SHA-256: 630582dc15eb683bc7e536e16118b42334cfd0b430ccf1a8e2987ceded23ad63
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: a9c19b12994234db6ec00ed5b541d5738b556e23d3870b731ea4245dbf932de7
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)
		Method: <h.e.a.b0.i.s: javax.crypto.Mac a(javax.crypto.SecretKey,java.security.Provider)>
		SHA-256: 3b2540d1d26117200417372c8bf1590dd9306a352d6cf259fa744fe767b4a448
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(varReplacer83522, $r5)
		Method: <h.e.a.b0.i.c: h.e.a.b0.i.f a(javax.crypto.SecretKey,h.e.a.f0.f,byte[],byte[],java.security.Provider)>
		SHA-256: a0b223dfa9dc1db337a9d42347b9f7afa3cd485255721574135fe81322c5e059
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <h.e.a.b0.i.k: java.security.MessageDigest b()>
		SHA-256: 7681ed6af6bedc18f8cec7c79fa21603b04e7549afa592c5fcf042737a31a28
		Secure: true
	Object:
		Variable: $r6
		Type: java.lang.String
		Statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r6)
		Method: <h.e.a.b0.i.u: javax.crypto.SecretKey b(javax.crypto.SecretKey,h.e.a.e,byte[],byte[])>
		SHA-256: e6df605d4fb1c392266b00628e6abc1252d98593e00ba32d48762224257dfcc8
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.TrustManager[]
		Statement: $r17 = virtualinvoke $r16.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <h.f.a.a.h1: void a(k.a0$a)>
		SHA-256: 4cfa4918c9aecda08cd00ffb656b2f3c5f026af8155da86611977c6ceb4fb292
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManager[]
		Statement: $r1 = virtualinvoke $r12.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <h.f.a.a.s0: javax.net.ssl.TrustManager[] b()>
		SHA-256: 32de2fbc127b478729f5dcb69b8b3fd60a3b544de96e593346ad41976f01d146
		Secure: true
	Object:
		Variable: $r32
		Type: java.security.PrivateKey
		Statement: $r32 = virtualinvoke $r30.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.stripe.android.stripe3ds2.transaction.b$b: java.lang.String getDeviceData()>
		SHA-256: 72a208f780700e08eb1d1b872190a1e17a1413fcb05793161a05b67857f1c9da
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.cert.CertificateFactory
		Statement: $r10 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer40365)
		Method: <h.f.a.a.k: boolean a(android.content.pm.PackageManager,java.lang.String,java.lang.String,java.lang.String,int)>
		SHA-256: 593ecd6e6696e2f0db4afdd7f8b4ebfc8eb7eb8774d924a03f337b7470b0662c
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer94148, varReplacer94149, varReplacer94150)
		Method: <h.e.a.b0.i.j: void <init>(javax.crypto.SecretKey)>
		SHA-256: 7b85428c7090174358c9fa8280ba8bd772a22f36b22fea79354452599a66d70c
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r5)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void verify(java.security.PublicKey)>
		SHA-256: 112e0b98b9789074d4ec3ee999f422c7c115607a7d5cddcfc5fefe2723a7aec7
		Secure: false
	Object:
		Variable: varReplacer75283
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer75283)
		Method: <h.f.a.a.l2: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 8e857e0fa4195e60ad52e38ccf8edf5feae3e94b95cad17fd6bbc3d591e0ee00
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r8.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.stripe.android.stripe3ds2.transaction.t: com.stripe.android.stripe3ds2.transaction.AuthenticationRequestParameters getAuthenticationRequestParameters()>
		SHA-256: 42ed6f528205fa45a1810386da7bd9574aa7aece81c4e5790b1ee3eb7f7ed066
		Secure: false
	Object:
		Variable: varReplacer83577
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer83577)
		Method: <h.e.a.b0.i.b: javax.crypto.Cipher a(javax.crypto.SecretKey,boolean,byte[],java.security.Provider)>
		SHA-256: bf272942e32f66ee6b449715d576f4dbdc8a80aa7db3b94affa8c608189769d8
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <l.i: l.i b(java.lang.String)>
		SHA-256: dca818cc6224580ef9f68104e02314a35aa440c7cca3ebd42281be3017a81005
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.AlgorithmParameters
		Statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.X509SignatureUtil: void setSignatureParameters(java.security.Signature,m.a.a.f)>
		SHA-256: 5542b69dc5336cc3d00547288fa7f3d8d3237d121f2ce57576e26391c36e1a8d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.AlgorithmParameters
		Statement: $r2 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>($r1)
		Method: <h.e.a.b0.i.d: java.security.AlgorithmParameters a(java.lang.String,java.security.Provider)>
		SHA-256: 1f8d2a705114e09004fdc7b37edd89e9e163b12740aa98ed9dadcacddb7f32e3
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey: void <init>(java.lang.String,m.a.b.y0.d0,org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey,m.a.d.h.e)>
		SHA-256: 967c4f01112b22279695bcf89b6dc1c0b602dca9315f91b4be9227fd5d047c2a
		Secure: true
	Object:
		Variable: varReplacer66987
		Type: java.lang.String
		Statement: $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>(varReplacer66987, $r1)
		Method: <h.e.a.d0.d: java.security.interfaces.ECPublicKey a(java.security.Provider)>
		SHA-256: 5be01e76aa517b8dfbb89ae366d8e59b5ce8ce14aa28caf0515d4ad61eb460d1
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.KeyPair
		Statement: specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r15, $r16)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: aadd026eb861686e693690e72b434ddb064fe8bbbf9e5c4e4de2a60a071d8baf
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r9.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <h.e.a.b0.f: boolean a(h.e.a.s,byte[],h.e.a.f0.c)>
		SHA-256: 94af2ef2b6678aede066614848a040cdda56d3ab33755741c8b4930a30a55164
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <h.e.a.c0.b: java.security.SecureRandom b()>
		SHA-256: 67c65dd8e11b6a614f550a0ef3d4209150672c13c89d49ca090a35b17bd787d3
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r3, $r6, $r7)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey: void <init>(m.a.b.y0.s)>
		SHA-256: 2d5d5ac1c460f68032e60a336ee4552b59000b4adb566ea09230715136a1ffd8
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: c908257ebef1e44e27421c3dc6127a4c79990e1515e273132ea2c2cb020fcdee
		Secure: true
	Object:
		Variable: $r28
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r28.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r25, $r27, $r1, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey: void populateFromPubKeyInfo(m.a.a.h3.h0)>
		SHA-256: 33899f14414ab9da2c6fa8198d3caf4c03a0b90c1c6aeb24f8c86a9bd8c60591
		Secure: true
	Object:
		Variable: varReplacer83565
		Type: java.lang.String
		Statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer83565)
		Method: <h.e.a.b0.i.u: javax.crypto.SecretKey a(javax.crypto.SecretKey,h.e.a.e,byte[],byte[])>
		SHA-256: cbd9fab3c1a4771d698911df1e5e8d9296cfa52a9de350f31f3a889104f1f105
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r3, varReplacer67296)
		Method: <h.e.a.d0.e: void <clinit>()>
		SHA-256: 57c5210cbae0d5c6e2905089a53230188555d551ec543d63babf9d77e017c30c
		Secure: true
	Object:
		Variable: $r13
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r13.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r12, $r15, $r8, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey: void <init>(java.lang.String,m.a.b.y0.d0,org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,m.a.d.h.e,org.bouncycastle.jcajce.provider.config.ProviderConfiguration)>
		SHA-256: 86df246b8c1578d3501a486e27f08db6d1aa41db6923499c742aa2e3fe110297
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r3.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r2, $r5, $r6)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey: void <init>(m.a.b.y0.t)>
		SHA-256: 9390edae09a93724017ade479bb47ea94287e6460977d2dad3759cd566636f64
		Secure: true
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>
		SHA-256: 55c0ef59d2e8f2d9e7c3b9d886f8a0561a8e9e82e242551a90594b801b63073c
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer103232)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: b6f42a8de6d74565d2e9319f4bdea462cd31511f83de7da77c79917a363c5a53
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey: void <init>(java.lang.String,m.a.b.y0.d0,org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey,m.a.d.h.e)>
		SHA-256: 181aa94d9dfb4131bf99e325443dd030be8d0745e2fdbe58d6599dfe9ccd41a6
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>
		SHA-256: cebe45f59ca6821eb5e75723e2592c61a7970e6687e96537a7fa5d2712864b7
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r17.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r14, $r15, varReplacer70700)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(m.a.a.i3.g,m.a.e.b.d)>
		SHA-256: b48b7455e64fbb133a48c7ae4f2d673e431bdd12f525903d7a39102b4206142d
		Secure: true
	Object:
		Variable: $r17
		Type: java.security.KeyPair
		Statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: b9c461d81d3bc41eecc0783441f280f41b2f629e19018ff708aa15ce8ab9d299
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.cert.CertificateFactory
		Statement: $r2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer101795)
		Method: <com.stripe.android.model.Stripe3ds2Fingerprint$DirectoryServerEncryption: java.security.cert.X509Certificate generateCertificate(java.lang.String)>
		SHA-256: cc678ff0ace3312a68a30ea5a7c0557cc42ee32367b87ec3e484b295be3a1f2
		Secure: false
	Object:
		Variable: $r16
		Type: java.security.PublicKey
		Statement: $r16 = virtualinvoke $r30.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.stripe.android.stripe3ds2.transaction.b$b: java.lang.String getDeviceData()>
		SHA-256: e9f6fe7cc827901ecf8ceff0aad4bfc32047c36828eb3c59e6806447749c5c33
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer71692)
		Method: <k.k0.i.f: javax.net.ssl.SSLContext b()>
		SHA-256: 407d70f2a2f555bd2f3d526c741601b4d6ad2e99983d8be8bb8ee2142feaa4eb
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <h.f.a.a.l3: java.lang.String a(java.lang.String)>
		SHA-256: c22e7519c3ffeae26e5ce004e61c9cc33c61ee5888f38c2c7fa6dc66d2189e82
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6)
		Method: <com.stripe.android.stripe3ds2.transaction.l$a: boolean a(java.util.List,java.util.List)>
		SHA-256: 31fa10c577a38ed9003c8c8e3de4eede1d3efe11ab3ea3f6b28f272c350bc045
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <k.k0.i.e: javax.net.ssl.X509TrustManager c()>
		SHA-256: d46c92d1fa653cf7aa032ededf777e32d8e64b3f426f9ae0d6a9b3feaa6a528f
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Mac
		Statement: $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r4)
		Method: <h.f.a.a.x: java.lang.String a(h.f.a.a.c0,java.lang.String)>
		SHA-256: 99b3acc90f9e37deab595a69380fd8901a1b911b819b9c5e386610e3b5b458cf
		Secure: false
	Object:
		Variable: $r14
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r6)
		Method: <h.e.a.b0.i.u: javax.crypto.SecretKey b(javax.crypto.SecretKey,h.e.a.e,byte[],byte[])>
		SHA-256: 5a3b5f20b0b42d03d7ea13db78f9cb17187e4e93c92bb7c946afd4787a9bb70f
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r11, $r13, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey: void <init>(java.lang.String,m.a.b.y0.d0,org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,java.security.spec.ECParameterSpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration)>
		SHA-256: 3791d0e41e5884e70c40ed063afce31c8bbf57c28cb756f172c554e92147502c
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer82406)
		Method: <h.e.a.b0.a: void <init>(byte[])>
		SHA-256: 40fa1b459d60147444b45e1b736c74c903acc4d32f0abaffdf5c9925e30b61c4
		Secure: false
	Object:
		Variable: $r4
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, $r4)
		Method: <h.e.a.b0.i.s: byte[] a(java.lang.String,byte[],byte[],java.security.Provider)>
		SHA-256: cc5290efd04b63a20fe32cf4eca4c3653703d0d6229cf198a727804f8fc255d1
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(varReplacer90158, $r6)
		Method: <h.e.a.b0.i.c: byte[] a(javax.crypto.SecretKey,byte[],byte[],byte[],byte[],java.security.Provider)>
		SHA-256: e60ce7443727953a4adfa0950a251c210cf7ad00f0361018ab8f54d0cb739e97
		Secure: false
	Object:
		Variable: varReplacer66989
		Type: java.lang.String
		Statement: $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer66989)
		Method: <h.e.a.d0.d: java.security.interfaces.ECPublicKey a(java.security.Provider)>
		SHA-256: b263522adcd7e9d74d724c12cb7730d458f4ac6a28a9a6d6bd70441d8f65a792
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.PublicKey
		Statement: $r9 = virtualinvoke $r8.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r7)
		Method: <h.e.a.d0.d: java.security.interfaces.ECPublicKey a(java.security.Provider)>
		SHA-256: 8d292bd928a6cff6050736b2b13ca45267c3f07abe7e09aab09530dcdf71018
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r7.<javax.crypto.Mac: byte[] doFinal(byte[])>($r9)
		Method: <h.f.a.a.x: java.lang.String a(h.f.a.a.c0,java.lang.String)>
		SHA-256: 67852a3490f95e49dc2061e1232b15bc5955494541aa03c88ec80a9e65cde2d0
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: c9e1ff5450f21aae65af053d6ed29f81c5a7b267991078defbfa3059af0e266a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <k.k0.i.f: javax.net.ssl.X509TrustManager c()>
		SHA-256: ec1a553f8922dccad4693bf968dbc3eed4be0e2a81217543e58750b2eb8535f8
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r4, $r1)
		Method: <h.e.a.b0.i.y: java.security.Signature a(h.e.a.r,java.security.Provider)>
		SHA-256: da85322b3a8cb3d97024106f518f8809811648167a5b72dc8c8b7c8ef158d6f3
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.MessageDigest
		Statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r6)
		Method: <h.e.a.b0.i.u: javax.crypto.SecretKey b(javax.crypto.SecretKey,h.e.a.e,byte[],byte[])>
		SHA-256: 190a6d2532130396348b137ddb1983ce8469361b69238bc688c55ec42ce880e7
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <h.e.a.b0.i.l: javax.crypto.SecretKey a(h.e.a.e,java.security.SecureRandom)>
		SHA-256: 7e0181bd54ebefe9ca2108f03cb51488bbf03ffb545617ef6a3ca481c6ad3e34
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)
		Method: <h.e.a.b0.i.i: javax.crypto.Cipher a(java.lang.String,java.security.Provider)>
		SHA-256: 42c20f01817f10e26671adfa3042d498b5a81421a9b383de30ab5df505ef8be6
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.JCEElGamalPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: 6b8822e70d4604e23c0ea07692bf2c9c1daaa36d64fb48b6df14aae465189041
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r12, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey: void <init>(java.lang.String,m.a.b.y0.d0,org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey,java.security.spec.ECParameterSpec)>
		SHA-256: 493fa9240f9e173840410f81e7dfc7583eef5d11bd5490d3eabf120ecd5536b5
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <h.e.a.b0.i.k: javax.crypto.SecretKey a(javax.crypto.SecretKey,int,byte[])>
		SHA-256: 69719977d12d16d69eaea716f00548bb312fc87efd84f5d305fddc974e7f399b
		Secure: true
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer85444)
		Method: <h.e.a.b0.i.k: javax.crypto.SecretKey a(javax.crypto.SecretKey,int,byte[])>
		SHA-256: b570cf55b2c05aa69dd9ae1593834137153d626e5f6dfdcd0dfef02d830da089
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>
		SHA-256: cebe45f59ca6821eb5e75723e2592c61a7970e6687e96537a7fa5d2712864b7
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer90163)
		Method: <h.e.a.b0.i.c: byte[] a(javax.crypto.SecretKey,byte[],byte[],byte[],byte[],java.security.Provider)>
		SHA-256: 32ca67f4dec67a5f21242b708e3814146a8775eaa6bef07ecd2d73d7b3e0df05
		Secure: false
	Object:
		Variable: varReplacer83518
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer83518)
		Method: <h.e.a.b0.i.l: javax.crypto.SecretKey a(h.e.a.e,java.security.SecureRandom)>
		SHA-256: 643cb4b9cdce699db48514f78b348a7ab39e963fe70873df8d63772c489a20e4
		Secure: false
	Object:
		Variable: varReplacer94158
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer94156, varReplacer94157, varReplacer94158)
		Method: <h.e.a.b0.i.j: void <init>(javax.crypto.SecretKey)>
		SHA-256: 3eb0627a56a15e932fe707eb4ee5aa0a9fa7c8f70e4d902c3fc2f957dcd0e0ad
		Secure: false
	Object:
		Variable: $r11
		Type: javax.net.ssl.TrustManager[]
		Statement: $r11 = virtualinvoke $r10.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <h.f.a.a.h1: k.a0$a a(int,boolean,boolean,java.lang.String,java.lang.String)>
		SHA-256: 74d5011e3535769c4108644d77fa510263f27b5da8d0662bca63910df91b4fa3
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.cert.CertificateFactory
		Statement: $r7 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer33268)
		Method: <h.f.a.a.h1: void a(k.a0$a)>
		SHA-256: c9f4b7be57d70c4bd3098ecae539e37d989069401c70d1ff1a178eeadc3c132b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer94163, varReplacer94163, varReplacer94165)
		Method: <h.e.a.b0.i.j: void <init>(javax.crypto.SecretKey)>
		SHA-256: b69de25eb7b8486ab96cb2be1a3765a5d620b1091a85b2a1bf7c3983ed6b898e
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r12, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey: void <init>(java.lang.String,m.a.b.y0.d0,org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey,java.security.spec.ECParameterSpec)>
		SHA-256: 3ba938937705aba5e3c3d277dfcc715f8b43a8b6ac333db58c7d4cf1d9df1f2a
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r3)
		Method: <h.e.a.b0.i.q: java.security.Signature a(h.e.a.r,java.security.Provider)>
		SHA-256: 450cc7eec08ad14cdcff9263ace9aa79d40e2aa2297b62394fdaaaf4b5e397b8
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyFactory
		Statement: $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>(varReplacer66987, $r1)
		Method: <h.e.a.d0.d: java.security.interfaces.ECPublicKey a(java.security.Provider)>
		SHA-256: 814e24261bbce41f6fb464aeef11326260a7df7383f4583fad5b5dde0bf91d57
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer94156, varReplacer94157, varReplacer94158)
		Method: <h.e.a.b0.i.j: void <init>(javax.crypto.SecretKey)>
		SHA-256: 209b172fed7388cbe0d3a104188169cdb42758e75e03a29ee46ed789f8755063
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r5)
		Method: <h.f.a.a.h1: void a(k.a0$a)>
		SHA-256: 38b80849b07790ed95d2c3eb2a9f988f847a2ed8d69d6f33079908c0574290d
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.KeyAgreement: byte[] generateSecret()>()
		Method: <h.e.a.b0.i.p: javax.crypto.SecretKey a(java.security.interfaces.ECPublicKey,java.security.PrivateKey,java.security.Provider)>
		SHA-256: a929e1dd4d5ccb487d2e4169f1876d9f20fcf4350d6cf8f75f3c36a1fd663411
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer103241)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 43fb3835421b22e49b05f22d9aa2989e488619ba4d6ce7f66934c1b85dedd1d7
		Secure: false
	Object:
		Variable: $r4
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, $r4)
		Method: <h.f.a.a.x: java.lang.String a(h.f.a.a.c0,java.lang.String)>
		SHA-256: 80e653538c5023c766b74136697e8f34a9e9586cbe5b96af224626b566c63f91
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer103238)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: da238f2e97e5c8d8b5a44f9c931e613671094fb5a9aebdd635aeafb5802e1701
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey: java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve,m.a.b.y0.y)>
		SHA-256: 8932abb3effe3ac7b4693b86e1e64f9620a092735469fa0a27ce4f58e149492e
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <h.e.a.b0.i.q: java.security.Signature a(h.e.a.r,java.security.Provider)>
		SHA-256: a526cbc7690e4d446087ec7264df2683a853799d0c81411dafe2245553abfdd2
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer85446)
		Method: <h.e.a.b0.i.k: javax.crypto.SecretKey a(javax.crypto.SecretKey,int,byte[])>
		SHA-256: c7dd4962e3f0c43597aeb1d7e439dab9a90dd39df0ed2793e2830adeaeecf2be
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer63097)
		Method: <h.f.a.a.x: java.lang.String a(java.lang.String)>
		SHA-256: 63ce48d98098b70f2439515dc710039b426d90ecb396d99e5245217acacebd31
		Secure: true
	Object:
		Variable: r0
		Type: m.a.h.d
		Statement: specialinvoke r0.<java.security.cert.PKIXParameters: void <init>(java.util.Set)>($r1)
		Method: <m.a.h.d: void <init>(java.util.Set)>
		SHA-256: 8b044c7ddfa38b54fe0419cbf70fda89c13a9e09555c14783d692708df5e9613
		Secure: true
	Object:
		Variable: r0
		Type: m.a.d.h.d
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r7, $r8, $r2, $i0)
		Method: <m.a.d.h.d: void <init>(java.lang.String,m.a.e.b.d,m.a.e.b.h,java.math.BigInteger,java.math.BigInteger,byte[])>
		SHA-256: fbd2141c8cb2cabeef9e8c2d1f7a65ba2e2aad61bcdf729df0b220143209e225
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey: void <init>(java.lang.String,m.a.b.y0.d0,org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey,m.a.d.h.e)>
		SHA-256: 181aa94d9dfb4131bf99e325443dd030be8d0745e2fdbe58d6599dfe9ccd41a6
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey: java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve,m.a.b.y0.y)>
		SHA-256: 1ed34635d886298f1ac65535003eb919395a61c4e94f473f6395f42d219d6f5f
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PrivateKey: void <init>(java.lang.String,m.a.b.y0.d0,org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PublicKey,m.a.d.h.e)>
		SHA-256: 7edea5eeeb5a77eb822f8f79191943ec26ee9bbe4edb21587a9ed6b3c079652b
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r3, varReplacer67281)
		Method: <h.e.a.d0.e: void <clinit>()>
		SHA-256: 3f3ef3cd1bd62c20fb8db177b0f609f66e798839b42eb2359f9be37e82c5bdfd
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <h.e.a.b0.i.b: javax.crypto.Cipher a(javax.crypto.SecretKey,boolean,byte[],java.security.Provider)>
		SHA-256: b6573c98eeb63e29eba82122a3d719d03a550d1752195a6876180bf40b83be9f
		Secure: true
	Object:
		Variable: $r17
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r17.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r14, $r15, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(m.a.a.i3.g,m.a.e.b.d)>
		SHA-256: 586465352ab9af4baa8bd6b84d1dc9d3dd1da757db32b3c2f23070a01ae1e9c0
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.cert.CertificateFactory
		Statement: $r7 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer97931)
		Method: <k.d$c: java.util.List a(l.h)>
		SHA-256: ef48d1351f1cdff651106d824093ba34c4cb0127b7559fd5e7b852bcdbb5fd30
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyPair
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.stripe.android.stripe3ds2.a.n: java.security.KeyPair a()>
		SHA-256: c319eb47ba5b9b32d61e786a2dd2a9e497d377134ec6c8f32b2a24aaf0005e60
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r3, $r2)
		Method: <h.e.a.b0.i.k: java.security.MessageDigest b()>
		SHA-256: c62e8e68032a5920b1a69cee5b34f71a09dc862737ae2d6b980e7bfe16e070c5
		Secure: true
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r12.<java.security.Signature: boolean verify(byte[])>($r9)
		Method: <h.e.a.b0.c: boolean a(h.e.a.s,byte[],h.e.a.f0.c)>
		SHA-256: 9fd086e9439612eebac21506b6d7c5f1c5389486c782603aecbcc27ededd6983
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.cert.CertificateFactory
		Statement: $r4 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer76313)
		Method: <h.f.a.a.s0: javax.net.ssl.TrustManager[] b()>
		SHA-256: e9620fedeef8f690e3870511acff0f9b06931d3312cb4a190edd3f6c5e647110
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <h.e.a.b0.i.s: byte[] a(javax.crypto.SecretKey,byte[],java.security.Provider)>
		SHA-256: a03323618000b9f8dc41183859e47467cee3e0c66a7569fb2219c3fbe35f00ac
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer84962)
		Method: <com.stripe.android.StripeTextUtils: java.lang.String shaHashInput$stripe_release(java.lang.String)>
		SHA-256: b3c4a242fa1c6366ad3df7ca21a1003bceacf69d1d6c3ded31e71b146b6e44f8
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <h.e.a.b0.i.c: byte[] a(java.security.SecureRandom)>
		SHA-256: 349d15fdc8723bcfcc7faf7fb964c3f8ff52c6407dd255879676883229c018b1
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: varReplacer49384
		Type: java.lang.String
		Statement: $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer49384)
		Method: <com.stripe.android.stripe3ds2.a.d: void <init>()>
		SHA-256: 8382b2f447c539db78c34042bdf1ad24ed2a27bd4a01be1baac20b74c559c137
		Secure: true
	Object:
		Variable: $r16
		Type: java.security.cert.PKIXBuilderParameters
		Statement: specialinvoke $r16.<java.security.cert.PKIXBuilderParameters: void <init>(java.security.KeyStore,java.security.cert.CertSelector)>($r7, $r14)
		Method: <com.stripe.android.stripe3ds2.transaction.l$a: boolean a(java.util.List,java.util.List)>
		SHA-256: 5cc927f47a08889b6692c91dab0ee55c64b1ddabd54749c565a40daacca3fc34
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r5, varReplacer63789)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void verify(java.security.PublicKey)>
		SHA-256: ec7c1bd58d1d7756331dbfbc2abede1c1b0d777ddd94102c5b73d238ba48330a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer42352)
		Method: <h.f.a.a.j1: void <init>(javax.net.ssl.TrustManager)>
		SHA-256: a94a6b11dec4b1026f252218de3c32d23e8c2e036d316c5b581bdc4e13e0219f
		Secure: false

Findings in Java Class: com.stripe.android.StripeSSLSocketFactory$Companion

	 in Method: java.lang.String[] getSupportedProtocols$stripe_release()
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>.
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


Findings in Java Class: h.f.a.a.h1

	 in Method: void a(k.a0$a)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #c9f4b7be57d70c4bd3098ecae539e37d989069401c70d1ff1a178eeadc3c132b)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate
			at statement: $r10 = virtualinvoke $r7.<java.security.cert.CertificateFactory: java.util.Collection generateCertificates(java.io.InputStream)>($r9)


	 in Method: k.a0$a a(int,boolean,boolean,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r10.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer33251)


Findings in Java Class: h.f.a.a.k

	 in Method: boolean a(android.content.pm.PackageManager,java.lang.String,java.lang.String,java.lang.String,int)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #593ecd6e6696e2f0db4afdd7f8b4ebfc8eb7eb8774d924a03f337b7470b0662c)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r11 = virtualinvoke $r10.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r9)


Findings in Java Class: h.f.a.a.j1

	 in Method: void <init>(javax.net.ssl.TrustManager)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #a94a6b11dec4b1026f252218de3c32d23e8c2e036d316c5b581bdc4e13e0219f)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer42352)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer42353, $r2, varReplacer42353)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer42353, $r2, varReplacer42353)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer42353, $r2, varReplacer42353)


Findings in Java Class: h.e.a.f0.o

	 in Method: java.security.cert.X509Certificate b(byte[])
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #83a1e01b03286021bec8f4bb8e79a2f1dbdbe10a9640475db09cb113921c53fb)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r3 = virtualinvoke $r1.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r2)


Findings in Java Class: h.f.a.a.l3

	 in Method: java.lang.String b(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer60413, $r6)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #fc1b5a24c851bb3e6c5861ff912f7b855f6abdc3c0005bc10638ab42f52a5372)
			First parameter (with value "DES") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer60408)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #928b78b3bdfc0229f893dba3a4577b3945b61275e719e6069481ea59d0793d5)
			First parameter (with value "DES") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer60410)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #fc1b5a24c851bb3e6c5861ff912f7b855f6abdc3c0005bc10638ab42f52a5372)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r4 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)


	 in Method: java.lang.String a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer74000, $r6)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #d36d410061e8dc604ef9b4b1e2ddfb070ad0113881ce7f33ef37140e6abc9ec)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r4 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #e0c937528eea80cd69c01713dbeda2a86430d615169f312c009c21c9ab66441d)
			First parameter (with value "DES") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer74004)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d36d410061e8dc604ef9b4b1e2ddfb070ad0113881ce7f33ef37140e6abc9ec)
			First parameter (with value "DES") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer74006)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)


Findings in Java Class: m.a.h.a

	 in Method: boolean match(java.security.cert.Certificate)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #630eb70eb2a5ee962717f2b8c2b6b36b83ce585a051014c1f708edd15792a53a)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r16 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: h.e.a.b0.i.y

	 in Method: java.security.Signature a(h.e.a.r,java.security.Provider)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #4b0fced06f56e40f57a8e073f118c5b40a0f57ee9579ee0bf4a0bdbf0e3e1238)
			First parameter (with value "SHA384withRSAandMGF1") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r4)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #da85322b3a8cb3d97024106f518f8809811648167a5b72dc8c8b7c8ef158d6f3)
			First parameter (with value "SHA256withRSAandMGF1") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r4, $r1)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #4b0fced06f56e40f57a8e073f118c5b40a0f57ee9579ee0bf4a0bdbf0e3e1238)
			First parameter (with value "SHA512withRSAandMGF1") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r4)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #da85322b3a8cb3d97024106f518f8809811648167a5b72dc8c8b7c8ef158d6f3)
			First parameter (with value "SHA384withRSAandMGF1") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r4, $r1)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #da85322b3a8cb3d97024106f518f8809811648167a5b72dc8c8b7c8ef158d6f3)
			First parameter (with value "SHA512withRSAandMGF1") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r4, $r1)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #4b0fced06f56e40f57a8e073f118c5b40a0f57ee9579ee0bf4a0bdbf0e3e1238)
			First parameter (with value "SHA256withRSAandMGF1") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r4)


Findings in Java Class: h.e.a.b0.i.s

	 in Method: javax.crypto.Mac a(javax.crypto.SecretKey,java.security.Provider)
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #3b2540d1d26117200417372c8bf1590dd9306a352d6cf259fa744fe767b4a448)
			First parameter (with value "PKCS12") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #fe196c0ebec969bb57f8502ded82a0ec97b9e35b904b3c5d5cd0202fc6fce211)
			First parameter (with value "PBKDF1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #3b2540d1d26117200417372c8bf1590dd9306a352d6cf259fa744fe767b4a448)
			First parameter (with value "PBKDF2") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #3b2540d1d26117200417372c8bf1590dd9306a352d6cf259fa744fe767b4a448)
			First parameter (with value "PBKDF1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>($r0)


	 in Method: byte[] a(java.lang.String,byte[],byte[],java.security.Provider)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, $r4)


Findings in Java Class: h.f.a.a.s0

	 in Method: void <init>()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #4a6de06d6c0bedee61e6939ebe6dfe3e66af346a83a1e0dc9cb3df2fd838a254)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer68346)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer68347, $r2, varReplacer68347)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer68347, $r2, varReplacer68347)


	 in Method: javax.net.ssl.TrustManager[] b()
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #e9620fedeef8f690e3870511acff0f9b06931d3312cb4a190edd3f6c5e647110)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate
			at statement: $r6 = virtualinvoke $r4.<java.security.cert.CertificateFactory: java.util.Collection generateCertificates(java.io.InputStream)>($r5)


Findings in Java Class: k.k0.i.b

	 in Method: javax.net.ssl.SSLContext b()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #852b5d8be0d12bebf19b0530fc5a0a3f81c51111d37294b74c0afea8241cfbfb)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer71689, $r2)


Findings in Java Class: k.k0.i.f

	 in Method: javax.net.ssl.SSLContext b()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #407d70f2a2f555bd2f3d526c741601b4d6ad2e99983d8be8bb8ee2142feaa4eb)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer71692)


	 in Method: javax.net.ssl.X509TrustManager c()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer62835)


Findings in Java Class: h.f.a.a.l2

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #f47d960074387a2d75947da00dde9b83b4845e2917d02f15385a4f52d96d790e)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer75284)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer75283)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #79aa89e81e403d552f6f555c0cfad7a1b9ab27e9b9c62961c2d15971d6e99d82)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer75283)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Mac: void init(java.security.Key)>($r3)


Findings in Java Class: com.stripe.android.stripe3ds2.a.o

	 in Method: void <init>(byte[],byte)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer75983)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #757dcec1d0ce4c79eb37dc86fda0d82f9cf21ade935e06d56085288e26516b32)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer75983)


Findings in Java Class: h.e.a.b0.i.i

	 in Method: javax.crypto.Cipher a(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #205a8a3c7f2732eb457ffe80b6617b0d45d946105b745956b82e7250563fbebb)
			First parameter (with value "RSA/ECB/OAEPWithSHA-1AndMGF1Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r1, $r0)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #42c20f01817f10e26671adfa3042d498b5a81421a9b383de30ab5df505ef8be6)
			First parameter (with value "RSA/ECB/OAEPWithSHA-1AndMGF1Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #205a8a3c7f2732eb457ffe80b6617b0d45d946105b745956b82e7250563fbebb)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r1, $r0)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #205a8a3c7f2732eb457ffe80b6617b0d45d946105b745956b82e7250563fbebb)
			First parameter (with value "RSA/ECB/OAEPWithSHA-256AndMGF1Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r1, $r0)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #42c20f01817f10e26671adfa3042d498b5a81421a9b383de30ab5df505ef8be6)
			First parameter (with value "RSA/ECB/OAEPWithSHA-256AndMGF1Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #42c20f01817f10e26671adfa3042d498b5a81421a9b383de30ab5df505ef8be6)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)


Findings in Java Class: h.e.a.b0.i.b

	 in Method: byte[] a(javax.crypto.SecretKey,byte[],byte[],java.security.Provider)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #205a8a3c7f2732eb457ffe80b6617b0d45d946105b745956b82e7250563fbebb)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #42c20f01817f10e26671adfa3042d498b5a81421a9b383de30ab5df505ef8be6)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)


	 in Method: byte[] b(javax.crypto.SecretKey,byte[],byte[],java.security.Provider)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #205a8a3c7f2732eb457ffe80b6617b0d45d946105b745956b82e7250563fbebb)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #42c20f01817f10e26671adfa3042d498b5a81421a9b383de30ab5df505ef8be6)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)


	 in Method: javax.crypto.Cipher a(javax.crypto.SecretKey,boolean,byte[],java.security.Provider)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer83577)


Findings in Java Class: h.e.a.b0.i.b0

	 in Method: byte[] a(java.security.interfaces.RSAPublicKey,javax.crypto.SecretKey,java.security.Provider)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #205a8a3c7f2732eb457ffe80b6617b0d45d946105b745956b82e7250563fbebb)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r8 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r8)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #42c20f01817f10e26671adfa3042d498b5a81421a9b383de30ab5df505ef8be6)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r8 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedAlg
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(varReplacer83507, $r2, $r5)

		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedOAEP
			at statement: virtualinvoke $r5.<java.security.AlgorithmParameters: void init(java.security.spec.AlgorithmParameterSpec)>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.OAEPParameterSpec
			First parameter was not properly generated as preparedMGF1
			at statement: specialinvoke $r6.<javax.crypto.spec.OAEPParameterSpec: void <init>(java.lang.String,java.lang.String,java.security.spec.AlgorithmParameterSpec,javax.crypto.spec.PSource)>(varReplacer83509, varReplacer83510, $r0, $r1)


Findings in Java Class: h.e.a.b0.i.w

	 in Method: byte[] a(java.security.interfaces.RSAPublicKey,javax.crypto.SecretKey,java.security.Provider)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #205a8a3c7f2732eb457ffe80b6617b0d45d946105b745956b82e7250563fbebb)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r4 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #42c20f01817f10e26671adfa3042d498b5a81421a9b383de30ab5df505ef8be6)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r4 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer83517, $r0)


Findings in Java Class: h.e.a.b0.i.a0

	 in Method: byte[] a(java.security.interfaces.RSAPublicKey,javax.crypto.SecretKey,java.security.Provider)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #205a8a3c7f2732eb457ffe80b6617b0d45d946105b745956b82e7250563fbebb)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #42c20f01817f10e26671adfa3042d498b5a81421a9b383de30ab5df505ef8be6)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)


Findings in Java Class: com.stripe.android.StripeTextUtils

	 in Method: java.lang.String shaHashInput$stripe_release(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b3c4a242fa1c6366ad3df7ca21a1003bceacf69d1d6c3ded31e71b146b6e44f8)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer84962)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b3c4a242fa1c6366ad3df7ca21a1003bceacf69d1d6c3ded31e71b146b6e44f8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer84962)


Findings in Java Class: h.e.a.b0.i.k

	 in Method: javax.crypto.SecretKey a(javax.crypto.SecretKey,int,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer85444)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #7681ed6af6bedc18f8cec7c79fa21603b04e7549afa592c5fcf042737a31a28)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i2 = virtualinvoke $r4.<java.security.MessageDigest: int getDigestLength()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c62e8e68032a5920b1a69cee5b34f71a09dc862737ae2d6b980e7bfe16e070c5)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i2 = virtualinvoke $r4.<java.security.MessageDigest: int getDigestLength()>()


Findings in Java Class: k.d$c

	 in Method: java.util.List a(l.h)
		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #ef48d1351f1cdff651106d824093ba34c4cb0127b7559fd5e7b852bcdbb5fd30)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r11 = virtualinvoke $r7.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r10)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #ef48d1351f1cdff651106d824093ba34c4cb0127b7559fd5e7b852bcdbb5fd30)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r7 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer97931)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #ef48d1351f1cdff651106d824093ba34c4cb0127b7559fd5e7b852bcdbb5fd30)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r11 = virtualinvoke $r7.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r10)


Findings in Java Class: com.stripe.android.stripe3ds2.a.n

	 in Method: java.security.KeyPair a()
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedDSA
			at statement: virtualinvoke $r2.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r3)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #d3b07ac17c3ba0015452930d55972c3ed18d874b3504e60fed091e677a000703)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), genKeyPair, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r5 = virtualinvoke $r2.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedRSA
			at statement: virtualinvoke $r2.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r3)


Findings in Java Class: l.w

	 in Method: l.i b(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #4684d722c445c526b89de03be28f87b20622ff783b74ce7d5359616fafcc667b)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4684d722c445c526b89de03be28f87b20622ff783b74ce7d5359616fafcc667b)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: l.i

	 in Method: l.i b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d3f5caf22661a936ed4bb469723774d415b659e664da0c1e791bfef8c9c1d613)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: com.stripe.android.model.Stripe3ds2Fingerprint$DirectoryServerEncryption

	 in Method: java.security.cert.X509Certificate generateCertificate(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #cc678ff0ace3312a68a30ea5a7c0557cc42ee32367b87ec3e484b295be3a1f2)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r6 = virtualinvoke $r2.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r5)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #cc678ff0ace3312a68a30ea5a7c0557cc42ee32367b87ec3e484b295be3a1f2)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate
			at statement: $r2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer101795)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #642aae1312d481a09fa5d88e2b7c54b3eb154b1cf965d2a0f0d2d59d0a9362a5)
			First parameter (with value "prime192v1") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer103240)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #43fb3835421b22e49b05f22d9aa2989e488619ba4d6ce7f66934c1b85dedd1d7)
			First parameter (with value "P-521") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer103241)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #92cd6bed0725430ac50878a127978074b501147883271757e2ff71f1d547c1f6)
			First parameter (with value "P-224") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer103242)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #da238f2e97e5c8d8b5a44f9c931e613671094fb5a9aebdd635aeafb5802e1701)
			First parameter (with value "prime239v1") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer103238)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #b6f42a8de6d74565d2e9319f4bdea462cd31511f83de7da77c79917a363c5a53)
			First parameter (with value "P-384") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer103232)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #719b5cf5d5e0e1135383baf605ce4c0ccfc5f0f5dbc091258af4f4f2120a0898)
			First parameter (with value "prime256v1") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer103237)


	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject

	 in Method: void checkSignature(java.security.PublicKey,java.security.Signature)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r2.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: h.e.a.b0.i.u

	 in Method: javax.crypto.SecretKey a(javax.crypto.SecretKey,h.e.a.e,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer83565)


	 in Method: javax.crypto.SecretKey b(javax.crypto.SecretKey,h.e.a.e,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r6)


Findings in Java Class: h.e.a.b0.i.c

	 in Method: h.e.a.b0.i.f a(javax.crypto.SecretKey,h.e.a.f0.f,byte[],byte[],java.security.Provider)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer83526, $r1, $r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer83526, $r1, $r9)


	 in Method: byte[] a(javax.crypto.SecretKey,byte[],byte[],byte[],byte[],java.security.Provider)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer90162, $r2, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r14.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer90161, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer90162, $r2, $r8)


Findings in Java Class: k.k0.i.e

	 in Method: javax.net.ssl.X509TrustManager c()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer62841)


Findings in Java Class: h.e.a.b0.i.j

	 in Method: void <init>(javax.crypto.SecretKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer94167, varReplacer94167, varReplacer94169)


Findings in Java Class: org.bouncycastle.jce.provider.X509CertificateObject

	 in Method: void checkSignature(java.security.PublicKey,java.security.Signature)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r2.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.ecgost12.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)


Findings in Java Class: org.bouncycastle.jce.provider.X509SignatureUtil

	 in Method: void setSignatureParameters(java.security.Signature,m.a.a.f)
		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: virtualinvoke $r5.<java.security.AlgorithmParameters: void init(byte[])>($r7)


Findings in Java Class: k.a0$b

	 in Method: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer62848, $r9, varReplacer62848)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer62848, $r9, varReplacer62848)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer62848, $r9, varReplacer62848)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r15, $r16)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r15, $r16)


Findings in Java Class: com.stripe.android.stripe3ds2.a.d

	 in Method: java.security.interfaces.ECPublicKey a(byte[])
		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)


Findings in Java Class: h.e.a.b0.i.p

	 in Method: javax.crypto.SecretKey a(java.security.interfaces.ECPublicKey,java.security.PrivateKey,java.security.Provider)
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyAgreement
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r3.<javax.crypto.KeyAgreement: void init(java.security.Key)>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer70260)

		RequiredPredicateError violating CrySL rule for javax.crypto.KeyAgreement
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>($r0, varReplacer70259)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)


Findings in Java Class: h.f.a.a.x

	 in Method: java.lang.String a(h.f.a.a.c0,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Mac: void init(java.security.Key)>($r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, $r4)


Findings in Java Class: h.e.a.b0.a

	 in Method: void <init>(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer82406)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)


Findings in Java Class: h.e.a.b0.f

	 in Method: boolean a(h.e.a.s,byte[],h.e.a.f0.c)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r9.<java.security.Signature: void initVerify(java.security.PublicKey)>($r10)


Findings in Java Class: h.e.a.f0.l

	 in Method: javax.crypto.SecretKey a(javax.crypto.SecretKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer83548)


Findings in Java Class: h.e.a.b0.i.l

	 in Method: javax.crypto.SecretKey a(h.e.a.e,java.security.SecureRandom)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer83518)


Findings in Java Class: h.e.a.d0.d

	 in Method: java.security.interfaces.ECPublicKey a(java.security.Provider)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r9 = virtualinvoke $r8.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r7)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil

	 in Method: void setSignatureParameters(java.security.Signature,m.a.a.f)
		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: virtualinvoke $r5.<java.security.AlgorithmParameters: void init(byte[])>($r7)


Findings in Java Class: h.e.a.b0.c

	 in Method: boolean a(h.e.a.s,byte[],h.e.a.f0.c)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r12.<java.security.Signature: void initVerify(java.security.PublicKey)>($r13)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.gost.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r12)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r12)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 211

	CryptoAnalysis found the following violations. For details see description above.
	NeverTypeOfError: 1
	RequiredPredicateError: 70
	ConstraintError: 35
	ForbiddenMethodError: 1
	IncompleteOperationError: 12
	TypestateError: 15
=====================================================================
