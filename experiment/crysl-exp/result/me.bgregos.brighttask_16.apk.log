0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: r0
		Type: org.bouncycastle.jcajce.spec.DHDomainParameterSpec
		Statement: specialinvoke r0.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r1, $r3, $i1)
		Method: <org.bouncycastle.jcajce.spec.DHDomainParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int,int)>
		SHA-256: 9cdde17292729ed12e67e00ef32f20bc0ba0a50cc823d5bcab3268462fa45fcd
		Secure: true
	Object:
		Variable: r0
		Type: org.bouncycastle.x509.ExtendedPKIXParameters
		Statement: specialinvoke r0.<java.security.cert.PKIXParameters: void <init>(java.util.Set)>($r1)
		Method: <org.bouncycastle.x509.ExtendedPKIXParameters: void <init>(java.util.Set)>
		SHA-256: bc4db4edf85d5095c872f763083d4cdd57eaf413157a98ff957c0439448eaca6
		Secure: true
	Object:
		Variable: $r27
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r27.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r24, $r26, $r1, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey: void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 9deb6609bc4306ea107c391861256ce8967efc9e995facc6f07a2930a991dcbf
		Secure: true
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.NamedJcaJceHelper: java.security.KeyFactory createKeyFactory(java.lang.String)>
		SHA-256: 2a6b13f22a78806d8df4779023ab556cbd7ca1041e2ddfe2773a7d67b92cb347
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.ProviderJcaJceHelper: java.security.KeyFactory createKeyFactory(java.lang.String)>
		SHA-256: 6dcd9842a19e4a606d2bb7099685ef7f6c6b488582376a788f81b0044f4df306
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: byte[] generateSignature()>
		SHA-256: 153ecb1a57e7fd3a3f9212bf84d10102d6cb1bcca8396308797653bf2209f59c
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.cert.CertificateFactory
		Statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer23416)
		Method: <de.aaschmid.taskwarrior.ssl.KeyStoreBuilder: java.util.List createCertificatesFor(java.io.File)>
		SHA-256: 7d98e564480eca993291e81c04f75bcdf3f235d5bcd47481ef2268d338597a78
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.NamedJcaJceHelper: java.security.MessageDigest createDigest(java.lang.String)>
		SHA-256: e8a87e246a6c009eb3e7a31f13191dde4223e81c9a0be79ef2d398a0ab6930dc
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <de.aaschmid.taskwarrior.ssl.SslContextFactory: javax.net.ssl.TrustManager[] loadTrustMaterial(java.security.KeyStore)>
		SHA-256: a7e6e1b910ed7c8ece6dd749dbe0ce7d0315f6ed9573135cedd267ebf472420c
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <org.bouncycastle.crypto.encodings.PKCS1Encoding: byte[] encodeBlock(byte[],int,int)>
		SHA-256: eacef851ce54f73496b5b532959f537500639a3690f0ee1369bef27820eadfb
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.ProviderJcaJceHelper: java.security.MessageDigest createDigest(java.lang.String)>
		SHA-256: 73f93d39bce4abc7febcf31ac561db4038d2baae13c0462688d95e5dc7a0ac02
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.util.DefaultJcaJceHelper: java.security.MessageDigest createDigest(java.lang.String)>
		SHA-256: e485ecd53ecca8cba6ed010ffc115ca04172eb9152ffd532b50b45741978f36
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <de.aaschmid.taskwarrior.ssl.SslContextFactory: javax.net.ssl.TrustManager[] loadTrustMaterial(java.security.KeyStore)>
		SHA-256: 3b06d42860c5ccdc828e870624acc6a20b83555b510aa65ae333cb601f25e579
		Secure: false
	Object:
		Variable: $r15
		Type: java.security.MessageDigest
		Statement: $r15 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r14, varReplacer15255)
		Method: <org.bouncycastle.x509.AttributeCertificateHolder: boolean match(java.security.cert.Certificate)>
		SHA-256: bb67f2b1d0ca2cff259640096ac4650ea6edebe93f6a5d8c1c6a3be66bea599f
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.CryptoServicesRegistrar: java.security.SecureRandom getSecureRandom()>
		SHA-256: 582698de09c351e067e554bf94377392090de64bd016bfd274eb14d55c98501f
		Secure: true
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.ProviderJcaJceHelper: java.security.KeyFactory createKeyFactory(java.lang.String)>
		SHA-256: 7977622ee9f57d4a4fd2018199ea273a0f9eaba1f33ffad00fe7c48b628f908e
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.JCEElGamalPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: 6b8822e70d4604e23c0ea07692bf2c9c1daaa36d64fb48b6df14aae465189041
		Secure: true
	Object:
		Variable: $r5
		Type: javax.net.ssl.KeyManager[]
		Statement: $r5 = virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <de.aaschmid.taskwarrior.ssl.SslContextFactory: javax.net.ssl.KeyManager[] loadKeyMaterial(java.security.KeyStore,java.lang.String)>
		SHA-256: c26502cfdc1db7a592237db79b6c52d946872f99f571625c060b5cce84cb2cfc
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <org.bouncycastle.crypto.signers.PSSSigner: byte[] generateSignature()>
		SHA-256: 5971d6538d25f1e396808264bf05345b660a017c8af8ec968b717cf263b5ce6a
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: c908257ebef1e44e27421c3dc6127a4c79990e1515e273132ea2c2cb020fcdee
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: a9c19b12994234db6ec00ed5b541d5738b556e23d3870b731ea4245dbf932de7
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r2)
		Method: <de.aaschmid.taskwarrior.ssl.SslContextFactory: javax.net.ssl.KeyManager[] loadKeyMaterial(java.security.KeyStore,java.lang.String)>
		SHA-256: 2e49970d2c39d3277c4ba17a1c43d2ba46f7e02e0b718d7ce1fc506a59192638
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r17.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r14, $r15, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(org.bouncycastle.asn1.x9.X962Parameters,org.bouncycastle.math.ec.ECCurve)>
		SHA-256: 586465352ab9af4baa8bd6b84d1dc9d3dd1da757db32b3c2f23070a01ae1e9c0
		Secure: true
	Object:
		Variable: $r27
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r27.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r6, $r15, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: c67a58db466f44792924e383c9800713831ce853e3ca81f3580a8d50f581e617
		Secure: true
	Object:
		Variable: $r6
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r6)
		Method: <org.bouncycastle.cert.crmf.jcajce.JcePKMACValuesCalculator: byte[] calculateMac(byte[],byte[])>
		SHA-256: 4285b0b336ff13a2ca84a5fdd03ee2fb749bcf650a7075e378932054b1c6d205
		Secure: false
	Object:
		Variable: $r27
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r27.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r6, $r15)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 17ea506228f5dc57471137e0b695352a3774e9c7e597031eeeb9157ef0e2b937
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.PrivateKey
		Statement: $r6 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r4)
		Method: <org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter: java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)>
		SHA-256: a17070e43ea89dc5d9505d182a92da4209dac7f567fa3e1002e3f01895433d10
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.NamedJcaJceHelper: java.security.KeyFactory createKeyFactory(java.lang.String)>
		SHA-256: fed0f6bb87cbcef61bb361a7a2af43c9b85514c599a8c1ca47f496063046c25d
		Secure: false
	Object:
		Variable: $r16
		Type: byte[]
		Statement: $r16 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.bouncycastle.x509.AttributeCertificateHolder: boolean match(java.security.cert.Certificate)>
		SHA-256: 733e42bbdc4639c4f728ddf34e9b407d27b5d8c13567d81937f01e426dc09e8e
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r0)
		Method: <de.aaschmid.taskwarrior.ssl.SslContextFactory: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.KeyStore,java.lang.String)>
		SHA-256: e27aa8044ea62d664a8bfec405fbe113897071c4eb70d7e28c314b1955243fd6
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r17.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r14, $r15, varReplacer31257)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(org.bouncycastle.asn1.x9.X962Parameters,org.bouncycastle.math.ec.ECCurve)>
		SHA-256: c5512b582b3f0a19fd7bf935c6499c5b79569c5b27558df245c5124f30f48b19
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r10, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: ca8c57f00e636666523b3803cf2d449c7668aea2653306a5d436a81914fd7df0
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.JCEElGamalPublicKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: 2f96be90287037dd5aa521a81412c6567fe97ad3bdc0a3e0dd37cb2855cfb876
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r6)
		Method: <org.bouncycastle.cert.crmf.jcajce.JcePKMACValuesCalculator: byte[] calculateMac(byte[],byte[])>
		SHA-256: 55eb535ec698f1bdaa9b9339c4f90a63f5a7b71223f9954d433aa3fd06fab83
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyFactory
		Statement: $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.util.DefaultJcaJceHelper: java.security.KeyFactory createKeyFactory(java.lang.String)>
		SHA-256: 7f07316255acf6c2b7bca090a4e664f355d182706a163acbdb368bfde642c5ac
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.util.DefaultJcaJceHelper: java.security.KeyFactory createKeyFactory(java.lang.String)>
		SHA-256: f7bc006853af11db2bdefc50a8970a168ddfa89f06fcc40a58d92e615afa11c9
		Secure: false
	Object:
		Variable: r0
		Type: org.bouncycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r2, $r3, $r4, $i0)
		Method: <org.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>
		SHA-256: b36d50207c12d926e435b859cb9848007d52f50b2e62c847e597de1f84f657c6
		Secure: true

Findings in Java Class: de.aaschmid.taskwarrior.ssl.SslContextFactory

	 in Method: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.KeyStore,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, $r5, varReplacer13412)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #e27aa8044ea62d664a8bfec405fbe113897071c4eb70d7e28c314b1955243fd6)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r0)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, $r5, varReplacer13412)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, $r5, varReplacer13412)


	 in Method: javax.net.ssl.KeyManager[] loadKeyMaterial(java.security.KeyStore,java.lang.String)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #2e49970d2c39d3277c4ba17a1c43d2ba46f7e02e0b718d7ce1fc506a59192638)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r0, $r4)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #2e49970d2c39d3277c4ba17a1c43d2ba46f7e02e0b718d7ce1fc506a59192638)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r0, $r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r0, $r4)


	 in Method: javax.net.ssl.TrustManager[] loadTrustMaterial(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r0)


Findings in Java Class: org.bouncycastle.x509.AttributeCertificateHolder

	 in Method: boolean match(java.security.cert.Certificate)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #bb67f2b1d0ca2cff259640096ac4650ea6edebe93f6a5d8c1c6a3be66bea599f)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r16 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: de.aaschmid.taskwarrior.ssl.KeyStoreBuilder

	 in Method: java.util.List createCertificatesFor(java.io.File)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #7d98e564480eca993291e81c04f75bcdf3f235d5bcd47481ef2268d338597a78)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer23416)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #7d98e564480eca993291e81c04f75bcdf3f235d5bcd47481ef2268d338597a78)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r6 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r3)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #7d98e564480eca993291e81c04f75bcdf3f235d5bcd47481ef2268d338597a78)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r6 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r3)


Findings in Java Class: org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1

	 in Method: org.bouncycastle.operator.DigestCalculator get(org.bouncycastle.asn1.x509.AlgorithmIdentifier)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #73f93d39bce4abc7febcf31ac561db4038d2baae13c0462688d95e5dc7a0ac02)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r6.<org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1$1: void <init>(org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$DigestOutputStream)>(r0, $r1, $r5)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e485ecd53ecca8cba6ed010ffc115ca04172eb9152ffd532b50b45741978f36)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r6.<org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1$1: void <init>(org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$DigestOutputStream)>(r0, $r1, $r5)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e8a87e246a6c009eb3e7a31f13191dde4223e81c9a0be79ef2d398a0ab6930dc)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r6.<org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1$1: void <init>(org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1,org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$DigestOutputStream)>(r0, $r1, $r5)


Findings in Java Class: org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter

	 in Method: java.security.PrivateKey getPrivateKey(org.bouncycastle.asn1.pkcs.PrivateKeyInfo)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r6 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r4)


Findings in Java Class: org.bouncycastle.cert.crmf.jcajce.JcePKMACValuesCalculator

	 in Method: byte[] calculateMac(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r6)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 37

	CryptoAnalysis found the following violations. For details see description above.
	NeverTypeOfError: 1
	IncompleteOperationError: 5
	TypestateError: 2
	ConstraintError: 1
	RequiredPredicateError: 7
	HardCodedError: 1
=====================================================================
