0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
2    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
2    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
2    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
2    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer23311)
		Method: <net.openid.appauth.AuthorizationRequest$Builder: void <init>(net.openid.appauth.AuthorizationServiceConfiguration,java.lang.String,java.lang.String,android.net.Uri)>
		SHA-256: d009563fa796a459d7ceaaebe9f523903228260050283e9ae7a3cb3da00b6c89
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: virtualinvoke $r7.<java.security.SecureRandom: void nextBytes(byte[])>($r8)
		Method: <net.openid.appauth.AuthorizationRequest$Builder: void <init>(net.openid.appauth.AuthorizationServiceConfiguration,java.lang.String,java.lang.String,android.net.Uri)>
		SHA-256: 93edd7b8ace4032d3ba55f9a25bacd8be5ae310a8e4310c8a145c341e29cff1c
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <net.openid.appauth.AuthorizationRequest$Builder: void <init>(net.openid.appauth.AuthorizationServiceConfiguration,java.lang.String,java.lang.String,android.net.Uri)>
		SHA-256: ce6f636574ff41cbb0f6525e1b42b651d2a76378eebce0769892fb90ac73274
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r8)
		Method: <net.openid.appauth.browser.BrowserDescriptor: void <init>(android.content.pm.PackageInfo,boolean)>
		SHA-256: 4974f37dc42e3e8bf683198998bd9c3bf6aa014e156e27c361dc4bfe406f9beb
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <net.openid.appauth.AuthorizationRequest$Builder: void <init>(net.openid.appauth.AuthorizationServiceConfiguration,java.lang.String,java.lang.String,android.net.Uri)>
		SHA-256: ce6f636574ff41cbb0f6525e1b42b651d2a76378eebce0769892fb90ac73274
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: virtualinvoke $r7.<java.security.SecureRandom: void nextBytes(byte[])>($r8)
		Method: <net.openid.appauth.AuthorizationRequest$Builder: void <init>(net.openid.appauth.AuthorizationServiceConfiguration,java.lang.String,java.lang.String,android.net.Uri)>
		SHA-256: 93edd7b8ace4032d3ba55f9a25bacd8be5ae310a8e4310c8a145c341e29cff1c
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <net.openid.appauth.AuthorizationRequest$Builder: void <init>(net.openid.appauth.AuthorizationServiceConfiguration,java.lang.String,java.lang.String,android.net.Uri)>
		SHA-256: ce6f636574ff41cbb0f6525e1b42b651d2a76378eebce0769892fb90ac73274
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: virtualinvoke $r7.<java.security.SecureRandom: void nextBytes(byte[])>($r8)
		Method: <net.openid.appauth.AuthorizationRequest$Builder: void <init>(net.openid.appauth.AuthorizationServiceConfiguration,java.lang.String,java.lang.String,android.net.Uri)>
		SHA-256: 93edd7b8ace4032d3ba55f9a25bacd8be5ae310a8e4310c8a145c341e29cff1c
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <net.openid.appauth.AuthorizationRequest$Builder: void <init>(net.openid.appauth.AuthorizationServiceConfiguration,java.lang.String,java.lang.String,android.net.Uri)>
		SHA-256: 120d680b927226a45d8c41443a8911fe55b809e080dd57eb4a0903851da8018
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20304)
		Method: <net.openid.appauth.browser.BrowserDescriptor: void <init>(android.content.pm.PackageInfo,boolean)>
		SHA-256: b8de4c33ffaa2d533423da6c101b308adb92b257726fcada99536f2c59d0553e
		Secure: true

======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 10
No violation of any of the rules found.
=====================================================================
