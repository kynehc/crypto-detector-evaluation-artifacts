0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
2    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
2    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
2    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
2    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: f6730166425cdde60c0ca0f7f01862a2b9705ad5b213be5cd1a19bc89976254d
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <nya.miku.wishmaster.api.util.CryptoUtils: java.lang.String computeMD5(java.lang.String)>
		SHA-256: 3a867ea253f86ad35de1ce43e27181bae9954030b4e809852f1f861e8136bd5d
		Secure: false
	Object:
		Variable: $r28
		Type: byte[]
		Statement: $r28 = virtualinvoke $r21.<java.security.MessageDigest: byte[] digest(byte[])>($r28)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: cz.msebera.android.httpclient.Header createDigestHeader(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest)>
		SHA-256: 398bad5c6bd6376cab8d2fd47c34c36c83d24b774b6000152f441644a2385f2e
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer28159)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: void <clinit>()>
		SHA-256: 6f5062a749368f6df352fc9af06fcc9223c4e4f6a6ef002110a0d3e915d92f64
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer28478)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: 4450d6787837318c7fa4175bd805174917af352d4ffc3643daf0bb86eaa08cbe
		Secure: false
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer220)
		Method: <cz.msebera.android.httpclient.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: b35bf518c24863c79d4e357f471211a199282b007c3fffd4d2d3b69d2d3163af
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1572)
		Method: <nya.miku.wishmaster.api.util.CryptoUtils: java.lang.String computeMD5(java.lang.String)>
		SHA-256: 4c923ba274c48b8178663ef06275dbb6846ea885a49608ff6456a3017c492a30
		Secure: false
	Object:
		Variable: $r14
		Type: javax.net.ssl.SSLContext
		Statement: $r14 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer23410)
		Method: <org.acra.util.HttpRequest: void send(java.net.URL,org.acra.sender.HttpSender$Method,java.lang.String,org.acra.sender.HttpSender$Type)>
		SHA-256: 24a6ef2c88af80e957bee56ee86785403d4ecdcb5ad3d643ab28f90a88013f89
		Secure: false
	Object:
		Variable: varReplacer28376
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer28376)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: fe507b8b680ee5aeff205fc69b2ea6a69927959914bb7facc56e68ec90ed42d8
		Secure: false
	Object:
		Variable: $r11
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r11 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r10)
		Method: <org.acra.util.HttpRequest: void send(java.net.URL,org.acra.sender.HttpSender$Method,java.lang.String,org.acra.sender.HttpSender$Type)>
		SHA-256: ea9664f3e8c7157cff2f4971bdc39998c66dcb80b4e3ae7f77adffaf411ae9a9
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer18882)
		Method: <com.esotericsoftware.kryo.serializers.BlowfishSerializer: javax.crypto.Cipher getCipher(int)>
		SHA-256: a2d2acafc161a3f4b64097e94bc3c4cceda9183335421190c767a7f5950588bf
		Secure: false
	Object:
		Variable: $r15
		Type: javax.net.ssl.TrustManager[]
		Statement: $r15 = virtualinvoke $r11.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.acra.util.HttpRequest: void send(java.net.URL,org.acra.sender.HttpSender$Method,java.lang.String,org.acra.sender.HttpSender$Type)>
		SHA-256: fa30dcba687867903a97ab0fda71b22333be009254dd33b84962133eac0c3080
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer1780)
		Method: <nya.miku.wishmaster.http.client.ExtendedTrustManager: javax.net.ssl.X509TrustManager getTrustManager(java.security.KeyStore)>
		SHA-256: d5d97106a9ab006e8f90fb783fef0fbd12501cd76605affceda0ef80f8693e79
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke r5.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r2, $r7)
		Method: <com.esotericsoftware.kryo.serializers.BlowfishSerializer: void write(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Output,java.lang.Object)>
		SHA-256: 27222e34daeb5c46ffed9d93ff9f3388d0d88091d97ec3553c3a8c9be2a35927
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <nya.miku.wishmaster.http.client.ExtendedTrustManager: javax.net.ssl.X509TrustManager getTrustManager(java.security.KeyStore)>
		SHA-256: 1d185a5749cd8db37b04f98c3b888cab9cbd77b0a0eb7cd7baf4106446a70bd
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer28381)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: a643f9a329b75cc1ea26f5bdf639d55806afd02e96dd838ff974ffaa7697d482
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <cz.msebera.android.httpclient.impl.auth.HttpEntityDigester: void close()>
		SHA-256: 5020684bd03563c662dec957ca19c700782e9612231ac691e59b3474f6b5144d
		Secure: true
	Object:
		Variable: varReplacer28211
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer28211)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 88681b1dd567a6e28210ad97d4fb59e43fac1ff234d9fd6e64d1aa058ef6066f
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer28353)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: fd733ee425e2f1c365a9454fad25d40a6725a01ec9c7b6d6ba472eefe092d0b1
		Secure: false
	Object:
		Variable: $r28
		Type: byte[]
		Statement: $r28 = virtualinvoke $r21.<java.security.MessageDigest: byte[] digest(byte[])>($r28)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: cz.msebera.android.httpclient.Header createDigestHeader(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest)>
		SHA-256: 398bad5c6bd6376cab8d2fd47c34c36c83d24b774b6000152f441644a2385f2e
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 8dda2f10cd4911a51ea6f84d756034bbd2b170b00e8eb73d84894dc35d4275e0
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer28213)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: ea2bdd0244c7027bcbfe94e18c4a471e2b673663c31ebb7359dcc256831872d8
		Secure: false
	Object:
		Variable: r0
		Type: java.security.SecureRandom
		Statement: specialinvoke r0.<java.security.SecureRandom: void <init>()>()
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: b56bf2cae5bfa605b5c0f3f1ed3c66e7efd35dd5f6695c94d88024e2f86cbfeb
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer28504)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>
		SHA-256: 3f2e0752742ed616fab9f3773c085d8d01ad07e8f2fc86f1c0f9018adbe0581
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: 1a242a50035a2f12b0c41660a772866f29bb169e7ab8ef503713f67db7fc3d3c
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>
		SHA-256: d8520a3a2d487807e0d145c0db7ce0651afa0bb43a713882d5447ec42f6f3f86
		Secure: false
	Object:
		Variable: $r28
		Type: byte[]
		Statement: $r28 = virtualinvoke $r21.<java.security.MessageDigest: byte[] digest(byte[])>($r28)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: cz.msebera.android.httpclient.Header createDigestHeader(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest)>
		SHA-256: 398bad5c6bd6376cab8d2fd47c34c36c83d24b774b6000152f441644a2385f2e
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer28211)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 9de5dc5415e11190124c8771ebd97d81d1f9549bedb9a71ffb3aa3d73e938cda
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <nya.miku.wishmaster.api.util.CryptoUtils: java.lang.String computeSHA1(java.lang.String)>
		SHA-256: ea43fa5c3353ff4967c230945efa8ec27b119c9e3253c835f6c03ea024c1bdfc
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: virtualinvoke r0.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 156cbf551d6e1beb81241eb72d74c33b8c0683b6a4ddbbd561927c6397757da7
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer28349)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 8707545bc83bbf3f5184090072478dc20e33259347b02c53169cb7a0d8ea046f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer28376)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: a29cf0110773b18e5ed02d4a356b66e71e346ed98f95a26972c8356fedd55a4e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <nya.miku.wishmaster.http.client.ExtendedTrustManager: java.lang.String certHash(java.security.cert.X509Certificate,java.lang.String)>
		SHA-256: d4a853d6090fa361cdaae2f42aa8d8dec272a80230d72f971a05fb3a733000b3
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <nya.miku.wishmaster.http.client.ExtendedTrustManager: java.lang.String certHash(java.security.cert.X509Certificate,java.lang.String)>
		SHA-256: e9ca3f8f7a24fc303615fed2fe6209340c7a803d2c62a334abba3d1fcf58ba87
		Secure: false
	Object:
		Variable: $r28
		Type: byte[]
		Statement: $r28 = virtualinvoke $r21.<java.security.MessageDigest: byte[] digest(byte[])>($r28)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: cz.msebera.android.httpclient.Header createDigestHeader(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest)>
		SHA-256: 398bad5c6bd6376cab8d2fd47c34c36c83d24b774b6000152f441644a2385f2e
		Secure: true
	Object:
		Variable: r4
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke r4.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r2, $r5)
		Method: <com.esotericsoftware.kryo.serializers.BlowfishSerializer: java.lang.Object read(com.esotericsoftware.kryo.Kryo,com.esotericsoftware.kryo.io.Input,java.lang.Class)>
		SHA-256: b293dff1ac50192ae883a197ca4839aab201ea7fd7ff72a19c1e1d6cad786a53
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 3bcbf4d912455255294e9bee4d91f33f3fa55dd4a67dc970c48252366cf97c1f
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <nya.miku.wishmaster.http.client.ExtendedTrustManager: java.security.KeyStore loadAppKeyStore(java.io.File)>
		SHA-256: 213c571e36d9ce1865a021f6fca1290aee12a1fc0725d9dda24bf98a677bae75
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>
		SHA-256: 90089763a6d8ad99d7a078009f4f20f1280e88a97f87e7a81671c3cbb9756ff
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer28369)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>
		SHA-256: 5c97497fa145a8972753e8ef867c0299cbb3545b6ddb10d0079a3afd5283262c
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6742)
		Method: <nya.miku.wishmaster.api.util.CryptoUtils: java.lang.String computeSHA1(java.lang.String)>
		SHA-256: 56015928debdfc8bc4da5b555b69ab9f509da5b4cb11502abf8bee3792cc7352
		Secure: false

Findings in Java Class: cz.msebera.android.httpclient.conn.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createDefault()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #b35bf518c24863c79d4e357f471211a199282b007c3fffd4d2d3b69d2d3163af)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer220)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer217, varReplacer217, varReplacer217)


Findings in Java Class: nya.miku.wishmaster.http.client.ExtendedSSLSocketFactory

	 in Method: void initInteractiveObjects()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer215, $r6, varReplacer215)

		TypestateError violating CrySL rule for javax.net.ssl.SSLContext (on Object #b35bf518c24863c79d4e357f471211a199282b007c3fffd4d2d3b69d2d3163af)
			Unexpected call to method init on object of type javax.net.ssl.SSLContext. Expect a call to one of the following methods createSSLEngine
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer215, $r6, varReplacer215)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer215, $r6, varReplacer215)


Findings in Java Class: nya.miku.wishmaster.api.util.CryptoUtils

	 in Method: java.lang.String computeMD5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4c923ba274c48b8178663ef06275dbb6846ea885a49608ff6456a3017c492a30)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1572)


	 in Method: java.lang.String computeSHA1(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #56015928debdfc8bc4da5b555b69ab9f509da5b4cb11502abf8bee3792cc7352)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6742)


Findings in Java Class: nya.miku.wishmaster.http.client.ExtendedTrustManager

	 in Method: javax.net.ssl.X509TrustManager getTrustManager(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r0)

		ConstraintError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #d5d97106a9ab006e8f90fb783fef0fbd12501cd76605affceda0ef80f8693e79)
			First parameter (with value "X509") should be any of {PKIX, SunX509}
			at statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer1780)


	 in Method: java.security.KeyStore loadAppKeyStore(java.io.File)
		TypestateError violating CrySL rule for java.security.KeyStore (on Object #213c571e36d9ce1865a021f6fca1290aee12a1fc0725d9dda24bf98a677bae75)
			Unexpected call to method load on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r1, $r5)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #213c571e36d9ce1865a021f6fca1290aee12a1fc0725d9dda24bf98a677bae75)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r1, $r5)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #213c571e36d9ce1865a021f6fca1290aee12a1fc0725d9dda24bf98a677bae75)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r1, $r5)


	 in Method: java.lang.String certHash(java.security.cert.X509Certificate,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d4a853d6090fa361cdaae2f42aa8d8dec272a80230d72f971a05fb3a733000b3)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: com.esotericsoftware.kryo.serializers.BlowfishSerializer

	 in Method: javax.crypto.Cipher getCipher(int)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a2d2acafc161a3f4b64097e94bc3c4cceda9183335421190c767a7f5950588bf)
			First parameter (with value "Blowfish") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer18882)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key)>($i0, $r2)


Findings in Java Class: org.acra.util.HttpRequest

	 in Method: void send(java.net.URL,org.acra.sender.HttpSender$Method,java.lang.String,org.acra.sender.HttpSender$Type)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer23391, $r15, varReplacer23391)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer23391, $r15, varReplacer23391)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r11.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r13)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #24a6ef2c88af80e957bee56ee86785403d4ecdcb5ad3d643ab28f90a88013f89)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r14 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer23410)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer23391, $r15, varReplacer23391)


Findings in Java Class: cz.msebera.android.httpclient.impl.auth.HttpEntityDigester

	 in Method: void close()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #1a242a50035a2f12b0c41660a772866f29bb169e7ab8ef503713f67db7fc3d3c)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: nya.miku.wishmaster.common.IOUtils$CancellableOutputStream

	 in Method: void write(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #1a242a50035a2f12b0c41660a772866f29bb169e7ab8ef503713f67db7fc3d3c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: $z0 = specialinvoke r0.<nya.miku.wishmaster.common.IOUtils$CancellableOutputStream: boolean checkCancelled()>()


	 in Method: void write(byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #1a242a50035a2f12b0c41660a772866f29bb169e7ab8ef503713f67db7fc3d3c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: $z0 = specialinvoke r0.<nya.miku.wishmaster.common.IOUtils$CancellableOutputStream: boolean checkCancelled()>()


Findings in Java Class: nya.miku.wishmaster.lib.base64.Base64OutputStream

	 in Method: void internalWrite(byte[],int,int,boolean)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #1a242a50035a2f12b0c41660a772866f29bb169e7ab8ef503713f67db7fc3d3c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: $r4 = specialinvoke r0.<nya.miku.wishmaster.lib.base64.Base64OutputStream: byte[] embiggen(byte[],int)>($r4, $i2)


Findings in Java Class: com.esotericsoftware.kryo.io.Output

	 in Method: boolean require(int)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #1a242a50035a2f12b0c41660a772866f29bb169e7ab8ef503713f67db7fc3d3c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: virtualinvoke r0.<com.esotericsoftware.kryo.io.Output: void flush()>()


Findings in Java Class: com.esotericsoftware.kryo.io.ByteBufferOutput

	 in Method: boolean require(int)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #1a242a50035a2f12b0c41660a772866f29bb169e7ab8ef503713f67db7fc3d3c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: virtualinvoke r0.<com.esotericsoftware.kryo.io.ByteBufferOutput: void flush()>()


Findings in Java Class: cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl

	 in Method: byte[] RC4(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer28212, $r4)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ea2bdd0244c7027bcbfe94e18c4a471e2b673663c31ebb7359dcc256831872d8)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #9de5dc5415e11190124c8771ebd97d81d1f9549bedb9a71ffb3aa3d73e938cda)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer28211)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer28211)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ea2bdd0244c7027bcbfe94e18c4a471e2b673663c31ebb7359dcc256831872d8)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer28213)


	 in Method: byte[] ntlm2SessionResponse(byte[],byte[],byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5c97497fa145a8972753e8ef867c0299cbb3545b6ddb10d0079a3afd5283262c)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer28369)


	 in Method: java.security.Key createDESKey(byte[],int)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #a29cf0110773b18e5ed02d4a356b66e71e346ed98f95a26972c8356fedd55a4e)
			Second parameter (with value "DES") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer28376)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer28376)


	 in Method: byte[] lmResponse(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a643f9a329b75cc1ea26f5bdf639d55806afd02e96dd838ff974ffaa7697d482)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer28381)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer28392, $r4)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #a643f9a329b75cc1ea26f5bdf639d55806afd02e96dd838ff974ffaa7697d482)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r0 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


	 in Method: byte[] lmHash(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer28482, $r5)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #4450d6787837318c7fa4175bd805174917af352d4ffc3643daf0bb86eaa08cbe)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: r2 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #4450d6787837318c7fa4175bd805174917af352d4ffc3643daf0bb86eaa08cbe)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer28478)


	 in Method: byte[] ntlmv2Hash(java.lang.String,java.lang.String,byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3f2e0752742ed616fab9f3773c085d8d01ad07e8f2fc86f1c0f9018adbe0581)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: specialinvoke $r7.<cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>($r2)


	 in Method: byte[] lmv2Hash(java.lang.String,java.lang.String,byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3f2e0752742ed616fab9f3773c085d8d01ad07e8f2fc86f1c0f9018adbe0581)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: specialinvoke $r7.<cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>($r2)


Findings in Java Class: cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$CipherGen

	 in Method: byte[] getLanManagerSessionKey()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #fd733ee425e2f1c365a9454fad25d40a6725a01ec9c7b6d6ba472eefe092d0b1)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer28353)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer28350, $r5)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #fd733ee425e2f1c365a9454fad25d40a6725a01ec9c7b6d6ba472eefe092d0b1)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: r2 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #8707545bc83bbf3f5184090072478dc20e33259347b02c53169cb7a0d8ea046f)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)


Findings in Java Class: cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5

	 in Method: void <init>(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3f2e0752742ed616fab9f3773c085d8d01ad07e8f2fc86f1c0f9018adbe0581)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer28504)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 41

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 15
	TypestateError: 8
	HardCodedError: 1
	ConstraintError: 15
	NeverTypeOfError: 1
	IncompleteOperationError: 7
=====================================================================
