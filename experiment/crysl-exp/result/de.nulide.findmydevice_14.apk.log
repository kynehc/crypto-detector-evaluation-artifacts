0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.signers.ECNRSigner: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: 9280f6752b6e6221628d06f9d60b4341d2a16061cd2ae2c26b66d065728b8af7
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.jce.provider.JDKKeyPairGenerator$GOST3410: java.security.KeyPair generateKeyPair()>
		SHA-256: 6e53b193b1b48d3e806f61923f7dcfcfe85c6be9929668efa6e6c628a3f0ea
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.SecretKey
		Statement: $r9 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)
		Method: <de.nulide.findmydevice.utils.CypherUtils: java.lang.String encryptWithAES(byte[],java.lang.String)>
		SHA-256: 3493464b738cbd7f372c282b461e49efb03802f2184e8a67406761c25ea2b726
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer36243)
		Method: <org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: void <clinit>()>
		SHA-256: 4880346552fdbf7d1b75c17fcb0c503f9a54392eb14d51a50e88f808b0c97c2f
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r3, $r6, $i0)
		Method: <org.bouncycastle.jce.provider.JCEDHPrivateKey: void <init>(org.bouncycastle.crypto.params.DHPrivateKeyParameters)>
		SHA-256: 123998bd5a684e3c1b8a3b347bebb004c9623e80080066623596df586ba1c93a
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer36249)
		Method: <org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: void <clinit>()>
		SHA-256: 9d3b1e317bdb32b7b355a6989794afd472cbfcda55807c362604bbc8b935b6e9
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: specialinvoke $r19.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r2, $i1, $i0)
		Method: <de.nulide.findmydevice.utils.CypherUtils: java.lang.String encryptWithAES(byte[],java.lang.String)>
		SHA-256: 458b1acdac90661889a94cbc53c62a2979b0f851fa5010c13803b1bd0c46f2d5
		Secure: false
	Object:
		Variable: $r17
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r17.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <org.bouncycastle.openssl.PEMUtilities: byte[] crypt(boolean,java.security.Provider,byte[],char[],java.lang.String,byte[])>
		SHA-256: cb59595f6d536fccb3facae363b290001800f4de76ca7b78c890297f0c8d1f9b
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <de.nulide.findmydevice.utils.CypherUtils: byte[] generateRandom(int)>
		SHA-256: 20c738640f5dbefa4bf767857d919da1af96f993f58dec987a87f9623da76045
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r11, $r7, $i0)
		Method: <org.bouncycastle.jce.provider.JCEECPrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jce.provider.JCEECPublicKey,java.security.spec.ECParameterSpec)>
		SHA-256: c59acca066c4df1d6be42498d28e997fbf773d62ce6edb9528a7f5196a7e3b97
		Secure: true
	Object:
		Variable: varReplacer20355
		Type: java.lang.String
		Statement: $r6 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer20355)
		Method: <de.nulide.findmydevice.data.io.KeyIO: de.nulide.findmydevice.data.Keys readKeys()>
		SHA-256: 58f9c9e3c57008c8bf2ee4791cb4fe9c2f9ae0a08d7f04817d1d5c4971acce9c
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r12, $r7, $i0)
		Method: <org.bouncycastle.jce.provider.JCEECPrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jce.provider.JCEECPublicKey,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: e6cfda25ba135e0b0ea8d70ccc70816f85ff66d84befd1d1583fe85f2e3d4029
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer36240)
		Method: <org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: void <clinit>()>
		SHA-256: 401da5c6135a82dce73b4fd3bc4d34b3f223cdd7802a8af8112bce74cf6ebbc7
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer32169)
		Method: <de.nulide.findmydevice.utils.CypherUtils: java.lang.String encryptWithAES(byte[],java.lang.String)>
		SHA-256: a8f84b76369df5917bcd2fc5f9bbd18fb3fe5c3295024c3d37e976c9a5b583c5
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.PublicKey
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <de.nulide.findmydevice.utils.CypherUtils: de.nulide.findmydevice.data.Keys genKeys(java.lang.String)>
		SHA-256: f9c8df0bb9e4969b2ec591dfd042e0005b39758c1762fc2cd7a47e920d74d496
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: a5a898d806fc33b155731ae8a54e502fd56942f17f25fdb934196198b78d346e
		Secure: false
	Object:
		Variable: $r36
		Type: java.security.SecureRandom
		Statement: specialinvoke $r36.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.openssl.PKCS8Generator: org.bouncycastle.util.io.pem.PemObject generate()>
		SHA-256: a2c1d5dec41ab539d9a65e157d45576ee00fcf92454ff16a8d2505f3604277ff
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r12, $r7, $i0)
		Method: <org.bouncycastle.jce.provider.JCEECPrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jce.provider.JCEECPublicKey,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: e6cfda25ba135e0b0ea8d70ccc70816f85ff66d84befd1d1583fe85f2e3d4029
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer32152)
		Method: <de.nulide.findmydevice.utils.CypherUtils: java.lang.String hashWithPKBDF2(java.lang.String)>
		SHA-256: 12a20621a0c9bf17e084c8d7797d67d6ea368496b5f886234c8ac78f888e6409
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r7.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <org.bouncycastle.crypto.generators.DSAParametersGenerator: org.bouncycastle.crypto.params.DSAParameters generateParameters_FIPS186_2()>
		SHA-256: ec6cca47ee43da01341a2a0748523e214e736cbdd36cfcf0ae04c560b9624880
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r10.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r11, $r12)
		Method: <org.bouncycastle.jce.provider.JDKDSAPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 50c5039b3ac585458f24ede9c97f717c4ec360a50e787ee48eae60b298de95d
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)
		Method: <org.bouncycastle.jce.provider.JDKKeyPairGenerator$DSA: java.security.KeyPair generateKeyPair()>
		SHA-256: cd2cffaab84acda3dbc4b3a5b4e8c8e233e60e25e1f2ef93df59bc1776e8954c
		Secure: false
	Object:
		Variable: $r0
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r0)
		Method: <org.bouncycastle.openssl.PEMUtilities: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(java.lang.String,char[],byte[],int)>
		SHA-256: 21c0f4cc2bd47da78dc654e2a80110c838b1ea63c1ce15bf5025ea9fb68fff01
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)
		Method: <org.bouncycastle.jce.provider.JDKKeyPairGenerator$RSA: java.security.KeyPair generateKeyPair()>
		SHA-256: 136d4b76ab6dd9daa97d750a4e3f339d9893a4a816260659097c28c15016535e
		Secure: false
	Object:
		Variable: $r36
		Type: java.security.SecureRandom
		Statement: specialinvoke $r36.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.openssl.PKCS8Generator: org.bouncycastle.util.io.pem.PemObject generate()>
		SHA-256: a2c1d5dec41ab539d9a65e157d45576ee00fcf92454ff16a8d2505f3604277ff
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer20351)
		Method: <de.nulide.findmydevice.utils.CypherUtils: byte[] encryptWithKey(java.security.PublicKey,java.lang.String)>
		SHA-256: 46f1f2b19ee666c9d719e17caddf73fb022cd7ae95ce418216aa53e89ad9dd8c
		Secure: false
	Object:
		Variable: $r47
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r47.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r6, $i0)
		Method: <org.bouncycastle.openssl.PKCS8Generator: org.bouncycastle.util.io.pem.PemObject generate()>
		SHA-256: 10761db8447b3c49be4f63183e60bef8a0cf3fafe29e4229aef864a852d9f168
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)
		Method: <org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: java.security.KeyPair generateKeyPair()>
		SHA-256: 776455d06a6c767f634abe8b55fbe92ce6c34cbeebf947bc38092f0c46b09298
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.mindrot.jbcrypt.BCrypt: java.lang.String gensalt(int)>
		SHA-256: a67de5b9ed0e879c6b6283df77abbb3730b453277a6d7a9a1fa7f11283c3df1a
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.encodings.OAEPEncoding: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: 2927d56a192959dc3453ff63fb3830152d4c89781cce727cc1398f859f78edbf
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i1, $i0)
		Method: <de.nulide.findmydevice.utils.CypherUtils: java.lang.String hashWithPKBDF2(java.lang.String)>
		SHA-256: 286e8deb617bb7673c9f0b4c9d1a0623947d05364b94e9879f405feecbbb17a8
		Secure: false
	Object:
		Variable: $r21
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r21.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <de.nulide.findmydevice.utils.CypherUtils: java.lang.String encryptWithAES(byte[],java.lang.String)>
		SHA-256: 5b8bbe6262d10451febbabbfb48963cf3623762f204bcd159e8e278290e24e9c
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r3.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r2, $r5, $r6)
		Method: <org.bouncycastle.jce.provider.JDKDSAPublicKey: void <init>(org.bouncycastle.crypto.params.DSAPublicKeyParameters)>
		SHA-256: f640e605cc708f6d53b76eecdee061e68e1311293e5da2ec50d51d7f930aeaa1
		Secure: true
	Object:
		Variable: $r14
		Type: java.security.Key
		Statement: $r5 = interfaceinvoke $r14.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.openssl.MiscPEMGenerator: org.bouncycastle.util.io.pem.PemObject createPemObject(java.lang.Object)>
		SHA-256: 2a7a0c87b290f64bdffc9f2f957d7c5167aac2c6c53a72851c383b22b1591561
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer32156)
		Method: <de.nulide.findmydevice.utils.CypherUtils: java.security.KeyPair genKeyPair()>
		SHA-256: 45884b7c06e662c01448b8119e9b6c046b25a87ccf440417d74e08b60cf8ee12
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: a5a898d806fc33b155731ae8a54e502fd56942f17f25fdb934196198b78d346e
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r5, $r13)
		Method: <org.bouncycastle.jce.provider.JCEDHPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: e8bd125f5efd4dad85dea1dc5902a9a936bcfa1158a4eac9f88a5fa7273bd390
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.PrivateKey
		Statement: $r4 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <de.nulide.findmydevice.utils.CypherUtils: de.nulide.findmydevice.data.Keys genKeys(java.lang.String)>
		SHA-256: 7f8c350b8380cabe434526ae408353466d8c733cc02db2022e62b04f3c3671d8
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r3, $r6, $r7)
		Method: <org.bouncycastle.jce.provider.JDKDSAPrivateKey: void <init>(org.bouncycastle.crypto.params.DSAPrivateKeyParameters)>
		SHA-256: 8e06b4162ee1f314ee096b489ef8960e22bbf3eb4f42f766257aa23b657d43d2
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r10.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r0, $r1, $r8, $i0)
		Method: <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: java.security.spec.ECParameterSpec convertSpec(java.security.spec.EllipticCurve,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 2dbb4bedacfd822a104521782e3bf91eb66ffda2a8dd5998231726cc0e791ed5
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <org.bouncycastle.crypto.generators.DSAParametersGenerator: org.bouncycastle.crypto.params.DSAParameters generateParameters_FIPS186_3()>
		SHA-256: 78959e6b37eac65458af9b0347b54a0a23aee270bbd8b29db7f9c11b83af3df
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.signers.ECGOST3410Signer: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: caabe0390e3d2386e10c04d6d72b0b44e335e1623efc6992e7ef060aaafe4388
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <org.mindrot.jbcrypt.BCrypt: java.lang.String gensalt(int,java.security.SecureRandom)>
		SHA-256: 45c808fdbb5e5dfea9e4567cf94c556743ccf4d0b24cc57f6e26b873964552d0
		Secure: true
	Object:
		Variable: $r12
		Type: javax.net.ssl.TrustManager[]
		Statement: $r12 = virtualinvoke $r11.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <de.nulide.findmydevice.utils.PatchedVolley: com.android.volley.RequestQueue newRequestQueue(android.content.Context)>
		SHA-256: fb3432f7258dbe84622eacd53fc6cf7677570acf05f0c3db1d22647cc7a16510
		Secure: true
	Object:
		Variable: $i0
		Type: int
		Statement: specialinvoke $r8.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i1, $i0)
		Method: <de.nulide.findmydevice.utils.CypherUtils: java.lang.String hashWithPKBDF2(java.lang.String)>
		SHA-256: 3ac10792b4e9a0691034e688a06ee7e1e7b8b2e1eb2db28985ef9622a0f588c8
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r0)
		Method: <org.bouncycastle.openssl.PEMUtilities: javax.crypto.SecretKey getKey(char[],java.lang.String,int,byte[],boolean)>
		SHA-256: e94f24bee5750b956df0d495639af06d1f49ade3c4d7bad5d9d3f8e5f63d9c2b
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r5, $r13, $i0)
		Method: <org.bouncycastle.jce.provider.JCEDHPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 85341518d458f6c0a62c6bea677669794238ee993899a195c92ac5d28587d9c
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.engines.RSABlindedEngine: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: 94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a
		Secure: true
	Object:
		Variable: $r20
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r20.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer32165)
		Method: <de.nulide.findmydevice.utils.CypherUtils: java.lang.String encryptWithAES(byte[],java.lang.String)>
		SHA-256: c6a0020999efd951219dd1fe1563e7c43f1d2f99d8d0386a880217bebd70c818
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <de.nulide.findmydevice.utils.PatchedVolley: com.android.volley.RequestQueue newRequestQueue(android.content.Context)>
		SHA-256: c8d4388ddb5e3496b6d33e27b4cb505e0a1c03fee8f46a3775d7765654160d93
		Secure: true
	Object:
		Variable: varReplacer32165
		Type: java.lang.String
		Statement: specialinvoke $r20.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer32165)
		Method: <de.nulide.findmydevice.utils.CypherUtils: java.lang.String encryptWithAES(byte[],java.lang.String)>
		SHA-256: 9d5ca6819b51584f703b8e71c68fd406a74233eb677732eadaa25c1a1326f565
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer36239)
		Method: <org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: void <clinit>()>
		SHA-256: bc15624d27c237ac7b043726d28fed2a9808b32acdd1828cde5958769e202c76
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.signers.DSASigner: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: 71587c8001c9c4cfb5eb3b36cf1bb7c68e59a9748c653f87dfd071a1ed0537e
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r6.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)
		Method: <de.nulide.findmydevice.data.io.KeyIO: de.nulide.findmydevice.data.Keys readKeys()>
		SHA-256: 355355dfe8c83cc538934d2f8fb7be8d1153d0e5bfc789fa827c9ed911b3ca3f
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.KeyPair
		Statement: specialinvoke $r13.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r14, $r15)
		Method: <org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: java.security.KeyPair generateKeyPair()>
		SHA-256: 19a3f013b0f037b09fdb70ec5021b64c12a835f748641ca6c29d91bec7eb747b
		Secure: false
	Object:
		Variable: $r13
		Type: javax.net.ssl.SSLContext
		Statement: $r13 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2436)
		Method: <de.nulide.findmydevice.utils.PatchedVolley: com.android.volley.RequestQueue newRequestQueue(android.content.Context)>
		SHA-256: 983fb3c76fb0a2d89b48b0e0fa67c23eb931bba58ac4dcd6ce0b6d9dc824c9c4
		Secure: false
	Object:
		Variable: $r11
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r11 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <de.nulide.findmydevice.utils.PatchedVolley: com.android.volley.RequestQueue newRequestQueue(android.content.Context)>
		SHA-256: 2542c225dd4a81174015b7a8aa248ea4a3e0c8214653573841086a4b8855568c
		Secure: true
	Object:
		Variable: $r12
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r5, $r13)
		Method: <org.bouncycastle.jce.provider.JCEDHPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: e8bd125f5efd4dad85dea1dc5902a9a936bcfa1158a4eac9f88a5fa7273bd390
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer36247)
		Method: <org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: void <clinit>()>
		SHA-256: 21472b9f337f68fac3249aadf1640e8cf622f2e763400ed08c5f48bd40ff6d73
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.signers.GOST3410Signer: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: 61b7887e2cfe6269c9dc5ed1565a2d9c81d2ae6237d2a5bf20c73d26a54cd85c
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = interfaceinvoke $r14.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.openssl.MiscPEMGenerator: org.bouncycastle.util.io.pem.PemObject createPemObject(java.lang.Object)>
		SHA-256: e851f21177ea85094a8e84d2776347290b69ac6d9454b339e851b341ba1f7a5b
		Secure: true
	Object:
		Variable: $r38
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r38.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r19, $r33, $r20, $i0)
		Method: <org.bouncycastle.jce.provider.JCEECPublicKey: void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: ca2ed6d7b0d100c882c8780d4fd3418216acb32b7d905b12c040afb8598b358a
		Secure: true
	Object:
		Variable: $r0
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r0)
		Method: <org.bouncycastle.openssl.PEMUtilities: javax.crypto.SecretKey getKey(char[],java.lang.String,int,byte[],boolean)>
		SHA-256: 58735c63d8847e13c81011b24652bda0f41c0263c43489337cc43cff623b8a3a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer36241)
		Method: <org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: void <clinit>()>
		SHA-256: ba9d6448ef0ccefbdc5ff8f3cb5bd5905b036038301a141e6a0288accf65c174
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r3, $r7, $i0)
		Method: <org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve,org.bouncycastle.crypto.params.ECDomainParameters)>
		SHA-256: e4230e33eea8a474eb596ccb8bfea5eb71a12682a534b8ccd5e3e457e03d4934
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r11.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r5)
		Method: <de.nulide.findmydevice.data.io.KeyIO: de.nulide.findmydevice.data.Keys readKeys()>
		SHA-256: 75c9ca7c112d432c89b7db68ef6bc5170b4884d56fe81dba46eebf17917bd3b
		Secure: false
	Object:
		Variable: r0
		Type: org.bouncycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r7, $r8, $r2, $i0)
		Method: <org.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>
		SHA-256: bcf570b34f8a17ec2bf4d52452528fe052d0e6bfbcbc0e9448c15568d3730cec
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r12)
		Method: <org.bouncycastle.jce.provider.JDKKeyPairGenerator$GOST3410: java.security.KeyPair generateKeyPair()>
		SHA-256: 6044ef541656de5e7b4ec0c84d4dd2f785e1840bb593360b011684516d01c96e
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r0)
		Method: <org.bouncycastle.openssl.PEMUtilities: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(java.lang.String,char[],byte[],int)>
		SHA-256: a9aeaa065cff452c628482ea97aa75c21990a26f91385539b1c767e13240a090
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer32158)
		Method: <de.nulide.findmydevice.utils.CypherUtils: java.security.KeyPair genKeyPair()>
		SHA-256: e0d9e497e285ef37611e6f44ae5de8e6849f65ea39533dbed4eef80f0e887271
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <org.bouncycastle.crypto.encodings.PKCS1Encoding: byte[] encodeBlock(byte[],int,int)>
		SHA-256: eacef851ce54f73496b5b532959f537500639a3690f0ee1369bef27820eadfb
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.engines.ElGamalEngine: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: cc0b332bb2ddc847ca308294e1c87841df1bdcc2359c6b4559abe498d8131c20
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.signers.ECDSASigner: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: 15a17ef588bd5dd9ee400977479f85c58fcdc22fa11ae1e18eff26c65ec63bf1
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.cert.CertificateFactory
		Statement: $r3 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer2437)
		Method: <de.nulide.findmydevice.utils.PatchedVolley: com.android.volley.RequestQueue newRequestQueue(android.content.Context)>
		SHA-256: f502fb972c5a16b1fbfebb46e3b9f813fa3f1f7be0248b1b3515e9b064dedec
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <de.nulide.findmydevice.utils.CypherUtils: java.lang.String hashWithPKBDF2(java.lang.String)>
		SHA-256: fb76b221d8e8b060e62efeb04a427f35282ab3af50179312138e47e4d575c656
		Secure: false
	Object:
		Variable: r0
		Type: org.bouncycastle.x509.ExtendedPKIXParameters
		Statement: specialinvoke r0.<java.security.cert.PKIXParameters: void <init>(java.util.Set)>($r1)
		Method: <org.bouncycastle.x509.ExtendedPKIXParameters: void <init>(java.util.Set)>
		SHA-256: bc4db4edf85d5095c872f763083d4cdd57eaf413157a98ff957c0439448eaca6
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: virtualinvoke $r7.<java.security.SecureRandom: void nextBytes(byte[])>($r6)
		Method: <org.bouncycastle.openssl.PKCS8Generator: org.bouncycastle.util.io.pem.PemObject generate()>
		SHA-256: f2c4f51f40c0b22b3ad5038608ec712a9dda56bd54674bad0ad8654d1045d58c
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: a5a898d806fc33b155731ae8a54e502fd56942f17f25fdb934196198b78d346e
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: virtualinvoke $r7.<java.security.SecureRandom: void nextBytes(byte[])>($r6)
		Method: <org.bouncycastle.openssl.PKCS8Generator: org.bouncycastle.util.io.pem.PemObject generate()>
		SHA-256: f2c4f51f40c0b22b3ad5038608ec712a9dda56bd54674bad0ad8654d1045d58c
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyPair
		Statement: $r2 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <de.nulide.findmydevice.utils.CypherUtils: java.security.KeyPair genKeyPair()>
		SHA-256: c3d2203579af9841c3d8319bcfcab339aa46453d4ce7084bb5aa7c419e77cb1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r2, $r5, $i0)
		Method: <org.bouncycastle.jce.provider.JCEDHPublicKey: void <init>(org.bouncycastle.crypto.params.DHPublicKeyParameters)>
		SHA-256: b65d25e868a4b1152a682a0e9a19c29fd99293e829c1e27569557b79b7ed7b34
		Secure: true
	Object:
		Variable: $r15
		Type: javax.crypto.Cipher
		Statement: $r15 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r3, $r0)
		Method: <org.bouncycastle.openssl.PEMUtilities: byte[] crypt(boolean,java.security.Provider,byte[],char[],java.lang.String,byte[])>
		SHA-256: 9e1c4cf6ba76ea26e9fc3f7180954f34ba32d4853c256ae9f40625c8a279e708
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer32168)
		Method: <de.nulide.findmydevice.utils.CypherUtils: java.lang.String encryptWithAES(byte[],java.lang.String)>
		SHA-256: 7610446dc7940388eb66328c1161371d3873c27b93a243a7ef5cea23e8463cfb
		Secure: false
	Object:
		Variable: r0
		Type: org.bouncycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r2, $r3, $r4, $i0)
		Method: <org.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>
		SHA-256: b36d50207c12d926e435b859cb9848007d52f50b2e62c847e597de1f84f657c6
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyFactory
		Statement: $r6 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer20355)
		Method: <de.nulide.findmydevice.data.io.KeyIO: de.nulide.findmydevice.data.Keys readKeys()>
		SHA-256: 8815dee87ac7bde0f5d758c78d3c843db54d613a27349b506f76914ece11d02a
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.encodings.PKCS1Encoding: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer2430)
		Method: <de.nulide.findmydevice.utils.PatchedVolley: com.android.volley.RequestQueue newRequestQueue(android.content.Context)>
		SHA-256: 3721f1693d65e986bedb706e75c2c1348b22ed284f270eca68733ba57d7a8034
		Secure: false
	Object:
		Variable: $r19
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r19.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r2, $i1, $i0)
		Method: <de.nulide.findmydevice.utils.CypherUtils: java.lang.String encryptWithAES(byte[],java.lang.String)>
		SHA-256: fd3f4f688b0dbb3a1a42dc54aa2cfef8dbfc95d6c63859f1374c3de61ff3c7ba
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <de.nulide.findmydevice.utils.CypherUtils: byte[] generateRandom(int)>
		SHA-256: 36b27908adffc3051f8ddfce34ab97e4ee818a9245be6b5f5463707cc629acdd
		Secure: true

Findings in Java Class: org.bouncycastle.openssl.PKCS8Generator

	 in Method: org.bouncycastle.util.io.pem.PemObject generate()
		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r46.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r8)


Findings in Java Class: de.nulide.findmydevice.utils.PatchedVolley

	 in Method: com.android.volley.RequestQueue newRequestQueue(android.content.Context)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #983fb3c76fb0a2d89b48b0e0fa67c23eb931bba58ac4dcd6ce0b6d9dc824c9c4)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r13 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2436)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #f502fb972c5a16b1fbfebb46e3b9f813fa3f1f7be0248b1b3515e9b064dedec)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r6 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r4)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #3721f1693d65e986bedb706e75c2c1348b22ed284f270eca68733ba57d7a8034)
			First parameter (with value "AndroidCAStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer2430)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r13.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2438, $r12, varReplacer2438)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r13.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2438, $r12, varReplacer2438)


Findings in Java Class: de.nulide.findmydevice.utils.CypherUtils

	 in Method: byte[] encryptWithKey(java.security.PublicKey,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer20352, $r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #46f1f2b19ee666c9d719e17caddf73fb022cd7ae95ce418216aa53e89ad9dd8c)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)


	 in Method: java.lang.String hashWithPKBDF2(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i1, $i0)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #286e8deb617bb7673c9f0b4c9d1a0623947d05364b94e9879f405feecbbb17a8)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r8.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i1, $i0)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #286e8deb617bb7673c9f0b4c9d1a0623947d05364b94e9879f405feecbbb17a8)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r8.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i1, $i0)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #286e8deb617bb7673c9f0b4c9d1a0623947d05364b94e9879f405feecbbb17a8)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: specialinvoke $r8.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i1, $i0)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #12a20621a0c9bf17e084c8d7797d67d6ea368496b5f886234c8ac78f888e6409)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer32152)


	 in Method: java.security.KeyPair genKeyPair()
		TypestateError violating CrySL rule for java.security.KeyPairGenerator (on Object #45884b7c06e662c01448b8119e9b6c046b25a87ccf440417d74e08b60cf8ee12)
			Unexpected call to method generateKeyPair on object of type java.security.KeyPairGenerator. Expect a call to one of the following methods initialize
			at statement: $r2 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #45884b7c06e662c01448b8119e9b6c046b25a87ccf440417d74e08b60cf8ee12)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), genKeyPair, initialize, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r2 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #45884b7c06e662c01448b8119e9b6c046b25a87ccf440417d74e08b60cf8ee12)
			First parameter (with value 1024) should be any of {4096, 3072, 2048}
			at statement: virtualinvoke $r0.<java.security.KeyPairGenerator: void initialize(int,java.security.SecureRandom)>(varReplacer32157, $r1)


	 in Method: java.lang.String encryptWithAES(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r20.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer32165)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer32167, $r8, $r11)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #fd3f4f688b0dbb3a1a42dc54aa2cfef8dbfc95d6c63859f1374c3de61ff3c7ba)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r19.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r2, $i1, $i0)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #fd3f4f688b0dbb3a1a42dc54aa2cfef8dbfc95d6c63859f1374c3de61ff3c7ba)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r19.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r2, $i1, $i0)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #fd3f4f688b0dbb3a1a42dc54aa2cfef8dbfc95d6c63859f1374c3de61ff3c7ba)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: specialinvoke $r19.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r2, $i1, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r21.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer32167, $r8, $r11)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #7610446dc7940388eb66328c1161371d3873c27b93a243a7ef5cea23e8463cfb)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r0 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r19.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r2, $i1, $i0)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #a8f84b76369df5917bcd2fc5f9bbd18fb3fe5c3295024c3d37e976c9a5b583c5)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer32169)


Findings in Java Class: org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #ba9d6448ef0ccefbdc5ff8f3cb5bd5905b036038301a141e6a0288accf65c174)
			First parameter (with value "P-521") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer36241)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #21472b9f337f68fac3249aadf1640e8cf622f2e763400ed08c5f48bd40ff6d73)
			First parameter (with value "P-224") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer36247)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #401da5c6135a82dce73b4fd3bc4d34b3f223cdd7802a8af8112bce74cf6ebbc7)
			First parameter (with value "prime192v1") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer36240)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #9d3b1e317bdb32b7b355a6989794afd472cbfcda55807c362604bbc8b935b6e9)
			First parameter (with value "prime239v1") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer36249)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #bc15624d27c237ac7b043726d28fed2a9808b32acdd1828cde5958769e202c76)
			First parameter (with value "P-384") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer36239)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #4880346552fdbf7d1b75c17fcb0c503f9a54392eb14d51a50e88f808b0c97c2f)
			First parameter (with value "prime256v1") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer36243)


	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)


Findings in Java Class: org.bouncycastle.crypto.encodings.PKCS1Encoding

	 in Method: byte[] encodeBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: int getInputBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: int getInputBlockSize()>()

		TypestateError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Unexpected call to method nextBytes on object of type java.security.SecureRandom. Expect a call to one of the following methods init,getInstanceStrong,getInstance
			at statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r1)


	 in Method: byte[] decodeBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i1 = virtualinvoke r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: int getOutputBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i1 = virtualinvoke r0.<org.bouncycastle.crypto.encodings.PKCS1Encoding: int getOutputBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i1 = interfaceinvoke $r2.<org.bouncycastle.crypto.AsymmetricBlockCipher: int getOutputBlockSize()>()


Findings in Java Class: org.bouncycastle.crypto.tls.TlsUtils

	 in Method: int readUint16(java.io.InputStream)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke $r0.<java.io.InputStream: int read()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke $r0.<java.io.InputStream: int read()>()


	 in Method: void readFully(byte[],java.io.InputStream)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i0 = staticinvoke <org.bouncycastle.util.io.Streams: int readFully(java.io.InputStream,byte[])>($r1, $r0)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i0 = staticinvoke <org.bouncycastle.util.io.Streams: int readFully(java.io.InputStream,byte[])>($r1, $r0)


	 in Method: short readUint8(java.io.InputStream)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i0 = virtualinvoke $r0.<java.io.InputStream: int read()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i0 = virtualinvoke $r0.<java.io.InputStream: int read()>()


Findings in Java Class: org.bouncycastle.crypto.encodings.ISO9796d1Encoding

	 in Method: void init(boolean,org.bouncycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r1.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>($z0, $r2)


Findings in Java Class: org.bouncycastle.crypto.engines.NaccacheSternEngine

	 in Method: byte[] processBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: int getInputBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: int getInputBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: int getInputBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.bouncycastle.crypto.engines.NaccacheSternEngine: int getInputBlockSize()>()


Findings in Java Class: org.bouncycastle.crypto.tls.TlsECDHEKeyExchange

	 in Method: void processServerKeyExchange(java.io.InputStream)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $s0 = staticinvoke <org.bouncycastle.crypto.tls.TlsUtils: short readUint8(java.io.InputStream)>($r6)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $s0 = staticinvoke <org.bouncycastle.crypto.tls.TlsUtils: short readUint8(java.io.InputStream)>($r6)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $z0 = interfaceinvoke $r5.<org.bouncycastle.crypto.Signer: boolean verifySignature(byte[])>($r9)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $z0 = interfaceinvoke $r5.<org.bouncycastle.crypto.Signer: boolean verifySignature(byte[])>($r9)


Findings in Java Class: org.bouncycastle.crypto.engines.ElGamalEngine

	 in Method: byte[] processBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.bouncycastle.crypto.engines.ElGamalEngine: int getInputBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.bouncycastle.crypto.engines.ElGamalEngine: int getInputBlockSize()>()


Findings in Java Class: org.bouncycastle.crypto.signers.ISO9796d2PSSSigner

	 in Method: boolean verifySignature(byte[])
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void clearBlock(byte[])>($r4)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: specialinvoke r0.<org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void clearBlock(byte[])>($r4)


Findings in Java Class: org.bouncycastle.crypto.tls.TlsDHEKeyExchange

	 in Method: void processServerKeyExchange(java.io.InputStream)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $z0 = interfaceinvoke $r5.<org.bouncycastle.crypto.Signer: boolean verifySignature(byte[])>($r10)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $z0 = interfaceinvoke $r5.<org.bouncycastle.crypto.Signer: boolean verifySignature(byte[])>($r10)


Findings in Java Class: org.bouncycastle.asn1.IndefiniteLengthInputStream

	 in Method: int read()
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $z0 = specialinvoke r0.<org.bouncycastle.asn1.IndefiniteLengthInputStream: boolean checkForEof()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $z0 = specialinvoke r0.<org.bouncycastle.asn1.IndefiniteLengthInputStream: boolean checkForEof()>()


Findings in Java Class: org.bouncycastle.crypto.tls.TlsRSAKeyExchange

	 in Method: void generateClientKeyExchange(java.io.OutputStream)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r3 = virtualinvoke $r6.<org.bouncycastle.crypto.encodings.PKCS1Encoding: byte[] processBlock(byte[],int,int)>($r3, varReplacer39691, $i0)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r3 = virtualinvoke $r6.<org.bouncycastle.crypto.encodings.PKCS1Encoding: byte[] processBlock(byte[],int,int)>($r3, varReplacer39691, $i0)


Findings in Java Class: org.bouncycastle.crypto.encodings.OAEPEncoding

	 in Method: byte[] decodeBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r3 = specialinvoke r0.<org.bouncycastle.crypto.encodings.OAEPEncoding: byte[] maskGeneratorFunction1(byte[],int,int,int)>($r1, varReplacer42781, $i0, $i1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r3 = specialinvoke r0.<org.bouncycastle.crypto.encodings.OAEPEncoding: byte[] maskGeneratorFunction1(byte[],int,int,int)>($r1, varReplacer42781, $i0, $i1)


	 in Method: void init(boolean,org.bouncycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r4.<org.bouncycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>($z0, $r1)


Findings in Java Class: org.bouncycastle.crypto.tls.TlsRSASigner

	 in Method: byte[] calculateRawSignature(java.security.SecureRandom,org.bouncycastle.crypto.params.AsymmetricKeyParameter,byte[])
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r1 = interfaceinvoke $r2.<org.bouncycastle.crypto.Signer: byte[] generateSignature()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r1 = interfaceinvoke $r2.<org.bouncycastle.crypto.Signer: byte[] generateSignature()>()


Findings in Java Class: org.bouncycastle.crypto.tls.TlsSRPKeyExchange

	 in Method: void processServerKeyExchange(java.io.InputStream)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r7 = null

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r7 = null

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $z0 = interfaceinvoke $r7.<org.bouncycastle.crypto.Signer: boolean verifySignature(byte[])>($r13)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to java.security.SecureRandom: void init(byte[]), getInstanceStrong, java.security.SecureRandom: void init(), getInstance
			at statement: specialinvoke $r19.<org.bouncycastle.crypto.io.SignerInputStream: void <init>(java.io.InputStream,org.bouncycastle.crypto.Signer)>($r2, $r6)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to java.security.SecureRandom: void init(byte[]), getInstanceStrong, java.security.SecureRandom: void init(), getInstance
			at statement: specialinvoke $r19.<org.bouncycastle.crypto.io.SignerInputStream: void <init>(java.io.InputStream,org.bouncycastle.crypto.Signer)>($r2, $r6)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $z0 = interfaceinvoke $r7.<org.bouncycastle.crypto.Signer: boolean verifySignature(byte[])>($r13)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to java.security.SecureRandom: void init(byte[]), getInstanceStrong, java.security.SecureRandom: void init(), getInstance
			at statement: specialinvoke $r19.<org.bouncycastle.crypto.io.SignerInputStream: void <init>(java.io.InputStream,org.bouncycastle.crypto.Signer)>($r2, $r6)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to java.security.SecureRandom: void init(byte[]), getInstanceStrong, java.security.SecureRandom: void init(), getInstance
			at statement: specialinvoke $r19.<org.bouncycastle.crypto.io.SignerInputStream: void <init>(java.io.InputStream,org.bouncycastle.crypto.Signer)>($r2, $r6)


Findings in Java Class: org.bouncycastle.openssl.PEMUtilities

	 in Method: byte[] crypt(boolean,java.security.Provider,byte[],char[],java.lang.String,byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #9e1c4cf6ba76ea26e9fc3f7180954f34ba32d4853c256ae9f40625c8a279e708)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r15.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r17.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r15.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r11, $r22)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r15.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r11, $r22)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedOAEP
			at statement: virtualinvoke $r15.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r11, $r22)


	 in Method: javax.crypto.SecretKey getKey(char[],java.lang.String,int,byte[],boolean)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #e94f24bee5750b956df0d495639af06d1f49ade3c4d7bad5d9d3f8e5f63d9c2b)
			Second parameter (with value "DESede") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r0)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #e94f24bee5750b956df0d495639af06d1f49ade3c4d7bad5d9d3f8e5f63d9c2b)
			Second parameter (with value "Blowfish") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r0)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #e94f24bee5750b956df0d495639af06d1f49ade3c4d7bad5d9d3f8e5f63d9c2b)
			Second parameter (with value "DES") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r0)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #e94f24bee5750b956df0d495639af06d1f49ade3c4d7bad5d9d3f8e5f63d9c2b)
			Second parameter (with value "RC2") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r0)


	 in Method: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(java.lang.String,char[],byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r0)


Findings in Java Class: org.bouncycastle.jce.provider.JDKKeyPairGenerator$DSA

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)


Findings in Java Class: org.bouncycastle.jce.provider.JDKKeyPairGenerator$RSA

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)


Findings in Java Class: org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)


Findings in Java Class: org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r13.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r14, $r15)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r13.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r14, $r15)


Findings in Java Class: de.nulide.findmydevice.data.io.KeyIO

	 in Method: de.nulide.findmydevice.data.Keys readKeys()
		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r11.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r6.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)


Findings in Java Class: org.bouncycastle.jce.provider.JDKKeyPairGenerator$GOST3410

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r12)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r12)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 89

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 31
	IncompleteOperationError: 47
	ConstraintError: 15
	NeverTypeOfError: 2
	ForbiddenMethodError: 1
	HardCodedError: 2
	TypestateError: 5
=====================================================================
