0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer7917)
		Method: <com.google.api.client.auth.oauth.OAuthHmacSigner: java.lang.String computeSignature(java.lang.String)>
		SHA-256: 90249cdb7f86a86382401374fbe08f17e936c6886d43ee785827c6bf52d3ecf
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.google.common.hash.MessageDigestHashFunction: java.security.MessageDigest getMessageDigest(java.lang.String)>
		SHA-256: 1483c09d507b816f2d8e358bdcf748f95d8d6b301f37aed4de69aa06c2eae936
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.Signature
		Statement: $r0 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer7948)
		Method: <com.google.api.client.util.SecurityUtils: java.security.Signature getSha256WithRsaSignatureAlgorithm()>
		SHA-256: 5652d53b7328889e7908ef1d6af9292506e18e4aa6f4007fa5baa7cc85d89547
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5)
		Method: <com.google.api.client.auth.oauth.OAuthHmacSigner: java.lang.String computeSignature(java.lang.String)>
		SHA-256: 4fc94b3bd3268d28c0f113c62905380dce8e7705548394dade501974ff0a6f1f
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r0.<java.security.Signature: byte[] sign()>()
		Method: <com.google.api.client.util.SecurityUtils: byte[] sign(java.security.Signature,java.security.PrivateKey,byte[])>
		SHA-256: 831785ad1fc1e7ca9d8b4f441958a0d044ca8ca0b7f09a558eac39e9e9c52573
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher: com.google.common.hash.HashCode hash()>
		SHA-256: 498aa274b0e0dc658a96e5b82797c2ef859caa8cc0a4a03329fbcf0be8023051
		Secure: true
	Object:
		Variable: varReplacer7919
		Type: java.lang.String
		Statement: specialinvoke r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer7919)
		Method: <com.google.api.client.auth.oauth.OAuthHmacSigner: java.lang.String computeSignature(java.lang.String)>
		SHA-256: b2b4d23377676c63d6e84ed9c997f00c8d097227e31a56026e5f8a688329d5ce
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.api.client.auth.oauth.OAuthParameters: void <clinit>()>
		SHA-256: 32d2a5fed6ce7e3541979b3e25cdb197d368f51d226c0a9eafe64eaaaab35731
		Secure: true
	Object:
		Variable: r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer7919)
		Method: <com.google.api.client.auth.oauth.OAuthHmacSigner: java.lang.String computeSignature(java.lang.String)>
		SHA-256: 28ccaa111ec027df5168e3a78bc77a012687e8128ed6b565b129b86a17786fb1
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.Signature
		Statement: $r0 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer7922)
		Method: <com.google.api.client.util.SecurityUtils: java.security.Signature getSha1WithRsaSignatureAlgorithm()>
		SHA-256: 5226c58a5107f310c8448155d88d91b3b2f0e32e057da3409b4b060f4c8a4a4
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher: com.google.common.hash.HashCode hash()>
		SHA-256: 498aa274b0e0dc658a96e5b82797c2ef859caa8cc0a4a03329fbcf0be8023051
		Secure: true

Findings in Java Class: com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher

	 in Method: com.google.common.hash.HashCode hash()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #1483c09d507b816f2d8e358bdcf748f95d8d6b301f37aed4de69aa06c2eae936)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #1483c09d507b816f2d8e358bdcf748f95d8d6b301f37aed4de69aa06c2eae936)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.google.common.hash.AbstractStreamingHashFunction

	 in Method: com.google.common.hash.HashCode hashObject(java.lang.Object,com.google.common.hash.Funnel)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #1483c09d507b816f2d8e358bdcf748f95d8d6b301f37aed4de69aa06c2eae936)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = interfaceinvoke $r3.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()


Findings in Java Class: com.google.common.hash.AbstractCompositeHashFunction

	 in Method: com.google.common.hash.Hasher newHasher()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #1483c09d507b816f2d8e358bdcf748f95d8d6b301f37aed4de69aa06c2eae936)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r5.<com.google.common.hash.AbstractCompositeHashFunction$1: void <init>(com.google.common.hash.AbstractCompositeHashFunction,com.google.common.hash.Hasher[])>(r0, r1)


Findings in Java Class: com.google.api.client.auth.oauth.OAuthHmacSigner

	 in Method: java.lang.String computeSignature(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #28ccaa111ec027df5168e3a78bc77a012687e8128ed6b565b129b86a17786fb1)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer7919)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Mac: void init(java.security.Key)>(r4)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #90249cdb7f86a86382401374fbe08f17e936c6886d43ee785827c6bf52d3ecf)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer7917)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer7919)


Findings in Java Class: com.google.api.client.util.SecurityUtils

	 in Method: java.security.Signature getSha1WithRsaSignatureAlgorithm()
		ConstraintError violating CrySL rule for java.security.Signature (on Object #5226c58a5107f310c8448155d88d91b3b2f0e32e057da3409b4b060f4c8a4a4)
			First parameter (with value "SHA1withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r0 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer7922)


	 in Method: byte[] sign(java.security.Signature,java.security.PrivateKey,byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r0.<java.security.Signature: void initSign(java.security.PrivateKey)>($r1)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 11

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 3
	IncompleteOperationError: 2
	ConstraintError: 3
	TypestateError: 2
=====================================================================
