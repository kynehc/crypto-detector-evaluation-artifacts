0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.crashlytics.android.aB: java.lang.String a(byte[],java.lang.String)>
		SHA-256: b0e00d41846c6fb4748a005b2ff9f18810020621ccc992000807b672f75f009b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1065)
		Method: <com.crashlytics.android.Crashlytics: java.lang.String v()>
		SHA-256: a664bc367e547bd015bf2a94d7f1cf052cf079db906a2a69465a2bf95bae1742
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.crashlytics.android.Crashlytics: java.lang.String v()>
		SHA-256: b1cade04a7a8aa27e114fc9fef1162a7c15f943c54e0ea97c4b8db1c731721f6
		Secure: false
	Object:
		Variable: varReplacer1102
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer1100, varReplacer1101, varReplacer1102)
		Method: <com.crashlytics.android.aB: javax.crypto.Cipher a(int,java.lang.String)>
		SHA-256: 3dc5d722e40bbacaeb99250c63f43cf3f3f356dbef2c91f091c98cecacd940dc
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer1100, varReplacer1101, varReplacer1102)
		Method: <com.crashlytics.android.aB: javax.crypto.Cipher a(int,java.lang.String)>
		SHA-256: 6b713a980d235a3532a471c3f55bb518eccafae212798b5717342a521f942ff1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3367)
		Method: <com.crashlytics.android.az: java.security.KeyStore a(java.io.InputStream,java.lang.String)>
		SHA-256: c1983e25d3f894f6625b292cc4870403df2a6126df8b4b30e80a7af5378e353a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <com.crashlytics.android.aB: java.lang.String a(byte[],java.lang.String)>
		SHA-256: 993dce479d67574265be0aa48b1d3ca8c7af7206c64ca365e2a9e96cbbed04a3
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2837)
		Method: <com.crashlytics.android.aB: javax.net.ssl.SSLSocketFactory a(com.crashlytics.android.PinningInfoProvider)>
		SHA-256: 3168da1ab8d5241349480ac413ae022aa29d20fc8b90a875099a15904db56f53
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer3370)
		Method: <com.crashlytics.android.al: javax.net.ssl.TrustManager[] a(com.crashlytics.android.az)>
		SHA-256: 8de3579edc1c683795f91ba89f5a18ebcb6b41eaceef2463bc9125d5a4d38ddd
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.crashlytics.android.al: javax.net.ssl.TrustManager[] a(com.crashlytics.android.az)>
		SHA-256: 56480524c43ba6b8ea56a5be54240a5e663aea184c7d6fe7aceb5cfd80b54821
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1103)
		Method: <com.crashlytics.android.aB: javax.crypto.Cipher a(int,java.lang.String)>
		SHA-256: f1b745b715262a0e6ef327e2f4313148bacf6039125a3852ec20a8a8bc108b72
		Secure: false

Findings in Java Class: com.crashlytics.android.Crashlytics

	 in Method: java.lang.String v()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #a664bc367e547bd015bf2a94d7f1cf052cf079db906a2a69465a2bf95bae1742)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r7 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a664bc367e547bd015bf2a94d7f1cf052cf079db906a2a69465a2bf95bae1742)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1065)


Findings in Java Class: com.crashlytics.android.aB

	 in Method: javax.crypto.Cipher a(int,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1104, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f1b745b715262a0e6ef327e2f4313148bacf6039125a3852ec20a8a8bc108b72)
			First parameter (with value "AES/ECB/PKCS7Padding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1103)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer1100, varReplacer1101, varReplacer1102)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #6b713a980d235a3532a471c3f55bb518eccafae212798b5717342a521f942ff1)
			Fourth parameter (with value "AES/ECB/PKCS7Padding") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r3, varReplacer1100, varReplacer1101, varReplacer1102)


	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f1b745b715262a0e6ef327e2f4313148bacf6039125a3852ec20a8a8bc108b72)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r19 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r19)


	 in Method: java.lang.String a(byte[],java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #993dce479d67574265be0aa48b1d3ca8c7af7206c64ca365e2a9e96cbbed04a3)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #993dce479d67574265be0aa48b1d3ca8c7af7206c64ca365e2a9e96cbbed04a3)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


	 in Method: javax.net.ssl.SSLSocketFactory a(com.crashlytics.android.PinningInfoProvider)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2831, $r14, varReplacer2831)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2831, $r14, varReplacer2831)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2831, $r14, varReplacer2831)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #3168da1ab8d5241349480ac413ae022aa29d20fc8b90a875099a15904db56f53)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2837)


Findings in Java Class: com.crashlytics.android.az

	 in Method: java.security.KeyStore a(java.io.InputStream,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #c1983e25d3f894f6625b292cc4870403df2a6126df8b4b30e80a7af5378e353a)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r3, $r4)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #c1983e25d3f894f6625b292cc4870403df2a6126df8b4b30e80a7af5378e353a)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r3, $r4)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #c1983e25d3f894f6625b292cc4870403df2a6126df8b4b30e80a7af5378e353a)
			First parameter (with value "BKS") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3367)


Findings in Java Class: com.crashlytics.android.al

	 in Method: javax.net.ssl.TrustManager[] a(com.crashlytics.android.az)
		ConstraintError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #8de3579edc1c683795f91ba89f5a18ebcb6b41eaceef2463bc9125d5a4d38ddd)
			First parameter (with value "X509") should be any of {PKIX, SunX509}
			at statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer3370)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r2)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 11

	CryptoAnalysis found the following violations. For details see description above.
	TypestateError: 2
	RequiredPredicateError: 6
	ConstraintError: 8
	NeverTypeOfError: 1
	HardCodedError: 1
=====================================================================
