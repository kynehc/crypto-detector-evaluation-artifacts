0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: varReplacer28647
		Type: java.lang.String
		Statement: specialinvoke r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer28647)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void setupCrypto()>
		SHA-256: adcb9337ea036e3031d7c6647d8c1e7256e11a96a581c1b7fcc0069dc6707f43
		Secure: false
	Object:
		Variable: varReplacer11263
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer11263)
		Method: <com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager: void <clinit>()>
		SHA-256: eb14a1da2b977d0daf9ce4cd1ef45a8cf8e04adf0b278266d47b1523343e8d03
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer16823)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void verifyData(java.lang.String,byte[])>
		SHA-256: 63c43f5b0d823303559593803b2dd5b9ab947143a47e3200cf7c3d78cd492264
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.frostwire.android.market.Security: void <clinit>()>
		SHA-256: 91c37ad2be5d4dbbfef8f15d8c3a1f10810340f28211f7a5794c4e13e621501c
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.aelitis.azureus.core.clientmessageservice.secure.impl.SecureMessageServiceClientHelper: void <init>(java.lang.String,int,int,java.lang.String,java.security.interfaces.RSAPublicKey)>
		SHA-256: efefd91f0d62e4cedb4d3761cefb16b79d2c9cb0261d5e5f217c1c186f6eab43
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.Signature
		Statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer30831)
		Method: <com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager: boolean verifyKeyBlock(com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager$keyBlock,com.aelitis.azureus.core.dht.transport.DHTTransportContact)>
		SHA-256: 31072ab35e48d98e6bb0ab93614039d27c6bbb5c42a72d27c4162f16e3cc17d4
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20613)
		Method: <com.frostwire.android.gui.SoftwareUpdater: java.lang.String getMD5(java.io.File)>
		SHA-256: 634cc11fa2e1c81d11fa8b47fc6d6da0b0c4759f2890432d043a18614b180a17
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PublicKey
		Statement: $r8 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void completeDH(byte[])>
		SHA-256: 5361da65a9cee69ab00621e39232ef66e073af3f5795d64dc7885feab380912e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11346)
		Method: <org.gudy.azureus2.core3.util.SHA1Hasher: void <init>()>
		SHA-256: 25ea58224d585b1a5692ddc0f122562b1bcabc8dd86239f67aec7e0df07f7a8
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.Signature
		Statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer16827)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void verifyData(java.lang.String,byte[])>
		SHA-256: f6eec7390bd4b3db6a61fee8eec595e9e8ddc9b6e68a6bc912e9806206f19748
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager: boolean verifyKeyBlock(byte[],byte[])>
		SHA-256: 992a94c08dd34595c064d20916e4f465a7e17dbb2d10e7cd908ef2ccceea6f19
		Secure: false
	Object:
		Variable: varReplacer33944
		Type: java.lang.String
		Statement: specialinvoke r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, varReplacer33944)
		Method: <org.gudy.azureus2.pluginsimpl.local.ddb.DDBaseTTTorrent: byte[] doCrypt(int,byte[],byte[],int)>
		SHA-256: d8664f126f56c07c33afe80021e98af2615c22a6a9ae62e874da74e32276920c
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $z0 = virtualinvoke $r8.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void verifyData(java.lang.String,byte[])>
		SHA-256: ee40194ebd0536ce46461c56bf66098a63d03e2b17c406d7be3d9db0332a7f9d
		Secure: false
	Object:
		Variable: $r5
		Type: java.net.PasswordAuthentication
		Statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>(r3, $r6)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.resourceuploader.ResourceUploaderURLImpl: java.net.PasswordAuthentication getAuthentication(java.lang.String,java.net.URL)>
		SHA-256: ba88f99d25f5879268b2663049650f51a5123a0d5322a9f1bbc550076fdc07fc
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>(r1)
		Method: <com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager: void <clinit>()>
		SHA-256: e3783e3f78817567729c8a7da97a4161f404d60b5e09d070d8c5b938eba4ee5c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>(varReplacer34596, varReplacer34597)
		Method: <org.gudy.azureus2.core3.util.MD4Hasher: void <init>()>
		SHA-256: f97e76015947146c73de0161daade59f52ecbfd3974443ad3f8af5a37eb2bb6a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer4744)
		Method: <com.frostwire.android.market.Security: java.security.PublicKey generatePublicKey(java.lang.String)>
		SHA-256: 2a8795ccc476d9a692032f369dd19df7b84f709dbd9c49142b8012e7cd8514f3
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer38890)
		Method: <org.appwork.utils.net.httpconnection.TrustALLSSLFactory: javax.net.ssl.SSLSocketFactory getSSLFactoryTrustALL()>
		SHA-256: c4c894ad07ede9a460d46230d3cd15fc5ece8f86c4cc8aaa634f93f78e4119d9
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.SSLContext
		Statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer19392)
		Method: <org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl: javax.net.ssl.SSLSocketFactory addCertToTrustStore(java.lang.String,java.security.cert.Certificate,boolean)>
		SHA-256: cbb994d1030c47dfa1f5e285723ffedf9f5ed2c4755a70e7c9afd0de4d6ff15d
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r7, varReplacer33123, varReplacer33124, varReplacer33125)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.security.SESTSConnectionImpl: void setupBlockCrypto()>
		SHA-256: a06b45221fb60891216dd8e6e7425e39bfd7fba9777379096f47fbbaba796c71
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer19325)
		Method: <com.aelitis.azureus.core.clientmessageservice.secure.impl.SecureMessageServiceClientHelper: java.util.Map receiveMessage()>
		SHA-256: 4374eb7772831de855353d2d950b58e44e13a4bc84bc28eb12b64535e0d4312a
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer26027)
		Method: <com.frostwire.android.gui.util.DiskLruImageCache: java.lang.String encodeKey(java.lang.Object)>
		SHA-256: 4e091ff6a16f4acee2146c73ea6aec4da346d045b0c318cc6d226cfa49c306fb
		Secure: false
	Object:
		Variable: $r5
		Type: java.net.PasswordAuthentication
		Statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r1, $r6)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.resourcedownloader.ResourceDownloaderURLImpl: java.net.PasswordAuthentication getAuthentication(java.lang.String,java.net.URL)>
		SHA-256: c95260eca08e0c69799348174895a26b48376c7cc8f7b0854f3e9957b2c4c941
		Secure: false
	Object:
		Variable: $r8
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r8 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl: javax.net.ssl.SSLSocketFactory addCertToTrustStore(java.lang.String,java.security.cert.Certificate,boolean)>
		SHA-256: 5183210f412b6796670f29ea0729dd1339ca83a3d5d57abe171b7b3e1cdbf3bf
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)
		Method: <com.aelitis.azureus.core.networkmanager.impl.TransportCipher: void <init>(java.lang.String,int,javax.crypto.spec.SecretKeySpec)>
		SHA-256: 2196b49346457d66367d3c65143415ff87b4fb4b94c3892988473539180e259c
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r8.<java.security.Signature: boolean verify(byte[])>($r10)
		Method: <com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager: boolean verifyKeyBlock(com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager$keyBlock,com.aelitis.azureus.core.dht.transport.DHTTransportContact)>
		SHA-256: f4f3f32da340d45bec58441784b34f52f805694357a47eb58f61f5b92a0c5d48
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.frostwire.android.gui.DiskCrawlCache: java.lang.String encodeKey(java.lang.String)>
		SHA-256: ad55753ad6fa82930d95dbc22e96f516aa70a1a48d77125e0b0c63ec263247c3
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.KeyGenerator
		Statement: $r5 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer19329)
		Method: <com.aelitis.azureus.core.clientmessageservice.secure.impl.SecureMessageServiceClientHelper: void <init>(java.lang.String,int,int,java.lang.String,java.security.interfaces.RSAPublicKey)>
		SHA-256: 72dbc9bb9a066b5c8acb9d6e129fb89d9e038c023b48a2f826613e33fd645856
		Secure: false
	Object:
		Variable: varReplacer33125
		Type: java.lang.String
		Statement: specialinvoke r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r7, varReplacer33123, varReplacer33124, varReplacer33125)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.security.SESTSConnectionImpl: void setupBlockCrypto()>
		SHA-256: 4270b770b705efb5e71df4049d6fd350106fd46e37962adf2040cb3d62c085a5
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r9.<javax.crypto.KeyAgreement: byte[] generateSecret()>()
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void completeDH(byte[])>
		SHA-256: b3d62bbe1c5536619e64bbc3173e1389a2da3ce160c18d8cba2c781c8715e3e9
		Secure: false
	Object:
		Variable: varReplacer39056
		Type: java.lang.String
		Statement: specialinvoke r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer39056)
		Method: <com.aelitis.azureus.core.networkmanager.impl.udp.UDPConnectionSet: org.bouncycastle.crypto.engines.RC4EngineEx getCipher(byte[])>
		SHA-256: 1c89e005bb0d8abb2027dbc700ccebe3970ba6c73a03200515825db3e304c6ed
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.TrustManager[]
		Statement: $r10 = virtualinvoke $r8.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl: javax.net.ssl.SSLSocketFactory addCertToTrustStore(java.lang.String,java.security.cert.Certificate,boolean)>
		SHA-256: 18aea6421a30610d6f00a1b810c07f65ebece8c186bd4f48910314bb732945ef
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.gudy.azureus2.core3.peer.impl.control.PEPeerControlImpl: byte[] computeMd5Hash(org.gudy.azureus2.core3.util.DirectByteBuffer)>
		SHA-256: 175a0a3edabcdf3f3176de8a9aa08103b80b113c00bbad2d455380263a791536
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>(r1)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void verifyData(java.io.File)>
		SHA-256: 1a7195c7dd472e8facf03d979bca3e2cf685e046a1c69448d207ff65bf14c3eb
		Secure: false
	Object:
		Variable: varReplacer28650
		Type: java.lang.String
		Statement: specialinvoke r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer28650)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void setupCrypto()>
		SHA-256: ce925a6404d7925bcd21c9e9d06131a03fef1a55f2a8c980eeee36168a714652
		Secure: false
	Object:
		Variable: r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer28647)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void setupCrypto()>
		SHA-256: 11713c603d5186806fd58dd5039978e3a071db2c57dc3f48b2bd8041e4c5db9a
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyFactory
		Statement: $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer28644)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void completeDH(byte[])>
		SHA-256: 5676395bf5a714423ce42ab9a86b1cf5f0e57383388d4e7f863786f782873a32
		Secure: false
	Object:
		Variable: $r8
		Type: javax.net.ssl.SSLContext
		Statement: $r8 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer12421)
		Method: <org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl: javax.net.ssl.SSLSocketFactory installServerCertificates(java.net.URL)>
		SHA-256: 72bd53595379db6bf0d6462129a246bcc731153523d1c47b90b284d34714bcc
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer11263)
		Method: <com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager: void <clinit>()>
		SHA-256: 94527377f01233fa9578158783b4b6347330f0ad2d8227b56ae18fbe29977b3f
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer4730)
		Method: <com.frostwire.android.market.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 48a989439a3d99f90ead55150f92a1af174d0beccccea121de2ce98e5dbc152b
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer33135)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.security.SESTSConnectionImpl: void setupBlockCrypto()>
		SHA-256: 236134ddd36883d2836fff6fa07b231f14cfbdd71cc937d88dd4f3e29d5c6507
		Secure: false
	Object:
		Variable: r0
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke r0.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r4, $r5, varReplacer7757)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void cryptoSetup()>
		SHA-256: 3da9ea54506ffe7b508c2558909a3ddfb4b7eec2b97cd1f7f6b0a85c78a8923
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager: boolean verifyKeyBlock(byte[],byte[])>
		SHA-256: e19218dfd8a82593290076fd61f89f581348e33ed032d426fe8300791514535f
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer39056)
		Method: <com.aelitis.azureus.core.networkmanager.impl.udp.UDPConnectionSet: org.bouncycastle.crypto.engines.RC4EngineEx getCipher(byte[])>
		SHA-256: a19527c4dda1b41b0290a23a10877f4ff4b0e3eb9f53ce6a8f750dfd4383150c
		Secure: false
	Object:
		Variable: varReplacer7756
		Type: java.lang.String
		Statement: specialinvoke r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r1, varReplacer7754, varReplacer7755, varReplacer7756)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void cryptoSetup()>
		SHA-256: aa6f44d5e55a0277a789de69fe1733080100e0587aa6f2cd6ac01211f909a1b5
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer21835)
		Method: <com.frostwire.android.gui.DiskCrawlCache: java.lang.String encodeKey(java.lang.String)>
		SHA-256: 24b81a7cbdc28eb09980c35c364be6c26e207f4a6c986a9f98ca14f50dc4058c
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $z0 = virtualinvoke $r8.<java.security.Signature: boolean verify(byte[])>($r10)
		Method: <com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager: boolean verifyKeyBlock(com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager$keyBlock,com.aelitis.azureus.core.dht.transport.DHTTransportContact)>
		SHA-256: f0563b458cc1e9eee45dfafbcd5bed190dc81b30ce8f9ee9388895d60d3a979b
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyPairGenerator
		Statement: $r6 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer7762)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void cryptoSetup()>
		SHA-256: 7d5cab638a8ce1dbd6e29a028d7b702fa71e3a27b9e5ddb9b02b304fda227c00
		Secure: false
	Object:
		Variable: $r5
		Type: java.net.PasswordAuthentication
		Statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r1, $r6)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.resourceuploader.ResourceUploaderURLImpl: java.net.PasswordAuthentication getAuthentication(java.lang.String,java.net.URL)>
		SHA-256: 5868598051f0bc598dedf43d0b776e81514d56bd10e6866da9fd42354decc35f
		Secure: false
	Object:
		Variable: $r5
		Type: java.net.PasswordAuthentication
		Statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>(r3, $r6)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.resourcedownloader.ResourceDownloaderURLImpl: java.net.PasswordAuthentication getAuthentication(java.lang.String,java.net.URL)>
		SHA-256: 65ac51d70edf8362844b7dc0efdde6ab1c5f7854606997d47723cac1173b83ee
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer33943)
		Method: <org.gudy.azureus2.pluginsimpl.local.ddb.DDBaseTTTorrent: byte[] doCrypt(int,byte[],byte[],int)>
		SHA-256: 6143ef61134f29bbf3f84d6c285e804ab9370181360427329fc53501c1ababbc
		Secure: false
	Object:
		Variable: r7
		Type: byte[]
		Statement: $z0 = virtualinvoke $r8.<java.security.Signature: boolean verify(byte[])>(r7)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void verifyData(java.io.File,java.security.interfaces.RSAPublicKey)>
		SHA-256: a455af1b49fec23cacf4f210834a39d2c15598a58838c49ecc3488fb4b175636
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r8.<java.security.Signature: boolean verify(byte[])>(r7)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void verifyData(java.io.File,java.security.interfaces.RSAPublicKey)>
		SHA-256: 306534ce44336c089fcc8c4e5ce812c11f05455e0ad6e24941208af4f0a831b2
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer16375)
		Method: <com.aelitis.azureus.core.util.http.HTTPAuthHelper$processor: void connectToDelegate()>
		SHA-256: 956d2e358947512308bae0ec27c51a437d83792a5fecec226b563fb5a2afaaba
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.frostwire.android.gui.SoftwareUpdater: java.lang.String getMD5(java.io.File)>
		SHA-256: 8c695d4b3d0e3f841ca4af3eb8e8799a2369f5d59b3b1356bb3da4df1088fe7f
		Secure: false
	Object:
		Variable: $r8
		Type: javax.net.ssl.SSLContext
		Statement: $r8 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer22248)
		Method: <org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl: javax.net.ssl.SSLSocketFactory installServerCertificates(java.lang.String,java.lang.String,int)>
		SHA-256: 4d424660f5f39cf081c6bf11058028b7d80c8ed6db41293e6ff8daa7ad669aee
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <org.appwork.utils.net.httpconnection.TrustALLSSLFactory: javax.net.ssl.SSLSocketFactory getSSLFactoryTrustALL()>
		SHA-256: ada1cab7e1532e4ab1aa44b2ab85765a8285ad647e1b5bc173d574bc9e73854e
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer23825)
		Method: <com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager: boolean verifyKeyBlock(byte[],byte[])>
		SHA-256: f0a38b70c60e7589b7de90ea473561b554359a07f6853d17360f967d78c3292e
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, varReplacer33944)
		Method: <org.gudy.azureus2.pluginsimpl.local.ddb.DDBaseTTTorrent: byte[] doCrypt(int,byte[],byte[],int)>
		SHA-256: a96df1dc2065c13943ef9646bebe18c824658cb74f928afd3ebee87bcdfcf9b3
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r1, varReplacer7754, varReplacer7755, varReplacer7756)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void cryptoSetup()>
		SHA-256: fca84b9a4fc2299d81d1975f73d4022ff264c9d5c35a6fdb65badc942d4d8fc4
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.KeyAgreement
		Statement: $r4 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>(varReplacer28626)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void initCrypto()>
		SHA-256: aa12ed330da1e34e99b5f6d824bb1eac906c729bc9031c0145e7d6f125091b34
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer28650)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void setupCrypto()>
		SHA-256: fb3fd04bc901b08a507c83020fc31ba0d16300dedfba52da3866b3c3e3beaa7
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.PublicKey
		Statement: $r4 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r3)
		Method: <com.frostwire.android.market.Security: java.security.PublicKey generatePublicKey(java.lang.String)>
		SHA-256: 7ffcd25aa26a3a933694198f24c2dc310a72ab049bc17b4d0a88d58881786df
		Secure: false
	Object:
		Variable: $r27
		Type: java.security.cert.CertificateFactory
		Statement: $r27 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer12420)
		Method: <org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl: javax.net.ssl.SSLSocketFactory installServerCertificates(java.net.URL)>
		SHA-256: 29fff2fc3d563bebcb44d76be8b4925333cdf2d6688b1870e4e6358202fb4603
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.frostwire.android.market.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: b45de1df5a6ef65d6a93f76d37a129d11b6576f9c0d743b1efef99b83d7300f
		Secure: false
	Object:
		Variable: varReplacer16823
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer16823)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void verifyData(java.lang.String,byte[])>
		SHA-256: 58abc2414405236bbd800c4b38075371ac47608c8d41663c88c4e54a3532b9a6
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.security.SESTSConnectionImpl: void setupBlockCrypto()>
		SHA-256: 458ac70a1a5840bbab20a6e408e4a859de60415c5739807ef417e628e979a06b
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r3.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)
		Method: <com.frostwire.android.market.Security: java.security.PublicKey generatePublicKey(java.lang.String)>
		SHA-256: c34d110a9ada0e5385616cc373adba247df7b1b41374ae05753e19b0ebba5d65
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r8.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void verifyData(java.lang.String,byte[])>
		SHA-256: c7f71ed45a848cef130d8837d8a9e32dd225366a9f9b43f05d5a46b8cffa82cd
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.gudy.azureus2.core3.util.RandomUtils: void <clinit>()>
		SHA-256: b72082737f2d0278ddc826429902936ac9c157f5d0d86ab08af5bc612aeecb8f
		Secure: true
	Object:
		Variable: varReplacer4744
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer4744)
		Method: <com.frostwire.android.market.Security: java.security.PublicKey generatePublicKey(java.lang.String)>
		SHA-256: fbaa5d320b21d8a14296971b7a2e54f8eed22bb786eb5c3acb23ab9746d8b1d
		Secure: false
	Object:
		Variable: varReplacer33131
		Type: java.lang.String
		Statement: specialinvoke r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r7, varReplacer33129, varReplacer33130, varReplacer33131)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.security.SESTSConnectionImpl: void setupBlockCrypto()>
		SHA-256: 7fdb9d2d7057e0a4eb1f2be580228b210acc3fc36c223f5e50b7b364f235e4d7
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl: java.security.KeyStore getTrustStore()>
		SHA-256: d5a975a999ea44e143905a41983cda80e4ac602fa7360a92abc492630400c1a8
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer33132)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.security.SESTSConnectionImpl: void setupBlockCrypto()>
		SHA-256: 5957902f7a0b639d0e130053348bf17f5b38b6f27f5b7ef630ea10d42866993b
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.PublicKey
		Statement: $r6 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>(r2)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void verifyData(java.lang.String,byte[])>
		SHA-256: 4c82b64f2f0d98a059936580aa0b1a5cabfc0d4dcb40be0d1c0cdcc0f50c6934
		Secure: false
	Object:
		Variable: $r21
		Type: javax.crypto.SecretKey
		Statement: $r21 = virtualinvoke $r20.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.aelitis.azureus.core.dht.control.impl.DHTControlImpl: void <init>(com.aelitis.azureus.core.dht.control.DHTControlAdapter,com.aelitis.azureus.core.dht.transport.DHTTransport,int,int,int,int,int,int,int,int,com.aelitis.azureus.core.dht.DHTLogger)>
		SHA-256: f190296c33772b32c6ff04371858ef3ae238c5ac9e7f3b31754c0cedfc63964
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)
		Method: <com.aelitis.azureus.core.networkmanager.impl.TransportCipher: void <init>(java.lang.String,int,javax.crypto.spec.SecretKeySpec)>
		SHA-256: 2196b49346457d66367d3c65143415ff87b4fb4b94c3892988473539180e259c
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer19328)
		Method: <com.aelitis.azureus.core.clientmessageservice.secure.impl.SecureMessageServiceClientHelper: void <init>(java.lang.String,int,int,java.lang.String,java.security.interfaces.RSAPublicKey)>
		SHA-256: 9179cba6f83c554029862e9254de25235a9cab0280c6ddd1f5c97908f4e5ff58
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer19318)
		Method: <com.aelitis.azureus.core.clientmessageservice.secure.impl.SecureMessageServiceClientHelper: void sendMessage(java.util.Map)>
		SHA-256: 373504f37d4a2bf07c1b1a27d4e822f70a6de6c29e1e8710f4263c010fe4df1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer24307)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void verifyData(java.io.File)>
		SHA-256: 68724334a09dc43373ba209e931a7dd2aecb4a8ef2bd9b541ad0a1e9b02062de
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r7, varReplacer33129, varReplacer33130, varReplacer33131)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.security.SESTSConnectionImpl: void setupBlockCrypto()>
		SHA-256: 73d688a379ff198b2d23bce9377e0118748ab9e9d1f80a478271d78adac16c6a
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <com.frostwire.android.market.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 50d20e0d863bf9aaaccbe6d5f71c736bbbd4ab16c1ca9b261b70d21b96f5b665
		Secure: false
	Object:
		Variable: $r16
		Type: java.security.cert.CertificateFactory
		Statement: $r16 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer22246)
		Method: <org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl: javax.net.ssl.SSLSocketFactory installServerCertificates(java.lang.String,java.lang.String,int)>
		SHA-256: 2c948f8c8d9025f973b1e50723609b51faf68be5fa3c38f10c389826726e90f3
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer36707)
		Method: <org.gudy.azureus2.core3.peer.impl.control.PEPeerControlImpl: byte[] computeMd5Hash(org.gudy.azureus2.core3.util.DirectByteBuffer)>
		SHA-256: c5d74565cb39dd5b694c6d98daee02485cb0e2405dbf41f63394952ce5536b5e
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.frostwire.android.gui.util.DiskLruImageCache: java.lang.String encodeKey(java.lang.Object)>
		SHA-256: 19a4f0ca93060715260bc52584bac67b647b2ed02d6e4eb5445742713bfca657
		Secure: false
	Object:
		Variable: varReplacer28644
		Type: java.lang.String
		Statement: $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer28644)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void completeDH(byte[])>
		SHA-256: cb010291ad36c5f4a350a21a796a3dfb8822fc7879ffc86fc70dfc7691c0b6d2
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.Signature
		Statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer24329)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void verifyData(java.io.File,java.security.interfaces.RSAPublicKey)>
		SHA-256: 60a488351824c3116fa894bed06510cb801ed246f36ba6f9882c095b12eb6dd9
		Secure: false
	Object:
		Variable: $r19
		Type: javax.crypto.Cipher
		Statement: $r19 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer23865)
		Method: <com.aelitis.azureus.core.dht.control.impl.DHTControlImpl: void <init>(com.aelitis.azureus.core.dht.control.DHTControlAdapter,com.aelitis.azureus.core.dht.transport.DHTTransport,int,int,int,int,int,int,int,int,com.aelitis.azureus.core.dht.DHTLogger)>
		SHA-256: d647fce57b047bcda93be7064324a66d4a2622a1f33f408994b4b539b49f5020
		Secure: false
	Object:
		Variable: $r20
		Type: javax.crypto.KeyGenerator
		Statement: $r20 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer23854)
		Method: <com.aelitis.azureus.core.dht.control.impl.DHTControlImpl: void <init>(com.aelitis.azureus.core.dht.control.DHTControlAdapter,com.aelitis.azureus.core.dht.transport.DHTTransport,int,int,int,int,int,int,int,int,com.aelitis.azureus.core.dht.DHTLogger)>
		SHA-256: 5504e25e46320b11091e38a725ff5add913559c3800443d39ed67e3a7116d6a3
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.security.SESTSConnectionImpl: void setupBlockCrypto()>
		SHA-256: d7b7cea91a4741df90f29ca79140306b17b9ebca0542e55eefa27684c76dba37
		Secure: false
	Object:
		Variable: varReplacer24307
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer24307)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void verifyData(java.io.File)>
		SHA-256: dba03e234caf8119e85de17496cb90ed626bfd625e45e934d3845069886dab87
		Secure: false

Findings in Java Class: com.frostwire.android.market.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #48a989439a3d99f90ead55150f92a1af174d0beccccea121de2ce98e5dbc152b)
			First parameter (with value "SHA1withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer4730)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


	 in Method: java.security.PublicKey generatePublicKey(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r4 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r3)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)


Findings in Java Class: com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE

	 in Method: void cryptoSetup()
		TypestateError violating CrySL rule for java.security.KeyPairGenerator (on Object #7d5cab638a8ce1dbd6e29a028d7b702fa71e3a27b9e5ddb9b02b304fda227c00)
			Unexpected call to method generateKeyPair on object of type java.security.KeyPairGenerator. Expect a call to one of the following methods initialize
			at statement: virtualinvoke $r6.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #fca84b9a4fc2299d81d1975f73d4022ff264c9d5c35a6fdb65badc942d4d8fc4)
			Fourth parameter (with value "RC4") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r1, varReplacer7754, varReplacer7755, varReplacer7756)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r1, varReplacer7754, varReplacer7755, varReplacer7756)


	 in Method: void completeDH(byte[])
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r8 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6)

		TypestateError violating CrySL rule for javax.crypto.KeyAgreement (on Object #aa12ed330da1e34e99b5f6d824bb1eac906c729bc9031c0145e7d6f125091b34)
			Unexpected call to method doPhase on object of type javax.crypto.KeyAgreement.
			at statement: virtualinvoke $r9.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>($r8, varReplacer28646)

		RequiredPredicateError violating CrySL rule for javax.crypto.KeyAgreement
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r9.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>($r8, varReplacer28646)


	 in Method: void process()
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #aa12ed330da1e34e99b5f6d824bb1eac906c729bc9031c0145e7d6f125091b34)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: virtualinvoke r0.<com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void failed(java.lang.Throwable)>(r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #aa12ed330da1e34e99b5f6d824bb1eac906c729bc9031c0145e7d6f125091b34)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: virtualinvoke r0.<com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void read(java.nio.ByteBuffer)>($r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #aa12ed330da1e34e99b5f6d824bb1eac906c729bc9031c0145e7d6f125091b34)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: virtualinvoke r0.<com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void read(java.nio.ByteBuffer)>($r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #aa12ed330da1e34e99b5f6d824bb1eac906c729bc9031c0145e7d6f125091b34)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: virtualinvoke r0.<com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void setupCrypto()>()


	 in Method: void read(java.nio.ByteBuffer)
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #aa12ed330da1e34e99b5f6d824bb1eac906c729bc9031c0145e7d6f125091b34)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: $r5 = virtualinvoke r0.<com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: java.lang.String getString()>()


	 in Method: void setupCrypto()
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #fb3fd04bc901b08a507c83020fc31ba0d16300dedfba52da3866b3c3e3beaa7)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer28650)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer28647)


	 in Method: void initCrypto()
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyAgreement
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r4.<javax.crypto.KeyAgreement: void init(java.security.Key)>($r5)


Findings in Java Class: org.gudy.azureus2.core3.util.SHA1Hasher

	 in Method: void <init>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #25ea58224d585b1a5692ddc0f122562b1bcabc8dd86239f67aec7e0df07f7a8)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11346)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #25ea58224d585b1a5692ddc0f122562b1bcabc8dd86239f67aec7e0df07f7a8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11346)


Findings in Java Class: org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl

	 in Method: javax.net.ssl.SSLSocketFactory installServerCertificates(java.net.URL)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12422, $r42, $r9)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12422, $r42, $r9)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #72bd53595379db6bf0d6462129a246bcc731153523d1c47b90b284d34714bcc)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r8 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer12421)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #29fff2fc3d563bebcb44d76be8b4925333cdf2d6688b1870e4e6358202fb4603)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r24 = virtualinvoke $r27.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r28)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12422, $r42, $r9)


	 in Method: java.security.KeyStore getTrustStore()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #d5a975a999ea44e143905a41983cda80e4ac602fa7360a92abc492630400c1a8)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r1, $r6)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #d5a975a999ea44e143905a41983cda80e4ac602fa7360a92abc492630400c1a8)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r1, $r6)


	 in Method: javax.net.ssl.SSLSocketFactory addCertToTrustStore(java.lang.String,java.security.cert.Certificate,boolean)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer19390, $r10, varReplacer19390)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer19390, $r10, varReplacer19390)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #d5a975a999ea44e143905a41983cda80e4ac602fa7360a92abc492630400c1a8)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r5.<java.security.KeyStore: void store(java.io.OutputStream,char[])>(r3, $r7)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #cbb994d1030c47dfa1f5e285723ffedf9f5ed2c4755a70e7c9afd0de4d6ff15d)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer19392)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer19390, $r10, varReplacer19390)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r8.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r5)


	 in Method: javax.net.ssl.SSLSocketFactory installServerCertificates(java.lang.String,java.lang.String,int)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer22250, $r29, $r9)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer22250, $r29, $r9)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #4d424660f5f39cf081c6bf11058028b7d80c8ed6db41293e6ff8daa7ad669aee)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r8 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer22248)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer22250, $r29, $r9)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #2c948f8c8d9025f973b1e50723609b51faf68be5fa3c38f10c389826726e90f3)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r19 = virtualinvoke $r16.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r17)


Findings in Java Class: com.aelitis.azureus.core.util.http.HTTPAuthHelper$processor

	 in Method: void connectToDelegate()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16378, $r24, $r6)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #956d2e358947512308bae0ec27c51a437d83792a5fecec226b563fb5a2afaaba)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer16375)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16378, $r24, $r6)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16378, $r24, $r6)


Findings in Java Class: org.gudy.azureus2.core3.util.AEVerifier

	 in Method: void verifyData(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r6 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>(r2)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r8.<java.security.Signature: void initVerify(java.security.PublicKey)>(r7)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #f6eec7390bd4b3db6a61fee8eec595e9e8ddc9b6e68a6bc912e9806206f19748)
			First parameter (with value "MD5withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer16827)


	 in Method: void verifyData(java.io.File,java.security.interfaces.RSAPublicKey)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #60a488351824c3116fa894bed06510cb801ed246f36ba6f9882c095b12eb6dd9)
			First parameter (with value "MD5withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer24329)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r8.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #60a488351824c3116fa894bed06510cb801ed246f36ba6f9882c095b12eb6dd9)
			Operation on object of type java.security.Signature object not completed. Expected call to update, verify
			at statement: virtualinvoke $r8.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #60a488351824c3116fa894bed06510cb801ed246f36ba6f9882c095b12eb6dd9)
			Operation on object of type java.security.Signature object not completed. Expected call to java.security.Signature: void update(byte), java.security.Signature: void update(byte[],int,int), java.security.Signature: void update(byte[]), java.security.Signature: void update(java.nio.ByteBuffer), verify
			at statement: virtualinvoke $r8.<java.security.Signature: void update(byte[],int,int)>(r2, varReplacer24336, $i0)


	 in Method: void verifyData(java.io.File)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>(r1)


Findings in Java Class: com.aelitis.azureus.core.clientmessageservice.secure.impl.SecureMessageServiceClientHelper

	 in Method: void sendMessage(java.util.Map)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer19311, $r7)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #373504f37d4a2bf07c1b1a27d4e822f70a6de6c29e1e8710f4263c010fe4df1)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r5 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #373504f37d4a2bf07c1b1a27d4e822f70a6de6c29e1e8710f4263c010fe4df1)
			First parameter (with value "DESede/ECB/PKCS5Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer19318)


	 in Method: java.util.Map receiveMessage()
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #4374eb7772831de855353d2d950b58e44e13a4bc84bc28eb12b64535e0d4312a)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r5 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer19323, $r7)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #4374eb7772831de855353d2d950b58e44e13a4bc84bc28eb12b64535e0d4312a)
			First parameter (with value "DESede/ECB/PKCS5Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer19325)


	 in Method: void <init>(java.lang.String,int,int,java.lang.String,java.security.interfaces.RSAPublicKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer19327, $r3)

		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #72dbc9bb9a066b5c8acb9d6e129fb89d9e038c023b48a2f826613e33fd645856)
			First parameter (with value "DESede") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: $r5 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer19329)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9179cba6f83c554029862e9254de25235a9cab0280c6ddd1f5c97908f4e5ff58)
			First parameter (with value "RSA") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer19328)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #9179cba6f83c554029862e9254de25235a9cab0280c6ddd1f5c97908f4e5ff58)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r7 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)


Findings in Java Class: com.frostwire.android.gui.SoftwareUpdater

	 in Method: java.lang.String getMD5(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #634cc11fa2e1c81d11fa8b47fc6d6da0b0c4759f2890432d043a18614b180a17)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #634cc11fa2e1c81d11fa8b47fc6d6da0b0c4759f2890432d043a18614b180a17)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20613)


Findings in Java Class: com.frostwire.android.gui.DiskCrawlCache

	 in Method: java.lang.String encodeKey(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #24b81a7cbdc28eb09980c35c364be6c26e207f4a6c986a9f98ca14f50dc4058c)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer21835)


Findings in Java Class: com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager

	 in Method: boolean verifyKeyBlock(byte[],byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r4)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #f0a38b70c60e7589b7de90ea473561b554359a07f6853d17360f967d78c3292e)
			First parameter (with value "MD5withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer23825)


	 in Method: boolean verifyKeyBlock(com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager$keyBlock,com.aelitis.azureus.core.dht.transport.DHTTransportContact)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r8.<java.security.Signature: void initVerify(java.security.PublicKey)>($r9)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #31072ab35e48d98e6bb0ab93614039d27c6bbb5c42a72d27c4162f16e3cc17d4)
			First parameter (with value "MD5withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer30831)


	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>(r1)


Findings in Java Class: com.aelitis.azureus.core.dht.control.impl.DHTControlImpl

	 in Method: void <init>(com.aelitis.azureus.core.dht.control.DHTControlAdapter,com.aelitis.azureus.core.dht.transport.DHTTransport,int,int,int,int,int,int,int,int,com.aelitis.azureus.core.dht.DHTLogger)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d647fce57b047bcda93be7064324a66d4a2622a1f33f408994b4b539b49f5020)
			First parameter (with value "DESede/ECB/PKCS5Padding") should be any of {AES, RSA, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r19 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer23865)

		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #5504e25e46320b11091e38a725ff5add913559c3800443d39ed67e3a7116d6a3)
			First parameter (with value "DESede") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: $r20 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer23854)


Findings in Java Class: com.aelitis.azureus.core.dht.control.impl.DHTControlImpl$DhtTask

	 in Method: void <init>(com.aelitis.azureus.core.dht.control.impl.DHTControlImpl,org.gudy.azureus2.core3.util.ThreadPool)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #d647fce57b047bcda93be7064324a66d4a2622a1f33f408994b4b539b49f5020)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r4 = staticinvoke <com.aelitis.azureus.core.dht.control.impl.DHTControlImpl: org.gudy.azureus2.core3.util.AEMonitor access$2100(com.aelitis.azureus.core.dht.control.impl.DHTControlImpl)>($r1)


Findings in Java Class: com.frostwire.android.gui.util.DiskLruImageCache

	 in Method: java.lang.String encodeKey(java.lang.Object)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4e091ff6a16f4acee2146c73ea6aec4da346d045b0c318cc6d226cfa49c306fb)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer26027)


Findings in Java Class: org.gudy.azureus2.pluginsimpl.local.utils.resourcedownloader.ResourceDownloaderURLImpl

	 in Method: java.net.PasswordAuthentication getAuthentication(java.lang.String,java.net.URL)
		NeverTypeOfError violating CrySL rule for java.net.PasswordAuthentication (on Object #c95260eca08e0c69799348174895a26b48376c7cc8f7b0854f3e9957b2c4c941)
			Second parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r1, $r6)

		HardCodedError violating CrySL rule for java.net.PasswordAuthentication (on Object #c95260eca08e0c69799348174895a26b48376c7cc8f7b0854f3e9957b2c4c941)
			Second parameter should never be hardcoded.
			at statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r1, $r6)

		NeverTypeOfError violating CrySL rule for java.net.PasswordAuthentication (on Object #65ac51d70edf8362844b7dc0efdde6ab1c5f7854606997d47723cac1173b83ee)
			Second parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>(r3, $r6)

		HardCodedError violating CrySL rule for java.net.PasswordAuthentication (on Object #65ac51d70edf8362844b7dc0efdde6ab1c5f7854606997d47723cac1173b83ee)
			Second parameter should never be hardcoded.
			at statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>(r3, $r6)


Findings in Java Class: org.gudy.azureus2.pluginsimpl.local.utils.resourceuploader.ResourceUploaderURLImpl

	 in Method: java.net.PasswordAuthentication getAuthentication(java.lang.String,java.net.URL)
		NeverTypeOfError violating CrySL rule for java.net.PasswordAuthentication (on Object #ba88f99d25f5879268b2663049650f51a5123a0d5322a9f1bbc550076fdc07fc)
			Second parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>(r3, $r6)

		HardCodedError violating CrySL rule for java.net.PasswordAuthentication (on Object #ba88f99d25f5879268b2663049650f51a5123a0d5322a9f1bbc550076fdc07fc)
			Second parameter should never be hardcoded.
			at statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>(r3, $r6)

		NeverTypeOfError violating CrySL rule for java.net.PasswordAuthentication (on Object #5868598051f0bc598dedf43d0b776e81514d56bd10e6866da9fd42354decc35f)
			Second parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r1, $r6)

		HardCodedError violating CrySL rule for java.net.PasswordAuthentication (on Object #5868598051f0bc598dedf43d0b776e81514d56bd10e6866da9fd42354decc35f)
			Second parameter should never be hardcoded.
			at statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r1, $r6)


Findings in Java Class: com.aelitis.azureus.core.networkmanager.impl.udp.UDPConnectionManager

	 in Method: void accept(int,java.net.InetSocketAddress,com.aelitis.azureus.core.networkmanager.impl.udp.UDPConnection)
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #aa12ed330da1e34e99b5f6d824bb1eac906c729bc9031c0145e7d6f125091b34)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: virtualinvoke $r5.<com.aelitis.azureus.core.networkmanager.impl.TransportCryptoManager: void manageCrypto(com.aelitis.azureus.core.networkmanager.impl.TransportHelper,byte[][],boolean,java.nio.ByteBuffer,com.aelitis.azureus.core.networkmanager.impl.TransportCryptoManager$HandshakeListener)>(r3, varReplacer29396, varReplacer29397, varReplacer29396, $r6)


	 in Method: void connectOutbound(com.aelitis.azureus.core.networkmanager.impl.udp.UDPTransport,java.net.InetSocketAddress,byte[][],java.nio.ByteBuffer,com.aelitis.azureus.core.networkmanager.Transport$ConnectListener)
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #aa12ed330da1e34e99b5f6d824bb1eac906c729bc9031c0145e7d6f125091b34)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: virtualinvoke $r10.<com.aelitis.azureus.core.networkmanager.impl.TransportCryptoManager: void manageCrypto(com.aelitis.azureus.core.networkmanager.impl.TransportHelper,byte[][],boolean,java.nio.ByteBuffer,com.aelitis.azureus.core.networkmanager.impl.TransportCryptoManager$HandshakeListener)>(r7, $r3, varReplacer36869, $r4, $r11)


Findings in Java Class: com.aelitis.azureus.core.networkmanager.impl.test.PHETester

	 in Method: void outgoing(java.nio.channels.SocketChannel)
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #aa12ed330da1e34e99b5f6d824bb1eac906c729bc9031c0145e7d6f125091b34)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: specialinvoke $r7.<com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderInitial: void <init>(com.aelitis.azureus.core.networkmanager.impl.TransportHelper,byte[][],boolean,java.nio.ByteBuffer,com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderAdapter)>(r2, $r8, varReplacer29270, varReplacer29271, $r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #aa12ed330da1e34e99b5f6d824bb1eac906c729bc9031c0145e7d6f125091b34)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: specialinvoke $r7.<com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderInitial: void <init>(com.aelitis.azureus.core.networkmanager.impl.TransportHelper,byte[][],boolean,java.nio.ByteBuffer,com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderAdapter)>(r2, $r8, varReplacer29270, varReplacer29271, $r3)


	 in Method: void incoming(java.nio.channels.SocketChannel)
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #aa12ed330da1e34e99b5f6d824bb1eac906c729bc9031c0145e7d6f125091b34)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: specialinvoke $r2.<com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderInitial: void <init>(com.aelitis.azureus.core.networkmanager.impl.TransportHelper,byte[][],boolean,java.nio.ByteBuffer,com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderAdapter)>(r3, varReplacer24852, varReplacer24853, varReplacer24852, $r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #aa12ed330da1e34e99b5f6d824bb1eac906c729bc9031c0145e7d6f125091b34)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: specialinvoke $r2.<com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderInitial: void <init>(com.aelitis.azureus.core.networkmanager.impl.TransportHelper,byte[][],boolean,java.nio.ByteBuffer,com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderAdapter)>(r3, varReplacer24852, varReplacer24853, varReplacer24852, $r4)


Findings in Java Class: com.aelitis.azureus.core.networkmanager.impl.tcp.TCPTransportImpl

	 in Method: void handleCrypto(java.net.InetSocketAddress,java.nio.channels.SocketChannel,java.nio.ByteBuffer,int,com.aelitis.azureus.core.networkmanager.Transport$ConnectListener)
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #aa12ed330da1e34e99b5f6d824bb1eac906c729bc9031c0145e7d6f125091b34)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: virtualinvoke $r6.<com.aelitis.azureus.core.networkmanager.impl.TransportCryptoManager: void manageCrypto(com.aelitis.azureus.core.networkmanager.impl.TransportHelper,byte[][],boolean,java.nio.ByteBuffer,com.aelitis.azureus.core.networkmanager.impl.TransportCryptoManager$HandshakeListener)>(r5, $r7, varReplacer32171, $r3, $r8)


Findings in Java Class: com.aelitis.azureus.core.networkmanager.impl.tcp.IncomingSocketChannelManager$TcpSelectListener

	 in Method: void newConnectionAccepted(java.nio.channels.ServerSocketChannel,java.nio.channels.SocketChannel)
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #aa12ed330da1e34e99b5f6d824bb1eac906c729bc9031c0145e7d6f125091b34)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: virtualinvoke $r8.<com.aelitis.azureus.core.networkmanager.impl.TransportCryptoManager: void manageCrypto(com.aelitis.azureus.core.networkmanager.impl.TransportHelper,byte[][],boolean,java.nio.ByteBuffer,com.aelitis.azureus.core.networkmanager.impl.TransportCryptoManager$HandshakeListener)>(r3, varReplacer19143, varReplacer19144, varReplacer19143, $r4)


Findings in Java Class: com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderInitial$1

	 in Method: boolean selectSuccess(com.aelitis.azureus.core.networkmanager.impl.TransportHelper,java.lang.Object)
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #aa12ed330da1e34e99b5f6d824bb1eac906c729bc9031c0145e7d6f125091b34)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: virtualinvoke $r4.<com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderInitial: void decodePHE(java.nio.ByteBuffer)>($r5)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #aa12ed330da1e34e99b5f6d824bb1eac906c729bc9031c0145e7d6f125091b34)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: virtualinvoke $r4.<com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderInitial: void complete(java.nio.ByteBuffer)>($r5)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #aa12ed330da1e34e99b5f6d824bb1eac906c729bc9031c0145e7d6f125091b34)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: $r5 = staticinvoke <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderInitial: java.nio.ByteBuffer access$000(com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderInitial)>($r4)


Findings in Java Class: org.gudy.azureus2.pluginsimpl.local.utils.security.SESTSConnectionImpl

	 in Method: void receive(org.gudy.azureus2.plugins.utils.PooledByteBuffer)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #5957902f7a0b639d0e130053348bf17f5b38b6f27f5b7ef630ea10d42866993b)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r7 = virtualinvoke $r18.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #236134ddd36883d2836fff6fa07b231f14cfbdd71cc937d88dd4f3e29d5c6507)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r7 = virtualinvoke $r18.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)


	 in Method: void receiveContent(org.gudy.azureus2.plugins.utils.PooledByteBuffer)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #5957902f7a0b639d0e130053348bf17f5b38b6f27f5b7ef630ea10d42866993b)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r4 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #236134ddd36883d2836fff6fa07b231f14cfbdd71cc937d88dd4f3e29d5c6507)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r4 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)


	 in Method: void setupBlockCrypto()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r7, varReplacer33123, varReplacer33124, varReplacer33125)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer33126, r5, r3)


Findings in Java Class: org.gudy.azureus2.pluginsimpl.local.ddb.DDBaseTTTorrent

	 in Method: byte[] doCrypt(int,byte[],byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>($i0, r5)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #6143ef61134f29bbf3f84d6c285e804ab9370181360427329fc53501c1ababbc)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, $i1, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, varReplacer33944)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #a96df1dc2065c13943ef9646bebe18c824658cb74f928afd3ebee87bcdfcf9b3)
			Second parameter (with value "DESede") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, varReplacer33944)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #6143ef61134f29bbf3f84d6c285e804ab9370181360427329fc53501c1ababbc)
			First parameter (with value "DESede") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer33943)


Findings in Java Class: org.gudy.azureus2.core3.util.MD4Hasher

	 in Method: void <init>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f97e76015947146c73de0161daade59f52ecbfd3974443ad3f8af5a37eb2bb6a)
			First parameter (with value "MD4") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>(varReplacer34596, varReplacer34597)


Findings in Java Class: org.gudy.azureus2.core3.util.ED2KHasher

	 in Method: byte[] getDigest()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f97e76015947146c73de0161daade59f52ecbfd3974443ad3f8af5a37eb2bb6a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = virtualinvoke $r2.<org.gudy.azureus2.core3.util.MD4Hasher: byte[] getDigest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f97e76015947146c73de0161daade59f52ecbfd3974443ad3f8af5a37eb2bb6a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = virtualinvoke $r2.<org.gudy.azureus2.core3.util.MD4Hasher: byte[] getDigest()>()


	 in Method: void update(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f97e76015947146c73de0161daade59f52ecbfd3974443ad3f8af5a37eb2bb6a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r3.<org.gudy.azureus2.core3.util.MD4Hasher: void <init>()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f97e76015947146c73de0161daade59f52ecbfd3974443ad3f8af5a37eb2bb6a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, java.security.MessageDigest: void update(byte[],int,int), java.security.MessageDigest: void update(java.nio.ByteBuffer), java.security.MessageDigest: void update(byte[]), java.security.MessageDigest: void update(byte)
			at statement: virtualinvoke $r3.<org.gudy.azureus2.core3.util.MD4Hasher: void update(byte[],int,int)>($r1, $i2, i1)


Findings in Java Class: org.gudy.azureus2.core3.torrent.impl.TOTorrentFileHasher

	 in Method: long add(java.io.File)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f97e76015947146c73de0161daade59f52ecbfd3974443ad3f8af5a37eb2bb6a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, java.security.MessageDigest: void update(byte[],int,int), java.security.MessageDigest: void update(java.nio.ByteBuffer), java.security.MessageDigest: void update(byte[]), java.security.MessageDigest: void update(byte)
			at statement: virtualinvoke r2.<org.gudy.azureus2.core3.util.ED2KHasher: void update(byte[],int,int)>($r10, $i0, $i2)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f97e76015947146c73de0161daade59f52ecbfd3974443ad3f8af5a37eb2bb6a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r2.<org.gudy.azureus2.core3.util.ED2KHasher: void <init>()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f97e76015947146c73de0161daade59f52ecbfd3974443ad3f8af5a37eb2bb6a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: r2 = null


Findings in Java Class: org.gudy.azureus2.core3.peer.impl.control.PEPeerControlImpl

	 in Method: byte[] computeMd5Hash(org.gudy.azureus2.core3.util.DirectByteBuffer)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c5d74565cb39dd5b694c6d98daee02485cb0e2405dbf41f63394952ce5536b5e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer36707)


Findings in Java Class: org.appwork.utils.net.httpconnection.TrustALLSSLFactory

	 in Method: javax.net.ssl.SSLSocketFactory getSSLFactoryTrustALL()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer38889, $r2, $r0)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer38889, $r2, $r0)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #c4c894ad07ede9a460d46230d3cd15fc5ece8f86c4cc8aaa634f93f78e4119d9)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer38890)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer38889, $r2, $r0)


Findings in Java Class: com.aelitis.azureus.core.networkmanager.impl.udp.UDPConnectionSet

	 in Method: org.bouncycastle.crypto.engines.RC4EngineEx getCipher(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer39056)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #a19527c4dda1b41b0290a23a10877f4ff4b0e3eb9f53ce6a8f750dfd4383150c)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer39056)


Findings in Java Class: com.aelitis.azureus.core.networkmanager.impl.TransportCipher

	 in Method: void <init>(java.lang.String,int,javax.crypto.spec.SecretKeySpec)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>($i0, $r2)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 91

	CryptoAnalysis found the following violations. For details see description above.
	TypestateError: 12
	HardCodedError: 5
	RequiredPredicateError: 41
	ConstraintError: 27
	NeverTypeOfError: 5
	IncompleteOperationError: 29
=====================================================================
