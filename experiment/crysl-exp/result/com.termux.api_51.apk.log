0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: java.security.KeyStore
		Statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3815)
		Method: <androidx.biometric.h: androidx.biometric.BiometricPrompt$c a()>
		SHA-256: 21403b87dd3607d08d1543a03cfabe67e1fbea67e978a042f18d85fb932eae74
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.Signature
		Statement: $r10 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r4)
		Method: <com.termux.api.h1$b: void a(java.io.PrintWriter)>
		SHA-256: 9634ce78bd426f2c3237617354ca3eecd5dc6d692e4d2358dbcd454b1e3ea986
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.Signature
		Statement: $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r4)
		Method: <com.termux.api.h1$c: void a(java.io.PrintWriter)>
		SHA-256: ab98eb1e6280620c4f646b4927807ab20a72d4c18199c3c09fe51a398acaf822
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>($r5)
		Method: <com.termux.api.h1: void h(android.content.Intent,java.io.PrintWriter)>
		SHA-256: 5698717c5a8c2498ad77821cc1c402525d4a7ab243055ea45852fd2feb500bdf
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.spec.RSAKeyGenParameterSpec
		Statement: specialinvoke $r7.<java.security.spec.RSAKeyGenParameterSpec: void <init>(int,java.math.BigInteger)>($i1, $r8)
		Method: <com.termux.api.h1: void h(android.content.Intent,java.io.PrintWriter)>
		SHA-256: c006a20bc0ff307bca11d0b37d4c17a52512401dfb73dde6a08316f5dd84f3aa
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer3810, varReplacer3811)
		Method: <androidx.biometric.h: androidx.biometric.BiometricPrompt$c a()>
		SHA-256: 63f866c5e92a30d2fd6dde7a3ba3c1c6e85ab85e6c3d967e2bdb4f7adf8c127a
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7688)
		Method: <d.b.a.h.a: java.lang.String h(android.content.Context)>
		SHA-256: 5d73d5c1af482ac02c2cd8363df9042d09dd02b5e912bc38e3339002d0f20962
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyFactory
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r3)
		Method: <com.termux.api.h1: void k(android.util.JsonWriter,java.security.KeyStore$PrivateKeyEntry,boolean)>
		SHA-256: 2091f3eb6cf67798aa6fb5dc9c079ffb6d6715f48b2271c2af33b96ab09aae20
		Secure: true
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $z0 = virtualinvoke $r11.<java.security.Signature: boolean verify(byte[])>($r9)
		Method: <com.termux.api.h1$c: void a(java.io.PrintWriter)>
		SHA-256: bad08b9b03c6f8cf1c03843a8992d724fd25a2375fcfc4374c06e8f212321f3f
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPairGenerator
		Statement: $r10 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>($r3, varReplacer1794)
		Method: <com.termux.api.h1: void h(android.content.Intent,java.io.PrintWriter)>
		SHA-256: c5cc905656c42ca927a95fe069d57bdb78c50d141879f2780018f221da2762eb
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3816)
		Method: <androidx.biometric.h: androidx.biometric.BiometricPrompt$c a()>
		SHA-256: 3897ef3acd0909c9078e6597bba7ca07ff759fabbfa0675b1158aeae35f556fb
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Key
		Statement: $r4 = virtualinvoke $r0.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer3807, varReplacer3808)
		Method: <androidx.biometric.h: androidx.biometric.BiometricPrompt$c a()>
		SHA-256: c2a6cdf75f282e6ed9c23d95941aefd2e134525a709fc0d42bd86fe1fb8aa2ff
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <d.b.a.h.a: java.lang.String h(android.content.Context)>
		SHA-256: 38700b96cc4934f3f3d0d601432edf8fef44df1d9f800c3da0d4c7658746f122
		Secure: true
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r11.<java.security.Signature: boolean verify(byte[])>($r9)
		Method: <com.termux.api.h1$c: void a(java.io.PrintWriter)>
		SHA-256: c07a746554a380a17a3ff2b91d6e2bf2557550a22c45065aa5617ace6e1a5c89
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r10.<java.security.Signature: byte[] sign()>()
		Method: <com.termux.api.h1$b: void a(java.io.PrintWriter)>
		SHA-256: a31bb582c643f01c23a6c9a1ea1f1fa6c04fff97db43abc364b4a31de06c59c5
		Secure: false
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r3)
		Method: <com.termux.api.h1: void k(android.util.JsonWriter,java.security.KeyStore$PrivateKeyEntry,boolean)>
		SHA-256: 8cbdc9ddd1b608289ac23d0e06c9ff3198b7f9710231ee15c7bc5871a78686be
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyStore
		Statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1811)
		Method: <com.termux.api.h1: java.security.KeyStore f()>
		SHA-256: 7679590f5a75f2cf20d783bf549c9e82328f2a6de7eff267bbcadaae4820f947
		Secure: false

Findings in Java Class: com.termux.api.h1

	 in Method: java.security.KeyStore f()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #7679590f5a75f2cf20d783bf549c9e82328f2a6de7eff267bbcadaae4820f947)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1811)


	 in Method: void h(android.content.Intent,java.io.PrintWriter)
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedEC
			at statement: virtualinvoke $r10.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r11)

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedDH
			at statement: virtualinvoke $r10.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r11)

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedDSA
			at statement: virtualinvoke $r10.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r11)

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedRSA
			at statement: virtualinvoke $r10.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r11)


Findings in Java Class: com.termux.api.h1$a

	 in Method: void b(android.util.JsonWriter)
		TypestateError violating CrySL rule for java.security.KeyStore (on Object #7679590f5a75f2cf20d783bf549c9e82328f2a6de7eff267bbcadaae4820f947)
			Unexpected call to method getEntry on object of type java.security.KeyStore. Expect a call to one of the following methods getKey
			at statement: $r8 = virtualinvoke $r2.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>($r6, varReplacer3356)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #7679590f5a75f2cf20d783bf549c9e82328f2a6de7eff267bbcadaae4820f947)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r8 = virtualinvoke $r2.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>($r6, varReplacer3356)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #7679590f5a75f2cf20d783bf549c9e82328f2a6de7eff267bbcadaae4820f947)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r3 = virtualinvoke $r2.<java.security.KeyStore: java.util.Enumeration aliases()>()


Findings in Java Class: com.termux.api.h1$b

	 in Method: void a(java.io.PrintWriter)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r10.<java.security.Signature: void initSign(java.security.PrivateKey)>($r11)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #7679590f5a75f2cf20d783bf549c9e82328f2a6de7eff267bbcadaae4820f947)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r8 = virtualinvoke $r7.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>($r3, varReplacer1711)


Findings in Java Class: androidx.biometric.h

	 in Method: androidx.biometric.BiometricPrompt$c a()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #3897ef3acd0909c9078e6597bba7ca07ff759fabbfa0675b1158aeae35f556fb)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3816)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #21403b87dd3607d08d1543a03cfabe67e1fbea67e978a042f18d85fb932eae74)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3815)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3817, $r5)


Findings in Java Class: com.termux.api.h1$c

	 in Method: void a(java.io.PrintWriter)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r11.<java.security.Signature: void initVerify(java.security.PublicKey)>($r14)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 17

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 3
	RequiredPredicateError: 7
	TypestateError: 1
	IncompleteOperationError: 3
=====================================================================
