0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <f.a.a.c: javax.net.ssl.X509TrustManager a(java.security.KeyStore)>
		SHA-256: 42c271c236de57e015037b0aab1655ae46a2c513fd280d5a5c34c92794623638
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r15)
		Method: <k.t: void <init>(k.t$b)>
		SHA-256: db7ad077c657dc819f31a3319634d4ad6f8141a4c71d3bed6cb344fbbb72014c
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2171)
		Method: <k.e0.j.a: javax.net.ssl.SSLContext a()>
		SHA-256: fc2aa90143b89d5c5a36a1a9dbe21c2d7ef6f448be1f74c3517f7ad97a34f6f6
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <f.a.a.c: java.lang.String b(java.security.cert.X509Certificate,java.lang.String)>
		SHA-256: 84d7c9540195b51d70d8d6508b7f11d211a306651655129ad4a0a7a1b4c401f3
		Secure: false
	Object:
		Variable: $r22
		Type: java.security.SecureRandom
		Statement: specialinvoke $r22.<java.security.SecureRandom: void <init>()>()
		Method: <j.a.a.d.e.c: void onCreate(android.os.Bundle)>
		SHA-256: 79cbef27da7ec56bc8917d15369633d3f54dce70eccbe85097b8e755d228d760
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2169)
		Method: <k.e0.j.f: javax.net.ssl.SSLContext a()>
		SHA-256: 98f995e0115e4e970c2ba076af4cf3a2f14fdd6ea26bfd6dea1dd1415c0df92
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <l.i: l.i a(java.lang.String)>
		SHA-256: 38458a97305dc260e920bd07228faa88100edbdae7866e2de49ad7d644671453
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <j.a.a.d.e.c: javax.net.ssl.X509TrustManager m()>
		SHA-256: ff7ce596cc749c263ecb5583bd065f732c395f420adc514efce4df72426199c7
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer246)
		Method: <net.reichholf.dreamdroid.tv.activities.MainActivity: void onCreate(android.os.Bundle)>
		SHA-256: 7559d5f333388e22b34b9991eccd97847496cc8d6db799269d5472051c34d307
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <net.reichholf.dreamdroid.tv.activities.MainActivity: javax.net.ssl.X509TrustManager j()>
		SHA-256: 3631137cf9c04162e7de55b8e94e39d66e7df594ade052dcb385e908c4e01580
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer2151)
		Method: <f.a.a.c: javax.net.ssl.X509TrustManager a(java.security.KeyStore)>
		SHA-256: 4342a473aa20e8aad16cca1fcf1454a74f312a211aeba1f440e63393a1fef37
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer2175, $r2)
		Method: <k.e0.j.b: javax.net.ssl.SSLContext a()>
		SHA-256: 6a1eda25edf38b7163f517f849d5906e34246126eb7e62fdf7e2ebd2a41731d1
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <f.a.a.c: java.lang.String b(java.security.cert.X509Certificate,java.lang.String)>
		SHA-256: 1689cc6f0816bb1cf24bb07977d21861316fef5d916c6b0aed46358a70014016
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.TrustManager[]
		Statement: $r17 = virtualinvoke $r16.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <k.t: void <init>(k.t$b)>
		SHA-256: a2a16280dd162a3cbd46f19bcc79156e6042f43ff9fb5ad7f71fd4837ae54e7a
		Secure: false
	Object:
		Variable: $r15
		Type: java.security.KeyStore
		Statement: $r15 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r10)
		Method: <f.a.a.c: void <init>(android.content.Context)>
		SHA-256: f26d238abe4243565d8b46eb9e250f3855b03e40caf960f040e5f964318dd54e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2167)
		Method: <k.e0.j.f: javax.net.ssl.SSLContext a()>
		SHA-256: 6ae79a3e2392486a7b99eabab6535edc45ff5d28db2e9fa649bbd910961284a1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <l.i: l.i a(java.lang.String)>
		SHA-256: 62066f560bc068fed52f7b76e4ae45e5eabc01515ffa1de127febcf1a5e91b13
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <j.a.a.d.e.c: javax.net.ssl.X509TrustManager m()>
		SHA-256: b7fedc24db2f9f9b0c422ed9a63d2c02f25bd9fbb4f03b0b41453c5618520716
		Secure: false
	Object:
		Variable: $r21
		Type: java.security.SecureRandom
		Statement: specialinvoke $r21.<java.security.SecureRandom: void <init>()>()
		Method: <net.reichholf.dreamdroid.tv.activities.MainActivity: void onCreate(android.os.Bundle)>
		SHA-256: 8f2a857e5631bf5d6ce75341b0097bb2f2d9d13c90a7a0e1319f938272db9705
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2172)
		Method: <k.e0.j.a: javax.net.ssl.SSLContext a()>
		SHA-256: ab690fb193309e85876d0c5bee2d2a9e31b891d441c4eb382406f2e839e58297
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer2173, $r2)
		Method: <k.e0.j.b: javax.net.ssl.SSLContext a()>
		SHA-256: 4e2ddb95f3831510d5b2b28afd0b071d8233616dd68d0f550d56f3e780f9ca69
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.cert.CertificateFactory
		Statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer26202)
		Method: <k.c$d: java.util.List a(l.h)>
		SHA-256: a413740fdc4095d8fb3c2441d1a578acf1dfc1e2840122f9cdd5cda9af8668c9
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <net.reichholf.dreamdroid.tv.activities.MainActivity: javax.net.ssl.X509TrustManager j()>
		SHA-256: b926180baa2c83829669fc77278bd434ae4fb8c29a37538c53377697486a801c
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1262)
		Method: <j.a.a.d.e.c: void onCreate(android.os.Bundle)>
		SHA-256: 292f983551a7ac04ae159381ea2376810e310d8ec41b29318086ad8b954f4b89
		Secure: false

Findings in Java Class: net.reichholf.dreamdroid.tv.activities.MainActivity

	 in Method: void onCreate(android.os.Bundle)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer247, $r27, $r7)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #7559d5f333388e22b34b9991eccd97847496cc8d6db799269d5472051c34d307)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer246)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer247, $r27, $r7)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer247, $r27, $r7)


	 in Method: javax.net.ssl.X509TrustManager j()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer277)


Findings in Java Class: f.a.a.c

	 in Method: void <init>(android.content.Context)
		TypestateError violating CrySL rule for java.security.KeyStore (on Object #f26d238abe4243565d8b46eb9e250f3855b03e40caf960f040e5f964318dd54e)
			Unexpected call to method load on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r15.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r20, $r21)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #f26d238abe4243565d8b46eb9e250f3855b03e40caf960f040e5f964318dd54e)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r15.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r20, $r21)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #f26d238abe4243565d8b46eb9e250f3855b03e40caf960f040e5f964318dd54e)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r15.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r20, $r21)


	 in Method: javax.net.ssl.X509TrustManager a(java.security.KeyStore)
		ConstraintError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #4342a473aa20e8aad16cca1fcf1454a74f312a211aeba1f440e63393a1fef37)
			First parameter (with value "X509") should be any of {PKIX, SunX509}
			at statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer2151)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r1)


	 in Method: java.lang.String b(java.security.cert.X509Certificate,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #84d7c9540195b51d70d8d6508b7f11d211a306651655129ad4a0a7a1b4c401f3)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: j.a.a.d.e.c

	 in Method: void onCreate(android.os.Bundle)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1265, $r28, $r7)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #292f983551a7ac04ae159381ea2376810e310d8ec41b29318086ad8b954f4b89)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1262)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1265, $r28, $r7)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1265, $r28, $r7)


	 in Method: javax.net.ssl.X509TrustManager m()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer1292)


Findings in Java Class: k.e0.j.f

	 in Method: javax.net.ssl.SSLContext a()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #98f995e0115e4e970c2ba076af4cf3a2f14fdd6ea26bfd6dea1dd1415c0df92)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2169)


Findings in Java Class: k.e0.j.a

	 in Method: javax.net.ssl.SSLContext a()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ab690fb193309e85876d0c5bee2d2a9e31b891d441c4eb382406f2e839e58297)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2172)


Findings in Java Class: k.e0.j.b

	 in Method: javax.net.ssl.SSLContext a()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #6a1eda25edf38b7163f517f849d5906e34246126eb7e62fdf7e2ebd2a41731d1)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer2175, $r2)


Findings in Java Class: l.i

	 in Method: l.i a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #62066f560bc068fed52f7b76e4ae45e5eabc01515ffa1de127febcf1a5e91b13)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #62066f560bc068fed52f7b76e4ae45e5eabc01515ffa1de127febcf1a5e91b13)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: k.c$d

	 in Method: java.util.List a(l.h)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #a413740fdc4095d8fb3c2441d1a578acf1dfc1e2840122f9cdd5cda9af8668c9)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer26202)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #a413740fdc4095d8fb3c2441d1a578acf1dfc1e2840122f9cdd5cda9af8668c9)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #a413740fdc4095d8fb3c2441d1a578acf1dfc1e2840122f9cdd5cda9af8668c9)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)


Findings in Java Class: k.t

	 in Method: void <init>(k.t$b)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r16.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer990)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer987, $r17, varReplacer987)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer987, $r17, varReplacer987)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r21.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer987, $r17, varReplacer987)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 24

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 13
	NeverTypeOfError: 1
	TypestateError: 2
	HardCodedError: 1
	IncompleteOperationError: 2
	ConstraintError: 9
=====================================================================
