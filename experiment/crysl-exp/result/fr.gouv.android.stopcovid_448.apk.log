1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Alive 20497  5000
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: 52666556eb0b9e0106968c3639d610cef0bbf743129b6a2f13e952dd3c4ccbd6
		Secure: true
	Object:
		Variable: $r29
		Type: java.security.Signature
		Statement: $r29 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)
		Method: <okhttp3.tls.internal.TlsUtil$localhost$2: java.lang.Object invoke()>
		SHA-256: bc662ceb539c81a2df0ae35200ce1d58dcd1dc90189d5fd801fe1cbdf0c7bfac
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r5)
		Method: <com.lunabeestudio.domain.model.SSUBuilder: void <init>(com.lunabeestudio.domain.model.SSUSettings,com.lunabeestudio.domain.model.EphemeralBluetoothIdentifier,byte[])>
		SHA-256: 7d58e1de7032b5aaf4ecbcba87948c719945d3697ac1055f26962337fc70aa8f
		Secure: false
	Object:
		Variable: $r23
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r23.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r17)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper$1: java.lang.Object doInJCE()>
		SHA-256: 11fd5391749ae3e2123a45e1767325d48457d52970f7ac1076c0e12635631cf0
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer96519)
		Method: <org.bouncycastle.operator.jcajce.OperatorHelper: javax.crypto.Cipher createAsymmetricWrapper(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.util.Map)>
		SHA-256: 85263cd2c5cc433c97c0345e0fd02d8db23220f414308e37663114261dd8514
		Secure: false
	Object:
		Variable: $r18
		Type: byte[]
		Statement: $r18 = interfaceinvoke $r17.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyUnwrapper: org.bouncycastle.operator.jcajce.JceGenericKey generateUnwrappedKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])>
		SHA-256: ea83c69e5ca15d09658d4d63eeb35adaf475fc822e16834dddf611731c0e5339
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer9432)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource$getEncryptionKeys$1$1: java.lang.Object invoke(java.lang.Object)>
		SHA-256: acafcd9dbe80b5ee797a7c4dc38386c672c86888b736e88670a6a7bee6b8c5a6
		Secure: false
	Object:
		Variable: $r43
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r43.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r3)
		Method: <org.bouncycastle.cms.jcajce.JceKeyTransEnvelopedRecipient: org.bouncycastle.cms.RecipientOperator getRecipientOperator(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])>
		SHA-256: 5345807d8f9c2d69ce6d10eaec8a452c1b8102cc8e3b3a74764ccc8c4a41c979
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.SecurityHandler: void encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)>
		SHA-256: 2b46c2f210d7718eba6f5e96e82a0eb93375999ccdeb886ea99ed8aae4b57c1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer31031)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource: byte[] decrypt(byte[],byte[])>
		SHA-256: ec0a40bb0965daf390b7a8319143b2474d6f731c9c4cb6178463cbd53d9d404b
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r2)
		Method: <okio.'-Platform': boolean verify(java.security.Signature,java.security.PublicKey,byte[],byte[])>
		SHA-256: 9f0de8efb76849c7819d7a50c8e8b07e8831e0a697df7847dc34d6724c95f0d3
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.PublicKey
		Statement: $r12 = virtualinvoke $r9.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.lunabeestudio.robert.repository.RemoteServiceRepository: java.lang.Object registerV2(java.lang.String,java.lang.String,java.lang.String,kotlin.coroutines.Continuation)>
		SHA-256: b011667ccbd0a4f26cd3b25f1b88481548d206716dd2642fe9c1b1849b216309
		Secure: false
	Object:
		Variable: $r9
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r9)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: java.security.Key getJceKey(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.operator.jcajce.JceGenericKey)>
		SHA-256: ff39e4f3d4d02629a068cd7ea57fee029d2e91620c78af50fb19db4e2d5ef132
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer78509)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource: byte[] encrypt(byte[],byte[])>
		SHA-256: 2bef220f382988f80d40882f431e5625e01474a2abc233ec0a574c7c5506d7b6
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: boolean isUserPassword(byte[],byte[],byte[],int,byte[],int,int,boolean)>
		SHA-256: 9aef5700860298bef0d37573a5ae0cdace5c719f23d7d690bac643c566da7673
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource: byte[] encrypt(byte[],byte[])>
		SHA-256: 548ca15d67ddc3f70d0d1388def24aa68e151409589dc0704d992af44164507b
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.cert.CertificateFactory
		Statement: $r9 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer60626)
		Method: <com.lunabeestudio.stopcovid.model.EuropeanCertificate: void verifyKey(java.lang.String)>
		SHA-256: 26c8420748fdb363e2e4539f2dfa12367bf0a133d616ba09b2d780da39094f9d
		Secure: false
	Object:
		Variable: varReplacer86700
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer86700)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] computeHash2A(byte[],byte[],byte[])>
		SHA-256: 2de7f15be37d74bafabdccb9b02a0167bc604103986eb881f9bddb7eca32a903
		Secure: false
	Object:
		Variable: $r38
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r38.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r19, varReplacer72122)
		Method: <com.lunabeestudio.framework.local.LocalCryptoManager: javax.crypto.SecretKey getAesGcmLocalProtectionKey(android.content.Context)>
		SHA-256: 905b78595f720936a96bcff13e1ff134a300e6d883073b741636d2f0b956cbe7
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r6)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: javax.crypto.Cipher createCipher(org.bouncycastle.asn1.ASN1ObjectIdentifier)>
		SHA-256: 7934ae2a1cc0d4e13960108ac3fc68d0f1375162ff477ec3eac1698a10ae35ab
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.KeyPair
		Statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r14, $r18)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: 27f433098a139ef59123648ef8630bb4881141f5b832da718c482b6cc24d1fa7
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r25.<java.security.MessageDigest: byte[] digest(byte[])>($r9)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: void prepareForDecryption(com.tom_roush.pdfbox.pdmodel.encryption.PDEncryption,com.tom_roush.pdfbox.cos.COSArray,com.tom_roush.pdfbox.pdmodel.encryption.DecryptionMaterial)>
		SHA-256: fa727fd67ee3f3cd0027604d59277381cdda052497bce5f5fd24d31e527a3c1
		Secure: false
	Object:
		Variable: $r21
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r21.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.SecurityHandler: void encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)>
		SHA-256: fd2fdc349745d9320a4d6f2df0308ab41f31f6d28d495a5b8d0e09f9574000d5
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer86533)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.SecurityHandler: void encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)>
		SHA-256: 32fd72e46f9ebf24971d74d76fefaa014c3ef660c50f4183a74991417d5cd588
		Secure: false
	Object:
		Variable: $r20
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r20.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer86532)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.SecurityHandler: void encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)>
		SHA-256: 34eec5f4cc75d3dd2e0366e04a0e6cbf21f4fe4b9a746939c97e39778dac9869
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer86694)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] computeHash2A(byte[],byte[],byte[])>
		SHA-256: 2de8f7b4b1ebad878cdda32957a55e175b96095dc1437b6d59e501073c915073
		Secure: false
	Object:
		Variable: $r14
		Type: byte[]
		Statement: $r14 = virtualinvoke $r29.<java.security.Signature: byte[] sign()>()
		Method: <okhttp3.tls.internal.TlsUtil$localhost$2: java.lang.Object invoke()>
		SHA-256: be9dc63f15f55883f356c2ca80e7899c4c24752efbd5a84dcd3a5ec53e7a381b
		Secure: false
	Object:
		Variable: $r6
		Type: java.lang.String
		Statement: $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r6)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: java.security.KeyFactory createKeyFactory(org.bouncycastle.asn1.ASN1ObjectIdentifier)>
		SHA-256: ab1aebdba12895aeef22b634f4f13c421636b2791cc56c9320bcdd9bdb193cf6
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.KeyPair
		Statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r14, $r18)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: 27f433098a139ef59123648ef8630bb4881141f5b832da718c482b6cc24d1fa7
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.AlgorithmParameters
		Statement: $r14 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>($r13)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper$1: java.lang.Object doInJCE()>
		SHA-256: 57c88a0677427088abcb758362c5bdb109ca79e1c29300a857098c26010b90f3
		Secure: false
	Object:
		Variable: varReplacer60597
		Type: java.lang.String
		Statement: $r28 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer60597)
		Method: <com.lunabeestudio.stopcovid.model.EuropeanCertificate: void verifyKey(java.lang.String)>
		SHA-256: 741fa6ee72fed6d1f7ae8b289c03072eae177f8e1e4061eb35048f025e6ba553
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 84f17b7e3930c76e2b174d27b9668ee8d3209ae5512e2c539d541e6ef4265515
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer42077)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 6c5bb285991ec36763873ad44b27e9b5eb645238516fd69f11d7aba90c418a5c
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] computeEncryptedKey(byte[],byte[],byte[],byte[],byte[],int,byte[],int,int,boolean,boolean)>
		SHA-256: 3976b33ee857791b45f9e587e6efd26fd0e0f73f6e5453d9dd39f888c8e58230
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer73832, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 8733ba8be9109b7321f8eef5f84e299d41a65f90b28789a05f84cbc12da5731f
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r7.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r8)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleSignatureVerifier: boolean verifySignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 9b9f7369347b0087e9d33047b72b09194df9f4a40c4c4a01a62b0425dde29162
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.PublicKey
		Statement: $r6 = virtualinvoke $r5.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.lunabeestudio.framework.crypto.ServerKeyAgreementHelper: com.lunabeestudio.framework.crypto.ServerKeyAgreementHelper$ServerKeyAgreementData encryptRequestData(java.lang.String,java.lang.String)>
		SHA-256: bf89103bad5ab64b778f1824f51cb2630c7d93a35fc1e997ead1a2f3145a0b7d
		Secure: false
	Object:
		Variable: $r23
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r23.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r17)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper$1: java.lang.Object doInJCE()>
		SHA-256: 11fd5391749ae3e2123a45e1767325d48457d52970f7ac1076c0e12635631cf0
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = interfaceinvoke $r4.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.jcajce.JceGenericKey: void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.Key)>
		SHA-256: 9681ca5697e78ec98013f3d29cb31e754af209cbd597e2a479a274b06f73b037
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer73835, $r2)
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: ad4ad8d01a709bbf130e8d5bca6f64bd405d4546009da44f257d02cb4ec6d0c5
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r5)
		Method: <com.lunabeestudio.domain.model.HelloBuilder: void <init>(com.lunabeestudio.domain.model.HelloSettings,com.lunabeestudio.domain.model.EphemeralBluetoothIdentifier,byte[])>
		SHA-256: c0d6b3096982ca4daa4141f147638a2753dedab344843bf3b529fc7a31d064cc
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer42078)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: e084deffddd631419e3b137943d9fb55a5557e7adf4344345fe92aa510bfbf39
		Secure: false
	Object:
		Variable: $r18
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r18 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r6)
		Method: <okhttp3.tls.HandshakeCertificates$Builder: okhttp3.tls.HandshakeCertificates build()>
		SHA-256: 4f2f7bfed10712350b4d8c4d347a93708aff43578eb58b72fe52b52f46ef8a62
		Secure: true
	Object:
		Variable: $r11
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r11 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r6)
		Method: <okhttp3.tls.HandshakeCertificates$Builder: okhttp3.tls.HandshakeCertificates build()>
		SHA-256: 352123507ca3158ca1c03379d3d929673857b69bfed25861ddfbeb8266065eba
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.cert.CertificateFactory
		Statement: $r3 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer69987)
		Method: <com.lunabeestudio.framework.remote.server.ServerManager: java.security.cert.X509Certificate certificateFromString(android.content.Context,java.lang.String)>
		SHA-256: 9826cc6340a004c3de5f739a03c22b9306bb6c0a88d6824fa46c549597886265
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.SecureRandom
		Statement: specialinvoke $r9.<java.security.SecureRandom: void <init>()>()
		Method: <okhttp3.tls.HandshakeCertificates: javax.net.ssl.SSLSocketFactory sslSocketFactory()>
		SHA-256: e52a9da2e3a0ecd66a64cc034590a6182785aff854aace60a0e9a8ad67e40ca
		Secure: true
	Object:
		Variable: varReplacer80966
		Type: java.lang.String
		Statement: specialinvoke $r23.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer80966)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: void prepareForDecryption(com.tom_roush.pdfbox.pdmodel.encryption.PDEncryption,com.tom_roush.pdfbox.cos.COSArray,com.tom_roush.pdfbox.pdmodel.encryption.DecryptionMaterial)>
		SHA-256: 91053f8e7d264f32cb4760a2f84d10443d6c1ab56d228aa2581ff4cecdf75d27
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer72449, $r3)
		Method: <com.lunabeestudio.framework.local.LocalCryptoManager: java.io.InputStream createCipherInputStream(java.io.InputStream,java.lang.Integer)>
		SHA-256: a985d3ebc0cd0ba807cfbb2136641bbc5bd2f166f29a8fab7ad36bc963dc73e5
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] getUserPassword(byte[],byte[],int,int)>
		SHA-256: ee8c243493fa81363ad11e0d35c41a61842ac37b37d5cef1c74a255b2c2141c
		Secure: false
	Object:
		Variable: r0
		Type: com.lunabeestudio.framework.utils.SelfDestroyCipherInputStream
		Statement: specialinvoke r0.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r1, $r2)
		Method: <com.lunabeestudio.framework.utils.SelfDestroyCipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher,javax.crypto.SecretKey)>
		SHA-256: 9dabb4c075533c59e64173c8b55a6eeb8e3b3f89562eb2f061247418a07812c
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <okio.SegmentedByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: 9d21c3f9e3f612ea7264d21dc14a8967f32993fff60292ad252f8676282c7571
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6)
		Method: <okhttp3.tls.HandshakeCertificates$Builder: okhttp3.tls.HandshakeCertificates build()>
		SHA-256: f74b280a0704fc52e76a17e53e7cb3e0c8c8040a24e31bc4bb5c2f0fd5996c7a
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <okio.ByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: abbbda73a848c28c1333b7a184766fc2e374eff5158adb1ad920e97ea771ecb8
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.Signature
		Statement: $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r5)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleSignatureVerifier: boolean verifySignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 6c2756f42b40fe7fbc547cd6cfbe7100d8a9d43475acb40a39846be710662f1
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r7)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource$getEncryptionKeys$1$1: java.lang.Object invoke(java.lang.Object)>
		SHA-256: 5b659c5c8e8f225b825636f08ef80b966c28bf94307c98d6a99f5b361dabf98f
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer86528)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.SecurityHandler: void encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)>
		SHA-256: 648a82dde7d0a86c5273fabc5b8eb6c0da761b555d9f9260ec0c16a03a560ce8
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer41240)
		Method: <com.lunabeestudio.framework.manager.DebugManager: void <init>(android.content.Context,com.lunabeestudio.framework.local.datasource.SecureKeystoreDataSource,java.io.File,com.lunabeestudio.framework.local.LocalCryptoManager)>
		SHA-256: 40ddb9745ce4620b0bdd0b052178c922704ea1a56b92bdde9bb50892ab2e884
		Secure: false
	Object:
		Variable: $r22
		Type: javax.crypto.Cipher
		Statement: $r22 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer80957)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: void prepareForDecryption(com.tom_roush.pdfbox.pdmodel.encryption.PDEncryption,com.tom_roush.pdfbox.cos.COSArray,com.tom_roush.pdfbox.pdmodel.encryption.DecryptionMaterial)>
		SHA-256: 5dc8ccf3699a09c19a371f98d40fd3ec9a51c3bfb98a6c7bbe0bc3f9edf3d719
		Secure: false
	Object:
		Variable: $r22
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r22.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r1, $r4)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.SecurityHandler: void encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)>
		SHA-256: 1f354c4b1814c368263839ec8ba5778e8b6aa0b764c9ebb35653110970533e5b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8340)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource$getEncryptionKeys$1: java.lang.Object invoke(java.lang.Object)>
		SHA-256: 6ad793fb134e3c9718608a7482419647de979242ba918bd841cbb7d03e686093
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r7.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.SecurityHandler: boolean prepareAESInitializationVector(boolean,byte[],java.io.InputStream,java.io.OutputStream)>
		SHA-256: 5ff23f9ff6f246c06af2328ca951f37dcb09fb82c4aae2aba0a4a2d9b85ede78
		Secure: true
	Object:
		Variable: $r21
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r21.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.SecurityHandler: void encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)>
		SHA-256: 20caac6f7c837a4068ab358cc96c31788298a29910d0b3b0b1869cfdc9384ab
		Secure: true
	Object:
		Variable: $r5
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r5)
		Method: <com.lunabeestudio.domain.model.SSUBuilder: void <init>(com.lunabeestudio.domain.model.SSUSettings,com.lunabeestudio.domain.model.EphemeralBluetoothIdentifier,byte[])>
		SHA-256: a54c985c3b50481ace833d2c0ea6d25d3759827ecaed4933c9eb4095fa7c4174
		Secure: false
	Object:
		Variable: varReplacer8340
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8340)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource$getEncryptionKeys$1: java.lang.Object invoke(java.lang.Object)>
		SHA-256: dd1d04bc8bb3706fd0c3c3c3b36a018c46cadd5db693925606351460a0e3cc4f
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r8, $r11, $r3, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPublicKeyParameters,org.bouncycastle.jce.spec.ECParameterSpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration)>
		SHA-256: 5f9b8496e19c0c91b4677cefe415e50c025d1af71b616967b39e52fa1b8e5379
		Secure: true
	Object:
		Variable: $r20
		Type: java.security.Signature
		Statement: $r20 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer60643)
		Method: <com.lunabeestudio.stopcovid.model.EuropeanCertificate: void verifyKey(java.lang.String)>
		SHA-256: f3386e3ccc852cd93baf8e6f60f17ee7a7c9aa3d26056b6f80bf457aa33bc37a
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.SecureRandom
		Statement: specialinvoke $r8.<java.security.SecureRandom: void <init>()>()
		Method: <okhttp3.tls.internal.TlsUtil$localhost$2: java.lang.Object invoke()>
		SHA-256: 11cedeb968963869809b79a3a90eb8ded8d73a0286c85d4551af8c5e36fe0921
		Secure: true
	Object:
		Variable: $r18
		Type: java.security.KeyPair
		Statement: $r18 = virtualinvoke $r16.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource: java.security.KeyPair createECDHKeyPair()>
		SHA-256: 9e5ca02d437ea6997d5c4e52bf36765a61af1743ea1137292fb4a67c7b30bf08
		Secure: false
	Object:
		Variable: $r4
		Type: java.lang.String
		Statement: $r9 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r4, $r6)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleSignatureVerifier: boolean verifySignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: c0c56d8d4c19dfb097e2fced42543944fc9e1cac8a541e1ebcd3cbe5d4821f23
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.KeyAgreement
		Statement: $r8 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r6)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: javax.crypto.KeyAgreement createKeyAgreement(org.bouncycastle.asn1.ASN1ObjectIdentifier)>
		SHA-256: 28e8ba539f16d6996da1c37bf4a123ebe9e4140a9accf145cd7a35d22ceac949
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyFactory
		Statement: $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>(varReplacer60958, $r4)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource: java.util.List getEncryptionKeys(byte[],byte[],java.util.List)>
		SHA-256: 9d9ff895b51a668fa48b411ec8836a58bf0cd49861c7f248f07baeb4a00e1beb
		Secure: false
	Object:
		Variable: $r16
		Type: java.lang.String
		Statement: specialinvoke $r23.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, $r16)
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyUnwrapper: org.bouncycastle.operator.jcajce.JceGenericKey generateUnwrappedKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])>
		SHA-256: 801cf529e79213ffbdf5352571385052190f994320ff0d76bea2de90acc770be
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer73852, varReplacer73853)
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: fbbaf8a683ccde3ce91a044642feec2d6c5d732d2632b420f7cae12e97dff231
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.KeyPair
		Statement: $r9 = virtualinvoke $r7.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <okhttp3.tls.internal.TlsUtil$localhost$2: java.lang.Object invoke()>
		SHA-256: 1f9dbfa93e207551f4d08d2da5a6b9e98c4f258006a8637ddcd59a973e3905e2
		Secure: false
	Object:
		Variable: $r36
		Type: java.security.spec.RSAKeyGenParameterSpec
		Statement: specialinvoke $r36.<java.security.spec.RSAKeyGenParameterSpec: void <init>(int,java.math.BigInteger)>(varReplacer72113, $r1)
		Method: <com.lunabeestudio.framework.local.LocalCryptoManager: javax.crypto.SecretKey getAesGcmLocalProtectionKey(android.content.Context)>
		SHA-256: a9a096415dbbc62452a3163e178e22b91c6d06506594c14b210d71d8f5d2cb30
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r10.<javax.crypto.KeyAgreement: byte[] generateSecret()>()
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource: java.util.List getEncryptionKeys(byte[],byte[],java.util.List)>
		SHA-256: e21dcf84ec29ad7be1c1ee1f4d6acd9eb11b0eaae0e1b1befc71d1c1218f62ad
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer73838, $r2)
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 573880812f0970d3c18751549c43d1f17d28a5c28070d824363dba135cf469b6
		Secure: false
	Object:
		Variable: $r35
		Type: java.security.cert.CertificateFactory
		Statement: $r35 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer25267)
		Method: <okhttp3.tls.internal.TlsUtil$localhost$2: java.lang.Object invoke()>
		SHA-256: 87cfe82e7731cf5336a49ac1a631918871d9d2ded16211d862defed79c4ca20f
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.KeyPair
		Statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r14, $r18)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: 27f433098a139ef59123648ef8630bb4881141f5b832da718c482b6cc24d1fa7
		Secure: false
	Object:
		Variable: varReplacer72122
		Type: java.lang.String
		Statement: specialinvoke $r38.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r19, varReplacer72122)
		Method: <com.lunabeestudio.framework.local.LocalCryptoManager: javax.crypto.SecretKey getAesGcmLocalProtectionKey(android.content.Context)>
		SHA-256: e09d16c0fe89168e0ed7dc61d1c3bfc8387b866db2d85ed5240215edb565184a
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] getUserPassword(byte[],byte[],int,int)>
		SHA-256: d54f2ec50f933ffe73697478f179fa0314b178b15f92ab260516cbaa1848d6a0
		Secure: false
	Object:
		Variable: r0
		Type: com.lunabeestudio.framework.utils.SelfDestroyCipherOutputStream
		Statement: specialinvoke r0.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r1, $r2)
		Method: <com.lunabeestudio.framework.utils.SelfDestroyCipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher,javax.crypto.SecretKey)>
		SHA-256: d6f9b9ae91b7df723a9bcfe0f3ef4e129156c8c639692dfe8319944ae47e7457
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource: byte[] encrypt(byte[],byte[])>
		SHA-256: 10e5e44e62191c8590a8f4844de41422d12744bfc43ca0c1d9e0947010bdd9a0
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $z0 = virtualinvoke $r11.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleSignatureVerifier: boolean verifySignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: d2cd5b1397843482c22f0eb60a0739982dee0c1e336afd30c5437a830c6b14ef
		Secure: false
	Object:
		Variable: $r23
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r23.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, $r16)
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyUnwrapper: org.bouncycastle.operator.jcajce.JceGenericKey generateUnwrappedKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])>
		SHA-256: d2c858bfc48bb6a1a202682a41099089e118f999f9c8951a8dc6d0fe7643be9f
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer42071)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 60c6d5dbf8043436a60448b1d929c510bd885602f2906d3464ce466b6dcf8817
		Secure: false
	Object:
		Variable: $r28
		Type: java.security.KeyFactory
		Statement: $r28 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer60597)
		Method: <com.lunabeestudio.stopcovid.model.EuropeanCertificate: void verifyKey(java.lang.String)>
		SHA-256: bd6c192e371610299f55f1e099163a3bb8c4803a3b1269ed9c454bd0e75b8c70
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.lunabeestudio.framework.local.LocalCryptoManager: java.io.OutputStream createCipherOutputStream(java.io.OutputStream,boolean)>
		SHA-256: 4039d53a5dbebcee01ad7bcb740c3426ee657f780e5497042a74b813a8888de3
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r0, $r6, $r2, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertSpec(java.security.spec.EllipticCurve,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 9777cd1446798a6b4bf52d1133d5500d3969011c5b88e4e26096f1267f558ec8
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer78503)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource: byte[] encrypt(byte[],byte[])>
		SHA-256: cae5d909cda554ecb611df1c11e601b4c63f3dc6623e92bc3bc11c79b0e9b645
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer81004)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] computeSHA256(byte[],byte[],byte[])>
		SHA-256: abc6c94a8984304a9328c6618d39013faa3d37761e94893108ba8c08b5fa243e
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] computeEncryptedKey(byte[],byte[],byte[],byte[],byte[],int,byte[],int,int,boolean,boolean)>
		SHA-256: b5a0fd7884d0ce0044398408e48157cac36b95792801804907d5c04cffce076e
		Secure: false
	Object:
		Variable: $r20
		Type: java.security.Signature
		Statement: $r20 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer60628)
		Method: <com.lunabeestudio.stopcovid.model.EuropeanCertificate: void verifyKey(java.lang.String)>
		SHA-256: b901319e8ef44617572d91f9819b8236495cf612edd92da4f790cd880140662c
		Secure: false
	Object:
		Variable: varReplacer78503
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer78503)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource: byte[] encrypt(byte[],byte[])>
		SHA-256: 4c905f5c39e0dca7eb6615b9bb8ad5e9963e4f58c23e6c2bbd0f5eaa24fb1b29
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] computeHash2A(byte[],byte[],byte[])>
		SHA-256: 75db0442af1c3062389193fd9d66e0713c7ac04167642821548c4d4b82888206
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyPairGenerator
		Statement: $r7 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer25256)
		Method: <okhttp3.tls.internal.TlsUtil$localhost$2: java.lang.Object invoke()>
		SHA-256: 65446da64f1e96315a75ca641f35e9e63eedd992a16906d676cb22a3fd5f4a46
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Key
		Statement: $r1 = interfaceinvoke $r4.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.jcajce.JceGenericKey: void <init>(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.Key)>
		SHA-256: 7384785b2850409e295d1e0bfc80f735a40e4a11a6259d9dedbba102db89347e
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] computeHash2A(byte[],byte[],byte[])>
		SHA-256: 1e378ccb5707a69c04263a53d4e6d0e4417fa6eb42422636c12a61619ce911da
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.KeyFactory
		Statement: $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r6)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: java.security.KeyFactory createKeyFactory(org.bouncycastle.asn1.ASN1ObjectIdentifier)>
		SHA-256: 92e03aa088689637a7787ae6b571b5e161c62627ae4b646d73725d1f25c8ce49
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] computeHash2A(byte[],byte[],byte[])>
		SHA-256: c2fcd11280bd0fb345a8bb54fb1d8ca6614cb60117a9b5c3662dbc62cd305800
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r2)
		Method: <okio.'-Platform': boolean verify(java.security.Signature,java.security.PublicKey,byte[],byte[])>
		SHA-256: 5505bf074ee318f957bd8dee01bd1b6b523f175b2156c8211f5cc1505234f137
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.PublicKey
		Statement: $r10 = virtualinvoke $r9.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r7)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleSignatureVerifier: boolean verifySignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: d4800fe6b14705a6a52649da46c81fba70807a2807407a94f9c5528fbb975088
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer86700)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] computeHash2A(byte[],byte[],byte[])>
		SHA-256: 6afd7a60e61edf1a8a67c35203ea67c12855e4680dfef6bdf40cd72308c38134
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <com.lunabeestudio.domain.model.SSUBuilder: com.lunabeestudio.domain.model.ServerStatusUpdate build(long)>
		SHA-256: c12db54744d693e32fc63523231471fdfdc3301e2cfe4b4ebf399989f7a1582
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyStore
		Statement: $r10 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer72376)
		Method: <com.tom_roush.pdfbox.pdfparser.COSParser: void prepareDecryption()>
		SHA-256: 5a675f5954138d5a618ea79477e8077d258727a997f04466cf39fd48d9bdc96b
		Secure: false
	Object:
		Variable: $r27
		Type: java.security.KeyPair
		Statement: $r27 = virtualinvoke $r21.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.lunabeestudio.framework.local.LocalCryptoManager: javax.crypto.SecretKey getAesGcmLocalProtectionKey(android.content.Context)>
		SHA-256: 2fc824d26e23ddeebd5e0f56b976becb3c0a300bd6322116a16d179214f7f153
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: a729cfd5669df603070b7ba7d05b524b10a048ab1da974a5ccb1df973521b7d3
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.lunabeestudio.robert.extension.ByteArrayExtKt: void randomize(byte[])>
		SHA-256: 19ccf6bcf2ad6b0f66b8ba8479cba48ecd408905f0ce6c536050a0cb26a1834c
		Secure: true
	Object:
		Variable: varReplacer60958
		Type: java.lang.String
		Statement: $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>(varReplacer60958, $r4)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource: java.util.List getEncryptionKeys(byte[],byte[],java.util.List)>
		SHA-256: 180a9dfefbd35d654b965334dbb0a1676858cc528f3638d251fe6c3adbaa8a57
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r7 = virtualinvoke $r25.<java.security.MessageDigest: byte[] digest(byte[])>($r9)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.PublicKeySecurityHandler: void prepareForDecryption(com.tom_roush.pdfbox.pdmodel.encryption.PDEncryption,com.tom_roush.pdfbox.cos.COSArray,com.tom_roush.pdfbox.pdmodel.encryption.DecryptionMaterial)>
		SHA-256: 6bd42a415446b1b94e2e93171ab0a1066d632c98af65d9f2bbcb5530d470ca18
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer73834)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: f57d3eb75114771fc235aab40776b19c36d856da3e790631a0385be1c44ebd29
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.KeyAgreement
		Statement: $r8 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r6)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: javax.crypto.KeyAgreement createKeyAgreement(org.bouncycastle.asn1.ASN1ObjectIdentifier)>
		SHA-256: 28e8ba539f16d6996da1c37bf4a123ebe9e4140a9accf145cd7a35d22ceac949
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] getUserPassword(byte[],byte[],int,int)>
		SHA-256: 2eaac336fbad8e0707245b08042a87d15a21e69224e863c39ef0fd1f0ada55f5
		Secure: false
	Object:
		Variable: $r23
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r23.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer80966)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: void prepareForDecryption(com.tom_roush.pdfbox.pdmodel.encryption.PDEncryption,com.tom_roush.pdfbox.cos.COSArray,com.tom_roush.pdfbox.pdmodel.encryption.DecryptionMaterial)>
		SHA-256: 2222ef843da975681147b067a4f38887229095b9fb5ce8c49501994c32839ef8
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer81000)
		Method: <kotlin.jvm.JvmClassMappingKt: java.security.MessageDigest getSHA1()>
		SHA-256: d48cc00a703b7f549774257bd8c7cd5137badc1466a17dabbae65168bae9121f
		Secure: false
	Object:
		Variable: $r20
		Type: javax.crypto.Cipher
		Statement: $r20 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer72121)
		Method: <com.lunabeestudio.framework.local.LocalCryptoManager: javax.crypto.SecretKey getAesGcmLocalProtectionKey(android.content.Context)>
		SHA-256: d060f26bc8fee07350414573e8a7c2a6527ff5dbe997a51ccc6e985feee04848
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] computeSHA256(byte[],byte[],byte[])>
		SHA-256: 2c916f0c0c8ae54a1c603b413330d43b3461b40c90b93ebc446f8d78f741a783
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r5.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r12, $r14, $r9, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,java.security.spec.ECParameterSpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration)>
		SHA-256: dd7f67ebcf700736029a2d4ed4e10be449cf48af401264756058553b41604a82
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer72022)
		Method: <com.lunabeestudio.stopcovid.extension.StringExtKt: java.lang.String sha256(java.lang.String)>
		SHA-256: d8e80b0a90ffe3dca6642d692d00b264113574135d9576528fbb66b86383d02d
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 316cbc86e080130334eaabd60025d96084375d0058312a103cd3255ba6f0aeb
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r5.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.lunabeestudio.framework.crypto.ServerKeyAgreementHelper: com.lunabeestudio.framework.crypto.ServerKeyAgreementHelper$ServerKeyAgreementData encryptRequestData(java.lang.String,java.lang.String)>
		SHA-256: c6663e97be30de93cdb439d5e305e9e97374572dba23644f4db9dff774068b88
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource: java.util.List getEncryptionKeys(byte[],byte[],java.util.List)>
		SHA-256: 57d487aea11bf0fa3f5c03c5d339d8bac870f43fd8c732a706767388b532c4b6
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer86709)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] computeEncryptedKey(byte[],byte[],byte[],byte[],byte[],int,byte[],int,int,boolean,boolean)>
		SHA-256: e76022b73680ac91979f4976262f04d2d3d06f41b6dc4c7927b4f93498df60d6
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.CryptoServicesRegistrar: java.security.SecureRandom getSecureRandom()>
		SHA-256: 375867338a8d572664475cac25bcfa294db8f2af8faff8d50836d5d6dcf8ab15
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r6)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: javax.crypto.Cipher createCipher(org.bouncycastle.asn1.ASN1ObjectIdentifier)>
		SHA-256: 7934ae2a1cc0d4e13960108ac3fc68d0f1375162ff477ec3eac1698a10ae35ab
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r5)
		Method: <com.lunabeestudio.domain.model.HelloBuilder: void <init>(com.lunabeestudio.domain.model.HelloSettings,com.lunabeestudio.domain.model.EphemeralBluetoothIdentifier,byte[])>
		SHA-256: b99582adaafc130bc846e19deb320fad9a2963193001874faa7efef8b90e5346
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.SecureRandom
		Statement: specialinvoke $r17.<java.security.SecureRandom: void <init>()>()
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource: java.security.KeyPair createECDHKeyPair()>
		SHA-256: d8410647c4e44a68b82c80a4d891dbe76fcf1d44a096ada644dd1c51f57a4a4a
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r6.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource: java.util.List getEncryptionKeys(byte[],byte[],java.util.List)>
		SHA-256: b9df181bd5adf2ee15e4325cc4b4e8ff593762f83d01263d8bd19a24314b11fe
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer86675)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] computeHash2A(byte[],byte[],byte[])>
		SHA-256: f196329adb875fffdae0916701538570942620a6798b82fdaa39b21af8492124
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.KeyFactory
		Statement: $r9 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r4, $r6)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleSignatureVerifier: boolean verifySignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: b37f0fcab0c2c4992211aa36e040d762ce282eb7279406b0dca028cce44284d1
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer72448)
		Method: <com.lunabeestudio.framework.local.LocalCryptoManager: java.io.InputStream createCipherInputStream(java.io.InputStream,java.lang.Integer)>
		SHA-256: 846b03deae54489c049524d5280c788821cfed58d37a9923a7a0585384978ca6
		Secure: false
	Object:
		Variable: r0
		Type: org.bouncycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r2, $r3, $r4, $i0)
		Method: <org.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>
		SHA-256: b36d50207c12d926e435b859cb9848007d52f50b2e62c847e597de1f84f657c6
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.KeyAgreement
		Statement: $r10 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>(varReplacer60957)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource: java.util.List getEncryptionKeys(byte[],byte[],java.util.List)>
		SHA-256: 74c11d9ed53da37776216282e539295f4437a51d102d4ba2ad83ce267006428e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 5fb6984969c8c0f60ee84399ef18a49aa63648c889757c4080685ad119ecd903
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer42073)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 1a8bdbdcf705cd64fcd9de1ce959367cf06b6f22d406729f337eaa1fce4109a9
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer42075)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: f611428e6fd94a2bd445be180180d857a08b08f1b19a4a7f0248911b1f866d24
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] computeEncryptedKey(byte[],byte[],byte[],byte[],byte[],int,byte[],int,int,boolean,boolean)>
		SHA-256: b5a0fd7884d0ce0044398408e48157cac36b95792801804907d5c04cffce076e
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.PublicKey
		Statement: $r13 = virtualinvoke $r28.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r25)
		Method: <com.lunabeestudio.stopcovid.model.EuropeanCertificate: void verifyKey(java.lang.String)>
		SHA-256: 38dea2b73faf3b9e1eb4f8e7867ea3368357fe0ebd93c4c92c3f8df4c9349996
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.AlgorithmParameters
		Statement: $r14 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>($r13)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper$1: java.lang.Object doInJCE()>
		SHA-256: 57c88a0677427088abcb758362c5bdb109ca79e1c29300a857098c26010b90f3
		Secure: false
	Object:
		Variable: r0
		Type: org.bouncycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r19, $r16, $r2, $i0)
		Method: <org.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>
		SHA-256: a3718e72dbed9263ea94ae6eac9a1b992768367835b9ede2e07b48ba5a674de8
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer31034, $r4)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource: byte[] decrypt(byte[],byte[])>
		SHA-256: 587e645cd7656cc47becfd1d00eb8156c16f68fc94e15dd1faa49b6a4378d3c1
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r9)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: java.security.Key getJceKey(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.operator.jcajce.JceGenericKey)>
		SHA-256: 6c26362074bc02d94125ad8241b15025db0cf1a1c9d11ffec4b54a7c9f3f0685
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 15a76129680a3cd57380001c355c828c5afc3ba9ce32fff65b352ff3390bbd6
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer42068)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: de342e951f36a1d85b3a790a01b7b27c9a056be692d57fdab1a32032fef44ebc
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.lunabeestudio.stopcovid.extension.StringExtKt: java.lang.String sha256(java.lang.String)>
		SHA-256: 443b151cbb924d36dfbea97f417115114e2c81507723b0ab1ce7c37293bcbe0e
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.lunabeestudio.framework.local.LocalCryptoManager: void <clinit>()>
		SHA-256: 9d17bd1a90f04f5af3e3b047ef1f2832c94f955c9acc9f979d29790f02e4d69a
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.KeyFactory
		Statement: $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r6)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: java.security.KeyFactory createKeyFactory(org.bouncycastle.asn1.ASN1ObjectIdentifier)>
		SHA-256: 92e03aa088689637a7787ae6b571b5e161c62627ae4b646d73725d1f25c8ce49
		Secure: false
	Object:
		Variable: $r5
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r5)
		Method: <com.lunabeestudio.domain.model.HelloBuilder: void <init>(com.lunabeestudio.domain.model.HelloSettings,com.lunabeestudio.domain.model.EphemeralBluetoothIdentifier,byte[])>
		SHA-256: d029b9ac6f8361882a39ef085f77f64ea0016e2019bb4672855d34140531d9d6
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer41285)
		Method: <com.lunabeestudio.framework.local.LocalCryptoManager: void <init>(android.content.Context)>
		SHA-256: 39fa45f8d6934a6607ae49db3e177803dadb4e66c909afc0aa9cdbaaeed0fa7b
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r5.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r8, $r10, $r2, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPublicKeyParameters,java.security.spec.ECParameterSpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration)>
		SHA-256: aa1d2bb16a781577508e323097c866861a4df01b8a6f71a251e358b363d9b383
		Secure: true
	Object:
		Variable: varReplacer31033
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer31033)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource: byte[] decrypt(byte[],byte[])>
		SHA-256: 4bd8f20389476da4fe8a90217c156ed8a8a41f0d9a2f0e6aaa335e6c81774d3a
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer31033)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource: byte[] decrypt(byte[],byte[])>
		SHA-256: 3d8aab0f749ea09157b9e93f5aaaa76759aca747fbd6067d7549006c3f7fece0
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: c3dcfb07eabeaead2afa7b41e33d56187e303e14a7184c21b7bac99836f2c278
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer47154)
		Method: <com.lunabeestudio.framework.local.LocalCryptoManager: java.io.OutputStream createCipherOutputStream(java.io.OutputStream,boolean)>
		SHA-256: 100c24a4490d5314cd2b78ea701e555c3e35c5905803312dd54ee9db103e3dd6
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <okio.ByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: d4bf5cc88c644b9a20ac4aef1746c1f0c9ae862102406e7436b8866c875859ff
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] computeHash2A(byte[],byte[],byte[])>
		SHA-256: d249c9f7878d961525c69f18c8b156f045e627c4cfff4ffbafd719364a9365f0
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] computeSHA256(byte[],byte[],byte[])>
		SHA-256: 8bfa935586a103215971b5299628c59992a1d4792500cb2d70b8fc4815e46e30
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 1027fce20723454b26980f38c5edb26bcec19bffa5b6443c75459b577c51d460
		Secure: false
	Object:
		Variable: $r6
		Type: java.lang.String
		Statement: $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r6)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: java.security.KeyFactory createKeyFactory(org.bouncycastle.asn1.ASN1ObjectIdentifier)>
		SHA-256: ab1aebdba12895aeef22b634f4f13c421636b2791cc56c9320bcdd9bdb193cf6
		Secure: false
	Object:
		Variable: $r21
		Type: java.security.KeyPairGenerator
		Statement: $r21 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer72134, varReplacer72135)
		Method: <com.lunabeestudio.framework.local.LocalCryptoManager: javax.crypto.SecretKey getAesGcmLocalProtectionKey(android.content.Context)>
		SHA-256: 85a2b8492536fed0c5a4aa0dd07fb19126d9ac407945a3c63c6fbcba2c1972cb
		Secure: false
	Object:
		Variable: varReplacer86536
		Type: java.lang.String
		Statement: specialinvoke $r20.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer86536)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.SecurityHandler: void encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)>
		SHA-256: f6f9aff74ed1057ac09fce91acac162ed9a1cace8a4b5e1cc60ffe86c9e1de15
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.cert.CertificateFactory
		Statement: $r3 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer63729)
		Method: <com.lunabeestudio.framework.remote.RetrofitClient: java.security.cert.X509Certificate certificateFromString(android.content.Context,java.lang.String)>
		SHA-256: 69a0e8b28fd4c8718c95a24a9af44c26db9cb95e1e94c29b855381107fceb269
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r5)
		Method: <org.bouncycastle.operator.jcajce.OperatorHelper: javax.crypto.Cipher createAsymmetricWrapper(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.util.Map)>
		SHA-256: 4861232d02165d2c8197655bdd868cb9b7c987fd0b15d5b6b40b54ffc171867c
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.PublicKey
		Statement: $r14 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r12)
		Method: <org.bouncycastle.cms.jcajce.JceKeyTransEnvelopedRecipient: org.bouncycastle.cms.RecipientOperator getRecipientOperator(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])>
		SHA-256: 1c65b92a27ca70306200a0b052185813e89263b0e9f3d5646670bf3f76070f51
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer86708)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] computeEncryptedKey(byte[],byte[],byte[],byte[],byte[],int,byte[],int,int,boolean,boolean)>
		SHA-256: 2c0dd819d4bfa4d3bc32d4291c6806fd5ffbbf40a9cc5a9444e47af62afb7d25
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r11.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleSignatureVerifier: boolean verifySignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 6ec492a532f54898276df083ecf802761bfafcd1114ce7f4bbc66c8dd74e00ba
		Secure: false
	Object:
		Variable: varReplacer86532
		Type: java.lang.String
		Statement: specialinvoke $r20.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer86532)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.SecurityHandler: void encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)>
		SHA-256: 49f8b4131b74775d5446579de047f2fec50f014eacd8beeb52253f013a4836c1
		Secure: false
	Object:
		Variable: $r15
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r15.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r14, $r17, $r11, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,org.bouncycastle.jce.spec.ECParameterSpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration)>
		SHA-256: 263b6519012f85e83f481f40ceb92b0e14f587de974b8fe0da6369ddf3d5203e
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.SecurityHandler: boolean prepareAESInitializationVector(boolean,byte[],java.io.InputStream,java.io.OutputStream)>
		SHA-256: b63419fda8a232a68d3bd704a1933ce178b305a3249dd3ba6d7979e5a5453c1d
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6)
		Method: <okhttp3.tls.HandshakeCertificates$Builder: okhttp3.tls.HandshakeCertificates build()>
		SHA-256: f74b280a0704fc52e76a17e53e7cb3e0c8c8040a24e31bc4bb5c2f0fd5996c7a
		Secure: true
	Object:
		Variable: $r20
		Type: javax.crypto.Cipher
		Statement: $r20 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer72120)
		Method: <com.lunabeestudio.framework.local.LocalCryptoManager: javax.crypto.SecretKey getAesGcmLocalProtectionKey(android.content.Context)>
		SHA-256: b6a88c6813e860b47e9b03c77cc701c3b0cebe1eda134595b030e416120f03b
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.lunabeestudio.framework.local.LocalCryptoManager: java.io.InputStream createCipherInputStream(java.io.InputStream,java.lang.Integer)>
		SHA-256: 2bd085263e965e87a46b2608430a2ff8db0205927444aa266e29eb4d4290b8d4
		Secure: false
	Object:
		Variable: $r20
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r20.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer86536)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.SecurityHandler: void encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)>
		SHA-256: 9de3b86452131e6dda9c88c4b1116d09c789a4140ec2b9cc05d8bfe20166137a
		Secure: false
	Object:
		Variable: $r12
		Type: javax.net.ssl.KeyManager[]
		Statement: $r12 = virtualinvoke $r11.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <okhttp3.tls.HandshakeCertificates$Builder: okhttp3.tls.HandshakeCertificates build()>
		SHA-256: f06d3a1de14deebdf9a4b897d5164da6ad5139ebacf49d33f9d1e1d5abb6191d
		Secure: true
	Object:
		Variable: $r16
		Type: java.security.KeyPairGenerator
		Statement: $r16 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)>(varReplacer60948, $r15)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource: java.security.KeyPair createECDHKeyPair()>
		SHA-256: dae68a815681120f1634fdae0c06c0365f8f244999a72b05c68578444dd44cb3
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: virtualinvoke $r7.<java.security.SecureRandom: void nextBytes(byte[])>($r6)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource: byte[] encrypt(byte[],byte[])>
		SHA-256: af540fcc91430ae109cd26a9d649ac8a7701b9c9885c24c196636a8b3fce8650
		Secure: true
	Object:
		Variable: $r17
		Type: java.security.Key
		Statement: $r18 = interfaceinvoke $r17.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyUnwrapper: org.bouncycastle.operator.jcajce.JceGenericKey generateUnwrappedKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])>
		SHA-256: c5bd8ba227f55a2e03699762c03616007de4648db37ff29195ec3584836687b0
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.cert.CertificateFactory
		Statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer75762)
		Method: <okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)>
		SHA-256: e1f61e4cd76db6757455ef575ce7b462bb7778b56b5bae7138333162e260fd80
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer86540)
		Method: <kotlin.jvm.JvmClassMappingKt: java.security.MessageDigest getMD5()>
		SHA-256: f6697ca4e0baef77355065a77b95e7f7ea5e6c43df3fdc99c535902b050de296
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] computeSHA256(byte[],byte[],byte[])>
		SHA-256: a432b435b2e9e4259e5072dbb3a4eda0a20f4787e0cd483a5430b227d7680937
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.AlgorithmParameters
		Statement: $r8 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>($r6)
		Method: <org.bouncycastle.operator.jcajce.OperatorHelper: java.security.AlgorithmParameters createAlgorithmParameters(org.bouncycastle.asn1.x509.AlgorithmIdentifier)>
		SHA-256: c0d80287c430f326c34e47b82f90605be980a9a2da94b5b8ae9804b90830d32a
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r5)
		Method: <com.lunabeestudio.domain.model.SSUBuilder: void <init>(com.lunabeestudio.domain.model.SSUSettings,com.lunabeestudio.domain.model.EphemeralBluetoothIdentifier,byte[])>
		SHA-256: c7d154045c5d2df26ee05acadbdd6adef716719addffdf7939c323f88065411f
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.SecretKey
		Statement: $r11 = virtualinvoke $r7.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.lunabeestudio.framework.local.LocalCryptoManager: javax.crypto.SecretKey getAesGcmLocalProtectionKey(android.content.Context)>
		SHA-256: 3838b2bed96cebb45b3b6f1f832b2d6f59487e2279e0c2dbaaeda983e0f3c301
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.KeyGenerator
		Statement: $r7 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer72108, varReplacer72109)
		Method: <com.lunabeestudio.framework.local.LocalCryptoManager: javax.crypto.SecretKey getAesGcmLocalProtectionKey(android.content.Context)>
		SHA-256: b56432044ae0c6a856b8ddfaf139e10fa0e5d557e8a783b291e92db9216002a5
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r14)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] computeHash2A(byte[],byte[],byte[])>
		SHA-256: d889c935d0ba489d321d385b87523350ac6cb0fc8b206c0a7ac7a720ad42e7d
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.SegmentedByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: 6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.PrivateKey
		Statement: $r9 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r8)
		Method: <com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource: java.util.List getEncryptionKeys(byte[],byte[],java.util.List)>
		SHA-256: 668727e65b5737e9c8d817d59d9fd89fe706c49a04ff9a618132cd2bd22cf708
		Secure: false
	Object:
		Variable: $r19
		Type: javax.net.ssl.TrustManager[]
		Statement: $r19 = virtualinvoke $r18.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.tls.HandshakeCertificates$Builder: okhttp3.tls.HandshakeCertificates build()>
		SHA-256: e864c70446c2023738400732e1272284694c60e9315cce1a4c5ade8e2793f21a
		Secure: true
	Object:
		Variable: varReplacer86709
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer86709)
		Method: <com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler: byte[] computeEncryptedKey(byte[],byte[],byte[],byte[],byte[],int,byte[],int,int,boolean,boolean)>
		SHA-256: 8dcd01711f59badb8b102214046842173a7ca04799182bc4dbfc89ad210bb78d
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r5)
		Method: <org.bouncycastle.operator.jcajce.OperatorHelper: javax.crypto.Cipher createAsymmetricWrapper(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.util.Map)>
		SHA-256: 4861232d02165d2c8197655bdd868cb9b7c987fd0b15d5b6b40b54ffc171867c
		Secure: false

Findings in Java Class: com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource$getEncryptionKeys$1$1

	 in Method: java.lang.Object invoke(java.lang.Object)
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #acafcd9dbe80b5ee797a7c4dc38386c672c86888b736e88670a6a7bee6b8c5a6)
			Unexpected call to method doFinal on object of type javax.crypto.Mac.
			at statement: $r7 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #acafcd9dbe80b5ee797a7c4dc38386c672c86888b736e88670a6a7bee6b8c5a6)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to javax.crypto.Mac: byte[] doFinal(byte[]), update
			at statement: $r7 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #acafcd9dbe80b5ee797a7c4dc38386c672c86888b736e88670a6a7bee6b8c5a6)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r3)


Findings in Java Class: okhttp3.tls.internal.TlsUtil$localhost$2

	 in Method: java.lang.Object invoke()
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #65446da64f1e96315a75ca641f35e9e63eedd992a16906d676cb22a3fd5f4a46)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), genKeyPair, initialize, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r9 = virtualinvoke $r7.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #87cfe82e7731cf5336a49ac1a631918871d9d2ded16211d862defed79c4ca20f)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath
			at statement: $r37 = virtualinvoke $r35.<java.security.cert.CertificateFactory: java.util.Collection generateCertificates(java.io.InputStream)>($r36)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r29.<java.security.Signature: void initSign(java.security.PrivateKey)>($r20)

		TypestateError violating CrySL rule for java.security.KeyPairGenerator (on Object #65446da64f1e96315a75ca641f35e9e63eedd992a16906d676cb22a3fd5f4a46)
			Unexpected call to method generateKeyPair on object of type java.security.KeyPairGenerator. Expect a call to one of the following methods initialize
			at statement: $r9 = virtualinvoke $r7.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #85a2b8492536fed0c5a4aa0dd07fb19126d9ac407945a3c63c6fbcba2c1972cb)
			First parameter (with value 256) should be any of {4096, 3072, 2048}
			at statement: virtualinvoke $r7.<java.security.KeyPairGenerator: void initialize(int,java.security.SecureRandom)>(varReplacer25281, $r8)


Findings in Java Class: kotlin.reflect.jvm.internal.impl.util.ReturnsCheck

	 in Method: boolean check(kotlin.reflect.jvm.internal.impl.descriptors.FunctionDescriptor)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #c0d6b3096982ca4daa4141f147638a2753dedab344843bf3b529fc7a31d064cc)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $z0 = staticinvoke <kotlin.jvm.internal.Intrinsics: boolean areEqual(java.lang.Object,java.lang.Object)>($r3, $r5)


Findings in Java Class: j$.util.stream.Y3

	 in Method: void a(java.lang.Object,int,java.lang.Object)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #c0d6b3096982ca4daa4141f147638a2753dedab344843bf3b529fc7a31d064cc)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: interfaceinvoke $r4.<j$.util.function.i: void d(int)>($i0)


Findings in Java Class: com.orange.proximitynotification.ble.BleScannedDeviceSelector

	 in Method: java.lang.Object keepRelevant(java.util.List,kotlin.coroutines.Continuation)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #c0d6b3096982ca4daa4141f147638a2753dedab344843bf3b529fc7a31d064cc)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: staticinvoke <kotlin.ResultKt: void throwOnFailure(java.lang.Object)>($r5)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #c0d6b3096982ca4daa4141f147638a2753dedab344843bf3b529fc7a31d064cc)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r14 = (com.orange.proximitynotification.ble.BleDeviceStats) $r5


Findings in Java Class: com.google.common.collect.Multisets

	 in Method: boolean equalsImpl(com.google.common.collect.Multiset,java.lang.Object)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #c0d6b3096982ca4daa4141f147638a2753dedab344843bf3b529fc7a31d064cc)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r3 = interfaceinvoke $r2.<com.google.common.collect.Multiset: java.util.Set entrySet()>()


Findings in Java Class: com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource

	 in Method: byte[] decrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer31034, $r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ec0a40bb0965daf390b7a8319143b2474d6f731c9c4cb6178463cbd53d9d404b)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke $r7.<com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource$decrypt$1: void <init>(javax.crypto.Cipher,javax.crypto.spec.GCMParameterSpec,byte[])>($r3, $r5, $r2)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #3d8aab0f749ea09157b9e93f5aaaa76759aca747fbd6067d7549006c3f7fece0)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer31033)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer31033)


	 in Method: java.security.KeyPair createECDHKeyPair()
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #dae68a815681120f1634fdae0c06c0365f8f244999a72b05c68578444dd44cb3)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), genKeyPair, initialize, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r18 = virtualinvoke $r16.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedRSA
			at statement: virtualinvoke $r16.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>($r2, $r17)

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedEC
			at statement: virtualinvoke $r16.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>($r2, $r17)

		TypestateError violating CrySL rule for java.security.KeyPairGenerator (on Object #dae68a815681120f1634fdae0c06c0365f8f244999a72b05c68578444dd44cb3)
			Unexpected call to method generateKeyPair on object of type java.security.KeyPairGenerator. Expect a call to one of the following methods initialize
			at statement: $r18 = virtualinvoke $r16.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()


	 in Method: byte[] encrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer78503)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer78502, $r3, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer78511, $r3)


	 in Method: java.util.List getEncryptionKeys(byte[],byte[],java.util.List)
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyAgreement
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r10.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>($r7, varReplacer60956)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.KeyAgreement
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r10.<javax.crypto.KeyAgreement: void init(java.security.Key)>($r9)


Findings in Java Class: com.lunabeestudio.framework.manager.DebugManager

	 in Method: void <init>(android.content.Context,com.lunabeestudio.framework.local.datasource.SecureKeystoreDataSource,java.io.File,com.lunabeestudio.framework.local.LocalCryptoManager)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #40ddb9745ce4620b0bdd0b052178c922704ea1a56b92bdde9bb50892ab2e884)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer41240)


Findings in Java Class: com.lunabeestudio.framework.local.LocalCryptoManager

	 in Method: void <init>(android.content.Context)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #39fa45f8d6934a6607ae49db3e177803dadb4e66c909afc0aa9cdbaaeed0fa7b)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer41285)


	 in Method: javax.crypto.SecretKey getAesGcmLocalProtectionKey(android.content.Context)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #b6a88c6813e860b47e9b03c77cc701c3b0cebe1eda134595b030e416120f03b)
			Unexpected call to method wrap on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r19 = virtualinvoke $r20.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>($r29)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r38.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r19, varReplacer72122)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r20.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer72129, $r18)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #85a2b8492536fed0c5a4aa0dd07fb19126d9ac407945a3c63c6fbcba2c1972cb)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), genKeyPair, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r27 = virtualinvoke $r21.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b6a88c6813e860b47e9b03c77cc701c3b0cebe1eda134595b030e416120f03b)
			First parameter (with value "RSA/NONE/PKCS1Padding") should be any of RSA/{Empty String, ECB}
			at statement: $r20 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer72120)


	 in Method: java.lang.String decryptToString(androidx.core.util.AtomicFile)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #9dabb4c075533c59e64173c8b55a6eeb8e3b3f89562eb2f061247418a07812c)
			Operation on object of type com.lunabeestudio.framework.utils.SelfDestroyCipherInputStream object not completed. Expected call to read
			at statement: $r4 = staticinvoke <com.lunabeestudio.framework.local.LocalCryptoManager: java.io.InputStream createCipherInputStream$default(com.lunabeestudio.framework.local.LocalCryptoManager,java.io.InputStream,java.lang.Integer,int,java.lang.Object)>(r0, $r3, varReplacer71941, varReplacer71942, varReplacer71941)


	 in Method: java.io.InputStream createCipherInputStream(java.io.InputStream,java.lang.Integer)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer72451, $r6, $r10)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer72449, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


	 in Method: java.io.OutputStream createCipherOutputStream(java.io.OutputStream,boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer47151, $r4, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #de342e951f36a1d85b3a790a01b7b27c9a056be692d57fdab1a32032fef44ebc)
			First parameter (with value "prime192v1") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer42068)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #1a8bdbdcf705cd64fcd9de1ce959367cf06b6f22d406729f337eaa1fce4109a9)
			First parameter (with value "P-224") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer42073)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #e084deffddd631419e3b137943d9fb55a5557e7adf4344345fe92aa510bfbf39)
			First parameter (with value "P-521") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer42078)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #60c6d5dbf8043436a60448b1d929c510bd885602f2906d3464ce466b6dcf8817)
			First parameter (with value "prime239v1") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer42071)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #f611428e6fd94a2bd445be180180d857a08b08f1b19a4a7f0248911b1f866d24)
			First parameter (with value "P-384") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer42075)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #6c5bb285991ec36763873ad44b27e9b5eb645238516fd69f11d7aba90c418a5c)
			First parameter (with value "prime256v1") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer42077)


	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r14, $r18)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r14, $r18)


Findings in Java Class: com.lunabeestudio.stopcovid.model.EuropeanCertificate

	 in Method: void verifyKey(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #26c8420748fdb363e2e4539f2dfa12367bf0a133d616ba09b2d780da39094f9d)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r10 = virtualinvoke $r9.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r13 = virtualinvoke $r28.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r25)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #f3386e3ccc852cd93baf8e6f60f17ee7a7c9aa3d26056b6f80bf457aa33bc37a)
			First parameter (with value "SHA256withRSA/PSS") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r20 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer60643)


Findings in Java Class: com.lunabeestudio.framework.remote.RetrofitClient

	 in Method: java.security.cert.X509Certificate certificateFromString(android.content.Context,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #69a0e8b28fd4c8718c95a24a9af44c26db9cb95e1e94c29b855381107fceb269)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r8 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r7)


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest$okio(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #abbbda73a848c28c1333b7a184766fc2e374eff5158adb1ad920e97ea771ecb8)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


Findings in Java Class: okio.SegmentedByteString

	 in Method: okio.ByteString digest$okio(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.lunabeestudio.framework.remote.server.ServerManager

	 in Method: java.security.cert.X509Certificate certificateFromString(android.content.Context,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #9826cc6340a004c3de5f739a03c22b9306bb6c0a88d6824fa46c549597886265)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r8 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r7)


Findings in Java Class: com.lunabeestudio.framework.crypto.BouncyCastleSignatureVerifier

	 in Method: boolean verifySignature(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r11.<java.security.Signature: void initVerify(java.security.PublicKey)>($r10)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #b37f0fcab0c2c4992211aa36e040d762ce282eb7279406b0dca028cce44284d1)
			First parameter (with value "ECDSA") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r9 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r4, $r6)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r10 = virtualinvoke $r9.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r7)


Findings in Java Class: com.tom_roush.pdfbox.pdfparser.COSParser

	 in Method: void prepareDecryption()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #5a675f5954138d5a618ea79477e8077d258727a997f04466cf39fd48d9bdc96b)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r10.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r9, $r12)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #5a675f5954138d5a618ea79477e8077d258727a997f04466cf39fd48d9bdc96b)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r10.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r9, $r12)


Findings in Java Class: okhttp3.internal.platform.ConscryptPlatform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #8733ba8be9109b7321f8eef5f84e299d41a65f90b28789a05f84cbc12da5731f)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer73832, $r2)


	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer73858, $r5, varReplacer73858)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer73842)


Findings in Java Class: okhttp3.internal.platform.Platform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f57d3eb75114771fc235aab40776b19c36d856da3e790631a0385be1c44ebd29)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer73834)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer73843)


Findings in Java Class: okhttp3.internal.platform.BouncyCastlePlatform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #573880812f0970d3c18751549c43d1f17d28a5c28070d824363dba135cf469b6)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer73838, $r2)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer73856)


Findings in Java Class: okhttp3.Cache$Entry

	 in Method: java.util.List readCertificateList(okio.BufferedSource)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #e1f61e4cd76db6757455ef575ce7b462bb7778b56b5bae7138333162e260fd80)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer75762)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #e1f61e4cd76db6757455ef575ce7b462bb7778b56b5bae7138333162e260fd80)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r10 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r9)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #e1f61e4cd76db6757455ef575ce7b462bb7778b56b5bae7138333162e260fd80)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r10 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r9)


Findings in Java Class: com.tom_roush.pdfbox.pdmodel.encryption.StandardSecurityHandler

	 in Method: void prepareForDecryption(com.tom_roush.pdfbox.pdmodel.encryption.PDEncryption,com.tom_roush.pdfbox.cos.COSArray,com.tom_roush.pdfbox.pdmodel.encryption.DecryptionMaterial)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r23.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer80966)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5dc8ccf3699a09c19a371f98d40fd3ec9a51c3bfb98a6c7bbe0bc3f9edf3d719)
			First parameter (with value "AES/ECB/NoPadding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r22 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer80957)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #5dc8ccf3699a09c19a371f98d40fd3ec9a51c3bfb98a6c7bbe0bc3f9edf3d719)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r22.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #2222ef843da975681147b067a4f38887229095b9fb5ce8c49501994c32839ef8)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r23.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer80966)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r22.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer80959, $r23)


	 in Method: byte[] computeEncryptedKey(byte[],byte[],byte[],byte[],byte[],int,byte[],int,int,boolean,boolean)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2c0dd819d4bfa4d3bc32d4291c6806fd5ffbbf40a9cc5a9444e47af62afb7d25)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer86708)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #2c0dd819d4bfa4d3bc32d4291c6806fd5ffbbf40a9cc5a9444e47af62afb7d25)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer86709)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer86715, $r9, $r10)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f6697ca4e0baef77355065a77b95e7f7ea5e6c43df3fdc99c535902b050de296)
			Third parameter (with value 0)Variable preLenmust be  greater than 0
			at statement: virtualinvoke $r7.<java.security.MessageDigest: void update(byte[],int,int)>($r1, varReplacer86705, $i1)


	 in Method: byte[] computeHash2A(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer86677, $r9, $r10)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #2de8f7b4b1ebad878cdda32957a55e175b96095dc1437b6d59e501073c915073)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2de8f7b4b1ebad878cdda32957a55e175b96095dc1437b6d59e501073c915073)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer86694)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer86700)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer86677, $r9, $r10)


Findings in Java Class: kotlin.jvm.JvmClassMappingKt

	 in Method: java.security.MessageDigest getSHA1()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d48cc00a703b7f549774257bd8c7cd5137badc1466a17dabbae65168bae9121f)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer81000)


	 in Method: java.security.MessageDigest getMD5()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f6697ca4e0baef77355065a77b95e7f7ea5e6c43df3fdc99c535902b050de296)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer86540)


Findings in Java Class: com.lunabeestudio.framework.local.datasource.SecureFileLocalProximityDataSource

	 in Method: java.util.List getBetweenTime(long,long,kotlin.jvm.functions.Function1)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #9dabb4c075533c59e64173c8b55a6eeb8e3b3f89562eb2f061247418a07812c)
			Operation on object of type com.lunabeestudio.framework.utils.SelfDestroyCipherInputStream object not completed. Expected call to read
			at statement: staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>($r15, varReplacer61630)


Findings in Java Class: com.tom_roush.pdfbox.pdmodel.encryption.SecurityHandler

	 in Method: void encryptData(long,long,java.io.InputStream,java.io.OutputStream,boolean)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #32fd72e46f9ebf24971d74d76fefaa014c3ef660c50f4183a74991417d5cd588)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r6 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r3, varReplacer86529, $i3)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #1f354c4b1814c368263839ec8ba5778e8b6aa0b764c9ebb35653110970533e5b)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r22.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r1, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r20.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer86532)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #32fd72e46f9ebf24971d74d76fefaa014c3ef660c50f4183a74991417d5cd588)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal()>()

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($b4, $r5, $r7)


Findings in Java Class: org.bouncycastle.cms.jcajce.JceKeyTransEnvelopedRecipient

	 in Method: org.bouncycastle.cms.RecipientOperator getRecipientOperator(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])
		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r43.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r20.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer95132, $r19, $r21)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedOAEP
			at statement: virtualinvoke $r20.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer95132, $r19, $r21)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r14 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r12)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #28e8ba539f16d6996da1c37bf4a123ebe9e4140a9accf145cd7a35d22ceac949)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to javax.crypto.KeyAgreement: byte[] generateSecret(), getInstance
			at statement: $r19 = virtualinvoke $r15.<javax.crypto.KeyAgreement: javax.crypto.SecretKey generateSecret(java.lang.String)>($r18)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #28e8ba539f16d6996da1c37bf4a123ebe9e4140a9accf145cd7a35d22ceac949)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to javax.crypto.KeyAgreement: byte[] generateSecret(), getInstance
			at statement: $r19 = virtualinvoke $r15.<javax.crypto.KeyAgreement: javax.crypto.SecretKey generateSecret(java.lang.String)>($r18)


Findings in Java Class: org.bouncycastle.cms.jcajce.EnvelopedDataHelper$1

	 in Method: java.lang.Object doInJCE()
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer95919, $r18)

		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: $r14 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>($r13)

		ForbiddenMethodError violating CrySL rule for javax.crypto.Cipher
			Detected call to forbidden method void init(int,java.security.Key) of class javax.crypto.Cipher. Instead, call method <javax.crypto.Cipher: void init(int,java.security.Key)>.
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer95919, $r18)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedAlg
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(varReplacer95917, $r18, $r14)

		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: virtualinvoke $r14.<java.security.AlgorithmParameters: void init(byte[],java.lang.String)>($r17, varReplacer95924)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r23.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r17)


Findings in Java Class: org.bouncycastle.operator.jcajce.OperatorHelper

	 in Method: javax.crypto.Cipher createAsymmetricWrapper(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.util.Map)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #85263cd2c5cc433c97c0345e0fd02d8db23220f414308e37663114261dd8514)
			First parameter (with value "RSA/NONE/PKCS1Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer96519)


	 in Method: java.security.AlgorithmParameters createAlgorithmParameters(org.bouncycastle.asn1.x509.AlgorithmIdentifier)
		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: virtualinvoke $r8.<java.security.AlgorithmParameters: void init(byte[])>($r11)


Findings in Java Class: org.bouncycastle.operator.jcajce.JceAsymmetricKeyUnwrapper

	 in Method: org.bouncycastle.operator.jcajce.JceGenericKey generateUnwrappedKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #85263cd2c5cc433c97c0345e0fd02d8db23220f414308e37663114261dd8514)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r8 = virtualinvoke $r13.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r8)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #4861232d02165d2c8197655bdd868cb9b7c987fd0b15d5b6b40b54ffc171867c)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r8 = virtualinvoke $r13.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r8)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #4861232d02165d2c8197655bdd868cb9b7c987fd0b15d5b6b40b54ffc171867c)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r8 = virtualinvoke $r13.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r13.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer95909, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedAlg
			at statement: virtualinvoke $r13.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(varReplacer95913, $r1, $r14)

		ForbiddenMethodError violating CrySL rule for javax.crypto.Cipher
			Detected call to forbidden method void init(int,java.security.Key) of class javax.crypto.Cipher. Instead, call method <javax.crypto.Cipher: void init(int,java.security.Key)>.
			at statement: virtualinvoke $r13.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer95909, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r23.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, $r16)


Findings in Java Class: com.lunabeestudio.domain.model.SSUBuilder

	 in Method: void <init>(com.lunabeestudio.domain.model.SSUSettings,com.lunabeestudio.domain.model.EphemeralBluetoothIdentifier,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Mac: void init(java.security.Key)>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r5)


Findings in Java Class: okhttp3.tls.HandshakeCertificates

	 in Method: javax.net.ssl.SSLSocketFactory sslSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r10, $r11, $r9)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r10, $r11, $r9)


Findings in Java Class: com.lunabeestudio.framework.crypto.BouncyCastleCryptoDataSource$getEncryptionKeys$1

	 in Method: java.lang.Object invoke(java.lang.Object)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8340)


Findings in Java Class: okio.-Platform

	 in Method: boolean verify(java.security.Signature,java.security.PublicKey,byte[],byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


Findings in Java Class: com.lunabeestudio.domain.model.HelloBuilder

	 in Method: void <init>(com.lunabeestudio.domain.model.HelloSettings,com.lunabeestudio.domain.model.EphemeralBluetoothIdentifier,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r5)


Findings in Java Class: okhttp3.internal.platform.OpenJSSEPlatform

	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer73848)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 190

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 22
	ForbiddenMethodError: 2
	TypestateError: 14
	NeverTypeOfError: 3
	RequiredPredicateError: 62
	HardCodedError: 1
	ConstraintError: 24
=====================================================================
