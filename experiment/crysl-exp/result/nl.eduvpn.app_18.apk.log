0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6779)
		Method: <de.blinkt.openvpn.api.b: java.lang.String g(java.lang.String)>
		SHA-256: 975bac4555c60ed91058b7c90bbd3a477876c8836638f9e6db7f15a791aeb233
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <k.i0.k.h: javax.net.ssl.X509TrustManager p()>
		SHA-256: bac4bb314b7f1041242a758cca5d7c0d4015be692b64c2bd3353ce44f8e2f29f
		Secure: false
	Object:
		Variable: $r13
		Type: byte[]
		Statement: $r13 = virtualinvoke $r16.<java.security.MessageDigest: byte[] digest()>()
		Method: <de.blinkt.openvpn.core.m: java.lang.String e(android.content.Context)>
		SHA-256: 2c76d28f657577623a94f73df3c0e0e7172db3d1bdf393a5cb968e70ee20552
		Secure: false
	Object:
		Variable: varReplacer22017
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer22017)
		Method: <g.d.a.a.a: g.d.a.a.a$c k()>
		SHA-256: 7cc730ad57e33c65d40c8174ef8a33db2164014b5ebfdf4c682f7ee37b80b46
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <de.blinkt.openvpn.k: byte[] r(byte[],boolean)>
		SHA-256: 36833e7db345c7450b0943c84d65fea0ddd5e8869e46541bde461f9a84e7d582
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer22012)
		Method: <g.d.a.a.a: g.d.a.a.a$c o(java.lang.String)>
		SHA-256: 9b468ffefcfe0fad49f8aa9c249f4fe3c14181518a6ea747c5e613f43022c9d9
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <k.i0.k.g: javax.net.ssl.X509TrustManager p()>
		SHA-256: 57b063f60360f86cede8e7965910f189b1456ea18d121fe996f140544352e37a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3441)
		Method: <net.openid.appauth.x.c: java.lang.String a(android.content.pm.Signature)>
		SHA-256: 3cf9c1afb654d9ad43c3dffd952e7afa267741d39d367b8fa9ef066077994c05
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <l.y: l.i c(java.lang.String)>
		SHA-256: 3e3da9dc8cb36b2e83664c733579aff2883e9f62b3efc04437bfca69c046cbbd
		Secure: false
	Object:
		Variable: $r4
		Type: java.lang.String
		Statement: $r6 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>($r4, varReplacer2658)
		Method: <de.blinkt.openvpn.l.r: boolean Y1()>
		SHA-256: 9eddb627668d42905ba241d52d1beebcad0fccea0d6c119289d6a26c2f22c852
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2700)
		Method: <g.d.a.a.a: g.d.a.a.a$a h(byte[],g.d.a.a.a$c)>
		SHA-256: c39b497699cd1e45f566d8c7bd70ed046c578d5549999d3b751a18ee6c5e4950
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <net.openid.appauth.m: java.lang.String b(java.lang.String)>
		SHA-256: 7a27ae3fcb22a8835c2cccb1442097f62ec8d440eacaa1ba0b380c27be480f5b
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.cert.CertificateFactory
		Statement: $r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer2950)
		Method: <de.blinkt.openvpn.core.f0: java.security.cert.Certificate[] d(java.lang.String)>
		SHA-256: abbdb816ecb3686847b80cb552aa891da682d5354e188afd67adb23a15ce8
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <net.openid.appauth.m: java.lang.String c()>
		SHA-256: 24f47c5753816af0c2c8f59515d81a79ddbcae623dd4ce5ef3c88dda40b5cd11
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Mac
		Statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer2702)
		Method: <g.d.a.a.a: byte[] n(byte[],javax.crypto.SecretKey)>
		SHA-256: 70c09aa95d446203171f963c010eccbf8b9719bd66deacde3b1ecbcfa1809953
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <g.d.a.a.a: g.d.a.a.a$c k()>
		SHA-256: a00e273b30c73be9a38e0260e0c8d3f9833c761576e60daa109721c154a57c0a
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <nl.eduvpn.app.o.h: java.lang.String a(java.lang.Integer)>
		SHA-256: 7db1711522ef75803f9e1d31fe8e62677e7255e114a5430f806cb2eecc7e950d
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer22026)
		Method: <g.d.a.a.a: g.d.a.a.a$c m(java.lang.String,byte[],int)>
		SHA-256: 22e1d2acdd2e29d4431a3673cdf14cd54de3bc05d4014ce889c740a7d2dbe020
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <k.i0.k.g: javax.net.ssl.X509TrustManager p()>
		SHA-256: c7c4e9aa450fcde3d506807cb0a87c5a9355fafba24e91dc15465730647d4bb2
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <g.d.a.a.a: g.d.a.a.a$c m(java.lang.String,byte[],int)>
		SHA-256: c055b6d10c634b73bc00c8969279567014720f33d6529acbc572aed4ba6ef1ef
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <l.y: l.i c(java.lang.String)>
		SHA-256: 678604bc2caf46fb6b17427bc40537dceea7f92444873d9c37a2475aed04691c
		Secure: false
	Object:
		Variable: varReplacer22026
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer22026)
		Method: <g.d.a.a.a: g.d.a.a.a$c m(java.lang.String,byte[],int)>
		SHA-256: d89f7f217124c10089db9b35dc8d7c88b3cbb0dcdbb09f035c1e9a7f13e4beec
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer21974)
		Method: <k.i0.k.h: javax.net.ssl.SSLContext n()>
		SHA-256: 5f3845bba853293691891974db9a1e9e5d95a35ede777da2e154747b513af531
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer22024)
		Method: <g.d.a.a.a: g.d.a.a.a$c m(java.lang.String,byte[],int)>
		SHA-256: cae72e21e02846869abd4ef936dd0394eeaa89eb978fd1d1238f28c3fd87a063
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <g.d.a.a.a: g.d.a.a.a$a h(byte[],g.d.a.a.a$c)>
		SHA-256: bd18602f5cb9f558052c7cc37cd675e30e3a74b346d61a497c36925a7c94f533
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <nl.eduvpn.app.o.h: java.lang.String a(java.lang.Integer)>
		SHA-256: 702c99f2ece206c618a5a358b08d79cb2f279b24065a8ee6070e1397e1ffba4b
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <net.openid.appauth.f: java.lang.String c()>
		SHA-256: 606240313227e2df704c0017af281ddc3ab90cd139a48de23a9c005d21e79028
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <k.i0.k.h: javax.net.ssl.X509TrustManager p()>
		SHA-256: c8c5268cd3c97ab0f211eecf2228bf88047448c1465f6d7e18fab2258a56ae36
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: $r0 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer2707)
		Method: <g.d.a.a.a: byte[] p(int)>
		SHA-256: 523383fa9bbd8a1b082a6bd5bc22abfd87969b13a45e6a38458b93d11cf8a9b5
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <l.i: l.i c(java.lang.String)>
		SHA-256: 1a81a6acdc6f648476c0cf246694329a8ab38170a05a76ae9fe1db269cb5b88b
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.cert.CertificateFactory
		Statement: $r11 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer3591)
		Method: <de.blinkt.openvpn.core.m: java.lang.String e(android.content.Context)>
		SHA-256: 6cbcf737d1108c85f4bcd07e6dcd5c46d4d617c3ac38868185adc0fb66d0fb42
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer22017)
		Method: <g.d.a.a.a: g.d.a.a.a$c k()>
		SHA-256: 27a0fdbf6c7bdc95dc8d7073b1b20981fe33ef96af2dab2de7dc0f67522e0bf2
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.Signature: byte[] sign()>()
		Method: <de.blinkt.openvpn.k: byte[] r(byte[],boolean)>
		SHA-256: 6a948992399d291a8bd7a166fce56c54455edf0ea963977ac9aacc42ae979539
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: $r7 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer2710)
		Method: <g.d.a.a.a$b: void g()>
		SHA-256: e3b145e310cb723ebd05aa84d9d7b7586b76c80f7911e19c88277c7bd2c25830
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer22018)
		Method: <g.d.a.a.a: g.d.a.a.a$c k()>
		SHA-256: 52068bc6035b91c229e599604d0c96ecbde6fceaf34f7251e4f3ba59619f92e9
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer21975, $r2)
		Method: <k.i0.k.c: javax.net.ssl.SSLContext n()>
		SHA-256: e06a0b045c4b58c3289df595e025988064d2cf4337f09896b6388c5e5a07d519
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer22025)
		Method: <g.d.a.a.a: g.d.a.a.a$c m(java.lang.String,byte[],int)>
		SHA-256: 113cd0e42e255626138e74d316cc787159eaafa242ded84afbe1f2aa146efe3
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <g.d.a.a.a: byte[] p(int)>
		SHA-256: ea09016d03a1fddf74f563119a45ef8b2c63bd73627db11f361cd31ce34c0ad4
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer18144)
		Method: <de.blinkt.openvpn.k: byte[] r(byte[],boolean)>
		SHA-256: d934c277128013333e00025b5fca070003c8979c97677ace1966dcb8dd6931e7
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <net.openid.appauth.x.c: java.lang.String a(android.content.pm.Signature)>
		SHA-256: 17aaa577b4cb625d0d1e35dba080d4e6b14a0d5b75ca6da1591d98533d17e212
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyFactory
		Statement: $r6 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>($r4, varReplacer2658)
		Method: <de.blinkt.openvpn.l.r: boolean Y1()>
		SHA-256: c640f2785192864a9cd799c33d2ec29585c37b6534a8fae3179630679c3c9cc8
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <l.i: l.i c(java.lang.String)>
		SHA-256: 3c1541c6b79a52d0daab3c35cb576d7738568c4fdcd67aeb4824e4b358902b70
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.cert.CertificateFactory
		Statement: $r6 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer1006)
		Method: <de.blinkt.openvpn.core.g: java.util.Collection h(byte[])>
		SHA-256: c1ddf19f1b527d123ad74fb0de14764bffa75566c614ba62db5464852084f9de
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <g.d.a.a.a$b: void g()>
		SHA-256: 2bd8597b031a64039245459389f693b77d4249a6184ed90a5816d6fcd576fad3
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <g.c.a: java.lang.String i(java.lang.String)>
		SHA-256: 50e8b840a8e5c99748f5bdc1f955cb17bbc7af2c23fc61ab502b355e47d39fe
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer19725, varReplacer19726)
		Method: <k.i0.k.c: javax.net.ssl.X509TrustManager p()>
		SHA-256: 3ddb5ef8a3e4823c31c6fdc169af2298c9c17f73f5eaf9f75100d708b41ec6ff
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r2, varReplacer22007, $i0, varReplacer22008)
		Method: <g.d.a.a.a: g.d.a.a.a$c o(java.lang.String)>
		SHA-256: 245d896061ceca27f5957ded61c7511487b45b1cb2449cf46792a021e8431fa5
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1024)
		Method: <g.c.a: java.lang.String i(java.lang.String)>
		SHA-256: 488b662eb0802feb22b43dedc28f1db28fd760e92505d6fce88765a84cef5ba6
		Secure: true
	Object:
		Variable: varReplacer22024
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer22024)
		Method: <g.d.a.a.a: g.d.a.a.a$c m(java.lang.String,byte[],int)>
		SHA-256: 251525814e92a0acb553abfc841eab3b1d3e679c5dfb0e0da9a056cc571ee3d
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer451)
		Method: <de.blinkt.openvpn.core.u: void g()>
		SHA-256: 503567e87648aeaca0bb7405eb7befc1a640c5657b71be39e8bfcb2818e88a9e
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <net.openid.appauth.m: java.lang.String d(java.security.SecureRandom,int)>
		SHA-256: c795ea407e02be4f04a706ac1d05730f95024c8a284e67c2bfe45c670a8d8c22
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <de.blinkt.openvpn.core.u: void g()>
		SHA-256: 224f2f31d781b3fbc9d4fd26f270c2ab891ecee6d0f0e26c6e3da6afbc359622
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer21972, $r2)
		Method: <k.i0.k.g: javax.net.ssl.SSLContext n()>
		SHA-256: 86b98907a51341e2172b79e547e1f87d453041917431680f1dfaed2efd4c5ce2
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <k.i0.k.d: javax.net.ssl.X509TrustManager p()>
		SHA-256: d40cb02cf1c2472ad64c9ec7c1a99e890c25073ddb43468e413e1a03acac9b20
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer21978, $r2)
		Method: <k.i0.k.d: javax.net.ssl.SSLContext n()>
		SHA-256: 70afe9da91126a9330304d0f75f47e83661c93dd99f440869e43e467c9cbbe87
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <g.d.a.a.a: byte[] n(byte[],javax.crypto.SecretKey)>
		SHA-256: 339138dfff3a2cee1fa1d9a84e11a15d652d74ce6f8ae03993157e9ba1fd63ab
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <k.i0.k.c: javax.net.ssl.X509TrustManager p()>
		SHA-256: b1de5745980723ee20ad952f3a703376b3a07706e588c5490ba7d0e11f016608
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <de.blinkt.openvpn.api.b: java.lang.String g(java.lang.String)>
		SHA-256: 1689fb0008145f9a0032d2049397f426ac9cfbf19c632281981a4427663bd561
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <g.d.a.a.a: byte[] c(g.d.a.a.a$a,g.d.a.a.a$c)>
		SHA-256: db028c4b4d458be532e8e905444e19e1603261d5bf1c77a662a0103814e889b7
		Secure: false
	Object:
		Variable: $r16
		Type: java.security.MessageDigest
		Statement: $r16 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3593)
		Method: <de.blinkt.openvpn.core.m: java.lang.String e(android.content.Context)>
		SHA-256: fe8da3c00667c4d0cfdccf02ea77268ad4d208240fcbcc22f65a7cbfc15e0d5f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <net.openid.appauth.f: java.lang.String c()>
		SHA-256: 69a20633d7d89d64f8c0e5a0ce04ac7b402adf76c84cdac58891b856a89ae7c8
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer22027)
		Method: <g.d.a.a.a: g.d.a.a.a$c m(java.lang.String,byte[],int)>
		SHA-256: 9e9e7bcdb971309cffa9f7ce26a801c14a215bbd7ce35b494334cd0e4a0c3bc5
		Secure: false
	Object:
		Variable: varReplacer22008
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r2, varReplacer22007, $i0, varReplacer22008)
		Method: <g.d.a.a.a: g.d.a.a.a$c o(java.lang.String)>
		SHA-256: fd408c9df4b5fd52dc7155a37c4a6cf9184c17657ce41f264f8006c77981ade8
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2734)
		Method: <g.d.a.a.a: byte[] c(g.d.a.a.a$a,g.d.a.a.a$c)>
		SHA-256: 4140be22f1107445f537377c7c1e398cc6930b5e60e6651b00ca1e416fefd9c2
		Secure: false
	Object:
		Variable: varReplacer22012
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer22012)
		Method: <g.d.a.a.a: g.d.a.a.a$c o(java.lang.String)>
		SHA-256: e7109b9c3e3a1ae02f33637314ebad1129f6d03a26f4949083a890a90d32fece
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3478)
		Method: <net.openid.appauth.m: java.lang.String b(java.lang.String)>
		SHA-256: d9ac3b386bfb553c272cfa962f3631a0a9e728f6988eddddb1730d52a2c5e9df
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <k.i0.k.d: javax.net.ssl.X509TrustManager p()>
		SHA-256: 3746eafeaffa4cd6968eb1f433d59c4d6429ceb2f9622fbccd981041d66fe25a
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.cert.CertificateFactory
		Statement: $r7 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer20999)
		Method: <k.d$c: java.util.List c(l.h)>
		SHA-256: 66e832a07c0a614b411666c8254dbedc6e73dca68060d2032d8c04275e30133e
		Secure: false
	Object:
		Variable: varReplacer22027
		Type: int
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer22027)
		Method: <g.d.a.a.a: g.d.a.a.a$c m(java.lang.String,byte[],int)>
		SHA-256: 336e21b7d4870658e1dcad211a196b96a94a0a01fea3550e52efaf8ced9ff7fd
		Secure: false

Findings in Java Class: de.blinkt.openvpn.core.g

	 in Method: java.util.Collection h(byte[])
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #c1ddf19f1b527d123ad74fb0de14764bffa75566c614ba62db5464852084f9de)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate
			at statement: $r7 = virtualinvoke $r6.<java.security.cert.CertificateFactory: java.util.Collection generateCertificates(java.io.InputStream)>($r1)


Findings in Java Class: g.d.a.a.a

	 in Method: g.d.a.a.a$a h(byte[],g.d.a.a.a$c)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #c39b497699cd1e45f566d8c7bd70ed046c578d5549999d3b751a18ee6c5e4950)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2701, $r5, $r0)


	 in Method: byte[] c(g.d.a.a.a$a,g.d.a.a.a$c)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2735, $r5, $r0)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #4140be22f1107445f537377c7c1e398cc6930b5e60e6651b00ca1e416fefd9c2)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


	 in Method: g.d.a.a.a$c m(java.lang.String,byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #9e9e7bcdb971309cffa9f7ce26a801c14a215bbd7ce35b494334cd0e4a0c3bc5)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer22027)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #9e9e7bcdb971309cffa9f7ce26a801c14a215bbd7ce35b494334cd0e4a0c3bc5)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer22027)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #9e9e7bcdb971309cffa9f7ce26a801c14a215bbd7ce35b494334cd0e4a0c3bc5)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer22026)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #113cd0e42e255626138e74d316cc787159eaafa242ded84afbe1f2aa146efe3)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer22025)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, $i0, varReplacer22027)


	 in Method: g.d.a.a.a$c o(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer22012)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r2, varReplacer22007, $i0, varReplacer22008)


	 in Method: byte[] n(byte[],javax.crypto.SecretKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Mac: void init(java.security.Key)>($r0)


	 in Method: g.d.a.a.a$c k()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer22017)


Findings in Java Class: de.blinkt.openvpn.core.f0

	 in Method: java.security.cert.Certificate[] d(java.lang.String)
		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #abbdb816ecb3686847b80cb552aa891da682d5354e188afd67adb23a15ce8)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r6 = virtualinvoke $r1.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r3)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #abbdb816ecb3686847b80cb552aa891da682d5354e188afd67adb23a15ce8)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r6 = virtualinvoke $r1.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r3)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #abbdb816ecb3686847b80cb552aa891da682d5354e188afd67adb23a15ce8)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r6 = virtualinvoke $r1.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r9)


Findings in Java Class: de.blinkt.openvpn.core.m

	 in Method: java.lang.String e(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fe8da3c00667c4d0cfdccf02ea77268ad4d208240fcbcc22f65a7cbfc15e0d5f)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r16 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3593)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #6cbcf737d1108c85f4bcd07e6dcd5c46d4d617c3ac38868185adc0fb66d0fb42)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r14 = virtualinvoke $r11.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r12)


Findings in Java Class: de.blinkt.openvpn.api.b

	 in Method: java.lang.String g(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #975bac4555c60ed91058b7c90bbd3a477876c8836638f9e6db7f15a791aeb233)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6779)


Findings in Java Class: de.blinkt.openvpn.k

	 in Method: byte[] r(byte[],boolean)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #d934c277128013333e00025b5fca070003c8979c97677ace1966dcb8dd6931e7)
			First parameter (with value "NONEwithECDSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer18144)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #36833e7db345c7450b0943c84d65fea0ddd5e8869e46541bde461f9a84e7d582)
			First parameter (with value "RSA/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer18146, $r2)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initSign(java.security.PrivateKey)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #36833e7db345c7450b0943c84d65fea0ddd5e8869e46541bde461f9a84e7d582)
			First parameter (with value "RSA/ECB/PKCS1PADDING") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #36833e7db345c7450b0943c84d65fea0ddd5e8869e46541bde461f9a84e7d582)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


Findings in Java Class: k.d$c

	 in Method: java.util.List c(l.h)
		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #66e832a07c0a614b411666c8254dbedc6e73dca68060d2032d8c04275e30133e)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r11 = virtualinvoke $r7.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r10)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #66e832a07c0a614b411666c8254dbedc6e73dca68060d2032d8c04275e30133e)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r11 = virtualinvoke $r7.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r10)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #66e832a07c0a614b411666c8254dbedc6e73dca68060d2032d8c04275e30133e)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r7 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer20999)


Findings in Java Class: k.i0.k.h

	 in Method: javax.net.ssl.SSLContext n()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #5f3845bba853293691891974db9a1e9e5d95a35ede777da2e154747b513af531)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer21974)


	 in Method: javax.net.ssl.X509TrustManager p()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer19722)


	 in Method: javax.net.ssl.SSLSocketFactory o(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer19739, $r10, varReplacer19739)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer19739, $r10, varReplacer19739)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer19739, $r10, varReplacer19739)


Findings in Java Class: k.i0.k.c

	 in Method: javax.net.ssl.SSLContext n()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #e06a0b045c4b58c3289df595e025988064d2cf4337f09896b6388c5e5a07d519)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer21975, $r2)


	 in Method: javax.net.ssl.X509TrustManager p()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer19724)


Findings in Java Class: k.i0.k.d

	 in Method: javax.net.ssl.SSLContext n()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #70afe9da91126a9330304d0f75f47e83661c93dd99f440869e43e467c9cbbe87)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer21978, $r2)


	 in Method: javax.net.ssl.SSLSocketFactory o(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer19745, $r5, varReplacer19745)


	 in Method: javax.net.ssl.X509TrustManager p()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer19731)


Findings in Java Class: l.i

	 in Method: l.i c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3c1541c6b79a52d0daab3c35cb576d7738568c4fdcd67aeb4824e4b358902b70)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3c1541c6b79a52d0daab3c35cb576d7738568c4fdcd67aeb4824e4b358902b70)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: l.y

	 in Method: l.i c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3e3da9dc8cb36b2e83664c733579aff2883e9f62b3efc04437bfca69c046cbbd)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #3e3da9dc8cb36b2e83664c733579aff2883e9f62b3efc04437bfca69c046cbbd)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3e3da9dc8cb36b2e83664c733579aff2883e9f62b3efc04437bfca69c046cbbd)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: k.i0.k.g

	 in Method: javax.net.ssl.X509TrustManager p()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer19711)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 69

	CryptoAnalysis found the following violations. For details see description above.
	TypestateError: 6
	HardCodedError: 1
	ConstraintError: 13
	IncompleteOperationError: 7
	NeverTypeOfError: 1
	RequiredPredicateError: 20
=====================================================================
