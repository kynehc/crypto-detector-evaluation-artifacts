0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <de.vier_bier.habpanelviewer.connection.ssl.CertificateManager: java.lang.String hashName(javax.security.auth.x500.X500Principal)>
		SHA-256: 99d97a7f6faa819aace13d3a0869323a9ee57816d5c4211880d80c544669c36c
		Secure: false
	Object:
		Variable: $r0
		Type: javax.net.ssl.TrustManager[]
		Statement: $r0 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <de.vier_bier.habpanelviewer.connection.ssl.LocalTrustManager: javax.net.ssl.X509TrustManager findX509TrustManager(javax.net.ssl.TrustManagerFactory)>
		SHA-256: 4bc9230706655f561702c81138039ca9c426a6ff6490d85899a529e5d5845937
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <com.burgstaller.okhttp.digest.DigestAuthenticator: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: 14eb46eab652d50965e01340ecbfb56d8cf1ef61e2203a758f85742db28dc4
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest$jvm(java.lang.String)>
		SHA-256: 4fff7c5d15f021d956e87c05e0dc87688a11eec9c61bcdc27645605a965776c9
		Secure: false
	Object:
		Variable: $r25
		Type: byte[]
		Statement: $r25 = virtualinvoke $r17.<java.security.MessageDigest: byte[] digest(byte[])>($r25)
		Method: <com.burgstaller.okhttp.digest.DigestAuthenticator: com.burgstaller.okhttp.digest.fromhttpclient.NameValuePair createDigestHeader(com.burgstaller.okhttp.digest.Credentials,okhttp3.Request,java.util.Map)>
		SHA-256: 4541c708604a6cf6dbc5ba4188e209c8e33ac74abc51bff6d642f86700c425d2
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.cert.CertificateFactory
		Statement: $r6 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer19593)
		Method: <de.vier_bier.habpanelviewer.connection.ssl.CertificateManager: java.security.cert.X509Certificate getX509CertFromSslCertHack(android.net.http.SslCertificate)>
		SHA-256: 3ba98712745be7413c275e8ba27775f8c79fa7a659570c841b8ee63b1e421699
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <com.burgstaller.okhttp.digest.DigestAuthenticator: java.lang.String createCnonce()>
		SHA-256: eb8d3aa2e42033fc25655252df0affb8e39f5b2a2a8ebd2a50bac3d122d83d93
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r2)
		Method: <de.vier_bier.habpanelviewer.connection.ssl.LocalTrustManager$LocalStoreX509TrustManager: void <init>(java.security.KeyStore)>
		SHA-256: 476e78bb3b6433acae897495073ec2ef84c618d729835b6bcdec808d12a498e3
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: c3dcfb07eabeaead2afa7b41e33d56187e303e14a7184c21b7bac99836f2c278
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <okio.SegmentedByteString: okio.ByteString digest$jvm(java.lang.String)>
		SHA-256: 14f15a41dd8b92f7a4458441f9908c3bd2e90bddb540afe032aa88ebd3fdc6dd
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer21830, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 5756d60476af1a9fc4b268f5f599ea7eb5d3a1c454e546fc6349e72d7984f063
		Secure: false
	Object:
		Variable: $r25
		Type: byte[]
		Statement: $r25 = virtualinvoke $r17.<java.security.MessageDigest: byte[] digest(byte[])>($r25)
		Method: <com.burgstaller.okhttp.digest.DigestAuthenticator: com.burgstaller.okhttp.digest.fromhttpclient.NameValuePair createDigestHeader(com.burgstaller.okhttp.digest.Credentials,okhttp3.Request,java.util.Map)>
		SHA-256: 4541c708604a6cf6dbc5ba4188e209c8e33ac74abc51bff6d642f86700c425d2
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer21827, $r2)
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 7c792ede889fee0ae1f13d5aebe7d8b8b741b91fe9267d2b1e95c8b9422be15e
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer21832)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 2c8b7c9936613cd0a13dc1c5a82dcfa4f0e946cabc9d2cf6546b7fa71c85667c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.SegmentedByteString: okio.ByteString digest$jvm(java.lang.String)>
		SHA-256: ea9bd02bb32dbb2be26eca134efdb9d94c1e5921cb9abf4599d98facf22c83d6
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.burgstaller.okhttp.digest.DigestAuthenticator: java.lang.String createCnonce()>
		SHA-256: 8985c74cd004a0a07d8ab1a0d2848482ebdf5dab7c7cfbf52cd4cd18b131d7f2
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2232)
		Method: <de.vier_bier.habpanelviewer.connection.ssl.CertificateManager: void createSslContext()>
		SHA-256: f18d55efdc4d0935f4019649ad5439cd3e4ae5942e972edb5689933d38cd956b
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 5fb6984969c8c0f60ee84399ef18a49aa63648c889757c4080685ad119ecd903
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <okio.ByteString: okio.ByteString digest$jvm(java.lang.String)>
		SHA-256: 8ce052ed6c630e0078d05e19ab4bff46430fe8453e4fc121d3b9ee58a22dc10e
		Secure: false
	Object:
		Variable: $r25
		Type: byte[]
		Statement: $r25 = virtualinvoke $r17.<java.security.MessageDigest: byte[] digest(byte[])>($r25)
		Method: <com.burgstaller.okhttp.digest.DigestAuthenticator: com.burgstaller.okhttp.digest.fromhttpclient.NameValuePair createDigestHeader(com.burgstaller.okhttp.digest.Credentials,okhttp3.Request,java.util.Map)>
		SHA-256: 4541c708604a6cf6dbc5ba4188e209c8e33ac74abc51bff6d642f86700c425d2
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r2)
		Method: <de.vier_bier.habpanelviewer.connection.ssl.LocalTrustManager: void <init>(java.security.KeyStore)>
		SHA-256: e8d0cace0ef7dd053a0c00580c2bbbda1e035e1006aba36028e1f6f20f448e61
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer19596)
		Method: <de.vier_bier.habpanelviewer.connection.ssl.CertificateManager: java.lang.String hashName(javax.security.auth.x500.X500Principal)>
		SHA-256: 2bb01c461cf874ea4e8c18ba00097bb65cf905b287a21a5b395ba7d9dd0e01a7
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.cert.CertificateFactory
		Statement: $r6 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer24774)
		Method: <okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)>
		SHA-256: 6857ef7d034cc049e84157e2fa47a465d6a75bd7d429299a7a52aa6d722aa776
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 1027fce20723454b26980f38c5edb26bcec19bffa5b6443c75459b577c51d460
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: a729cfd5669df603070b7ba7d05b524b10a048ab1da974a5ccb1df973521b7d3
		Secure: false
	Object:
		Variable: $r25
		Type: byte[]
		Statement: $r25 = virtualinvoke $r17.<java.security.MessageDigest: byte[] digest(byte[])>($r25)
		Method: <com.burgstaller.okhttp.digest.DigestAuthenticator: com.burgstaller.okhttp.digest.fromhttpclient.NameValuePair createDigestHeader(com.burgstaller.okhttp.digest.Credentials,okhttp3.Request,java.util.Map)>
		SHA-256: 4541c708604a6cf6dbc5ba4188e209c8e33ac74abc51bff6d642f86700c425d2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <de.vier_bier.habpanelviewer.connection.ssl.CertificateManager: java.security.KeyStore loadTrustStore()>
		SHA-256: 19e09aab8b9d38730fe12dd40cf5670310f6e03c0afe9d0bbf76fe6c8a6c1202
		Secure: false

Findings in Java Class: de.vier_bier.habpanelviewer.connection.ssl.CertificateManager

	 in Method: void createSslContext()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2233, $r7, varReplacer2233)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2233, $r7, varReplacer2233)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f18d55efdc4d0935f4019649ad5439cd3e4ae5942e972edb5689933d38cd956b)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2232)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2233, $r7, varReplacer2233)


	 in Method: java.security.KeyStore loadTrustStore()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #19e09aab8b9d38730fe12dd40cf5670310f6e03c0afe9d0bbf76fe6c8a6c1202)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r3, $r5)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #19e09aab8b9d38730fe12dd40cf5670310f6e03c0afe9d0bbf76fe6c8a6c1202)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r3, $r5)


	 in Method: void saveTrustStore(java.security.KeyStore)
		TypestateError violating CrySL rule for java.security.KeyStore (on Object #19e09aab8b9d38730fe12dd40cf5670310f6e03c0afe9d0bbf76fe6c8a6c1202)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r3.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r1, $r2)


	 in Method: java.security.cert.X509Certificate getX509CertFromSslCertHack(android.net.http.SslCertificate)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #3ba98712745be7413c275e8ba27775f8c79fa7a659570c841b8ee63b1e421699)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r7 = virtualinvoke $r6.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r1)


	 in Method: java.lang.String hashName(javax.security.auth.x500.X500Principal)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2bb01c461cf874ea4e8c18ba00097bb65cf905b287a21a5b395ba7d9dd0e01a7)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer19596)


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest$jvm(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4fff7c5d15f021d956e87c05e0dc87688a11eec9c61bcdc27645605a965776c9)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4fff7c5d15f021d956e87c05e0dc87688a11eec9c61bcdc27645605a965776c9)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: okio.SegmentedByteString

	 in Method: okio.ByteString digest$jvm(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ea9bd02bb32dbb2be26eca134efdb9d94c1e5921cb9abf4599d98facf22c83d6)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ea9bd02bb32dbb2be26eca134efdb9d94c1e5921cb9abf4599d98facf22c83d6)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #ea9bd02bb32dbb2be26eca134efdb9d94c1e5921cb9abf4599d98facf22c83d6)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r6 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: okhttp3.internal.platform.ConscryptPlatform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #5756d60476af1a9fc4b268f5f599ea7eb5d3a1c454e546fc6349e72d7984f063)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer21830, $r2)


Findings in Java Class: okhttp3.internal.platform.Platform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2c8b7c9936613cd0a13dc1c5a82dcfa4f0e946cabc9d2cf6546b7fa71c85667c)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer21832)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer19652)


Findings in Java Class: com.burgstaller.okhttp.digest.DigestAuthenticator

	 in Method: java.security.MessageDigest createMessageDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #14eb46eab652d50965e01340ecbfb56d8cf1ef61e2203a758f85742db28dc4)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)


Findings in Java Class: okhttp3.Cache$Entry

	 in Method: java.util.List readCertificateList(okio.BufferedSource)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #6857ef7d034cc049e84157e2fa47a465d6a75bd7d429299a7a52aa6d722aa776)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r6 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer24774)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #6857ef7d034cc049e84157e2fa47a465d6a75bd7d429299a7a52aa6d722aa776)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r11 = virtualinvoke $r6.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r10)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #6857ef7d034cc049e84157e2fa47a465d6a75bd7d429299a7a52aa6d722aa776)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r11 = virtualinvoke $r6.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r10)


Findings in Java Class: de.vier_bier.habpanelviewer.connection.ssl.LocalTrustManager

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer5481)


Findings in Java Class: de.vier_bier.habpanelviewer.connection.ssl.LocalTrustManager$LocalStoreX509TrustManager

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r1)


Findings in Java Class: okhttp3.OkHttpClient$Companion

	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer19661, $r5, varReplacer19661)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer19661, $r5, varReplacer19661)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer19661, $r5, varReplacer19661)


Findings in Java Class: okhttp3.internal.platform.OpenJSSEPlatform

	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer19646)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 27

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 3
	TypestateError: 3
	RequiredPredicateError: 10
	HardCodedError: 1
	ConstraintError: 9
	NeverTypeOfError: 1
=====================================================================
