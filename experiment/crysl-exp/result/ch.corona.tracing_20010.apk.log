0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <com.google.crypto.tink.subtle.PrfHmacJce: void <init>(java.lang.String,java.security.Key)>
		SHA-256: 9504b3f716c7bcc89dfe690d24f15b0aa6bd18c44ad0477c83ca56afaa8a613d
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyStore
		Statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer26700)
		Method: <androidx.biometric.CryptoObjectUtils: androidx.biometric.BiometricPrompt$CryptoObject createFakeCryptoObject()>
		SHA-256: ae7687295799497842eb5299161478d9c125c52721a25d3045ca735e9ae147bc
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6358)
		Method: <org.microg.gms.nearby.core.ui.R$string: byte[] generateRpiId(com.google.android.gms.nearby.exposurenotification.TemporaryExposureKey,int)>
		SHA-256: 2e655572baa0d0c4936786d6a9bac80bef421c4ca9737eb89f5f51cf8076441d
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r1)
		Method: <com.google.android.material.R$style: byte[] computeHkdf(java.lang.String,byte[],byte[],byte[],int)>
		SHA-256: 4b2a5960f5fa1704f824f7b8c7227d4f2da2627b8c394efeb16b23cfe5c14423
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <com.google.android.material.R$style: byte[] computeHkdf(java.lang.String,byte[],byte[],byte[],int)>
		SHA-256: f823148d4ac2c9cc4d1392eacf86c79bd3ae275cb01fbf6fa1d6e23672e22f19
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer26701)
		Method: <androidx.biometric.CryptoObjectUtils: androidx.biometric.BiometricPrompt$CryptoObject createFakeCryptoObject()>
		SHA-256: 18c0a710f678de23bbe7dfcda1be557138e571130befa6388419d97b4ce29acf
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r1)
		Method: <com.google.android.material.R$style: byte[] computeHkdf(java.lang.String,byte[],byte[],byte[],int)>
		SHA-256: 4b2a5960f5fa1704f824f7b8c7227d4f2da2627b8c394efeb16b23cfe5c14423
		Secure: false
	Object:
		Variable: varReplacer197
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer197)
		Method: <org.dpppt.android.sdk.R$string: java.security.PublicKey getPublicKeyFromBase64(java.lang.String)>
		SHA-256: f237c0d02154d42e49de5d9da02f34ca6841872ad4bc320b4f8d312a254643e2
		Secure: false
	Object:
		Variable: $r23
		Type: byte[]
		Statement: $r23 = virtualinvoke $r19.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.dpppt.android.sdk.backend.SignatureVerificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>
		SHA-256: ee5ed135640608e0af052e0e3dc4a2699f9058a79fab6cac431c7c94ff83c901
		Secure: true
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r2)
		Method: <io.jsonwebtoken.SigningKeyResolverAdapter: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,java.lang.String)>
		SHA-256: ee052a5923d2f5e57304b344a9975b2c23c1309cfd50f4bb3f16956cbe7327fb
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.crypto.tink.KeysetManager: int randPositiveInt()>
		SHA-256: 4ebee29c3524c464d63774c6ad1b27675d82b46c620ac98fa8ab5f89a0bcc030
		Secure: true
	Object:
		Variable: varReplacer28944
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer28944)
		Method: <com.google.crypto.tink.mac.HmacKeyManager$1: java.lang.Object getPrimitive(java.lang.Object)>
		SHA-256: 9f7fd769dfbbe9bdb3b2168d75983c154ecf21f72c8ff6abbde7768bf27bdcb1
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <io.jsonwebtoken.impl.crypto.SignatureProvider: void <clinit>()>
		SHA-256: bd77c10f408e393bf6a88a9f259346bb12383ce9f5ef6237ca9f00f578063397
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.google.crypto.tink.subtle.AesEaxJce: byte[] encrypt(byte[],byte[])>
		SHA-256: fca0f7a4d4663820637fe4a8be8b66b9b3fcf19b04db0adee18d32afb3b24bd0
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r2)
		Method: <io.jsonwebtoken.SigningKeyResolverAdapter: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,java.lang.String)>
		SHA-256: 554dda89a68608bd077a0c78c896e7f76e24e99d222623016abeeb51c048b2a1
		Secure: false
	Object:
		Variable: varReplacer9705
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer9705)
		Method: <org.microg.gms.nearby.core.ui.R$string: byte[] hkdf(byte[],byte[],byte[])>
		SHA-256: 9d0b35684de3fcf63748666708690430b3f9c64b893fec79a2c62b82b8a56a25
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <io.jsonwebtoken.impl.crypto.RsaSignatureValidator: boolean doVerify(java.security.Signature,java.security.PublicKey,byte[],byte[])>
		SHA-256: f677e90f3a41c34c1c32f9dee90b35301849a57d4f1d5050e7134f58f0a1294f
		Secure: false
	Object:
		Variable: varReplacer34105
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer34105)
		Method: <com.google.crypto.tink.subtle.AesEaxJce: void <init>(byte[],int)>
		SHA-256: ad33f7a39f58f6c397292d4360c44bd1d1ac6259890de4d97f39df49760ba36a
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer197)
		Method: <org.dpppt.android.sdk.R$string: java.security.PublicKey getPublicKeyFromBase64(java.lang.String)>
		SHA-256: 13fb9756a4c5e7502161be1565b82b7ff95a70d6e96b8349f8c330577120b427
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer35420)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 458045e72ef34200c07d5583feaa1c0fdfdf2560b89a368cc84d3aa041605557
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer35418, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 33ea41662c1d944d8913a67d942b6b2d453e0d002381f200860468e59d2e857e
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <org.microg.gms.common.PackageUtils: java.lang.String firstSignatureDigest(android.content.pm.PackageManager,java.lang.String)>
		SHA-256: 56d1773f1fed7a7c915877719c5125af8fd8209bd75b740b7a88c7e8ec2ce337
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9765)
		Method: <org.microg.gms.common.PackageUtils: java.lang.String firstSignatureDigest(android.content.pm.PackageManager,java.lang.String)>
		SHA-256: 661da95aa8466b6ed3421de166403236a091e34a696eb5d385754e75126eccd0
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.google.crypto.tink.subtle.AesEaxJce: byte[] decrypt(byte[],byte[])>
		SHA-256: debe6a91358516f13574bcf942d1c7a159aab945ff1938cfed1e10e6c805ed83
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.SegmentedByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: 6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer6345)
		Method: <org.microg.gms.nearby.core.ui.R$string: byte[] cryptAem(com.google.android.gms.nearby.exposurenotification.TemporaryExposureKey,byte[],byte[])>
		SHA-256: a6bc724f2cdb4038936d1ef3b22050d12ad9d6a0c20365ff4231f1890436565
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer34103)
		Method: <com.google.crypto.tink.subtle.AesGcmJce: void <init>(byte[])>
		SHA-256: 693c40929d39c518930c62889c4262fbd3d79b215c615901b7428d4ca661fb5d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <io.jsonwebtoken.impl.crypto.SignatureProvider: java.security.Signature getSignatureInstance()>
		SHA-256: 5245505faa1caa67a21a8f77bf7afcdbd914eeb8cbdcc06c6e02f21254765066
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer9707)
		Method: <org.microg.gms.nearby.core.ui.R$string: byte[] hkdf(byte[],byte[],byte[])>
		SHA-256: 336bc8660fe35f4b30e137d4b9f6a6ee21e6d73dd104e44f1215bcd2976ef047
		Secure: false
	Object:
		Variable: varReplacer13789
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer13789)
		Method: <com.google.crypto.tink.subtle.AesSiv: byte[] encryptDeterministically(byte[],byte[])>
		SHA-256: e0ef396e9d5396b399cf9e187a12ca4ef3c155bc8121b3f9571a2ab18e6e53d9
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, varReplacer21053, $i0)
		Method: <com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm: byte[] decryptInternal(byte[],byte[])>
		SHA-256: 83795a590099a77959c7698aef0651933ff58925f8c7f7b699ef94835db55584
		Secure: false
	Object:
		Variable: $r15
		Type: java.security.MessageDigest
		Statement: $r15 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17283)
		Method: <org.microg.gms.nearby.exposurenotification.ExposureNotificationServiceImpl$provideDiagnosisKeys$1$1$invokeSuspend$$inlined$let$lambda$1: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 87892c8197fce1597c1828cd68dfbfc8cb3f387f70924112be3dbf8dbc724e1e
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3075)
		Method: <androidx.security.crypto.MasterKeys: java.lang.String getOrCreate(android.security.keystore.KeyGenParameterSpec)>
		SHA-256: f87b7d9125693d195e29154cee77910a2bdfd913ef0d659987b4256904bd5371
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer35416)
		Method: <okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 58c89a6556a6f71a6df465cf76cba44fd9742706d25070a2fb50885d6df47aa3
		Secure: false
	Object:
		Variable: varReplacer34123
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer34123)
		Method: <com.google.crypto.tink.aead.subtle.AesGcmSiv: void <init>(byte[])>
		SHA-256: 187cbcf82cc8fab4f9a7f1e80ab9dfd945f13c8f2b6da9585aa2c9e80ec6a5c3
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r0, $i0, $i1)
		Method: <com.google.crypto.tink.subtle.AesGcmJce: java.security.spec.AlgorithmParameterSpec getParams(byte[],int,int)>
		SHA-256: 9921b743b2824e3f4e7fe69681a2679f4bd77f572cbd9b2133670a63ca1fcb06
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r1)
		Method: <com.google.android.material.R$style: byte[] computeHkdf(java.lang.String,byte[],byte[],byte[],int)>
		SHA-256: 11478f52c7bd2c12856b8bfef205fb6ad1d624ff1bee793861c3e4a80be881c7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6351)
		Method: <org.microg.gms.nearby.core.ui.R$string: byte[] cryptAem(com.google.android.gms.nearby.exposurenotification.TemporaryExposureKey,byte[],byte[])>
		SHA-256: fe861484a133bbeda8112965e1df863fed8309073ab64b7009a48e935b090fa7
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <io.jsonwebtoken.impl.crypto.EllipticCurveSignatureValidator: boolean doVerify(java.security.Signature,java.security.PublicKey,byte[],byte[])>
		SHA-256: f54467fbd4deded218aba82c494444a4c2f8bc22d6e34966879e488f5bb0f52f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer34118)
		Method: <com.google.crypto.tink.subtle.PrfAesCmac: void <init>(byte[])>
		SHA-256: b5235971db7308b0cf2810c3d0fe87abb4ea4aae6368ed9482fd6c9d9a4665b3
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.cert.CertificateFactory
		Statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer42927)
		Method: <okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)>
		SHA-256: ca4d794da3f0ffec711b8a6a946385098698cdf8fa9d02bd8f4a192cbaeaf911
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <com.google.crypto.tink.KeysetManager: int randPositiveInt()>
		SHA-256: bbc9d8394c2dcb76e848cfab8276b3333598af437db700e2dbb7ef0521dd9a8e
		Secure: true
	Object:
		Variable: varReplacer34103
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer34103)
		Method: <com.google.crypto.tink.subtle.AesGcmJce: void <init>(byte[])>
		SHA-256: 4c66aa4b25da749b3df2ace82cd7e78f9c51447f1040e1cd36c4b73622a4f6d7
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer34123)
		Method: <com.google.crypto.tink.aead.subtle.AesGcmSiv: void <init>(byte[])>
		SHA-256: d52cbc6a91f0fe17c6152ea0359e6a83ffebed2dcba7f7ed06bfb9a080e1703
		Secure: false
	Object:
		Variable: varReplacer21143
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer21143)
		Method: <com.google.crypto.tink.subtle.AesSiv: byte[] decryptDeterministically(byte[],byte[])>
		SHA-256: 409957bb87d76c83a7b2ddda82cf53161a8fbeba100e8559f8e7ec029cd4a1f5
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r3)
		Method: <io.jsonwebtoken.SigningKeyResolverAdapter: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>
		SHA-256: bdb6f7a9c8f1c1c52d0737870cbdedd68c6fe43cff656237a219138df2ee6a4d
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer9715)
		Method: <org.microg.gms.nearby.core.ui.R$string: javax.crypto.spec.SecretKeySpec generateRpiKey(com.google.android.gms.nearby.exposurenotification.TemporaryExposureKey)>
		SHA-256: 79757958f6a42c9a713228516ac6edcf3752c0786a2f9a1d20055edee049786b
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Key
		Statement: $r4 = virtualinvoke $r0.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer26698, varReplacer26699)
		Method: <androidx.biometric.CryptoObjectUtils: androidx.biometric.BiometricPrompt$CryptoObject createFakeCryptoObject()>
		SHA-256: 3d3ac33b803c953bcb01542368d5a3baf005a439141923cfc5ea80b63b61517f
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r0)
		Method: <org.microg.gms.nearby.core.ui.R$string: com.google.android.gms.nearby.exposurenotification.TemporaryExposureKey generateCurrentDayTemporaryExposureKey()>
		SHA-256: 7cdea7f9fc8e22692279c6463bbe7d03d62da4a9cc7a08f5055a6a0a27b5fd56
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <com.google.android.material.R$style: byte[] computeHkdf(java.lang.String,byte[],byte[],byte[],int)>
		SHA-256: ec6956bbd46aaf5703810a282519f804e5e4689bf7d71fb11479541707777ed6
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <okio.SegmentedByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: 9d21c3f9e3f612ea7264d21dc14a8967f32993fff60292ad252f8676282c7571
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <io.jsonwebtoken.impl.crypto.MacSigner: byte[] sign(byte[])>
		SHA-256: fb9b5309c47033cd7609de1d4dabb9acd46aaea0d84eb6f36565412c8a88ab30
		Secure: false
	Object:
		Variable: $r19
		Type: java.security.MessageDigest
		Statement: $r19 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer40470)
		Method: <org.dpppt.android.sdk.backend.SignatureVerificationInterceptor: okhttp3.Response intercept(okhttp3.Interceptor$Chain)>
		SHA-256: 345886d57924240594f253c2e22d21b09164f15388ff8d9cc59ab28ff37bed1
		Secure: true
	Object:
		Variable: varReplacer34118
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer34118)
		Method: <com.google.crypto.tink.subtle.PrfAesCmac: void <init>(byte[])>
		SHA-256: 44784ca8e43b26fe2aaf2e77aa46600dbccba94115184c26923ee47a5adb400c
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer9706)
		Method: <org.microg.gms.nearby.core.ui.R$string: byte[] hkdf(byte[],byte[],byte[])>
		SHA-256: 2a42813324148741cbf87036a0be328bf855f7f03e8c25c772a88a97f2a5fee
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer13686, $r1, $i1, $i0)
		Method: <com.google.crypto.tink.aead.subtle.AesGcmSiv: java.security.spec.AlgorithmParameterSpec getParams(byte[],int,int)>
		SHA-256: 906897ff92865e93c0c6246139f5c7482fd27f7eb29c0af28b169c564700d5bc
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r1)
		Method: <com.google.android.material.R$style: byte[] computeHkdf(java.lang.String,byte[],byte[],byte[],int)>
		SHA-256: 11478f52c7bd2c12856b8bfef205fb6ad1d624ff1bee793861c3e4a80be881c7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)
		Method: <com.google.crypto.tink.subtle.EngineWrapper$TMac: java.lang.Object getInstance(java.lang.String,java.security.Provider)>
		SHA-256: e0ddadc13f7bb0fe2b209042e6fb1e08b684a4132db178ec9b403eb5eee11587
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer15121)
		Method: <com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient: void generateNewAeadKey(java.lang.String)>
		SHA-256: 7fd7a4a2807f374d32f4108645c7e99547f02e171fe1ee127f8ec3f1653baaa1
		Secure: false
	Object:
		Variable: $r37
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r37.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, $r20)
		Method: <io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>
		SHA-256: fe673c430394793939e8a1c7f46dee8a7d1e40909db9bc6e35f4183d2136d898
		Secure: false
	Object:
		Variable: varReplacer9715
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer9715)
		Method: <org.microg.gms.nearby.core.ui.R$string: javax.crypto.spec.SecretKeySpec generateRpiKey(com.google.android.gms.nearby.exposurenotification.TemporaryExposureKey)>
		SHA-256: e0c068477d9209540d924e375bbeb3a06d9d816b3aa79da7114b27d71be83252
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer21132, $i0, $r3, varReplacer21133)
		Method: <com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm: byte[] encryptInternal(byte[],byte[])>
		SHA-256: 3664f632758aef83d61e30f5ab525d6a517a9758e0b912a31ac0ca1a9f40b148
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer34122)
		Method: <com.google.crypto.tink.subtle.AesCtrJceCipher: void <init>(byte[],int)>
		SHA-256: 57b7d53bc6fe66b5adbeadb840d03f396d1296e406025dd1ea0dd610115463f1
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.cert.CertificateFactory
		Statement: $r3 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer31279)
		Method: <org.dpppt.android.sdk.R$string: java.security.PublicKey getPublicKeyFromCertificateBase64OrThrow(java.lang.String)>
		SHA-256: 9e8e448a3152eaa36fb1bb5c91e5f40bcccd3c71d829e7d6729bedcf13f63d9e
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <io.jsonwebtoken.impl.crypto.RsaSignatureValidator: boolean doVerify(java.security.Signature,java.security.PublicKey,byte[],byte[])>
		SHA-256: c0841fc704582d1b403210b4a997499491bd2403192b2066ef83a8c76f10261a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <ch.admin.bag.dp3t.networking.FakeWorker$ClockImpl: int getUserInteractionDelay()>
		SHA-256: 9885eebdd846084dd842596cfe99ee191d6eca40246a75a5dcab486bbf92c55d
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.google.crypto.tink.subtle.AesSiv: byte[] decryptDeterministically(byte[],byte[])>
		SHA-256: 903023b995f5882e5451d20b614f88efddf2f35ac40028665b154bcfd798e9cf
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r1, $i1, $i0)
		Method: <com.google.crypto.tink.aead.subtle.AesGcmSiv: java.security.spec.AlgorithmParameterSpec getParams(byte[],int,int)>
		SHA-256: eb539a033328f301387ad80c043bae0685ea4d61b8fdcf3fe687ca4a704f4e7a
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r3)
		Method: <io.jsonwebtoken.impl.crypto.MacSigner: javax.crypto.Mac doGetMacInstance()>
		SHA-256: a1d1f1a96b2229cb8032249f276d2e6d47471c6890809e6db563b576e5d67a47
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.KeyGenerator
		Statement: $r6 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer3078, varReplacer3079)
		Method: <androidx.security.crypto.MasterKeys: java.lang.String getOrCreate(android.security.keystore.KeyGenParameterSpec)>
		SHA-256: ca3dc65d6755c9c94f115a8fac635ac417e2869c6cd83fb1421a0f388be8ee71
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <com.google.crypto.tink.subtle.EngineWrapper$TCipher: java.lang.Object getInstance(java.lang.String,java.security.Provider)>
		SHA-256: 640b3ce10d955f2685c7b85ba7b9a21e5b3284c31a9fa033826b3693ed4c27e7
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer21050)
		Method: <com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm: byte[] decryptInternal(byte[],byte[])>
		SHA-256: f38ebe7ef18a9b248bd99454e472aead716675e77c3c03f28ed2071b12620cc4
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer35419, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 1fe1ff82138f066fe1369053dd2fc7acee7be3722f8fc117c2a8a742ae69db46
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <io.jsonwebtoken.impl.crypto.EllipticCurveSignatureValidator: boolean doVerify(java.security.Signature,java.security.PublicKey,byte[],byte[])>
		SHA-256: a910002b28f05b6627b00bf1da8c378a41c080f9c80a7b1ac62e257ce90cfcd0
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <okio.ByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: d4bf5cc88c644b9a20ac4aef1746c1f0c9ae862102406e7436b8866c875859ff
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.crypto.tink.subtle.EngineWrapper$TCipher: java.lang.Object getInstance(java.lang.String,java.security.Provider)>
		SHA-256: f412a4b6b6af857b02da3ea5721d5fbd73b3618d315ce7a8cc29c14ad33abb42
		Secure: false
	Object:
		Variable: varReplacer9706
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer9706)
		Method: <org.microg.gms.nearby.core.ui.R$string: byte[] hkdf(byte[],byte[],byte[])>
		SHA-256: 1377e646af589e9bdbbc46136f3721731159d1b345f9f4dd0776b1d0c3748856
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer28944)
		Method: <com.google.crypto.tink.mac.HmacKeyManager$1: java.lang.Object getPrimitive(java.lang.Object)>
		SHA-256: 2517eb28eccebf35d7903f1b3440b427f926c9ed06531bc007ca82159a15bf07
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer21131)
		Method: <com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm: byte[] encryptInternal(byte[],byte[])>
		SHA-256: 25ac7238d6db87bac8b4a1851713a26673e99d1cb4535f7911a8fc558da141be
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer34105)
		Method: <com.google.crypto.tink.subtle.AesEaxJce: void <init>(byte[],int)>
		SHA-256: 71e4174422c6f18cf724b5d1efb81a44627d40c787ce5d49c508dcaa7bb31c6
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.SecureRandom
		Statement: specialinvoke $r13.<java.security.SecureRandom: void <init>()>()
		Method: <org.dpppt.android.sdk.internal.backend.models.GaenRequest: void <init>(java.util.List,int,java.lang.Boolean)>
		SHA-256: a81d4798dc4a6e9413cd04951546f4d059e8306df907a69c08915c2c6ca5b599
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.microg.gms.nearby.core.ui.R$string: com.google.android.gms.nearby.exposurenotification.TemporaryExposureKey generateCurrentDayTemporaryExposureKey()>
		SHA-256: 284eff448f05fe833a71201bb367d443c535f09df0ee14f915ce422d5d6ea8
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1812)
		Method: <ch.admin.bag.dp3t.util.ENExceptionHelper: java.lang.String getErrorMessage(java.lang.Exception,android.content.Context)>
		SHA-256: 93b979184017f8ed389b61276f9bb138a22bb1a52dbb9a5b723e05d11b2e00c2
		Secure: true
	Object:
		Variable: $r15
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r15 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r14)
		Method: <okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>
		SHA-256: 15f92f5000dafea90b3e75fdae1b8accb40bde58e00531b38343f614324d74aa
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r1)
		Method: <com.google.android.material.R$style: byte[] computeHkdf(java.lang.String,byte[],byte[],byte[],int)>
		SHA-256: 11478f52c7bd2c12856b8bfef205fb6ad1d624ff1bee793861c3e4a80be881c7
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer26696, varReplacer26697)
		Method: <androidx.biometric.CryptoObjectUtils: androidx.biometric.BiometricPrompt$CryptoObject createFakeCryptoObject()>
		SHA-256: a7d25b2176675ea4b2c08df28a55afcc2193aff2f49e9c52a957fd4964ac3e12
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer9705)
		Method: <org.microg.gms.nearby.core.ui.R$string: byte[] hkdf(byte[],byte[],byte[])>
		SHA-256: 47bf8bdfc5ba398979f10dc9461d427e58163ae890113a2b7b01da3c43e28358
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Key
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r1, varReplacer28856)
		Method: <com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm: void <init>(java.lang.String,java.security.KeyStore)>
		SHA-256: d7f1376c7c38edcff1bb750b323e3fe12774e8125c078508998131b79c4c72cd
		Secure: false
	Object:
		Variable: varReplacer6345
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer6345)
		Method: <org.microg.gms.nearby.core.ui.R$string: byte[] cryptAem(com.google.android.gms.nearby.exposurenotification.TemporaryExposureKey,byte[],byte[])>
		SHA-256: 91f97d0a2b9c77db162967ea440426ccb0d6250ce110a3634703a51d743f6fa9
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <ch.admin.bag.dp3t.networking.FakeWorker$ClockImpl: long syncInterval()>
		SHA-256: d156da8299bb72666b57d322e1ad4ce0360168024ba2061ea19f4765878f75a7
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <org.microg.gms.nearby.core.ui.R$string: byte[] cryptAem(com.google.android.gms.nearby.exposurenotification.TemporaryExposureKey,byte[],byte[])>
		SHA-256: 11a170cd9841156d0110b27a3bd72f8ea9e94d840e7967a286ca702cd7360031
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)
		Method: <org.dpppt.android.sdk.R$string: java.security.PublicKey getPublicKeyFromBase64(java.lang.String)>
		SHA-256: 86fe470c5f61c0f55c87b7fd62f04a55ea6aa88bd0e8332aa142c9e49c88825b
		Secure: false
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r3)
		Method: <io.jsonwebtoken.SigningKeyResolverAdapter: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>
		SHA-256: 68505a57fb5aa2144a5abe3ae780f592ec256f69f83106200a4e59378dca3a85
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.crypto.tink.subtle.EngineWrapper$TMac: java.lang.Object getInstance(java.lang.String,java.security.Provider)>
		SHA-256: 6d763f9467be3d0d73fb479325f103273511edf0e140c0da470a5ccd80fd30b2
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: virtualinvoke $r13.<java.security.SecureRandom: void nextBytes(byte[])>($r8)
		Method: <org.dpppt.android.sdk.internal.backend.models.GaenRequest: void <init>(java.util.List,int,java.lang.Boolean)>
		SHA-256: ab76050cfcb27d447b150629b18faf27bcf2ebc0eb31baa86d468fc8fa4cf47a
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <org.microg.gms.nearby.core.ui.R$string: byte[] hkdf(byte[],byte[],byte[])>
		SHA-256: a7509a27364b1cd1692337c4ffdd53a94d22bc2dfbda2856803367abcdbff5c0
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.google.crypto.tink.subtle.AesSiv: byte[] encryptDeterministically(byte[],byte[])>
		SHA-256: 47afe7d8c5e21d73ab258690f6e85d2e213fa257f554cc8720ffb1fc2b8389ca
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.KeyGenerator
		Statement: $r7 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer15110, varReplacer15111)
		Method: <com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient: void generateNewAeadKey(java.lang.String)>
		SHA-256: bd77cd614e58566011d76e7946d617591698a43a32297d75251416222e0de3f3
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.microg.gms.nearby.exposurenotification.ExposureNotificationServiceImpl: byte[] access$digest(org.microg.gms.nearby.exposurenotification.ExposureNotificationServiceImpl,java.security.MessageDigest,java.io.File)>
		SHA-256: 8eb53929761fa0d1b84a1312121e74d0dacd0cde49969e1f8c40d4b69c4b16b5
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r4.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer21132, $i0, $r3, varReplacer21133)
		Method: <com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm: byte[] encryptInternal(byte[],byte[])>
		SHA-256: 3f167226e3229b4a26cf22f6a6d9bee4c8470dc0382ca2a0883c9ced2647c47f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer18140)
		Method: <org.microg.gms.nearby.exposurenotification.ExposureDatabase: java.util.List findMeasuredExposures(com.google.android.gms.nearby.exposurenotification.TemporaryExposureKey,android.database.sqlite.SQLiteDatabase)>
		SHA-256: ea39429fc09d8f12219cae5641c7561d4a06072e3de4fe2d4d38bdaa3ce0d2e4
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>()
		Method: <ch.admin.bag.dp3t.util.ENExceptionHelper: java.lang.String getErrorMessage(java.lang.Exception,android.content.Context)>
		SHA-256: 5dc7b9663fda50017130dc23d8c8751c80bfc5e35fe885917ab1d85628e5174c
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer13683, $r0, $i0, $i1)
		Method: <com.google.crypto.tink.subtle.AesGcmJce: java.security.spec.AlgorithmParameterSpec getParams(byte[],int,int)>
		SHA-256: bd24f1db16a53066a7b3130ce64e221a861084a53f5e38b6d6f4dfdc5e40d0a4
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.TrustManager[]
		Statement: $r16 = virtualinvoke $r15.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>
		SHA-256: 2f62c404b25d1312df5241322ea6a3077ce38e67b30ceb201d9f146de7918b57
		Secure: false
	Object:
		Variable: varReplacer34122
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer34122)
		Method: <com.google.crypto.tink.subtle.AesCtrJceCipher: void <init>(byte[],int)>
		SHA-256: e6d7df3184fa273fd4eca2caafdd2a826e2ce3b8de4121234717fc055c6a7ebe
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)
		Method: <org.dpppt.android.sdk.R$string: java.security.PublicKey getPublicKeyFromBase64(java.lang.String)>
		SHA-256: 4009b3b4a48deaa79fb9c66b37c1e290d9da8e3426263940571bc909ed6a328
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <io.jsonwebtoken.impl.crypto.SignatureProvider: void <clinit>()>
		SHA-256: d777e14eab337e09fad46d648071f974b3d06ed5ddbe27d0fbb553277a45c475
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.Signature: byte[] sign()>()
		Method: <io.jsonwebtoken.impl.crypto.RsaSigner: byte[] doSign(byte[])>
		SHA-256: 98f07673a5eb06121abff36bf0c3b12a7dbc2d4e321f0ed06df14792992e8580
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r1)
		Method: <com.google.android.material.R$style: byte[] computeHkdf(java.lang.String,byte[],byte[],byte[],int)>
		SHA-256: 4b2a5960f5fa1704f824f7b8c7227d4f2da2627b8c394efeb16b23cfe5c14423
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Key
		Statement: $r4 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <com.google.crypto.tink.subtle.PrfHmacJce: void <init>(java.lang.String,java.security.Key)>
		SHA-256: e1eea5081cf0aadf8e508267fd22718dcf76be755dbf3e35faaf1e8f3674e96e
		Secure: true
	Object:
		Variable: $r20
		Type: java.lang.String
		Statement: specialinvoke $r37.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, $r20)
		Method: <io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>
		SHA-256: d1039aabd5998a01d8c48d5e6d1c97e1e5166d3584ff08bc0408b97f83a53d9b
		Secure: false
	Object:
		Variable: $r16
		Type: java.security.SecureRandom
		Statement: specialinvoke $r16.<java.security.SecureRandom: void <init>()>()
		Method: <ch.admin.bag.dp3t.inform.InformViewModel$performUpload$1: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 41efbfbca02afa4a0dc7eb0968a498007514bc332b6e6f42c5c21ed76d058071
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer21143)
		Method: <com.google.crypto.tink.subtle.AesSiv: byte[] decryptDeterministically(byte[],byte[])>
		SHA-256: 2a0b5860e9eefbee378e3adbb6bc7a6bbff0420bc09641814f9a682d1ef64c5a
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer22508)
		Method: <com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient: boolean hasKey(java.lang.String)>
		SHA-256: a834c79b66e692f7b98d5aaa32b8e582c510069fae239e9da9a416000a90ba0f
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer13789)
		Method: <com.google.crypto.tink.subtle.AesSiv: byte[] encryptDeterministically(byte[],byte[])>
		SHA-256: 5bc772389376278491e7a87b72a1bd3f1c20e0eba82420b3b3fe8f7f2f03902e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer21047, $r2, varReplacer21048, varReplacer21049)
		Method: <com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm: byte[] decryptInternal(byte[],byte[])>
		SHA-256: 3bd7ff8052b3afca687a763aee64df3d4c296c86ed2398a3fe1b3e4bbe76ddc6
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer22520)
		Method: <com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient$Builder: void <init>()>
		SHA-256: 368474a27129188fd1a67fe8baac7dbb90523614892a21bd0fe77abed54df9db
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.google.crypto.tink.subtle.AesCtrJceCipher: void doCtr(byte[],int,int,byte[],int,byte[],boolean)>
		SHA-256: 8b027ec037ed999e6ae523f4c678489ee05c12d6bf70ae191ea02e97b0c7a3f1
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: ae39b036c5eeeba58d380660f68e23806935f12d2f5c9cefe65440425aa34f4a
		Secure: false

Findings in Java Class: androidx.security.crypto.MasterKeys

	 in Method: java.lang.String getOrCreate(android.security.keystore.KeyGenParameterSpec)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #f87b7d9125693d195e29154cee77910a2bdfd913ef0d659987b4256904bd5371)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3075)


Findings in Java Class: org.microg.gms.nearby.core.ui.R$string

	 in Method: byte[] cryptAem(com.google.android.gms.nearby.exposurenotification.TemporaryExposureKey,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6342, $r4, $r9)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #a6bc724f2cdb4038936d1ef3b22050d12ad9d6a0c20365ff4231f1890436565)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer6345)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #fe861484a133bbeda8112965e1df863fed8309073ab64b7009a48e935b090fa7)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer6345)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6342, $r4, $r9)


	 in Method: byte[] generateRpiId(com.google.android.gms.nearby.exposurenotification.TemporaryExposureKey,int)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2e655572baa0d0c4936786d6a9bac80bef421c4ca9737eb89f5f51cf8076441d)
			First parameter (with value "AES/ECB/NoPadding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6358)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer6354, $r2)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #2e655572baa0d0c4936786d6a9bac80bef421c4ca9737eb89f5f51cf8076441d)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r7 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)


	 in Method: byte[] hkdf(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer9705)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r0)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #336bc8660fe35f4b30e137d4b9f6a6ee21e6d73dd104e44f1215bcd2976ef047)
			Unexpected call to method init on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r0)


	 in Method: javax.crypto.spec.SecretKeySpec generateRpiKey(com.google.android.gms.nearby.exposurenotification.TemporaryExposureKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer9715)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #79757958f6a42c9a713228516ac6edcf3752c0786a2f9a1d20055edee049786b)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer9715)


Findings in Java Class: org.microg.gms.common.PackageUtils

	 in Method: java.lang.String firstSignatureDigest(android.content.pm.PackageManager,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #661da95aa8466b6ed3421de166403236a091e34a696eb5d385754e75126eccd0)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r7 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest(byte[])>($r7)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #661da95aa8466b6ed3421de166403236a091e34a696eb5d385754e75126eccd0)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9765)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #661da95aa8466b6ed3421de166403236a091e34a696eb5d385754e75126eccd0)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9765)


Findings in Java Class: com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient

	 in Method: void generateNewAeadKey(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #7fd7a4a2807f374d32f4108645c7e99547f02e171fe1ee127f8ec3f1653baaa1)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer15121)


	 in Method: boolean hasKey(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #a834c79b66e692f7b98d5aaa32b8e582c510069fae239e9da9a416000a90ba0f)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer22508)


Findings in Java Class: com.google.crypto.tink.subtle.EngineWrapper$TCipher

	 in Method: java.lang.Object getInstance(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f412a4b6b6af857b02da3ea5721d5fbd73b3618d315ce7a8cc29c14ad33abb42)
			First parameter (with value "HMACSHA256") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #640b3ce10d955f2685c7b85ba7b9a21e5b3284c31a9fa033826b3693ed4c27e7)
			First parameter (with value "HMACSHA256") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.crypto.tink.subtle.PrfAesCmac

	 in Method: byte[] compute(byte[],int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e0ddadc13f7bb0fe2b209042e6fb1e08b684a4132db178ec9b403eb5eee11587)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6d763f9467be3d0d73fb479325f103273511edf0e140c0da470a5ccd80fd30b2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #640b3ce10d955f2685c7b85ba7b9a21e5b3284c31a9fa033826b3693ed4c27e7)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #640b3ce10d955f2685c7b85ba7b9a21e5b3284c31a9fa033826b3693ed4c27e7)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r7 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f412a4b6b6af857b02da3ea5721d5fbd73b3618d315ce7a8cc29c14ad33abb42)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f412a4b6b6af857b02da3ea5721d5fbd73b3618d315ce7a8cc29c14ad33abb42)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r7 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)


	 in Method: void <init>(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer34118)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e0ddadc13f7bb0fe2b209042e6fb1e08b684a4132db178ec9b403eb5eee11587)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6d763f9467be3d0d73fb479325f103273511edf0e140c0da470a5ccd80fd30b2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #640b3ce10d955f2685c7b85ba7b9a21e5b3284c31a9fa033826b3693ed4c27e7)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f412a4b6b6af857b02da3ea5721d5fbd73b3618d315ce7a8cc29c14ad33abb42)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


Findings in Java Class: com.google.crypto.tink.subtle.AesSiv

	 in Method: byte[] encryptDeterministically(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer13789)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #640b3ce10d955f2685c7b85ba7b9a21e5b3284c31a9fa033826b3693ed4c27e7)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f412a4b6b6af857b02da3ea5721d5fbd73b3618d315ce7a8cc29c14ad33abb42)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer13790, $r8, $r10)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e0ddadc13f7bb0fe2b209042e6fb1e08b684a4132db178ec9b403eb5eee11587)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6d763f9467be3d0d73fb479325f103273511edf0e140c0da470a5ccd80fd30b2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


	 in Method: byte[] decryptDeterministically(byte[],byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #640b3ce10d955f2685c7b85ba7b9a21e5b3284c31a9fa033826b3693ed4c27e7)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f412a4b6b6af857b02da3ea5721d5fbd73b3618d315ce7a8cc29c14ad33abb42)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer21143)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e0ddadc13f7bb0fe2b209042e6fb1e08b684a4132db178ec9b403eb5eee11587)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6d763f9467be3d0d73fb479325f103273511edf0e140c0da470a5ccd80fd30b2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)


Findings in Java Class: com.google.android.material.R$style

	 in Method: byte[] computeHkdf(java.lang.String,byte[],byte[],byte[],int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e0ddadc13f7bb0fe2b209042e6fb1e08b684a4132db178ec9b403eb5eee11587)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $i1 = virtualinvoke $r6.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6d763f9467be3d0d73fb479325f103273511edf0e140c0da470a5ccd80fd30b2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $i1 = virtualinvoke $r6.<javax.crypto.Mac: int getMacLength()>()

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Mac: void init(java.security.Key)>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #640b3ce10d955f2685c7b85ba7b9a21e5b3284c31a9fa033826b3693ed4c27e7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $i1 = virtualinvoke $r6.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f412a4b6b6af857b02da3ea5721d5fbd73b3618d315ce7a8cc29c14ad33abb42)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $i1 = virtualinvoke $r6.<javax.crypto.Mac: int getMacLength()>()

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #e0ddadc13f7bb0fe2b209042e6fb1e08b684a4132db178ec9b403eb5eee11587)
			Unexpected call to method init on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r6.<javax.crypto.Mac: void init(java.security.Key)>($r7)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #6d763f9467be3d0d73fb479325f103273511edf0e140c0da470a5ccd80fd30b2)
			Unexpected call to method init on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r6.<javax.crypto.Mac: void init(java.security.Key)>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #640b3ce10d955f2685c7b85ba7b9a21e5b3284c31a9fa033826b3693ed4c27e7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r8 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f412a4b6b6af857b02da3ea5721d5fbd73b3618d315ce7a8cc29c14ad33abb42)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r8 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal()>()


Findings in Java Class: com.google.crypto.tink.subtle.EngineWrapper$TMac

	 in Method: java.lang.Object getInstance(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #e0ddadc13f7bb0fe2b209042e6fb1e08b684a4132db178ec9b403eb5eee11587)
			First parameter (with value "AES/ECB/NoPadding") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #6d763f9467be3d0d73fb479325f103273511edf0e140c0da470a5ccd80fd30b2)
			First parameter (with value "AES/ECB/NoPadding") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #6d763f9467be3d0d73fb479325f103273511edf0e140c0da470a5ccd80fd30b2)
			First parameter (with value "AES/CTR/NoPadding") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #e0ddadc13f7bb0fe2b209042e6fb1e08b684a4132db178ec9b403eb5eee11587)
			First parameter (with value "AES/CTR/NoPadding") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)


Findings in Java Class: org.microg.gms.nearby.exposurenotification.ExposureNotificationServiceImpl

	 in Method: byte[] access$digest(org.microg.gms.nearby.exposurenotification.ExposureNotificationServiceImpl,java.security.MessageDigest,java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #87892c8197fce1597c1828cd68dfbfc8cb3f387f70924112be3dbf8dbc724e1e)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r4 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.microg.gms.nearby.exposurenotification.ExposureDatabase

	 in Method: java.util.List findMeasuredExposures(com.google.android.gms.nearby.exposurenotification.TemporaryExposureKey,android.database.sqlite.SQLiteDatabase)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ea39429fc09d8f12219cae5641c7561d4a06072e3de4fe2d4d38bdaa3ce0d2e4)
			First parameter (with value "AES/ECB/NoPadding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer18140)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer18167, $r4)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ea39429fc09d8f12219cae5641c7561d4a06072e3de4fe2d4d38bdaa3ce0d2e4)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r9 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r9)


Findings in Java Class: com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient$Builder

	 in Method: void <init>()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #368474a27129188fd1a67fe8baac7dbb90523614892a21bd0fe77abed54df9db)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer22520)


Findings in Java Class: androidx.biometric.CryptoObjectUtils

	 in Method: androidx.biometric.BiometricPrompt$CryptoObject createFakeCryptoObject()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #ae7687295799497842eb5299161478d9c125c52721a25d3045ca735e9ae147bc)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer26700)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer26702, $r5)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #18c0a710f678de23bbe7dfcda1be557138e571130befa6388419d97b4ce29acf)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer26701)


Findings in Java Class: com.google.crypto.tink.mac.HmacKeyManager$1

	 in Method: java.lang.Object getPrimitive(java.lang.Object)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer28944)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #2517eb28eccebf35d7903f1b3440b427f926c9ed06531bc007ca82159a15bf07)
			Second parameter (with value "HMAC") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer28944)


Findings in Java Class: org.dpppt.android.sdk.R$string

	 in Method: java.security.PublicKey getPublicKeyFromCertificateBase64OrThrow(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #9e8e448a3152eaa36fb1bb5c91e5f40bcccd3c71d829e7d6729bedcf13f63d9e)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r4 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r0)


	 in Method: java.security.PublicKey getPublicKeyFromBase64(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)


Findings in Java Class: okhttp3.internal.platform.AndroidPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #58c89a6556a6f71a6df465cf76cba44fd9742706d25070a2fb50885d6df47aa3)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer35416)


Findings in Java Class: okhttp3.internal.platform.ConscryptPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #1fe1ff82138f066fe1369053dd2fc7acee7be3722f8fc117c2a8a742ae69db46)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer35419, $r2)


Findings in Java Class: okhttp3.internal.platform.Platform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #458045e72ef34200c07d5583feaa1c0fdfdf2560b89a368cc84d3aa041605557)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer35420)


Findings in Java Class: org.dpppt.android.sdk.backend.SignatureVerificationInterceptor

	 in Method: okhttp3.Response intercept(okhttp3.Interceptor$Chain)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #345886d57924240594f253c2e22d21b09164f15388ff8d9cc59ab28ff37bed1)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r23 = virtualinvoke $r19.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest$okio(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ae39b036c5eeeba58d380660f68e23806935f12d2f5c9cefe65440425aa34f4a)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ae39b036c5eeeba58d380660f68e23806935f12d2f5c9cefe65440425aa34f4a)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: okio.SegmentedByteString

	 in Method: okio.ByteString digest$okio(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: okhttp3.Cache$Entry

	 in Method: java.util.List readCertificateList(okio.BufferedSource)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #ca4d794da3f0ffec711b8a6a946385098698cdf8fa9d02bd8f4a192cbaeaf911)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer42927)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #ca4d794da3f0ffec711b8a6a946385098698cdf8fa9d02bd8f4a192cbaeaf911)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r10 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r9)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #ca4d794da3f0ffec711b8a6a946385098698cdf8fa9d02bd8f4a192cbaeaf911)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r10 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r9)


Findings in Java Class: io.jsonwebtoken.impl.DefaultJwtParser

	 in Method: io.jsonwebtoken.Jwt parse(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r37.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, $r20)


Findings in Java Class: com.google.crypto.tink.subtle.AesCtrJceCipher

	 in Method: void <init>(byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer34122)


	 in Method: void doCtr(byte[],int,int,byte[],int,byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


Findings in Java Class: com.google.crypto.tink.aead.subtle.AesGcmSiv

	 in Method: java.security.spec.AlgorithmParameterSpec getParams(byte[],int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r1, $i1, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer13686, $r1, $i1, $i0)


	 in Method: void <init>(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer34123)


Findings in Java Class: io.jsonwebtoken.impl.crypto.MacSigner

	 in Method: javax.crypto.Mac doGetMacInstance()
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r1)


Findings in Java Class: com.google.crypto.tink.subtle.AesEaxJce

	 in Method: byte[] encrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


	 in Method: void <init>(byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer34105)


	 in Method: byte[] decrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


Findings in Java Class: io.jsonwebtoken.SigningKeyResolverAdapter

	 in Method: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r2)


	 in Method: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r3)


Findings in Java Class: com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm

	 in Method: byte[] decryptInternal(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer21047, $r2, varReplacer21048, varReplacer21049)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer21051, $r1, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer21051, $r1, $r4)


	 in Method: byte[] encryptInternal(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer21135, $r5)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: void <init>(okhttp3.OkHttpClient$Builder)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r20.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer30394, $r16, varReplacer30394)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r20.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer30394, $r16, varReplacer30394)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r20.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer30394, $r16, varReplacer30394)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r15.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer30388)


Findings in Java Class: com.google.crypto.tink.subtle.AesGcmJce

	 in Method: void <init>(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer34103)


	 in Method: java.security.spec.AlgorithmParameterSpec getParams(byte[],int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer13683, $r0, $i0, $i1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r0, $i0, $i1)


Findings in Java Class: io.jsonwebtoken.impl.crypto.RsaSigner

	 in Method: byte[] doSign(byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initSign(java.security.PrivateKey)>($r3)


Findings in Java Class: io.jsonwebtoken.impl.crypto.RsaSignatureValidator

	 in Method: boolean doVerify(java.security.Signature,java.security.PublicKey,byte[],byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 119

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 19
	NeverTypeOfError: 2
	TypestateError: 20
	ConstraintError: 23
	RequiredPredicateError: 46
=====================================================================
