0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Alive 15277  5000
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r29
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r29.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r28, varReplacer58676)
		Method: <com.aelitis.azureus.core.pairing.impl.PairingManagerTunnelHandler$3: java.util.Map process(java.net.InetSocketAddress,java.util.Map)>
		SHA-256: 1ffb4f6ce69fbf4ad2dd81997d378974c87c49ff873a1d2879de77b4e6ab4e5e
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer22380)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void a(java.io.File,java.security.interfaces.RSAPublicKey)>
		SHA-256: c4103e4161ef49f43eef716b39a18778499ade2d3a936720e2db422dd2701bb7
		Secure: false
	Object:
		Variable: $r20
		Type: java.security.MessageDigest
		Statement: $r20 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer33674)
		Method: <com.aelitis.azureus.core.dht.control.impl.DHTControlImpl: void <init>(com.aelitis.azureus.core.dht.control.DHTControlAdapter,com.aelitis.azureus.core.dht.transport.DHTTransport,int,int,int,int,int,int,int,int,boolean,boolean,com.aelitis.azureus.core.dht.DHTLogger)>
		SHA-256: 78fa6d868c9970b857fa68b5ebf1333d092f7d3642ea75fc37015092f36f2c00
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <bt.a: byte[] sign()>
		SHA-256: c3523a972bc9659ed6a4403e92688393cfab3cac306d4d21e48183250a810c32
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.aelitis.azureus.core.pairing.impl.PairManagerTunnel: byte[] b(byte[],int,int)>
		SHA-256: df7988cfd69d5c9dfe17c144f26453d3dd2614795f5652c80d46de9d34108b30
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r2)
		Method: <com.aelitis.azureus.core.subs.impl.SubscriptionBodyImpl: boolean a(byte[],byte[],int,int,byte[])>
		SHA-256: 46f61ae3fbec03b159149990af713075936224c591e25cf6925de7b1f4d6c423
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r5.<java.security.Signature: boolean verify(byte[])>($r6)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void a(java.io.File,java.security.interfaces.RSAPublicKey)>
		SHA-256: d043b5a966e39c2ad80a6384f197cabce43d85c2041f05f1ba7851db4473f5ca
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer50579)
		Method: <org.gudy.azureus2.pluginsimpl.local.ui.config.PasswordParameterImpl: byte[] encode(byte[])>
		SHA-256: 9edbf27f6e63b0f528afa681736089fc7a8ff8247f0a1062928e52c22087944d
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.aelitis.azureus.core.security.impl.CryptoHandlerECC: byte[] b(byte[],java.lang.String)>
		SHA-256: 8468f0a1b8bc7172ac59e33cda112ef093a3907b3c0aee0ca8c02af96223527c
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.PrivateKey
		Statement: $r4 = virtualinvoke $r2.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void Be()>
		SHA-256: fefac7a409d00452a5348a2dbfa30c43542b686bd5041112bb8f4201ca93800e
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)
		Method: <com.aelitis.azureus.core.security.impl.CryptoManagerImpl: byte[] a(byte[],char[])>
		SHA-256: b2996a8a1689538b084664403a58b57d84e52991256667b361ab85080bb6fafe
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r12.<ay.c: byte[] digest()>()
		Method: <aw.d: void <init>(aw.c,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
		SHA-256: a1f3d34bab81539dd83fffe28ad13fb85b659409d3757073e946dd3ea827e57c
		Secure: false
	Object:
		Variable: $r31
		Type: javax.net.ssl.TrustManager[]
		Statement: $r31 = virtualinvoke $r29.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.resourcedownloader.ResourceDownloaderURLImpl: java.io.InputStream download()>
		SHA-256: da31121b55b6e5935e7c0d69e9f261cb626423f84a79a06b65e53369da36f780
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r7 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl: javax.net.ssl.SSLSocketFactory a(java.lang.String,java.security.cert.Certificate,boolean)>
		SHA-256: 952bc959df072d183db30a004710875b6dc424697d94e860e3f076df64f2b53b
		Secure: false
	Object:
		Variable: varReplacer57945
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r2, varReplacer57943, varReplacer57944, varReplacer57945)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.security.SESTSConnectionImpl: void setupBlockCrypto()>
		SHA-256: 7eca7112b4d4c78e6fab45f0860d951609128190005dae2e62f75f7a71bf296d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer45833)
		Method: <lbms.plugins.mldht.kad.BloomFilterBEP33: void <init>()>
		SHA-256: c42b61d6b2bbed00254e0bb60dd860bb14e58dabf0ab4b56958d90ebe1c34145
		Secure: false
	Object:
		Variable: $r38
		Type: javax.crypto.Cipher
		Statement: $r38 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer63323)
		Method: <com.aelitis.azureus.core.pairing.impl.PairingManagerTunnelHandler: boolean a(org.gudy.azureus2.plugins.tracker.web.TrackerWebPageRequest,org.gudy.azureus2.plugins.tracker.web.TrackerWebPageResponse)>
		SHA-256: 1edd2face6707297f1ebbb773f9dad14d9c69c2831b4700361c4eb32256ed2c2
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r2.<java.security.SecureRandom: int nextInt(int)>(varReplacer60299)
		Method: <com.aelitis.azureus.core.security.impl.CryptoSTSEngineImpl: void d(java.nio.ByteBuffer,boolean)>
		SHA-256: 9766df1a038ddc55f3f2fdbb290a05cfbc8e8d9bf2e8fd64dec0901475d01cfe
		Secure: true
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r8.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void m(java.lang.String,byte[])>
		SHA-256: eb17a4edd772869941cd7a259433835a6d01a7fb56dcdf96bcb740ce6aec5867
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)
		Method: <com.aelitis.azureus.core.networkmanager.impl.TransportCipher: void <init>(java.lang.String,int,javax.crypto.spec.SecretKeySpec)>
		SHA-256: ffe81bdc116aa650c9fde11c62231070451202dd31903329e39c2cb5e2777d9a
		Secure: false
	Object:
		Variable: varReplacer42729
		Type: java.lang.String
		Statement: $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer42729)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void B(byte[])>
		SHA-256: 3002b10873a35a6bc99af0958f8c1e876e490e80641d676ab5e5d79cd7164c53
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $z0 = virtualinvoke $r10.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <com.aelitis.azureus.core.security.impl.CryptoSTSEngineImpl: void c(java.nio.ByteBuffer,boolean)>
		SHA-256: 91ae88ee80ed7911239909b49fb09415b82e655173a92813ce3af6e38c08d830
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer58426)
		Method: <org.gudy.azureus2.core3.util.AddressUtils: java.lang.String gJ(java.lang.String)>
		SHA-256: 292a8e0b9f5b2f70d40d78f3b35861ce67cc20fa7bd9980148176b63679ced06
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r8.<ay.c: byte[] digest()>()
		Method: <ax.m: byte[] a(java.lang.String,java.lang.String,java.lang.String,byte[],byte[])>
		SHA-256: b11369b5cd5530ef994c8f695f5fbbd61ad8911ff77e7cab3f942a70b5f683c4
		Secure: false
	Object:
		Variable: $r5
		Type: java.net.PasswordAuthentication
		Statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r4, $r6)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.resourceuploader.ResourceUploaderURLImpl: java.net.PasswordAuthentication getAuthentication(java.lang.String,java.net.URL)>
		SHA-256: e6f84ed563ef8ce7759fea365ec2f7fe699f456efca57c457e88d68e905de768
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.PublicKey
		Statement: $r6 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r3)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void m(java.lang.String,byte[])>
		SHA-256: d4e209ba03a4b2d4c96e96ca8185dddfaa813f013fad9736f0bc2bd4c0717f95
		Secure: false
	Object:
		Variable: varReplacer62392
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer62392)
		Method: <com.aelitis.azureus.core.networkmanager.impl.udp.UDPConnectionSet: org.gudy.bouncycastle.crypto.engines.RC4Engine D(byte[])>
		SHA-256: 1750f1cb36ffd20fa2ba49a257b4c46d307f4d7cf421c138e16fa58ce3947f4e
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r6.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)
		Method: <com.aelitis.azureus.core.security.CryptoECCUtils: java.security.PublicKey P(byte[])>
		SHA-256: 254eb3377b807c5c53b90fad5583aecafc105259f688585dd74831f5b694b0a8
		Secure: false
	Object:
		Variable: $r15
		Type: javax.net.ssl.SSLContext
		Statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1617)
		Method: <org.gudy.azureus2.core3.torrentdownloader.impl.TorrentDownloaderImpl: void runSupport()>
		SHA-256: 190baa2a8dd8cc185df292c479d711e60897c80b81437e5d7e24a914b0ce55b4
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer42734)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void Bf()>
		SHA-256: fa9d3ed8f0dd80f6bf2dd9103bf1bfaebfa4d5dae16c4fd2d35b0d482e9cbca6
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <bt.a: byte[] sign()>
		SHA-256: 7e3f9a5af0038606cd6d41263df04e8e639f4c0361c42ae5a701f26ea1a01577
		Secure: true
	Object:
		Variable: varReplacer42733
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer42733)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void Bf()>
		SHA-256: c10a599f7baa5cb00c2b496f33dbdacf3495e19bd7b4de7c831763bd82c82aa3
		Secure: false
	Object:
		Variable: varReplacer54230
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer54230)
		Method: <org.gudy.azureus2.pluginsimpl.local.ddb.DDBaseTTTorrent: byte[] doCrypt(int,byte[],byte[],int)>
		SHA-256: 7f14e6653c2a647c7efd81ad14369f5c1f75e894f8c6497d40ec725eaa589270
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: $r3 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer2552)
		Method: <lbms.plugins.mldht.kad.utils.ThreadLocalUtils: java.util.Random getThreadLocalRandom()>
		SHA-256: e4126d2b22e14d9a6247bf56e8c8e7d71e96c485750cad1cf7bf1c27ce4f074f
		Secure: true
	Object:
		Variable: varReplacer11471
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer11471)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void m(java.lang.String,byte[])>
		SHA-256: fc3977926da28ee0bfe908faf9cef446c4ce3fe0c619f1f078cbf047d78ca03
		Secure: false
	Object:
		Variable: $r30
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r30.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r11)
		Method: <com.aelitis.azureus.core.pairing.impl.PairingManagerTunnelHandler$3: java.util.Map process(java.net.InetSocketAddress,java.util.Map)>
		SHA-256: 61dcffa3516b23636c96f7a3a415657024e624ea1f41891c64601e913f5eeafa
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer18375)
		Method: <com.vuze.android.remote.rpc.a: void <init>(java.security.KeyStore)>
		SHA-256: aaa11511b522d9376932c03221e1d2c621159f0db62f2df045646a43cb72dd5b
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer57939)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.security.SESTSConnectionImpl: void setupBlockCrypto()>
		SHA-256: e1625eccc175a7d229afa5f46fae2699b62869c11965586a185997a287f098aa
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer33641)
		Method: <com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager: boolean verifyKeyBlock(byte[],byte[])>
		SHA-256: 879963159e103e50aae57857d8580ca86ad84a2c32c3a950c547242da3cdd57f
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r6.<java.util.Random: int nextInt()>()
		Method: <lbms.plugins.mldht.kad.RPCServer: void doQueuedCalls()>
		SHA-256: f24d1bed665b245d892fc81ce1ccb658b594b5ae5f736727bff0ee031be4529e
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r4 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r3)
		Method: <org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl: javax.net.ssl.TrustManagerFactory ajJ()>
		SHA-256: aa391ae6c2941dd1141a5963305381d32f717403fccdbbe2ad7f844844806316
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $z0 = virtualinvoke $r10.<java.security.Signature: boolean verify(byte[])>($r11)
		Method: <org.gudy.bouncycastle.jce.provider.X509CertificateObject: void verify(java.security.PublicKey)>
		SHA-256: 7e630ce259f46c1fc08e32f6f97bb8633141f211e192f9113588f54c5238710
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl: boolean go(java.lang.String)>
		SHA-256: 475fc97334c59f323cf1799b9a8123c71c51856c9eee2d34963486ab75e1c00b
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyFactory
		Statement: $r6 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer47293, $r5)
		Method: <com.aelitis.azureus.core.security.CryptoECCUtils: java.security.PublicKey P(byte[])>
		SHA-256: 720380b6a02081549eda703a4c8f2d94c23980d5f0011c283c2b06ade824164c
		Secure: false
	Object:
		Variable: varReplacer22372
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer22372)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void B(java.io.File)>
		SHA-256: f1f593ac53a6973435c8ca990b0cbb16935fa46fd3f2c112afa6f56e2eb25d4e
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: virtualinvoke $r9.<ay.c: int digest(byte[],int,int)>($r5, varReplacer46811, varReplacer46812)
		Method: <ax.m: byte[] a(java.lang.String,java.lang.String,java.lang.String,byte[],byte[])>
		SHA-256: ca8deca7d8affb446c29315d7aca56d5ef3ed29d727bddc0107e3d42de8f585
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12996)
		Method: <com.aelitis.azureus.core.pairing.impl.PairManagerTunnel: byte[] b(byte[],int,int)>
		SHA-256: fae884d0445a9fad5f020b90c3d49072c851c71ad2e438a7d88225fb07b172b
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r8.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <com.aelitis.azureus.core.dht.nat.impl.DHTNATPuncherImpl: java.util.Map i(java.util.Map)>
		SHA-256: 94a24de0c22c71428f41bcc92125e539d30f651937de321de4007be51dc915e5
		Secure: false
	Object:
		Variable: $r26
		Type: javax.crypto.Cipher
		Statement: $r26 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer47978)
		Method: <com.aelitis.azureus.plugins.xmwebui.client.rpc.XMRPCClientTunnel: java.lang.Object[] getCurrentTunnel(boolean)>
		SHA-256: 6d0cfdce8f06f4199748c971c0a0900c9e5e88e1f297a48bbe81e217b1679112
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.TrustManager[]
		Statement: $r16 = virtualinvoke $r14.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.aelitis.plugins.rcmplugin.RCMPatcher: void applyPatch2()>
		SHA-256: adf4c645416f947d09759cc227f3ef8fd7d2dff69e255cef03ed95f3253f2cc7
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r3, varReplacer54581)
		Method: <com.aelitis.azureus.core.security.impl.CryptoManagerImpl: byte[] b(byte[],char[])>
		SHA-256: 200a4f6dac54dac1e3a16d64a16d882469bfd728899170c15f57429cf333a327
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager: boolean verifyKeyBlock(byte[],byte[])>
		SHA-256: e19218dfd8a82593290076fd61f89f581348e33ed032d426fe8300791514535f
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r1.<java.util.Random: void nextBytes(byte[])>($r0)
		Method: <lbms.plugins.mldht.kad.Database: void <clinit>()>
		SHA-256: c1c2ec0bc36004208262fc238a1f7a68532ac86f9a816d23b0832efc2f9ef654
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer54231)
		Method: <org.gudy.azureus2.pluginsimpl.local.ddb.DDBaseTTTorrent: byte[] doCrypt(int,byte[],byte[],int)>
		SHA-256: 935be9e22b91eb3e384c8232a47e6105465744e21d90ab10d30c0e9b8f415b65
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r2, varReplacer57940, varReplacer57941, varReplacer57942)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.security.SESTSConnectionImpl: void setupBlockCrypto()>
		SHA-256: 4ed0bde264da83eab5ac0c03929db4ce495cbafe859624290342b49fcc095b2b
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer41215)
		Method: <com.aelitis.azureus.plugins.xmwebui.client.rpc.XMRPCClientTunnel: com.aelitis.azureus.plugins.xmwebui.client.rpc.XMRPCClientTunnel$CallResult call(org.json.simple.JSONObject,byte[])>
		SHA-256: c9017889b254f75e86a6a81992c4acd0b12a4cf1aa3ab4626f7d7abf927d97a5
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer51199)
		Method: <ax.o: void <init>(byte[],boolean)>
		SHA-256: 2d69a9d88fb3a8a1285bc65a725c5b215ed52ef0fae3993dbda380f6d3f3f7ae
		Secure: false
	Object:
		Variable: $r27
		Type: javax.crypto.Cipher
		Statement: $r27 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer58674)
		Method: <com.aelitis.azureus.core.pairing.impl.PairingManagerTunnelHandler$3: java.util.Map process(java.net.InetSocketAddress,java.util.Map)>
		SHA-256: cbc380fca710047fc540a0cd686852eef3d2c9443544c0ae16e4169f4b1aed80
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <lbms.plugins.mldht.kad.utils.ThreadLocalUtils: java.util.Random getThreadLocalRandom()>
		SHA-256: 6ee3ee23a49a239b23d2c85f142dbe8e7d37bce347672b44b6d832cb6c53d1b3
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r3, varReplacer44185)
		Method: <com.aelitis.azureus.core.security.impl.CryptoManagerImpl: byte[] a(byte[],char[])>
		SHA-256: 1112ffa74b239727ebfbffa227b6bbef28176681ff94f56b015c833ba8d45aa4
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer54582)
		Method: <com.aelitis.azureus.core.security.impl.CryptoManagerImpl: byte[] b(byte[],char[])>
		SHA-256: f6fa82ba7fd2d8f7be05f70f49b489b4dc4199a1a77edf8322c4eb4e03aa4084
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r10.<ay.c: int digest(byte[],int,int)>($r2, $i0, varReplacer56554)
		Method: <ax.m: void a(byte[],byte[],int)>
		SHA-256: cd03968415907449b68d43ec7650a276fdb6e1f60fe8f1317621ff8a8313cae5
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8232)
		Method: <com.vuze.android.remote.rpc.f: bb.u du(boolean)>
		SHA-256: 7af684dbe7fabc5e85abacf18102ba2f500d7fb50d1abb5f3300f0d3c4363931
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer22372)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void B(java.io.File)>
		SHA-256: b71911ed32b9456185c25c983ef206deff32b4b5058314fb21d62f53e006faac
		Secure: false
	Object:
		Variable: $r38
		Type: javax.crypto.Cipher
		Statement: $r38 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer63321)
		Method: <com.aelitis.azureus.core.pairing.impl.PairingManagerTunnelHandler: boolean a(org.gudy.azureus2.plugins.tracker.web.TrackerWebPageRequest,org.gudy.azureus2.plugins.tracker.web.TrackerWebPageResponse)>
		SHA-256: 3a04175c6cfaf519f7d41bdb65aaccdf88ad225cb2e65996c6a2cc1947b472fc
		Secure: false
	Object:
		Variable: varReplacer63309
		Type: java.lang.String
		Statement: specialinvoke $r39.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r22, varReplacer63309)
		Method: <com.aelitis.azureus.core.pairing.impl.PairingManagerTunnelHandler: boolean a(org.gudy.azureus2.plugins.tracker.web.TrackerWebPageRequest,org.gudy.azureus2.plugins.tracker.web.TrackerWebPageResponse)>
		SHA-256: b4eacdbf8326c88d75f72c4b53e81770f90f2e455e740ad5030a26674c40c8c5
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2848)
		Method: <com.vuze.android.remote.a: boolean d(java.lang.String,int,int)>
		SHA-256: 604560ce21d5dc302994afb3678b49f815d440be281896fae69336e1891a578b
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <com.aelitis.plugins.rcmplugin.RCMPatcher: void applyPatch2()>
		SHA-256: 8ac1955b5dab608eb6327e0b113d53bb1e4ff9bee6005404462970608adcffb6
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r9.<ay.c: byte[] digest()>()
		Method: <ax.m: void a(byte[],byte[],int)>
		SHA-256: 72dda7032f8a33ba5751b4e9bced4e0ddb40775110f3199e075ce9d9eb27660e
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.security.SESTSConnectionImpl: void setupBlockCrypto()>
		SHA-256: 225ae3e5c606260fba37e1e32e5214a6872ea24e441143431a5ad264e10f7510
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.KeyManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl: javax.net.ssl.SSLServerSocketFactory ajI()>
		SHA-256: a4163c5d4037c9d32d640e47c6c4044c165e19dabf2535ff80f5ba5242bdec2b
		Secure: false
	Object:
		Variable: varReplacer47293
		Type: java.lang.String
		Statement: $r6 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer47293, $r5)
		Method: <com.aelitis.azureus.core.security.CryptoECCUtils: java.security.PublicKey P(byte[])>
		SHA-256: 828cc8705f768a9c43372b6ae08cc64b6a663e084615e45968e58e1ce6a4428a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>(varReplacer56000, $r1)
		Method: <org.gudy.azureus2.core3.util.MD4Hasher: void <init>()>
		SHA-256: 621e91d37ea1db176b31e4c7fb24562443a0e167f508fe4b7433d255d3527474
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.util.Random: void nextBytes(byte[])>($r1)
		Method: <lbms.plugins.mldht.kad.Key: lbms.plugins.mldht.kad.Key createRandomKey()>
		SHA-256: 916b2b9776872d3b30956aa3d796cf8f338d5e58db13f7b700268de788d95dfc
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer12089)
		Method: <com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager: void <clinit>()>
		SHA-256: f37753699f2d97371d912d366abaded28b77bcb4825e600cec8cfdd940f80fb4
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer57947)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.security.SESTSConnectionImpl: void setupBlockCrypto()>
		SHA-256: 3df5b7fb741e83cc6e61b69bbe48d9d31635d8c02bd650c14c74bad78e7e2296
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.KeyAgreement
		Statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>(varReplacer42768)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void Be()>
		SHA-256: e1b1e06c2edc278bced87bc68e54a8abcc4d227bfc748a027db499d952d01018
		Secure: false
	Object:
		Variable: $r8
		Type: javax.net.ssl.SSLContext
		Statement: $r8 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer27973)
		Method: <org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl: javax.net.ssl.SSLSocketFactory a(java.lang.String,java.security.cert.Certificate,boolean)>
		SHA-256: a85e98347268688c25c10e59d2a0d2ac384431d726008ff921a0af86fc78a17
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <ax.m: byte[] d(byte[],byte[],byte[])>
		SHA-256: 7011d378b26402a29736745ba8212938e82bb5f8fdccfbbba23d4f4af08fcb84
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r4.<java.security.Signature: byte[] sign()>()
		Method: <com.aelitis.azureus.core.security.impl.CryptoSTSEngineImpl: void d(java.nio.ByteBuffer,boolean)>
		SHA-256: 352a9e5f00b6c373400b59dc6befb42ed3bd6a090e961b888d225abf9a3b037d
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.Signature
		Statement: $r10 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r8)
		Method: <org.gudy.bouncycastle.jce.provider.X509CertificateObject: void verify(java.security.PublicKey)>
		SHA-256: 823d7fd7a864af673ab5ba879667606050f4b770e6a2f1b764f37cec3f96bab1
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.Signature
		Statement: $r10 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r8, $r9)
		Method: <org.gudy.bouncycastle.jce.provider.X509CertificateObject: void verify(java.security.PublicKey)>
		SHA-256: 4807f7cb998de1d435d7ae938048252e43a1ad08a7d59d175be148de9542bdee
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer60300)
		Method: <com.aelitis.azureus.core.security.impl.CryptoSTSEngineImpl: void d(java.nio.ByteBuffer,boolean)>
		SHA-256: 37cddb7c5a0a1e8f2857413b22e5f221ed169bf8e6738aed048259aaf6c766cc
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer38769)
		Method: <bb.u: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>
		SHA-256: d37c0b6fda74907fd0e0b78c1988778040ccef2adff06b5ec224d816d5da506c
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r9.<ay.c: byte[] digest()>()
		Method: <ax.m: void a(byte[],byte[],int)>
		SHA-256: f3b7cf1a175ae31fee77b6a4d39dc5d964678fa45cb66fb10f45c4b5d42a00ed
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer62392)
		Method: <com.aelitis.azureus.core.networkmanager.impl.udp.UDPConnectionSet: org.gudy.bouncycastle.crypto.engines.RC4Engine D(byte[])>
		SHA-256: 688600884325208d5da0177fc80cdd2c71a920f77f9a7d4c3e6be193c8b0f56e
		Secure: false
	Object:
		Variable: varReplacer47964
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer47964)
		Method: <com.aelitis.azureus.plugins.xmwebui.client.rpc.XMRPCClientTunnel: java.lang.Object[] getCurrentTunnel(boolean)>
		SHA-256: 55d138b8d2264d32c7e3813704d5da7ec8319abc00aaccb54a32c47c34126eb4
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer27304)
		Method: <org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl: javax.net.ssl.SSLServerSocketFactory ajI()>
		SHA-256: 40383726279f18ab80fe31c7a5e6c775d0be5c410527f7d2b0f8a0166e62e688
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r2.<java.util.Random: int nextInt(int)>($i0)
		Method: <lbms.plugins.mldht.kad.DHT: lbms.plugins.mldht.kad.RPCServer getRandomServer()>
		SHA-256: 7cb6378980e8cc925075af0b8a85ccff9a27cda315827ce96550d213ae22bea9
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <bl.f: bl.f eU(java.lang.String)>
		SHA-256: 351b53d2f88ce5d8a779b1143b9555475e7bc79dadfef543f5d942533660f909
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.Signature
		Statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer61684)
		Method: <com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager: boolean verifyKeyBlock(com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager$keyBlock,com.aelitis.azureus.core.dht.transport.DHTTransportContact)>
		SHA-256: 416a6e178e36ce68d2a2e22cc145c12cdcff90066ee313f08e82f0c9d91d2ce1
		Secure: false
	Object:
		Variable: $r40
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r40.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r22)
		Method: <com.aelitis.azureus.core.pairing.impl.PairingManagerTunnelHandler: boolean a(org.gudy.azureus2.plugins.tracker.web.TrackerWebPageRequest,org.gudy.azureus2.plugins.tracker.web.TrackerWebPageResponse)>
		SHA-256: 8e69ee0376f8171e1cc94ba085f8aea6dc8fadd488478fdfbd059e9d92c80f0e
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <org.gudy.azureus2.pluginsimpl.local.ui.config.PasswordParameterImpl: byte[] encode(byte[])>
		SHA-256: fcb079141a1773e11179c400a4fb9be2319bb5d822fa984d77dec72c9069486a
		Secure: false
	Object:
		Variable: $r38
		Type: javax.crypto.Cipher
		Statement: $r38 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer63338)
		Method: <com.aelitis.azureus.core.pairing.impl.PairingManagerTunnelHandler: boolean a(org.gudy.azureus2.plugins.tracker.web.TrackerWebPageRequest,org.gudy.azureus2.plugins.tracker.web.TrackerWebPageResponse)>
		SHA-256: 80a559c7c1058d080cdd5dbf60b3c96409b1a5697dc48732d7b1098e795168c1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer11471)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void m(java.lang.String,byte[])>
		SHA-256: ddd7b97f3fd311acdafd2628b89ffaf167cea6562e40bcdc2d7a47dc4d1e88ec
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r2.<java.security.SecureRandom: int nextInt(int)>(varReplacer60301)
		Method: <com.aelitis.azureus.core.security.impl.CryptoSTSEngineImpl: void d(java.nio.ByteBuffer,boolean)>
		SHA-256: 93f336af4597f5bfee9e1488620e9acf7743d7774c089a040bb4271e8fa6a87c
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r5, varReplacer4492, varReplacer4493, varReplacer4494)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: boolean Bc()>
		SHA-256: c9391b8d15123b2d71d280fd1121b607a66494e872062eb7cfd753017dbc9b3e
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.PublicKey
		Statement: $r4 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)
		Method: <com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager: void <clinit>()>
		SHA-256: 425daf67731820e63778f2f02c8075cf288489f895251ab27283fd25fce9b5e6
		Secure: false
	Object:
		Variable: $r5
		Type: java.net.PasswordAuthentication
		Statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r4, $r6)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.resourcedownloader.ResourceDownloaderURLImpl: java.net.PasswordAuthentication getAuthentication(java.lang.String,java.net.URL)>
		SHA-256: b803de36c1bdbd788d2ef1b54608a269bf7b10f8dc823c6ca3f57882a87bfd2d
		Secure: false
	Object:
		Variable: $r30
		Type: java.security.cert.CertificateFactory
		Statement: $r30 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer16627)
		Method: <org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl: javax.net.ssl.SSLSocketFactory a(java.net.URL,boolean,boolean)>
		SHA-256: f9b4b2d1e5348b4aeb914b082c52fc2e0a2dbfb20a5696626ec6cc368d16e4e2
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r8.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <com.aelitis.azureus.core.dht.nat.impl.DHTNATPuncherImpl: java.util.Map i(java.util.Map)>
		SHA-256: 25d9da0f3c8c2b2b59f1e75f06bf002e5986628069cd45ac3860502d7113fc19
		Secure: false
	Object:
		Variable: varReplacer57942
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r2, varReplacer57940, varReplacer57941, varReplacer57942)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.security.SESTSConnectionImpl: void setupBlockCrypto()>
		SHA-256: de64c94e16b05b276b03cbe9d0cdc18a4d3c75e3d45ad4014a9457b85b24b8c0
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r1)
		Method: <com.aelitis.azureus.core.networkmanager.impl.TransportCipher: void <init>(java.lang.String,int,javax.crypto.spec.SecretKeySpec)>
		SHA-256: ffe81bdc116aa650c9fde11c62231070451202dd31903329e39c2cb5e2777d9a
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $z0 = virtualinvoke $r8.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void m(java.lang.String,byte[])>
		SHA-256: 224776d38f0b2f42e19e132fe7107f651a34a569b3d26485e48a962a45da81d3
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r12.<ay.c: byte[] digest()>()
		Method: <aw.d: void <init>(aw.c,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
		SHA-256: a1f3d34bab81539dd83fffe28ad13fb85b659409d3757073e946dd3ea827e57c
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer54230)
		Method: <org.gudy.azureus2.pluginsimpl.local.ddb.DDBaseTTTorrent: byte[] doCrypt(int,byte[],byte[],int)>
		SHA-256: c60f92dfb160950dc30db084c8b5545c15346a47e3499232c1dec19575fc90be
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer27302)
		Method: <org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl: javax.net.ssl.SSLServerSocketFactory ajI()>
		SHA-256: ddc071bcf500b1cb957e26a26f1717685c2cf0e38a424d844572ad3965cdc295
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.Signature
		Statement: $r0 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>(varReplacer9130, $r2)
		Method: <com.aelitis.azureus.core.security.CryptoECCUtils: java.security.Signature a(java.security.Key)>
		SHA-256: 7b65cabad6e9cd7597003a143f3e3edc1fb779419869ed5f868573a32cce19d3
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12997)
		Method: <com.aelitis.azureus.core.pairing.impl.PairManagerTunnel: byte[] b(byte[],int,int)>
		SHA-256: 6aa52a3b99e62fbc80816a1cd02cb85e6d94c2eeb8b95fdb6f44d77af9f6de08
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r2.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void Be()>
		SHA-256: 2c65cad953b346055ba2fdf941f26866f3ba505dbd7d2a4c1414acb1bfebb3e
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl: java.security.KeyStore a(javax.net.ssl.KeyManagerFactory)>
		SHA-256: 8a4aa0e7b3257d7138e90e869341f444581c007a480bea7b10337286f8401159
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer41228)
		Method: <com.aelitis.azureus.plugins.xmwebui.client.rpc.XMRPCClientTunnel: com.aelitis.azureus.plugins.xmwebui.client.rpc.XMRPCClientTunnel$CallResult call(org.json.simple.JSONObject,byte[])>
		SHA-256: 2eabc60fb8b2459807ee1a7a4c1a046c2f50105834f1a0a935ceafe35ec82d99
		Secure: false
	Object:
		Variable: varReplacer12089
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer12089)
		Method: <com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager: void <clinit>()>
		SHA-256: f6cf7613c9a0834a33a7093bafe297ceb64142761f7e3e2b6acd08d757f21a95
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.security.SESTSConnectionImpl: void setupBlockCrypto()>
		SHA-256: ba7ca674814f59d98f9d3129daa3c738c905a023a66713ffdf8d1a557f4778b5
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <lbms.plugins.mldht.kad.BloomFilterBEP33: void insert(java.net.InetAddress)>
		SHA-256: b12fb27536a391590a1cfab7ba1a339871664f468b07a3600e1aa7f9f5a432bc
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer16610)
		Method: <org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl: javax.net.ssl.SSLSocketFactory a(java.net.URL,boolean,boolean)>
		SHA-256: 516bdc2e3e25e33cb89c9fbcb12ab4aa9e162606e1d83a569474b5122b47b0fc
		Secure: false
	Object:
		Variable: $r40
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r40.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r21)
		Method: <com.aelitis.azureus.core.pairing.impl.PairingManagerTunnelHandler: boolean a(org.gudy.azureus2.plugins.tracker.web.TrackerWebPageRequest,org.gudy.azureus2.plugins.tracker.web.TrackerWebPageResponse)>
		SHA-256: 3f601df7ef0197db615d90ed5a63cfd472419efbdc1dc08ee5cb534c946f42c1
		Secure: false
	Object:
		Variable: varReplacer4494
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r5, varReplacer4492, varReplacer4493, varReplacer4494)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: boolean Bc()>
		SHA-256: 9ce9376355f1ff9e7214f427cc6253e1e7f96c219fdd3505e89618306e3c4c16
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer53775)
		Method: <ay.c: void <init>(byte[])>
		SHA-256: 27dd9bee1ad589db7da369e5a8277f6c5cfe781034f42c2e22207bae325a347e
		Secure: false
	Object:
		Variable: $r15
		Type: java.security.SecureRandom
		Statement: specialinvoke $r15.<java.security.SecureRandom: void <init>()>()
		Method: <com.vuze.android.remote.a: boolean d(java.lang.String,int,int)>
		SHA-256: e6ad8ae0274829ceea38eb5be03a7d182ef37b7511736ff762bf596c9720b573
		Secure: true
	Object:
		Variable: $r8
		Type: javax.net.ssl.SSLContext
		Statement: $r8 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9193)
		Method: <org.gudy.azureus2.core3.util.UrlUtils: java.net.Socket a(boolean,java.lang.String,int,byte[],int,int,boolean)>
		SHA-256: 3b62b52217142860979b80339e5d5805eff2462e04ca55986aa11eb4ef11ef6
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r4.<java.security.Signature: byte[] sign()>()
		Method: <com.aelitis.azureus.core.security.impl.CryptoSTSEngineImpl: void d(java.nio.ByteBuffer,boolean)>
		SHA-256: ba0b9a56cf8d75991bfd065021d4c6c7e25ef99900626114f41ec582a2fc3c4e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.aelitis.azureus.plugins.xmwebui.client.rpc.XMRPCClientTunnel: void <clinit>()>
		SHA-256: 9e650d93eedcf70f4f571e544ebe52d71bf36aeb9c7295dd80e84f6a5b72ddc5
		Secure: true
	Object:
		Variable: $r20
		Type: javax.net.ssl.SSLContext
		Statement: $r20 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer62178)
		Method: <org.gudy.azureus2.core3.tracker.client.impl.bt.TRTrackerBTAnnouncerImpl: java.lang.String a(java.net.URL[],java.net.URL,java.net.Proxy,boolean,java.io.ByteArrayOutputStream)>
		SHA-256: 7387b4ac94631ad38623f04001644af0a580b4f292d10911ec92ead47575752c
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r10.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <com.aelitis.azureus.core.security.impl.CryptoSTSEngineImpl: void c(java.nio.ByteBuffer,boolean)>
		SHA-256: 8d6175179b8e894c9934685ef9b5a64703ce28c7367bd6a9d43cff6a3f70b1aa
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $z0 = virtualinvoke $r5.<java.security.Signature: boolean verify(byte[])>($r6)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void a(java.io.File,java.security.interfaces.RSAPublicKey)>
		SHA-256: ac49c3ca8072e6199d272033317ce059a62a2886a23052dbfae6044a34c86cdd
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer54580)
		Method: <com.aelitis.azureus.core.security.impl.CryptoManagerImpl: byte[] b(byte[],char[])>
		SHA-256: fef3a8eae883d9846c7e308d0f8c9ac631d2a951a1ad615f0f3a7564772e22bb
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r11.<java.security.Signature: byte[] sign()>()
		Method: <com.aelitis.azureus.core.messenger.config.PlatformSubscriptionsMessenger: void a(boolean,java.lang.String,byte[],byte[],byte[],int,boolean,java.lang.String)>
		SHA-256: 59690b923ad36601afa59ff608023e010e30912af1dbcb4ca3a3eeab659031e2
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.Signature: byte[] sign()>()
		Method: <com.aelitis.azureus.core.subs.impl.SubscriptionBodyImpl: byte[] a(byte[],byte[],int,int)>
		SHA-256: 202841f445a34e77b19ff56c2cbb254dfd6ac5ee95361c4e6cc2015a84358a03
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyPair
		Statement: $r3 = virtualinvoke $r1.<java.security.KeyPairGenerator: java.security.KeyPair genKeyPair()>()
		Method: <com.aelitis.azureus.core.security.CryptoECCUtils: java.security.KeyPair GS()>
		SHA-256: bba484627ed1b8597efc40b6bf52d3a48cedf120bf0cfefbc448a1b16232dcad
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer42733)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void Bf()>
		SHA-256: 3435346d770e37731b01f6151de63b0b3eb52bd9a5597f16345a99014a80a63a
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r6)
		Method: <com.aelitis.azureus.core.security.impl.CryptoSTSEngineImpl: void d(java.nio.ByteBuffer,boolean)>
		SHA-256: 55de808dee0a1472bcbd8ed5c18b2197c33f655bdf97a6ce1aca2e7f2bec19b
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r2, varReplacer57943, varReplacer57944, varReplacer57945)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.security.SESTSConnectionImpl: void setupBlockCrypto()>
		SHA-256: 73e7ba1ac787f567986713671de276df555bc6fa15bbd58a0d27c03b3b2317a8
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPairGenerator
		Statement: $r1 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer18946, $r0)
		Method: <com.aelitis.azureus.core.security.CryptoECCUtils: java.security.KeyPair GS()>
		SHA-256: cbd56f7c28cb180956ac36c6a385fe5894f32b14b938d115bb804ad40c08830b
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r6.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <com.aelitis.azureus.core.security.impl.CryptoHandlerECC: boolean verify(byte[],byte[],byte[])>
		SHA-256: 4d3ae994eca3eb43a40c960f75e1480ad2c89eb0e1d8a7eb9c3b0aa63983dd9d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl: java.security.KeyStore fe(boolean)>
		SHA-256: 8f34d688f9170359faca1922e78c0ebeb955d050d5e939c11294f97ce033526
		Secure: false
	Object:
		Variable: varReplacer9131
		Type: java.lang.String
		Statement: $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer9131, $r4)
		Method: <com.aelitis.azureus.core.security.CryptoECCUtils: java.security.PrivateKey O(byte[])>
		SHA-256: d42840e09f0ea54107f82cceb7ac6fb887ef2f29f76f1292ea4e5a0e70103a12
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $z0 = virtualinvoke $r10.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <com.aelitis.azureus.core.security.impl.CryptoSTSEngineImpl: void c(java.nio.ByteBuffer,boolean)>
		SHA-256: 3437001a4d03886e16b91f689575588b394b3a7912774371d86ff4f5b6372f7b
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer44182)
		Method: <com.aelitis.azureus.core.security.impl.CryptoManagerImpl: byte[] a(byte[],char[])>
		SHA-256: bf8be59b8cfdca77943ae9eb4bf2115b5a2af870b9a322384183531b91d86805
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r6.<java.util.Random: int nextInt()>()
		Method: <lbms.plugins.mldht.kad.RPCServer: lbms.plugins.mldht.kad.RPCCall doCall(lbms.plugins.mldht.kad.messages.MessageBase)>
		SHA-256: cd08ae76e45f77dcbfe32aaa905af42a8a384b42d882783736a5b3791cb26022
		Secure: true
	Object:
		Variable: varReplacer42734
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer42734)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void Bf()>
		SHA-256: 421670d9654f1078a07603b09e05b2ecfd5507c28a160f047d76f2ca6667c18a
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <org.gudy.azureus2.core3.util.AddressUtils: java.lang.String gJ(java.lang.String)>
		SHA-256: cf4e49e35ca4a1113f086681a44f5dc376e74f3500e99fc26d474fc3c3018d45
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <aw.d: void <clinit>()>
		SHA-256: a4604c7cb17cbc1084e47188cd5ece0f413c76fee85600c8a352c904adf6769e
		Secure: true
	Object:
		Variable: $r15
		Type: javax.net.ssl.SSLContext
		Statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer31782)
		Method: <com.aelitis.plugins.rcmplugin.RCMPatcher: void applyPatch2()>
		SHA-256: 453c47835d04c9bbebb2c567b3ea4a45b05e23860a9d14a4fa22350a0b5cf548
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager: boolean verifyKeyBlock(byte[],byte[])>
		SHA-256: 992a94c08dd34595c064d20916e4f465a7e17dbb2d10e7cd908ef2ccceea6f19
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer56618)
		Method: <ax.m: byte[] d(byte[],byte[],byte[])>
		SHA-256: 803f2ff0256647278959d5c4cbfc3d5645b2545faea5d76e50bc41b28a2ed9e2
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyFactory
		Statement: $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer9131, $r4)
		Method: <com.aelitis.azureus.core.security.CryptoECCUtils: java.security.PrivateKey O(byte[])>
		SHA-256: c22412d24e2e5a4bce71425150049b851a9803855e76bb9c9cf1d629ce8eb8dc
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <bt.a: void <init>(java.lang.String,int,byte[])>
		SHA-256: 665bd7f3f2710687c1badde74dad3bc06d1889ff9c8d2a65b7af8a3c78c8e9d5
		Secure: true
	Object:
		Variable: $r15
		Type: javax.net.ssl.SSLContext
		Statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer39849)
		Method: <org.gudy.azureus2.core3.tracker.client.impl.bt.TrackerStatus: java.net.URL a(java.net.URL,byte[],java.net.Proxy,java.io.ByteArrayOutputStream)>
		SHA-256: 5e6de11be6e118d5a72d887acc4ab65ac045e9fe19af9f33af202e255bfbfd30
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <org.gudy.azureus2.pluginsimpl.local.ui.config.PasswordParameterImpl: byte[] encode(byte[])>
		SHA-256: 4a9e8f09ae5a777d844095b44d65c10559676557dfa6db5c0a38b3fbee4fe804
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.PrivateKey
		Statement: $r6 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r2)
		Method: <com.aelitis.azureus.core.security.CryptoECCUtils: java.security.PrivateKey O(byte[])>
		SHA-256: c78aafa039a915fd96054277eaef8a0c22b0800e774a14e90d7f96825bd5bd57
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r6.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <com.aelitis.azureus.core.security.impl.CryptoHandlerECC: boolean verify(byte[],byte[],byte[])>
		SHA-256: 1542139f0041bf89b299b1c0ea108d9067195ccfde85ebc571cbd5eacca2a76f
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r8.<javax.crypto.KeyAgreement: byte[] generateSecret()>()
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void B(byte[])>
		SHA-256: 2785e3470b660d4056d19a74555687cc47feef723906289727bfcc1cd15f1218
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r10.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <com.aelitis.azureus.core.security.impl.CryptoSTSEngineImpl: void c(java.nio.ByteBuffer,boolean)>
		SHA-256: f22f75fa38893803576e8f8b76bb360c49b4ac5e4acd82c7f419a4aed905937a
		Secure: false
	Object:
		Variable: varReplacer58676
		Type: java.lang.String
		Statement: specialinvoke $r29.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r28, varReplacer58676)
		Method: <com.aelitis.azureus.core.pairing.impl.PairingManagerTunnelHandler$3: java.util.Map process(java.net.InetSocketAddress,java.util.Map)>
		SHA-256: 7dbfacda59b25fab4028dfbf03d32175366c5cd75090da9fe250a1c8911db321
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <com.aelitis.plugins.rcmplugin.RCMPatcher: void applyPatch2()>
		SHA-256: 8ac1955b5dab608eb6327e0b113d53bb1e4ff9bee6005404462970608adcffb6
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r11)
		Method: <org.gudy.bouncycastle.jce.provider.JDKKeyPairGenerator$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: dd52593c6f2f23d79452d0cdf779002fc0f21678b6bd86832acf2b2d9754560e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <bs.cx: void <clinit>()>
		SHA-256: 2021f24bd308fdc5904dd15fafd19b9488b7caa884355abbb5917f37b64c609b
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer44754)
		Method: <org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl: java.security.KeyStore ajQ()>
		SHA-256: 658269ce6d3062f0ce27062cc9788944c334f7ba30392dba893f7141ce3af62c
		Secure: false
	Object:
		Variable: $r39
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r39.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r22, varReplacer63309)
		Method: <com.aelitis.azureus.core.pairing.impl.PairingManagerTunnelHandler: boolean a(org.gudy.azureus2.plugins.tracker.web.TrackerWebPageRequest,org.gudy.azureus2.plugins.tracker.web.TrackerWebPageResponse)>
		SHA-256: 7246120b1f8aae1b3f88933b533cb870ecca81f20bbeffc82aed34d495a9f361
		Secure: false
	Object:
		Variable: $r33
		Type: javax.net.ssl.SSLContext
		Statement: $r33 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer12207)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.resourcedownloader.ResourceDownloaderURLImpl: java.io.InputStream download()>
		SHA-256: 3881ccf4a2103e4f5d4ecfa13d90cd21ec1a87d1acc5451d17f88a734e861e82
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r0)
		Method: <com.vuze.android.remote.rpc.a: org.apache.http.impl.client.DefaultHttpClient hT(int)>
		SHA-256: 93646ebabdd347ab9f6ac3bdc263bfec15683485c40d3e179005fc5b2695887a
		Secure: true
	Object:
		Variable: varReplacer42623
		Type: java.lang.String
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer42623)
		Method: <com.aelitis.azureus.core.dht.nat.impl.DHTNATPuncherImpl: java.util.Map i(java.util.Map)>
		SHA-256: ffbcee1fefcec38c07e6985769c25befcd399d6feab5df13a3e22b88dccdf239
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyPairGenerator
		Statement: $r4 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer4487)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: boolean Bc()>
		SHA-256: ffcc411e4c71f16692609a98c198aca78d4a2077af4fbb435449921d85bb9131
		Secure: true
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $z0 = virtualinvoke $r7.<java.security.Signature: boolean verify(byte[])>($r9)
		Method: <com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager: boolean verifyKeyBlock(com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager$keyBlock,com.aelitis.azureus.core.dht.transport.DHTTransportContact)>
		SHA-256: b853b8d1970d3d567921e13e1af8117186c3323da73f11cfb32af6a427e972d5
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer44186)
		Method: <com.aelitis.azureus.core.security.impl.CryptoManagerImpl: byte[] a(byte[],char[])>
		SHA-256: 46d28fcf0c073b5904ad9fc0d7f64e12d5174fa210abf0aa64cca535cf6fbea0
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void B(byte[])>
		SHA-256: 5d236acdbc58b132678e3f5948d19927be9bba49f0170f92d8a2bca43b99642c
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r10)
		Method: <com.aelitis.azureus.core.security.impl.CryptoSTSEngineImpl: void d(java.nio.ByteBuffer,boolean)>
		SHA-256: 8f6d3d5638d5463c9f248dd3c2ec336c45ed3f706ca39f290d626e3f3690e769
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)
		Method: <com.aelitis.azureus.core.security.impl.CryptoManagerImpl: byte[] b(byte[],char[])>
		SHA-256: 31c7431bbec954d870406f30ec96cc82a74d4894a35b05170a2fc14632204ebe
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.TrustManager[]
		Statement: $r9 = virtualinvoke $r7.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl: javax.net.ssl.SSLSocketFactory a(java.lang.String,java.security.cert.Certificate,boolean)>
		SHA-256: 99ea3a431dd4313061e29dbc35ca050091557096213fa01f10bfc5213798c92
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r7.<java.security.Signature: boolean verify(byte[])>($r9)
		Method: <com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager: boolean verifyKeyBlock(com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager$keyBlock,com.aelitis.azureus.core.dht.transport.DHTTransportContact)>
		SHA-256: d799a967dfb2e98cc71c1334b010a5d7a1268b39c0f323e6a660a17cdbd22fe3
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r2)
		Method: <com.aelitis.azureus.core.subs.impl.SubscriptionBodyImpl: boolean a(byte[],byte[],int,int,byte[])>
		SHA-256: 1c34e750703f85bfe9dec983edb6a11b59b015bb2dfb1683ad3d0163756ff01e
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <bt.a: byte[] sign()>
		SHA-256: ea4df62cc487a0f7722458a3167cd4cdd366901d78e9aa28cd4cda78907fcd4f
		Secure: true
	Object:
		Variable: $r5
		Type: java.net.PasswordAuthentication
		Statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r1, $r6)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.resourceuploader.ResourceUploaderURLImpl: java.net.PasswordAuthentication getAuthentication(java.lang.String,java.net.URL)>
		SHA-256: 5868598051f0bc598dedf43d0b776e81514d56bd10e6866da9fd42354decc35f
		Secure: false
	Object:
		Variable: $r14
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r15)
		Method: <com.aelitis.azureus.plugins.xmwebui.client.rpc.XMRPCClientTunnel: com.aelitis.azureus.plugins.xmwebui.client.rpc.XMRPCClientTunnel$CallResult call(org.json.simple.JSONObject,byte[])>
		SHA-256: c4caa673a0d63304c6993e5363d3a36b6f7c1c7226a9c66f2391248f649e5e97
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <bb.u: javax.net.ssl.X509TrustManager ZF()>
		SHA-256: 6d559cace4aafa52e5a662abf8db93dc6f653800d1696c6116026c1b46789887
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer47964)
		Method: <com.aelitis.azureus.plugins.xmwebui.client.rpc.XMRPCClientTunnel: java.lang.Object[] getCurrentTunnel(boolean)>
		SHA-256: 26e0157e424fb7bd03433e274b290d0560dd2188a2b30528f68acc5e96e280d2
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.Signature
		Statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer42622)
		Method: <com.aelitis.azureus.core.dht.nat.impl.DHTNATPuncherImpl: java.util.Map i(java.util.Map)>
		SHA-256: 55d69e937ae65d68d358c40f4e39ebd32f1de5787b0e0696638bd836da41e1ef
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.Signature
		Statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer11475)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void m(java.lang.String,byte[])>
		SHA-256: acd7f81095b604309d6206f1baf47117d1812862159b4d82677c57a167073044
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r2, $r3, varReplacer4486)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: boolean Bc()>
		SHA-256: 56c72a22a11c07867a6cf4861d1f775012fd06f8ee42f1e02b4fd9b9c009ebaf
		Secure: true
	Object:
		Variable: $r5
		Type: java.net.PasswordAuthentication
		Statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r1, $r6)
		Method: <org.gudy.azureus2.pluginsimpl.local.utils.resourcedownloader.ResourceDownloaderURLImpl: java.net.PasswordAuthentication getAuthentication(java.lang.String,java.net.URL)>
		SHA-256: c95260eca08e0c69799348174895a26b48376c7cc8f7b0854f3e9957b2c4c941
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.SecureRandom
		Statement: specialinvoke $r13.<java.security.SecureRandom: void <init>()>()
		Method: <com.vuze.android.remote.rpc.f: bb.u du(boolean)>
		SHA-256: 5dbe014ab49002a5bb4bccb4763426c2042d687313de4184ee523abfbfffab10
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.KeyFactory
		Statement: $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer42729)
		Method: <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void B(byte[])>
		SHA-256: fcc17bad3742a55ded7087f6a859e877691c045d637603666783550f446837c5
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)
		Method: <org.gudy.azureus2.core3.util.AEVerifier: void B(java.io.File)>
		SHA-256: 9458d4c484a9501ae3b645a216b7271ded7100fb0803ed58447437a8fd6a88a9
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<ay.c: byte[] digest()>()
		Method: <ax.m: byte[] a(byte[],byte[],byte[],int,int)>
		SHA-256: 7f4b54bab3294fa30974aac01eb412f85b6048414a82d4c5b04d109de12f49e1
		Secure: false
	Object:
		Variable: $r14
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r14 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r3)
		Method: <com.aelitis.plugins.rcmplugin.RCMPatcher: void applyPatch2()>
		SHA-256: a5bc663fa814f6f79e68618d02bfd9401c44b58e216d246065f9749a985ad04
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r10.<java.security.Signature: boolean verify(byte[])>($r11)
		Method: <org.gudy.bouncycastle.jce.provider.X509CertificateObject: void verify(java.security.PublicKey)>
		SHA-256: b299550435cb5e2a13bc949ab0dbeddc0b2d33ee23a1964d9c3ca7ce77f86e60
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.gudy.azureus2.core3.util.RandomUtils: void <clinit>()>
		SHA-256: 62fdc745716b6078176e7e5df17517cdf6cf64e94e181e1b910b2a37ef9aeccc
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyFactory
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer42623)
		Method: <com.aelitis.azureus.core.dht.nat.impl.DHTNATPuncherImpl: java.util.Map i(java.util.Map)>
		SHA-256: c5701e632aac38052c4ee85bac8e02ea704bbb998e9c26df100ca87b1a0cc60d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <bl.f: bl.f eU(java.lang.String)>
		SHA-256: 159ccd9863d3ab6975ec92dceefb1437bbe5be258e570f4f98da34662b737c82
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <bt.a: void init(byte[])>
		SHA-256: 80bc69fe97feea5b370d1009a49b0c68341228653d8aa29c6fd887e1ad71fad6
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <bb.u: javax.net.ssl.X509TrustManager ZF()>
		SHA-256: ff4886bb554e45f7aca46e2289e883077ccab2b7dfc6c5a9084e3b514294792
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.PublicKey
		Statement: $r9 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r5)
		Method: <com.aelitis.azureus.core.dht.nat.impl.DHTNATPuncherImpl: java.util.Map i(java.util.Map)>
		SHA-256: 144c5937c49196afc1c27a28aae21bd6374d49f87aa4130b8388914a52bc52e1
		Secure: false

Findings in Java Class: com.aelitis.azureus.core.security.impl.CryptoManagerImpl

	 in Method: byte[] a(byte[],char[])
		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #46d28fcf0c073b5904ad9fc0d7f64e12d5174fa210abf0aa64cca535cf6fbea0)
			First parameter (with value "PBEWithMD5AndDES") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer44186)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #bf8be59b8cfdca77943ae9eb4bf2115b5a2af870b9a322384183531b91d86805)
			First parameter (with value "PBEWithMD5AndDES") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer44182)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #46d28fcf0c073b5904ad9fc0d7f64e12d5174fa210abf0aa64cca535cf6fbea0)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #1112ffa74b239727ebfbffa227b6bbef28176681ff94f56b015c833ba8d45aa4)
			Second parameter (with value 100)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r8.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r3, varReplacer44185)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r3, varReplacer44185)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer44187, $r7, $r8)


	 in Method: byte[] b(byte[],char[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r3, varReplacer54581)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f6fa82ba7fd2d8f7be05f70f49b489b4dc4199a1a77edf8322c4eb4e03aa4084)
			First parameter (with value "PBEWithMD5AndDES") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer54582)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f6fa82ba7fd2d8f7be05f70f49b489b4dc4199a1a77edf8322c4eb4e03aa4084)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r1, varReplacer54583, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer54585, $r6, $r7)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #fef3a8eae883d9846c7e308d0f8c9ac631d2a951a1ad615f0f3a7564772e22bb)
			First parameter (with value "PBEWithMD5AndDES") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer54580)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #200a4f6dac54dac1e3a16d64a16d882469bfd728899170c15f57429cf333a327)
			Second parameter (with value 100)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r7.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r3, varReplacer54581)

		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r2)


Findings in Java Class: org.gudy.azureus2.core3.torrentdownloader.impl.TorrentDownloaderImpl

	 in Method: void runSupport()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #190baa2a8dd8cc185df292c479d711e60897c80b81437e5d7e24a914b0ce55b4)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1617)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r15.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1606, $r14, $r16)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r15.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1606, $r14, $r16)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r15.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1606, $r14, $r16)


Findings in Java Class: com.vuze.android.remote.a

	 in Method: boolean d(java.lang.String,int,int)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #604560ce21d5dc302994afb3678b49f815d440be281896fae69336e1891a578b)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2848)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, $r17, $r9)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, $r17, $r9)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #604560ce21d5dc302994afb3678b49f815d440be281896fae69336e1891a578b)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2848)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, $r17, $r9)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #604560ce21d5dc302994afb3678b49f815d440be281896fae69336e1891a578b)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: $r10 = virtualinvoke $r6.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>()


Findings in Java Class: com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE

	 in Method: boolean Bc()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r5, varReplacer4492, varReplacer4493, varReplacer4494)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #c9391b8d15123b2d71d280fd1121b607a66494e872062eb7cfd753017dbc9b3e)
			Fourth parameter (with value "RC4") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r5, varReplacer4492, varReplacer4493, varReplacer4494)


	 in Method: void Bf()
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #fa9d3ed8f0dd80f6bf2dd9103bf1bfaebfa4d5dae16c4fd2d35b0d482e9cbca6)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer42734)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer42733)


	 in Method: void B(byte[])
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.KeyAgreement
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r8.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>($r7, varReplacer42730)

		TypestateError violating CrySL rule for javax.crypto.KeyAgreement (on Object #e1b1e06c2edc278bced87bc68e54a8abcc4d227bfc748a027db499d952d01018)
			Unexpected call to method doPhase on object of type javax.crypto.KeyAgreement.
			at statement: virtualinvoke $r8.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>($r7, varReplacer42730)


	 in Method: void read(java.nio.ByteBuffer)
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #e1b1e06c2edc278bced87bc68e54a8abcc4d227bfc748a027db499d952d01018)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: $r5 = virtualinvoke r0.<com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: java.lang.String getString()>()


	 in Method: void process()
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #e1b1e06c2edc278bced87bc68e54a8abcc4d227bfc748a027db499d952d01018)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: virtualinvoke r0.<com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void failed(java.lang.Throwable)>($r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #e1b1e06c2edc278bced87bc68e54a8abcc4d227bfc748a027db499d952d01018)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: virtualinvoke r0.<com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void Bf()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #e1b1e06c2edc278bced87bc68e54a8abcc4d227bfc748a027db499d952d01018)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: virtualinvoke r0.<com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void read(java.nio.ByteBuffer)>($r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #e1b1e06c2edc278bced87bc68e54a8abcc4d227bfc748a027db499d952d01018)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: virtualinvoke r0.<com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderPHE: void read(java.nio.ByteBuffer)>($r2)


	 in Method: void Be()
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyAgreement
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r3.<javax.crypto.KeyAgreement: void init(java.security.Key)>($r4)


Findings in Java Class: com.vuze.android.remote.rpc.f

	 in Method: bb.u du(boolean)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8233, $r17, $r0)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8233, $r17, $r0)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #7af684dbe7fabc5e85abacf18102ba2f500d7fb50d1abb5f3300f0d3c4363931)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8232)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8233, $r17, $r0)


Findings in Java Class: com.aelitis.azureus.core.security.CryptoECCUtils

	 in Method: java.security.Signature a(java.security.Key)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r0.<java.security.Signature: void initSign(java.security.PrivateKey)>($r3)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #7b65cabad6e9cd7597003a143f3e3edc1fb779419869ed5f868573a32cce19d3)
			First parameter (with value "SHA1withECDSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r0 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>(varReplacer9130, $r2)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r0.<java.security.Signature: void initVerify(java.security.PublicKey)>($r4)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #7b65cabad6e9cd7597003a143f3e3edc1fb779419869ed5f868573a32cce19d3)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r0 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>(varReplacer9130, $r2)


	 in Method: java.security.PrivateKey O(byte[])
		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #c22412d24e2e5a4bce71425150049b851a9803855e76bb9c9cf1d629ce8eb8dc)
			First parameter (with value "ECDSA") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer9131, $r4)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r6 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r2)


	 in Method: java.security.KeyPair GS()
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #cbd56f7c28cb180956ac36c6a385fe5894f32b14b938d115bb804ad40c08830b)
			First parameter (with value "ECDSA") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r1 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer18946, $r0)


	 in Method: java.security.PublicKey P(byte[])
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r6.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #720380b6a02081549eda703a4c8f2d94c23980d5f0011c283c2b06ade824164c)
			First parameter (with value "ECDSA") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r6 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer47293, $r5)


Findings in Java Class: com.aelitis.azureus.core.security.impl.CryptoSTSEngineImpl

	 in Method: void c(java.nio.ByteBuffer,boolean)
		TypestateError violating CrySL rule for java.security.Signature (on Object #7b65cabad6e9cd7597003a143f3e3edc1fb779419869ed5f868573a32cce19d3)
			Unexpected call to method verify on object of type java.security.Signature. Expect a call to one of the following methods sign,update
			at statement: $z0 = virtualinvoke $r10.<java.security.Signature: boolean verify(byte[])>($r5)

		TypestateError violating CrySL rule for java.security.Signature (on Object #7b65cabad6e9cd7597003a143f3e3edc1fb779419869ed5f868573a32cce19d3)
			Unexpected call to method verify on object of type java.security.Signature. Expect a call to one of the following methods sign,update
			at statement: $z0 = virtualinvoke $r10.<java.security.Signature: boolean verify(byte[])>($r8)


	 in Method: void d(java.nio.ByteBuffer,boolean)
		TypestateError violating CrySL rule for java.security.Signature (on Object #7b65cabad6e9cd7597003a143f3e3edc1fb779419869ed5f868573a32cce19d3)
			Unexpected call to method sign on object of type java.security.Signature. Expect a call to one of the following methods update,verify
			at statement: $r8 = virtualinvoke $r4.<java.security.Signature: byte[] sign()>()

		TypestateError violating CrySL rule for java.security.Signature (on Object #7b65cabad6e9cd7597003a143f3e3edc1fb779419869ed5f868573a32cce19d3)
			Unexpected call to method sign on object of type java.security.Signature. Expect a call to one of the following methods update,verify
			at statement: $r9 = virtualinvoke $r4.<java.security.Signature: byte[] sign()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #7b65cabad6e9cd7597003a143f3e3edc1fb779419869ed5f868573a32cce19d3)
			Operation on object of type java.security.Signature object not completed. Expected call to update, verify
			at statement: $r4 = staticinvoke <com.aelitis.azureus.core.security.CryptoECCUtils: java.security.Signature a(java.security.Key)>($r3)


Findings in Java Class: com.aelitis.azureus.core.security.impl.CryptoHandlerECC

	 in Method: byte[] b(byte[],java.lang.String)
		TypestateError violating CrySL rule for java.security.Signature (on Object #7b65cabad6e9cd7597003a143f3e3edc1fb779419869ed5f868573a32cce19d3)
			Unexpected call to method sign on object of type java.security.Signature. Expect a call to one of the following methods update,verify
			at statement: $r1 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()


	 in Method: boolean verify(byte[],byte[],byte[])
		TypestateError violating CrySL rule for java.security.Signature (on Object #7b65cabad6e9cd7597003a143f3e3edc1fb779419869ed5f868573a32cce19d3)
			Unexpected call to method verify on object of type java.security.Signature. Expect a call to one of the following methods sign,update
			at statement: $z0 = virtualinvoke $r6.<java.security.Signature: boolean verify(byte[])>($r3)


Findings in Java Class: com.aelitis.azureus.core.subs.impl.SubscriptionBodyImpl

	 in Method: byte[] a(byte[],byte[],int,int)
		TypestateError violating CrySL rule for java.security.Signature (on Object #7b65cabad6e9cd7597003a143f3e3edc1fb779419869ed5f868573a32cce19d3)
			Unexpected call to method sign on object of type java.security.Signature. Expect a call to one of the following methods update,verify
			at statement: $r0 = virtualinvoke $r3.<java.security.Signature: byte[] sign()>()


	 in Method: boolean a(byte[],byte[],int,int,byte[])
		TypestateError violating CrySL rule for java.security.Signature (on Object #7b65cabad6e9cd7597003a143f3e3edc1fb779419869ed5f868573a32cce19d3)
			Unexpected call to method verify on object of type java.security.Signature. Expect a call to one of the following methods sign,update
			at statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r2)


Findings in Java Class: com.aelitis.azureus.core.messenger.config.PlatformSubscriptionsMessenger

	 in Method: void a(boolean,java.lang.String,byte[],byte[],byte[],int,boolean,java.lang.String)
		TypestateError violating CrySL rule for java.security.Signature (on Object #7b65cabad6e9cd7597003a143f3e3edc1fb779419869ed5f868573a32cce19d3)
			Unexpected call to method sign on object of type java.security.Signature. Expect a call to one of the following methods update,verify
			at statement: $r1 = virtualinvoke $r11.<java.security.Signature: byte[] sign()>()


Findings in Java Class: org.gudy.azureus2.core3.util.UrlUtils

	 in Method: java.net.Socket a(boolean,java.lang.String,int,byte[],int,int,boolean)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9194, $r7, $r9)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9194, $r7, $r9)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer9194, $r7, $r9)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #3b62b52217142860979b80339e5d5805eff2462e04ca55986aa11eb4ef11ef6)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r8 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9193)


Findings in Java Class: org.gudy.azureus2.core3.util.AEVerifier

	 in Method: void m(java.lang.String,byte[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #acd7f81095b604309d6206f1baf47117d1812862159b4d82677c57a167073044)
			First parameter (with value "MD5withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer11475)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r8.<java.security.Signature: void initVerify(java.security.PublicKey)>($r7)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r6 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r3)


	 in Method: void a(java.io.File,java.security.interfaces.RSAPublicKey)
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #c4103e4161ef49f43eef716b39a18778499ade2d3a936720e2db422dd2701bb7)
			Operation on object of type java.security.Signature object not completed. Expected call to update, verify
			at statement: virtualinvoke $r5.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #c4103e4161ef49f43eef716b39a18778499ade2d3a936720e2db422dd2701bb7)
			First parameter (with value "MD5withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer22380)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #c4103e4161ef49f43eef716b39a18778499ade2d3a936720e2db422dd2701bb7)
			Operation on object of type java.security.Signature object not completed. Expected call to java.security.Signature: void update(byte), java.security.Signature: void update(byte[],int,int), java.security.Signature: void update(byte[]), java.security.Signature: void update(java.nio.ByteBuffer), verify
			at statement: virtualinvoke $r5.<java.security.Signature: void update(byte[],int,int)>($r12, varReplacer22377, $i0)


	 in Method: void B(java.io.File)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)


Findings in Java Class: org.gudy.azureus2.pluginsimpl.local.utils.resourcedownloader.ResourceDownloaderURLImpl

	 in Method: java.io.InputStream download()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r33.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12221, $r31, $r34)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #3881ccf4a2103e4f5d4ecfa13d90cd21ec1a87d1acc5451d17f88a734e861e82)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r33 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer12207)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r33.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12221, $r31, $r34)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r33.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12221, $r31, $r34)


	 in Method: java.net.PasswordAuthentication getAuthentication(java.lang.String,java.net.URL)
		NeverTypeOfError violating CrySL rule for java.net.PasswordAuthentication (on Object #b803de36c1bdbd788d2ef1b54608a269bf7b10f8dc823c6ca3f57882a87bfd2d)
			Second parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r4, $r6)

		HardCodedError violating CrySL rule for java.net.PasswordAuthentication (on Object #b803de36c1bdbd788d2ef1b54608a269bf7b10f8dc823c6ca3f57882a87bfd2d)
			Second parameter should never be hardcoded.
			at statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r4, $r6)

		NeverTypeOfError violating CrySL rule for java.net.PasswordAuthentication (on Object #c95260eca08e0c69799348174895a26b48376c7cc8f7b0854f3e9957b2c4c941)
			Second parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r1, $r6)

		HardCodedError violating CrySL rule for java.net.PasswordAuthentication (on Object #c95260eca08e0c69799348174895a26b48376c7cc8f7b0854f3e9957b2c4c941)
			Second parameter should never be hardcoded.
			at statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r1, $r6)


Findings in Java Class: com.aelitis.azureus.core.pairing.impl.PairManagerTunnel

	 in Method: byte[] b(byte[],int,int)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #6aa52a3b99e62fbc80816a1cd02cb85e6d94c2eeb8b95fdb6f44d77af9f6de08)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #fae884d0445a9fad5f020b90c3d49072c851c71ad2e438a7d88225fb07b172b)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r1, $i0, $i1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer12995, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer12998, $r4, $r5)


Findings in Java Class: org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl

	 in Method: javax.net.ssl.SSLSocketFactory a(java.net.URL,boolean,boolean)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #8f34d688f9170359faca1922e78c0ebeb955d050d5e939c11294f97ce033526)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getInstance
			at statement: $r32 = virtualinvoke $r28.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>($r27)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16626, $r5, $r7)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #516bdc2e3e25e33cb89c9fbcb12ab4aa9e162606e1d83a569474b5122b47b0fc)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer16610)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #f9b4b2d1e5348b4aeb914b082c52fc2e0a2dbfb20a5696626ec6cc368d16e4e2)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r32 = virtualinvoke $r30.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r31)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16626, $r5, $r7)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #8f34d688f9170359faca1922e78c0ebeb955d050d5e939c11294f97ce033526)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getInstance
			at statement: $r28 = virtualinvoke r0.<org.gudy.azureus2.core3.security.impl.SESecurityManagerImpl: java.security.KeyStore getTrustStore()>()

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16626, $r5, $r7)


	 in Method: boolean go(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #475fc97334c59f323cf1799b9a8123c71c51856c9eee2d34963486ab75e1c00b)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #475fc97334c59f323cf1799b9a8123c71c51856c9eee2d34963486ab75e1c00b)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r4.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r6, $r7)


	 in Method: javax.net.ssl.SSLServerSocketFactory ajI()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, varReplacer27303, $r1)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, varReplacer27303, $r1)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, varReplacer27303, $r1)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #40383726279f18ab80fe31c7a5e6c775d0be5c410527f7d2b0f8a0166e62e688)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer27304)


	 in Method: java.security.KeyStore a(javax.net.ssl.KeyManagerFactory)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #8a4aa0e7b3257d7138e90e869341f444581c007a480bea7b10337286f8401159)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r6, $r5)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #8a4aa0e7b3257d7138e90e869341f444581c007a480bea7b10337286f8401159)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r6, $r5)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #ddc071bcf500b1cb957e26a26f1717685c2cf0e38a424d844572ad3965cdc295)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r1.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r3, $r5)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #ddc071bcf500b1cb957e26a26f1717685c2cf0e38a424d844572ad3965cdc295)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r1.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r3, $r5)


	 in Method: javax.net.ssl.SSLSocketFactory a(java.lang.String,java.security.cert.Certificate,boolean)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer27971, $r9, varReplacer27971)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #a85e98347268688c25c10e59d2a0d2ac384431d726008ff921a0af86fc78a17)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r8 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer27973)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #8f34d688f9170359faca1922e78c0ebeb955d050d5e939c11294f97ce033526)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getInstance
			at statement: virtualinvoke $r7.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r7.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer27971, $r9, varReplacer27971)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer27971, $r9, varReplacer27971)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #8f34d688f9170359faca1922e78c0ebeb955d050d5e939c11294f97ce033526)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r4.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r5, $r6)


	 in Method: java.security.KeyStore fe(boolean)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #8f34d688f9170359faca1922e78c0ebeb955d050d5e939c11294f97ce033526)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r4, $r5)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #8f34d688f9170359faca1922e78c0ebeb955d050d5e939c11294f97ce033526)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r4, $r5)


	 in Method: void ajN()
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #8f34d688f9170359faca1922e78c0ebeb955d050d5e939c11294f97ce033526)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getInstance
			at statement: $i2 = virtualinvoke $r3.<java.security.KeyStore: int size()>()


	 in Method: javax.net.ssl.TrustManagerFactory ajJ()
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #8f34d688f9170359faca1922e78c0ebeb955d050d5e939c11294f97ce033526)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getInstance
			at statement: virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r2)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r2)


Findings in Java Class: com.vuze.android.remote.rpc.a

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer18376, $r5, varReplacer18376)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #aaa11511b522d9376932c03221e1d2c621159f0db62f2df045646a43cb72dd5b)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer18375)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer18376, $r5, varReplacer18376)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer18376, $r5, varReplacer18376)


Findings in Java Class: com.aelitis.plugins.rcmplugin.RCMPatcher

	 in Method: void applyPatch2()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #453c47835d04c9bbebb2c567b3ea4a45b05e23860a9d14a4fa22350a0b5cf548)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer31782)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #8ac1955b5dab608eb6327e0b113d53bb1e4ff9bee6005404462970608adcffb6)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r4.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r12, $r13)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #8ac1955b5dab608eb6327e0b113d53bb1e4ff9bee6005404462970608adcffb6)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r4.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r12, $r13)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #8ac1955b5dab608eb6327e0b113d53bb1e4ff9bee6005404462970608adcffb6)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r4.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r12, $r13)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #8ac1955b5dab608eb6327e0b113d53bb1e4ff9bee6005404462970608adcffb6)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r4.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r12, $r13)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #8ac1955b5dab608eb6327e0b113d53bb1e4ff9bee6005404462970608adcffb6)
			Operation on object of type java.security.KeyStore object not completed. Expected call to java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter), java.security.KeyStore: void load(java.io.InputStream,char[])
			at statement: virtualinvoke $r4.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r12, $r13)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r15.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer31789, $r16, varReplacer31789)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #8ac1955b5dab608eb6327e0b113d53bb1e4ff9bee6005404462970608adcffb6)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #8ac1955b5dab608eb6327e0b113d53bb1e4ff9bee6005404462970608adcffb6)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: virtualinvoke $r14.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r15.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer31789, $r16, varReplacer31789)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r15.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer31789, $r16, varReplacer31789)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r14.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r4)


Findings in Java Class: com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager

	 in Method: boolean verifyKeyBlock(byte[],byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r2)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #879963159e103e50aae57857d8580ca86ad84a2c32c3a950c547242da3cdd57f)
			First parameter (with value "MD5withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer33641)


	 in Method: boolean verifyKeyBlock(com.aelitis.azureus.plugins.dht.impl.DHTPluginStorageManager$keyBlock,com.aelitis.azureus.core.dht.transport.DHTTransportContact)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r7.<java.security.Signature: void initVerify(java.security.PublicKey)>($r8)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #416a6e178e36ce68d2a2e22cc145c12cdcff90066ee313f08e82f0c9d91d2ce1)
			First parameter (with value "MD5withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer61684)


	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r4 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)


Findings in Java Class: com.aelitis.azureus.core.dht.control.impl.DHTControlImpl

	 in Method: void <init>(com.aelitis.azureus.core.dht.control.DHTControlAdapter,com.aelitis.azureus.core.dht.transport.DHTTransport,int,int,int,int,int,int,int,int,boolean,boolean,com.aelitis.azureus.core.dht.DHTLogger)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #78fa6d868c9970b857fa68b5ebf1333d092f7d3642ea75fc37015092f36f2c00)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r20 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer33674)


Findings in Java Class: bs.co

	 in Method: bs.cp a(bs.au,byte[],int,bs.cp)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #665bd7f3f2710687c1badde74dad3bc06d1889ff9c8d2a65b7af8a3c78c8e9d5)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: $r2 = virtualinvoke $r6.<bt.a: byte[] sign()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #665bd7f3f2710687c1badde74dad3bc06d1889ff9c8d2a65b7af8a3c78c8e9d5)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: virtualinvoke $r6.<bt.a: void update(byte[])>($r2)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #665bd7f3f2710687c1badde74dad3bc06d1889ff9c8d2a65b7af8a3c78c8e9d5)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: virtualinvoke $r6.<bt.a: void update(byte[])>($r2)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #665bd7f3f2710687c1badde74dad3bc06d1889ff9c8d2a65b7af8a3c78c8e9d5)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: virtualinvoke $r6.<bt.a: void update(byte[])>($r8)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #665bd7f3f2710687c1badde74dad3bc06d1889ff9c8d2a65b7af8a3c78c8e9d5)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: specialinvoke $r6.<bt.a: void <init>(java.lang.String,int,byte[])>($r7, $i1, $r8)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #665bd7f3f2710687c1badde74dad3bc06d1889ff9c8d2a65b7af8a3c78c8e9d5)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: $r6 = null


	 in Method: byte b(bs.au,byte[],int,bs.cp)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #665bd7f3f2710687c1badde74dad3bc06d1889ff9c8d2a65b7af8a3c78c8e9d5)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: specialinvoke $r5.<bt.a: void <init>(java.lang.String,int,byte[])>($r6, $i0, $r7)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #665bd7f3f2710687c1badde74dad3bc06d1889ff9c8d2a65b7af8a3c78c8e9d5)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: $i5 = virtualinvoke $r5.<bt.a: int auN()>()


Findings in Java Class: bs.ci

	 in Method: bs.au e(bs.au)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #665bd7f3f2710687c1badde74dad3bc06d1889ff9c8d2a65b7af8a3c78c8e9d5)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, getInstance
			at statement: $r7 = virtualinvoke $r6.<bs.df: java.util.List auK()>()


Findings in Java Class: bb.u

	 in Method: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer38767, $r7, varReplacer38767)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #d37c0b6fda74907fd0e0b78c1988778040ccef2adff06b5ec224d816d5da506c)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer38769)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer38767, $r7, varReplacer38767)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer38767, $r7, varReplacer38767)


	 in Method: javax.net.ssl.X509TrustManager ZF()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer38765)


Findings in Java Class: org.gudy.azureus2.core3.tracker.client.impl.bt.TrackerStatus

	 in Method: java.net.URL a(java.net.URL,byte[],java.net.Proxy,java.io.ByteArrayOutputStream)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r15.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer39852, $r14, $r4)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #5e6de11be6e118d5a72d887acc4ab65ac045e9fe19af9f33af202e255bfbfd30)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer39849)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r15.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer39852, $r14, $r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r15.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer39852, $r14, $r4)


Findings in Java Class: com.aelitis.azureus.plugins.xmwebui.client.rpc.XMRPCClientTunnel

	 in Method: com.aelitis.azureus.plugins.xmwebui.client.rpc.XMRPCClientTunnel$CallResult call(org.json.simple.JSONObject,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r15)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer41221, $r7, $r14)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer41226, $r7)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #2eabc60fb8b2459807ee1a7a4c1a046c2f50105834f1a0a935ceafe35ec82d99)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r15 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r3, varReplacer41217, $i1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #c9017889b254f75e86a6a81992c4acd0b12a4cf1aa3ab4626f7d7abf927d97a5)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r10 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] update(byte[])>($r10)


	 in Method: java.lang.Object[] getCurrentTunnel(boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r26.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer47962, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer47964)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #6d0cfdce8f06f4199748c971c0a0900c9e5e88e1f297a48bbe81e217b1679112)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r10 = virtualinvoke $r26.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r10)


Findings in Java Class: com.aelitis.azureus.core.dht.nat.impl.DHTNATPuncherImpl

	 in Method: java.util.Map i(java.util.Map)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r8.<java.security.Signature: void initVerify(java.security.PublicKey)>($r9)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r9 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r5)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #55d69e937ae65d68d358c40f4e39ebd32f1de5787b0e0696638bd836da41e1ef)
			First parameter (with value "MD5withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer42622)


Findings in Java Class: com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderInitial$1

	 in Method: boolean a(com.aelitis.azureus.core.networkmanager.impl.TransportHelper,java.lang.Object)
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #e1b1e06c2edc278bced87bc68e54a8abcc4d227bfc748a027db499d952d01018)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: virtualinvoke $r3.<com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderInitial: void d(java.nio.ByteBuffer)>($r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #e1b1e06c2edc278bced87bc68e54a8abcc4d227bfc748a027db499d952d01018)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: virtualinvoke $r3.<com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderInitial: void c(java.nio.ByteBuffer)>($r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #e1b1e06c2edc278bced87bc68e54a8abcc4d227bfc748a027db499d952d01018)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: $r4 = staticinvoke <com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderInitial: java.nio.ByteBuffer a(com.aelitis.azureus.core.networkmanager.impl.ProtocolDecoderInitial)>($r3)


Findings in Java Class: com.aelitis.azureus.core.networkmanager.impl.tcp.TCPTransportImpl

	 in Method: void a(java.net.InetSocketAddress,java.nio.channels.SocketChannel,java.nio.ByteBuffer,int,com.aelitis.azureus.core.networkmanager.Transport$ConnectListener)
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #e1b1e06c2edc278bced87bc68e54a8abcc4d227bfc748a027db499d952d01018)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: virtualinvoke $r6.<com.aelitis.azureus.core.networkmanager.impl.TransportCryptoManager: void a(com.aelitis.azureus.core.networkmanager.impl.TransportHelper,byte[][],boolean,java.nio.ByteBuffer,com.aelitis.azureus.core.networkmanager.impl.TransportCryptoManager$HandshakeListener)>($r5, $r7, varReplacer47991, $r3, $r8)


Findings in Java Class: com.aelitis.azureus.core.networkmanager.impl.udp.UDPConnectionManager

	 in Method: void a(com.aelitis.azureus.core.networkmanager.impl.udp.UDPTransport,java.net.InetSocketAddress,byte[][],java.nio.ByteBuffer,com.aelitis.azureus.core.networkmanager.Transport$ConnectListener)
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #e1b1e06c2edc278bced87bc68e54a8abcc4d227bfc748a027db499d952d01018)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: virtualinvoke $r10.<com.aelitis.azureus.core.networkmanager.impl.TransportCryptoManager: void a(com.aelitis.azureus.core.networkmanager.impl.TransportHelper,byte[][],boolean,java.nio.ByteBuffer,com.aelitis.azureus.core.networkmanager.impl.TransportCryptoManager$HandshakeListener)>($r8, $r3, varReplacer47675, $r4, $r11)


	 in Method: void a(int,java.net.InetSocketAddress,com.aelitis.azureus.core.networkmanager.impl.udp.UDPConnection)
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #e1b1e06c2edc278bced87bc68e54a8abcc4d227bfc748a027db499d952d01018)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: virtualinvoke $r4.<com.aelitis.azureus.core.networkmanager.impl.TransportCryptoManager: void a(com.aelitis.azureus.core.networkmanager.impl.TransportHelper,byte[][],boolean,java.nio.ByteBuffer,com.aelitis.azureus.core.networkmanager.impl.TransportCryptoManager$HandshakeListener)>($r3, varReplacer56026, varReplacer56027, varReplacer56026, $r5)


Findings in Java Class: com.aelitis.azureus.core.networkmanager.impl.utp.UTPConnectionManager

	 in Method: void a(java.net.InetSocketAddress,long,long)
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #e1b1e06c2edc278bced87bc68e54a8abcc4d227bfc748a027db499d952d01018)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: virtualinvoke $r7.<com.aelitis.azureus.core.networkmanager.impl.TransportCryptoManager: void a(com.aelitis.azureus.core.networkmanager.impl.TransportHelper,byte[][],boolean,java.nio.ByteBuffer,com.aelitis.azureus.core.networkmanager.impl.TransportCryptoManager$HandshakeListener)>($r4, varReplacer62073, varReplacer62074, varReplacer62073, $r2)


Findings in Java Class: com.aelitis.azureus.core.networkmanager.impl.tcp.IncomingSocketChannelManager$TcpSelectListener

	 in Method: void a(java.nio.channels.ServerSocketChannel,java.nio.channels.SocketChannel)
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #e1b1e06c2edc278bced87bc68e54a8abcc4d227bfc748a027db499d952d01018)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: virtualinvoke $r8.<com.aelitis.azureus.core.networkmanager.impl.TransportCryptoManager: void a(com.aelitis.azureus.core.networkmanager.impl.TransportHelper,byte[][],boolean,java.nio.ByteBuffer,com.aelitis.azureus.core.networkmanager.impl.TransportCryptoManager$HandshakeListener)>($r7, varReplacer16071, varReplacer16072, varReplacer16071, $r3)


Findings in Java Class: com.aelitis.azureus.core.networkmanager.impl.utp.UTPTransport

	 in Method: void a(java.nio.ByteBuffer,com.aelitis.azureus.core.networkmanager.Transport$ConnectListener,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #e1b1e06c2edc278bced87bc68e54a8abcc4d227bfc748a027db499d952d01018)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to doPhase
			at statement: virtualinvoke $r9.<com.aelitis.azureus.core.networkmanager.impl.TransportCryptoManager: void a(com.aelitis.azureus.core.networkmanager.impl.TransportHelper,byte[][],boolean,java.nio.ByteBuffer,com.aelitis.azureus.core.networkmanager.impl.TransportCryptoManager$HandshakeListener)>($r5, $r10, varReplacer40381, $r1, $r11)


Findings in Java Class: lbms.plugins.mldht.kad.BloomFilterBEP33

	 in Method: void <init>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c42b61d6b2bbed00254e0bb60dd860bb14e58dabf0ab4b56958d90ebe1c34145)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer45833)


Findings in Java Class: lbms.plugins.mldht.kad.ScrapeResponseHandler

	 in Method: void process()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c42b61d6b2bbed00254e0bb60dd860bb14e58dabf0ab4b56958d90ebe1c34145)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r7)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c42b61d6b2bbed00254e0bb60dd860bb14e58dabf0ab4b56958d90ebe1c34145)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r7)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c42b61d6b2bbed00254e0bb60dd860bb14e58dabf0ab4b56958d90ebe1c34145)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r7 = virtualinvoke $r6.<lbms.plugins.mldht.kad.messages.GetPeersResponse: lbms.plugins.mldht.kad.BloomFilterBEP33 getScrapeSeeds()>()


Findings in Java Class: lbms.plugins.mldht.kad.DHT

	 in Method: void getPeers(lbms.plugins.mldht.kad.messages.GetPeersRequest)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c42b61d6b2bbed00254e0bb60dd860bb14e58dabf0ab4b56958d90ebe1c34145)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r19.<lbms.plugins.mldht.kad.messages.GetPeersResponse: void setScrapeSeeds(lbms.plugins.mldht.kad.BloomFilterBEP33)>($r23)


Findings in Java Class: org.gudy.azureus2.pluginsimpl.local.utils.resourceuploader.ResourceUploaderURLImpl

	 in Method: java.net.PasswordAuthentication getAuthentication(java.lang.String,java.net.URL)
		NeverTypeOfError violating CrySL rule for java.net.PasswordAuthentication (on Object #5868598051f0bc598dedf43d0b776e81514d56bd10e6866da9fd42354decc35f)
			Second parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r1, $r6)

		HardCodedError violating CrySL rule for java.net.PasswordAuthentication (on Object #5868598051f0bc598dedf43d0b776e81514d56bd10e6866da9fd42354decc35f)
			Second parameter should never be hardcoded.
			at statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r1, $r6)

		NeverTypeOfError violating CrySL rule for java.net.PasswordAuthentication (on Object #e6f84ed563ef8ce7759fea365ec2f7fe699f456efca57c457e88d68e905de768)
			Second parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r4, $r6)

		HardCodedError violating CrySL rule for java.net.PasswordAuthentication (on Object #e6f84ed563ef8ce7759fea365ec2f7fe699f456efca57c457e88d68e905de768)
			Second parameter should never be hardcoded.
			at statement: specialinvoke $r5.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r4, $r6)


Findings in Java Class: org.gudy.azureus2.pluginsimpl.local.ui.config.PasswordParameterImpl

	 in Method: byte[] encode(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9edbf27f6e63b0f528afa681736089fc7a8ff8247f0a1062928e52c22087944d)
			First parameter (with value "md5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer50579)


Findings in Java Class: ax.o

	 in Method: void <init>(byte[],boolean)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2d69a9d88fb3a8a1285bc65a725c5b215ed52ef0fae3993dbda380f6d3f3f7ae)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer51199)


Findings in Java Class: ay.c

	 in Method: void <init>(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #27dd9bee1ad589db7da369e5a8277f6c5cfe781034f42c2e22207bae325a347e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer53775)


Findings in Java Class: ax.m

	 in Method: byte[] f(java.lang.String,java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #27dd9bee1ad589db7da369e5a8277f6c5cfe781034f42c2e22207bae325a347e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: specialinvoke $r8.<ay.c: void <init>(byte[])>($r4)


	 in Method: byte[] d(byte[],byte[],byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #803f2ff0256647278959d5c4cbfc3d5645b2545faea5d76e50bc41b28a2ed9e2)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer56618)


Findings in Java Class: org.gudy.azureus2.pluginsimpl.local.ddb.DDBaseTTTorrent

	 in Method: byte[] doCrypt(int,byte[],byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>($i0, $r4)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #935be9e22b91eb3e384c8232a47e6105465744e21d90ab10d30c0e9b8f415b65)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, $i1, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer54230)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #c60f92dfb160950dc30db084c8b5545c15346a47e3499232c1dec19575fc90be)
			Second parameter (with value "DESede") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer54230)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #935be9e22b91eb3e384c8232a47e6105465744e21d90ab10d30c0e9b8f415b65)
			First parameter (with value "DESede") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer54231)


Findings in Java Class: org.gudy.azureus2.core3.util.MD4Hasher

	 in Method: void <init>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #621e91d37ea1db176b31e4c7fb24562443a0e167f508fe4b7433d255d3527474)
			First parameter (with value "MD4") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>(varReplacer56000, $r1)


Findings in Java Class: org.gudy.azureus2.core3.torrent.impl.TOTorrentFileHasher

	 in Method: long z(java.io.File)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #621e91d37ea1db176b31e4c7fb24562443a0e167f508fe4b7433d255d3527474)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, java.security.MessageDigest: void update(byte[],int,int), java.security.MessageDigest: void update(java.nio.ByteBuffer), java.security.MessageDigest: void update(byte), java.security.MessageDigest: void update(byte[])
			at statement: virtualinvoke $r4.<org.gudy.azureus2.core3.util.ED2KHasher: void update(byte[],int,int)>($r10, $i2, $i1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #621e91d37ea1db176b31e4c7fb24562443a0e167f508fe4b7433d255d3527474)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r10 = virtualinvoke $r4.<org.gudy.azureus2.core3.util.ED2KHasher: byte[] aoH()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #621e91d37ea1db176b31e4c7fb24562443a0e167f508fe4b7433d255d3527474)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r4.<org.gudy.azureus2.core3.util.ED2KHasher: void <init>()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #621e91d37ea1db176b31e4c7fb24562443a0e167f508fe4b7433d255d3527474)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = null


	 in Method: byte[][] getPieces()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #621e91d37ea1db176b31e4c7fb24562443a0e167f508fe4b7433d255d3527474)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r5.<org.gudy.azureus2.core3.util.ED2KHasher: byte[] aoH()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #621e91d37ea1db176b31e4c7fb24562443a0e167f508fe4b7433d255d3527474)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, java.security.MessageDigest: void update(byte[],int,int), java.security.MessageDigest: void update(java.nio.ByteBuffer), java.security.MessageDigest: void update(byte), java.security.MessageDigest: void update(byte[])
			at statement: virtualinvoke $r5.<org.gudy.azureus2.core3.util.ED2KHasher: void update(byte[])>($r1)


Findings in Java Class: org.gudy.azureus2.pluginsimpl.local.utils.security.SESTSConnectionImpl

	 in Method: void receiveContent(org.gudy.azureus2.plugins.utils.PooledByteBuffer)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #3df5b7fb741e83cc6e61b69bbe48d9d31635d8c02bd650c14c74bad78e7e2296)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #e1625eccc175a7d229afa5f46fae2699b62869c11965586a185997a287f098aa)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)


	 in Method: void receive(org.gudy.azureus2.plugins.utils.PooledByteBuffer)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #3df5b7fb741e83cc6e61b69bbe48d9d31635d8c02bd650c14c74bad78e7e2296)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r7 = virtualinvoke $r17.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #e1625eccc175a7d229afa5f46fae2699b62869c11965586a185997a287f098aa)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r7 = virtualinvoke $r17.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)


	 in Method: void setupBlockCrypto()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r2, varReplacer57943, varReplacer57944, varReplacer57945)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer57938, $r4, $r6)


Findings in Java Class: com.aelitis.azureus.core.pairing.impl.PairingManagerTunnelHandler$3

	 in Method: java.util.Map process(java.net.InetSocketAddress,java.util.Map)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r29.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r28, varReplacer58676)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #cbc380fca710047fc540a0cd686852eef3d2c9443544c0ae16e4169f4b1aed80)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r11 = virtualinvoke $r27.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r11)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r30.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r11)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r27.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer58698, $r29, $r30)


Findings in Java Class: org.gudy.azureus2.core3.tracker.client.impl.bt.TRTrackerBTAnnouncerImpl

	 in Method: java.lang.String a(java.net.URL[],java.net.URL,java.net.Proxy,boolean,java.io.ByteArrayOutputStream)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #7387b4ac94631ad38623f04001644af0a580b4f292d10911ec92ead47575752c)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r20 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer62178)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r20.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer62158, $r19, $r21)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r20.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer62158, $r19, $r21)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r20.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer62158, $r19, $r21)


Findings in Java Class: com.aelitis.azureus.core.networkmanager.impl.udp.UDPConnectionSet

	 in Method: org.gudy.bouncycastle.crypto.engines.RC4Engine D(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer62392)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #688600884325208d5da0177fc80cdd2c71a920f77f9a7d4c3e6be193c8b0f56e)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer62392)


Findings in Java Class: com.aelitis.azureus.core.pairing.impl.PairingManagerTunnelHandler

	 in Method: boolean a(org.gudy.azureus2.plugins.tracker.web.TrackerWebPageRequest,org.gudy.azureus2.plugins.tracker.web.TrackerWebPageResponse)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r39.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r22, varReplacer63309)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #80a559c7c1058d080cdd5dbf60b3c96409b1a5697dc48732d7b1098e795168c1)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r21 = virtualinvoke $r38.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r21, varReplacer63339, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r38.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer63302, $r39, $r40)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r38.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer63342, $r39)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #3a04175c6cfaf519f7d41bdb65aaccdf88ad225cb2e65996c6a2cc1947b472fc)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r21 = virtualinvoke $r38.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r21)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #1edd2face6707297f1ebbb773f9dad14d9c69c2831b4700361c4eb32256ed2c2)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r22 = virtualinvoke $r38.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r22)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r40.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r21)


Findings in Java Class: bl.f

	 in Method: bl.f eU(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #159ccd9863d3ab6975ec92dceefb1437bbe5be258e570f4f98da34662b737c82)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: com.aelitis.azureus.core.networkmanager.impl.TransportCipher

	 in Method: void <init>(java.lang.String,int,javax.crypto.spec.SecretKeySpec)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>($i0, $r2)


Findings in Java Class: org.gudy.bouncycastle.jce.provider.JDKKeyPairGenerator$EC

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r11)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r11)


Findings in Java Class: org.gudy.bouncycastle.jce.provider.X509CertificateObject

	 in Method: void verify(java.security.PublicKey)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r10.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 193

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 50
	ConstraintError: 41
	HardCodedError: 9
	TypestateError: 28
	NeverTypeOfError: 9
	RequiredPredicateError: 93
	ForbiddenMethodError: 2
=====================================================================
