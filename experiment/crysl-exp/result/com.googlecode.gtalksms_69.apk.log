0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11487)
		Method: <com.novell.sasl.client.DigestMD5SaslClient: char[] DigestCalcHA1(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: df87b7d12296f0aa27615fa6d51d42b21f611b53e69af04d1bfff60c6b9433e2
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4181)
		Method: <org.jivesoftware.smackx.entitycaps.EntityCapsManager: void <clinit>()>
		SHA-256: 5fdb0eeda7a687395c48a114eb344e5ecc322f9ffce2ff6ef324c973069032b8
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: $r3 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer11478)
		Method: <com.novell.sasl.client.DigestMD5SaslClient: java.lang.String getClientNonce()>
		SHA-256: eb15a5ec8ef305d29850e85c68e31dbdfae449a3d30210643aa9261bb5f9f164
		Secure: true
	Object:
		Variable: $r16
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer4741)
		Method: <org.jivesoftware.smack.XMPPConnection: void proceedTLSReceived()>
		SHA-256: b87f4f315f4b46be366593881f0a67efd45c8431f11bdc142a666316d9a0c615
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.KeyManager[]
		Statement: $r17 = virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.jivesoftware.smack.XMPPConnection: void proceedTLSReceived()>
		SHA-256: b81999cbfe50cb98dac335fef7919d357c435747003bc343bfd86ece41790d4c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6921)
		Method: <org.jivesoftware.smack.util.StringUtils: java.lang.String hash(java.lang.String)>
		SHA-256: 5ff92d2ab7206bf98da540116028d38ad1134ab2c87d0c3875b37329e4d709e3
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.xbill.DNS.UDPClient: void <clinit>()>
		SHA-256: fcebb9e881f86bd38585606df0d0e993ca0aa8852fe9338092fa2df92cf72b68
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11495)
		Method: <com.novell.sasl.client.DigestMD5SaslClient: char[] DigestCalcResponse(char[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>
		SHA-256: 1accb293e8e35281bed24888739226c96a9b12cb637031156d6e20f536d9d184
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.novell.sasl.client.DigestMD5SaslClient: char[] DigestCalcHA1(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 5ce200b86928979103b98691c5ad531280c93661fb686380042bd5b5b09abc0d
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <com.novell.sasl.client.DigestMD5SaslClient: java.lang.String getClientNonce()>
		SHA-256: fff51096eeeec1985b139de26f736281eb0362ff8396ce6784b62aa6971bd77c
		Secure: true
	Object:
		Variable: $r15
		Type: java.security.KeyStore
		Statement: $r15 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(varReplacer4743, varReplacer4744)
		Method: <org.jivesoftware.smack.XMPPConnection: void proceedTLSReceived()>
		SHA-256: e9ee11e8c84b1bd7ecc7fbf0f3177e4d9594ebd41403f4992de1e73bac74c3f5
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.kenai.jbosh.RequestIDSequence: void <clinit>()>
		SHA-256: cc9286b8bb6d07953375980baadb0831e944f1c2deab249a9e85910f9432ee72
		Secure: true
	Object:
		Variable: $r34
		Type: java.security.SecureRandom
		Statement: specialinvoke $r34.<java.security.SecureRandom: void <init>()>()
		Method: <org.jivesoftware.smack.XMPPConnection: void proceedTLSReceived()>
		SHA-256: a1f859f534bafac0028c32ad3a9291f86b6132615a980e34703e93fdecf42c5f
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4758)
		Method: <org.jivesoftware.smack.XMPPConnection: void proceedTLSReceived()>
		SHA-256: 67ba5ea2fdd539409a286eac19b817bfc714c09c64ba58d389b9f47b6818008
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <org.xbill.DNS.utils.HMAC: void <init>(java.lang.String,int,byte[])>
		SHA-256: 6a74769b4d61f110f31396836f662812d0d23dacc7adb4d831d0b86257041292
		Secure: true
	Object:
		Variable: $r26
		Type: java.security.KeyStore
		Statement: $r26 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r7)
		Method: <org.jivesoftware.smack.XMPPConnection: void proceedTLSReceived()>
		SHA-256: 1375c1f40bf91d30f4744189faa3a1d18f75f83998899ea3efd2a649d7fed049
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.novell.sasl.client.DigestMD5SaslClient: char[] DigestCalcResponse(char[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>
		SHA-256: b33053ef6e239afb760b4ddce587faabe16428217f4f7b844d0c38f57dd86f37
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.jivesoftware.smack.sasl.SASLFacebookConnect: java.lang.String MD5(java.lang.String)>
		SHA-256: 7231c8020c0f267953c806542b8c0abf8a847be86f2130300d4953143acbc2d0
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.novell.sasl.client.DigestMD5SaslClient: char[] DigestCalcHA1(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 5ce200b86928979103b98691c5ad531280c93661fb686380042bd5b5b09abc0d
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <org.xbill.DNS.utils.HMAC: void init(byte[])>
		SHA-256: 219d4777456ccb405b8e6faee0474d2b062dca180af69cd68695408d2c66b5c6
		Secure: true
	Object:
		Variable: $r26
		Type: java.security.KeyStore
		Statement: $r26 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)>(varReplacer4742, $r25)
		Method: <org.jivesoftware.smack.XMPPConnection: void proceedTLSReceived()>
		SHA-256: 3bd4ff662f30da2505b0f1f1f32405f64f71564bef38fe60167627e230ab17a9
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.novell.sasl.client.DigestMD5SaslClient: char[] DigestCalcResponse(char[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>
		SHA-256: b33053ef6e239afb760b4ddce587faabe16428217f4f7b844d0c38f57dd86f37
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <org.xbill.DNS.utils.HMAC: byte[] sign()>
		SHA-256: 1e31e15d341bd5b649e3174c2df91f09ef704d73f0791a55fd926de41359b1a0
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.xbill.DNS.utils.HMAC: byte[] sign()>
		SHA-256: 1f9ab97014da7246d8025bc231cf18a522caea62a689d47a735e3eaba2816f6c
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9255)
		Method: <org.jivesoftware.smack.sasl.SASLFacebookConnect: java.lang.String MD5(java.lang.String)>
		SHA-256: 6898017dbea05c38c08b813c21fec49082dc27f54a0c11499ea43f132e96d1ca
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <org.xbill.DNS.utils.HMAC: byte[] sign()>
		SHA-256: e1bd6cd60e2b1abe936c6525f13a02d956042586df0f64220869ac8d7f67784a
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.KeyStore
		Statement: $r9 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <org.jivesoftware.smack.ServerTrustManager: void <init>(java.lang.String,org.jivesoftware.smack.ConnectionConfiguration)>
		SHA-256: e42abf3d4789fd1f65196cdde92c792fc75f1354fe062cee35d3c6d5e237b2e0
		Secure: false

Findings in Java Class: org.jivesoftware.smackx.entitycaps.EntityCapsManager

	 in Method: void <clinit>()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #5fdb0eeda7a687395c48a114eb344e5ecc322f9ffce2ff6ef324c973069032b8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer4180, $r5)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5fdb0eeda7a687395c48a114eb344e5ecc322f9ffce2ff6ef324c973069032b8)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4181)


Findings in Java Class: org.jivesoftware.smack.XMPPConnection

	 in Method: void proceedTLSReceived()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r1, $r39, $r34)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #67ba5ea2fdd539409a286eac19b817bfc714c09c64ba58d389b9f47b6818008)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4758)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r1, $r39, $r34)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #b87f4f315f4b46be366593881f0a67efd45c8431f11bdc142a666316d9a0c615)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r15, $r28)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #b87f4f315f4b46be366593881f0a67efd45c8431f11bdc142a666316d9a0c615)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r15, $r28)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #e9ee11e8c84b1bd7ecc7fbf0f3177e4d9594ebd41403f4992de1e73bac74c3f5)
			First parameter (with value "KeychainStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r15 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(varReplacer4743, varReplacer4744)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #b87f4f315f4b46be366593881f0a67efd45c8431f11bdc142a666316d9a0c615)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r15, $r28)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #b87f4f315f4b46be366593881f0a67efd45c8431f11bdc142a666316d9a0c615)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r15, $r28)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #1375c1f40bf91d30f4744189faa3a1d18f75f83998899ea3efd2a649d7fed049)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r26.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r30, $r28)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #1375c1f40bf91d30f4744189faa3a1d18f75f83998899ea3efd2a649d7fed049)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r26.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r30, $r28)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #3bd4ff662f30da2505b0f1f1f32405f64f71564bef38fe60167627e230ab17a9)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r26.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer4750, $r28)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #3bd4ff662f30da2505b0f1f1f32405f64f71564bef38fe60167627e230ab17a9)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r26.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer4750, $r28)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r15, varReplacer4740)


Findings in Java Class: org.jivesoftware.smack.util.StringUtils

	 in Method: java.lang.String hash(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5ff92d2ab7206bf98da540116028d38ad1134ab2c87d0c3875b37329e4d709e3)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6921)


Findings in Java Class: org.jivesoftware.smack.ServerTrustManager

	 in Method: void <init>(java.lang.String,org.jivesoftware.smack.ConnectionConfiguration)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #e42abf3d4789fd1f65196cdde92c792fc75f1354fe062cee35d3c6d5e237b2e0)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r9.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r10, $r11)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #e42abf3d4789fd1f65196cdde92c792fc75f1354fe062cee35d3c6d5e237b2e0)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r9.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r10, $r11)


Findings in Java Class: org.jivesoftware.smack.sasl.SASLFacebookConnect

	 in Method: java.lang.String MD5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6898017dbea05c38c08b813c21fec49082dc27f54a0c11499ea43f132e96d1ca)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9255)


Findings in Java Class: org.xbill.DNS.TSIG

	 in Method: byte verify(org.xbill.DNS.Message,byte[],int,org.xbill.DNS.TSIGRecord)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #6a74769b4d61f110f31396836f662812d0d23dacc7adb4d831d0b86257041292)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: specialinvoke $r5.<org.xbill.DNS.utils.HMAC: void <init>(java.lang.String,int,byte[])>($r6, $i0, $r7)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #6a74769b4d61f110f31396836f662812d0d23dacc7adb4d831d0b86257041292)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: $i5 = virtualinvoke $r5.<org.xbill.DNS.utils.HMAC: int digestLength()>()


	 in Method: org.xbill.DNS.TSIGRecord generate(org.xbill.DNS.Message,byte[],int,org.xbill.DNS.TSIGRecord)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #6a74769b4d61f110f31396836f662812d0d23dacc7adb4d831d0b86257041292)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: virtualinvoke $r6.<org.xbill.DNS.utils.HMAC: void update(byte[])>($r2)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #6a74769b4d61f110f31396836f662812d0d23dacc7adb4d831d0b86257041292)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: virtualinvoke $r6.<org.xbill.DNS.utils.HMAC: void update(byte[])>($r2)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #6a74769b4d61f110f31396836f662812d0d23dacc7adb4d831d0b86257041292)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: virtualinvoke $r6.<org.xbill.DNS.utils.HMAC: void update(byte[])>($r8)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #6a74769b4d61f110f31396836f662812d0d23dacc7adb4d831d0b86257041292)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: specialinvoke $r6.<org.xbill.DNS.utils.HMAC: void <init>(java.lang.String,int,byte[])>($r7, $i1, $r8)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #6a74769b4d61f110f31396836f662812d0d23dacc7adb4d831d0b86257041292)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: $r2 = virtualinvoke $r6.<org.xbill.DNS.utils.HMAC: byte[] sign()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #6a74769b4d61f110f31396836f662812d0d23dacc7adb4d831d0b86257041292)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: $r6 = null


Findings in Java Class: org.xbill.DNS.SimpleResolver

	 in Method: org.xbill.DNS.Message sendAXFR(org.xbill.DNS.Message)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #6a74769b4d61f110f31396836f662812d0d23dacc7adb4d831d0b86257041292)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, getInstance
			at statement: $r7 = virtualinvoke $r6.<org.xbill.DNS.ZoneTransferIn: java.util.List getAXFR()>()


Findings in Java Class: com.novell.sasl.client.DigestMD5SaslClient

	 in Method: char[] DigestCalcHA1(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #df87b7d12296f0aa27615fa6d51d42b21f611b53e69af04d1bfff60c6b9433e2)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11487)


	 in Method: char[] DigestCalcResponse(char[],java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1accb293e8e35281bed24888739226c96a9b12cb637031156d6e20f536d9d184)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11495)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 27

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 10
	HardCodedError: 5
	ConstraintError: 7
	RequiredPredicateError: 3
	NeverTypeOfError: 5
=====================================================================
