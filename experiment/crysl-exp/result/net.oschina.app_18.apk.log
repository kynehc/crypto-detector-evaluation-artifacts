0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5690)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 818e3f3de2f5ecc0c31c1567aaf6adba59b0ce9318f3d8fc43153697e96c8b41
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer4293)
		Method: <com.weibo.net.AccessTokenHeader: java.lang.String generateSignature(java.lang.String,com.weibo.net.Token)>
		SHA-256: 9e50371d0608598e3e6cabcfb909fed01b3a20849194e634e47a9e9585020d0b
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3660)
		Method: <com.weibo.net.Utility$MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: d839b7f6fb2be1b3b543dc838d67c5a2698552c96625cc310c4671967febe7f3
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer4302)
		Method: <com.weibo.net.RequestTokenHeader: java.lang.String generateSignature(java.lang.String,com.weibo.net.Token)>
		SHA-256: fcaf5c7f90061656178184409f109662bd792dd7f8296333bf6d7f261d9ec620
		Secure: false
	Object:
		Variable: $r16
		Type: byte[]
		Statement: $r16 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest(byte[])>($r16)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 7debf2dbb1a500a0671e817daa0e87311d9033f2c339dd4a9805a71ad7fb9cc7
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6044)
		Method: <org.apache.commons.httpclient.auth.NTLM: javax.crypto.Cipher getCipher(byte[])>
		SHA-256: a524f172136c28dbf914d828faaacf3d5f94853272fd88f0d2cb1b17fe288ce9
		Secure: false
	Object:
		Variable: varReplacer4295
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer4295)
		Method: <com.weibo.net.AccessTokenHeader: java.lang.String generateSignature(java.lang.String,com.weibo.net.Token)>
		SHA-256: 5973d798a65dc7c2938b2a8e59ea4b4ffcd6b0ae4646a21f78ada92aa23b318e
		Secure: false
	Object:
		Variable: varReplacer4300
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer4300)
		Method: <com.weibo.net.XAuthHeader: java.lang.String generateSignature(java.lang.String,com.weibo.net.Token)>
		SHA-256: 333b6cb979d4bf0cf0f692b9ad17ba0ba2129d0758b68ca54238c1cd1233a5e0
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3681)
		Method: <net.oschina.app.common.CyptoUtils: java.lang.String encode(java.lang.String,java.lang.String)>
		SHA-256: 5ea7adaf36025971c913989ef631460afda9e09c9abbfc6485bbf5d1200bcfdb
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r7)
		Method: <com.weibo.net.XAuthHeader: java.lang.String generateSignature(java.lang.String,com.weibo.net.Token)>
		SHA-256: 1aab9a996a179969672e38621cd94b4dfd4104869e597f4113d56b5576f35206
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r7)
		Method: <com.weibo.net.RequestTokenHeader: java.lang.String generateSignature(java.lang.String,com.weibo.net.Token)>
		SHA-256: 35ff5a074e9454690002c425cb09596be1cea9b5f18edefed0f53767d9c1b109
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer4304)
		Method: <com.weibo.net.RequestTokenHeader: java.lang.String generateSignature(java.lang.String,com.weibo.net.Token)>
		SHA-256: 24396e1ea4d7f5ad6fb971ee91db710edbbebe797dff103d9f89d021910f0b58
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r1)
		Method: <net.oschina.app.common.CyptoUtils: java.lang.String decode(java.lang.String,java.lang.String)>
		SHA-256: 828827115765e154f3102466a2bf55d46a7ca57f333164472e644b2fd9fbae53
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer4297)
		Method: <com.weibo.net.RequestHeader: java.lang.String generateSignature(java.lang.String,com.weibo.net.Token)>
		SHA-256: 6296bae6545b967fd550cfdb1777423fbea9c4520cde551c1cb9a8e77a0c8a71
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3683)
		Method: <net.oschina.app.common.CyptoUtils: java.lang.String encode(java.lang.String,java.lang.String)>
		SHA-256: 732309e58d3206f948a0104bb65c5be0225c0a25df544add38f0d1c399222b84
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r1)
		Method: <net.oschina.app.common.CyptoUtils: java.lang.String encode(java.lang.String,java.lang.String)>
		SHA-256: 55853638f2fd861695037943b7da3e6c8953185e96ef2b6d1a2c7833ad7b707c
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <net.oschina.app.common.CyptoUtils: java.lang.String decode(java.lang.String,java.lang.String)>
		SHA-256: 66dfd947a40e259c34036b70bbcf770799e1a2d08aa2e43c03cbe135482fb160
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r7)
		Method: <com.weibo.net.AccessTokenHeader: java.lang.String generateSignature(java.lang.String,com.weibo.net.Token)>
		SHA-256: 83d581229c1d40327ac54bae9ec88a4373e14b161dc4b7263eb8a023f89d9eeb
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer4295)
		Method: <com.weibo.net.AccessTokenHeader: java.lang.String generateSignature(java.lang.String,com.weibo.net.Token)>
		SHA-256: 5954d018b70c2262dac0a85828f341e5e3c6432a7b0ab68228fb514a0dce8e3e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer4298)
		Method: <com.weibo.net.RequestHeader: java.lang.String generateSignature(java.lang.String,com.weibo.net.Token)>
		SHA-256: d16c882bac29a07a425edbaa685960fc431b4ca700d4cc645c7c0b83580a8f11
		Secure: false
	Object:
		Variable: $r15
		Type: java.security.MessageDigest
		Statement: $r15 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5466)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 6b13eeb50f4d06eba2ff44616948b31db29170dc45b298a1cf335d05f278f20e
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyStore
		Statement: $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r7)
		Method: <com.weibo.net.Utility: org.apache.http.client.HttpClient getNewHttpClient(android.content.Context)>
		SHA-256: 79f58ad3ff6efc51c424beac8867f9e8c8a8507c66b8a595b89a1bfa56d8ceb0
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <net.oschina.app.common.CyptoUtils: java.lang.String encode(java.lang.String,java.lang.String)>
		SHA-256: 18c45a4e99cca6fe92e0ee4778bbe4f6980f334dfb50031a058b975e97c13155
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer471)
		Method: <net.oschina.app.common.CyptoUtils: java.lang.String decode(java.lang.String,java.lang.String)>
		SHA-256: 1ccabda6c7916a4d2c20bb26da50e82dd5084820dc84527bfd843a1966480c78
		Secure: false
	Object:
		Variable: $r16
		Type: byte[]
		Statement: $r16 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest(byte[])>($r16)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 7debf2dbb1a500a0671e817daa0e87311d9033f2c339dd4a9805a71ad7fb9cc7
		Secure: false
	Object:
		Variable: varReplacer6048
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer6048)
		Method: <org.apache.commons.httpclient.auth.NTLM: javax.crypto.Cipher getCipher(byte[])>
		SHA-256: 6703bc81d52d52143a64bc576ba73e75d0db669914cf59643a7f4e75b0b546c5
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer4300)
		Method: <com.weibo.net.XAuthHeader: java.lang.String generateSignature(java.lang.String,com.weibo.net.Token)>
		SHA-256: c79e3eb3174f7bd09d4158743767d82c80d708805ceb5f498e00362398b58f9c
		Secure: false
	Object:
		Variable: varReplacer4297
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer4297)
		Method: <com.weibo.net.RequestHeader: java.lang.String generateSignature(java.lang.String,com.weibo.net.Token)>
		SHA-256: 82342c4bf2e68c9c9e5e4f7e287e2b376b21c961040cdbe0ecb3dcafe880b87e
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r7)
		Method: <com.weibo.net.RequestHeader: java.lang.String generateSignature(java.lang.String,com.weibo.net.Token)>
		SHA-256: 1872143be630845d8065f7059a86aa90d43283a6c38b374e77c62ae7388a04a
		Secure: false
	Object:
		Variable: $r16
		Type: byte[]
		Statement: $r16 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest(byte[])>($r16)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 7debf2dbb1a500a0671e817daa0e87311d9033f2c339dd4a9805a71ad7fb9cc7
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer473)
		Method: <net.oschina.app.common.CyptoUtils: java.lang.String decode(java.lang.String,java.lang.String)>
		SHA-256: e24bd7bee0d96799fc275da5fe231bb24e3bbaf946b746e5a291e6fe619289f4
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer4299)
		Method: <com.weibo.net.XAuthHeader: java.lang.String generateSignature(java.lang.String,com.weibo.net.Token)>
		SHA-256: 588a03b1f2df9fbc124a000a3267322a972b6dbc72e1e4da8ece5d1626765c1b
		Secure: false
	Object:
		Variable: varReplacer4302
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer4302)
		Method: <com.weibo.net.RequestTokenHeader: java.lang.String generateSignature(java.lang.String,com.weibo.net.Token)>
		SHA-256: 7ef74b91d295cbc850a40f20d411fac7dbdd90807966b8199cb78e57e095eb72
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer6048)
		Method: <org.apache.commons.httpclient.auth.NTLM: javax.crypto.Cipher getCipher(byte[])>
		SHA-256: 61a70e3742fae54d62062dea89e2ce94fda55d98914e235d716abbc2235d2206
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 1bf33944324c9900e87ea789c8601d6df8e3c7baaa566883f515ecbf30d5681d
		Secure: false
	Object:
		Variable: $r16
		Type: byte[]
		Statement: $r16 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest(byte[])>($r16)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 7debf2dbb1a500a0671e817daa0e87311d9033f2c339dd4a9805a71ad7fb9cc7
		Secure: false

Findings in Java Class: net.oschina.app.common.CyptoUtils

	 in Method: java.lang.String decode(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #1ccabda6c7916a4d2c20bb26da50e82dd5084820dc84527bfd843a1966480c78)
			First parameter (with value "DES") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer471)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer474, $r7, r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e24bd7bee0d96799fc275da5fe231bb24e3bbaf946b746e5a291e6fe619289f4)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer473)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #e24bd7bee0d96799fc275da5fe231bb24e3bbaf946b746e5a291e6fe619289f4)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r5 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)


	 in Method: java.lang.String encode(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #732309e58d3206f948a0104bb65c5be0225c0a25df544add38f0d1c399222b84)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3683)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3684, $r7, r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #5ea7adaf36025971c913989ef631460afda9e09c9abbfc6485bbf5d1200bcfdb)
			First parameter (with value "DES") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3681)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3684, $r7, r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #732309e58d3206f948a0104bb65c5be0225c0a25df544add38f0d1c399222b84)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r5 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)


Findings in Java Class: com.weibo.net.Utility$MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3658, $r5, varReplacer3658)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3658, $r5, varReplacer3658)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3658, $r5, varReplacer3658)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #d839b7f6fb2be1b3b543dc838d67c5a2698552c96625cc310c4671967febe7f3)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3660)


Findings in Java Class: com.weibo.net.AccessTokenHeader

	 in Method: java.lang.String generateSignature(java.lang.String,com.weibo.net.Token)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #5954d018b70c2262dac0a85828f341e5e3c6432a7b0ab68228fb514a0dce8e3e)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer4295)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #9e50371d0608598e3e6cabcfb909fed01b3a20849194e634e47a9e9585020d0b)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer4293)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer4295)


Findings in Java Class: com.weibo.net.RequestHeader

	 in Method: java.lang.String generateSignature(java.lang.String,com.weibo.net.Token)
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #d16c882bac29a07a425edbaa685960fc431b4ca700d4cc645c7c0b83580a8f11)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer4298)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>($r4)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #6296bae6545b967fd550cfdb1777423fbea9c4520cde551c1cb9a8e77a0c8a71)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer4297)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer4297)


Findings in Java Class: com.weibo.net.XAuthHeader

	 in Method: java.lang.String generateSignature(java.lang.String,com.weibo.net.Token)
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>(r6)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #c79e3eb3174f7bd09d4158743767d82c80d708805ceb5f498e00362398b58f9c)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer4300)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #588a03b1f2df9fbc124a000a3267322a972b6dbc72e1e4da8ece5d1626765c1b)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer4299)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer4300)


Findings in Java Class: com.weibo.net.RequestTokenHeader

	 in Method: java.lang.String generateSignature(java.lang.String,com.weibo.net.Token)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #fcaf5c7f90061656178184409f109662bd792dd7f8296333bf6d7f261d9ec620)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer4302)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #24396e1ea4d7f5ad6fb971ee91db710edbbebe797dff103d9f89d021910f0b58)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer4304)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer4302)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>(r6)


Findings in Java Class: org.apache.commons.httpclient.auth.DigestScheme

	 in Method: java.lang.String createDigest(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6b13eeb50f4d06eba2ff44616948b31db29170dc45b298a1cf335d05f278f20e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r15 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5466)


	 in Method: java.lang.String createCnonce()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #818e3f3de2f5ecc0c31c1567aaf6adba59b0ce9318f3d8fc43153697e96c8b41)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5690)


Findings in Java Class: org.apache.commons.httpclient.auth.NTLM

	 in Method: javax.crypto.Cipher getCipher(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer6048)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a524f172136c28dbf914d828faaacf3d5f94853272fd88f0d2cb1b17fe288ce9)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6044)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #61a70e3742fae54d62062dea89e2ce94fda55d98914e235d716abbc2235d2206)
			Second parameter (with value "DES") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer6048)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer6046, $r3)


	 in Method: byte[] encrypt(byte[],byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #a524f172136c28dbf914d828faaacf3d5f94853272fd88f0d2cb1b17fe288ce9)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 36

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 17
	RequiredPredicateError: 20
	TypestateError: 3
=====================================================================
