2    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
7    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
7    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
7    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
7    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.conscrypt.ct.CertificateEntry: org.conscrypt.ct.CertificateEntry createForPrecertificate(org.conscrypt.OpenSSLX509Certificate,org.conscrypt.OpenSSLX509Certificate)>
		SHA-256: fdac5cbc341df046ae5d42e6caf0c99f1cebf641f4ed79e4bb74dffd155ddf2c
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r5.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r6)
		Method: <com.nextcloud.talk.utils.PushUtils: java.security.Key readKeyFromString(boolean,java.lang.String)>
		SHA-256: 1d50af61fc304996adee680ec6e346abd4dec349684f143fa1d3456556312c17
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer127531, varReplacer127532)
		Method: <androidx.biometric.CryptoObjectUtils: androidx.biometric.BiometricPrompt$CryptoObject createFakeCryptoObject()>
		SHA-256: 5ae6f3ca3625040bc68481d47103dd8ae8a9ba6dd2ccfafe4cd58f393294d254
		Secure: true
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r10)
		Method: <com.google.android.exoplayer2.source.rtsp.RtspAuthenticationInfo: java.lang.String getDigestAuthorizationHeaderValue(com.google.android.exoplayer2.source.rtsp.RtspMessageUtil$RtspAuthUserInfo,android.net.Uri,int)>
		SHA-256: 3afc78fee4b01922ba6feabb7a1f1b7addc3effc4c0ef5bca6a2938564e90984
		Secure: false
	Object:
		Variable: $r23
		Type: java.security.PublicKey
		Statement: $r23 = virtualinvoke $r21.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r22)
		Method: <com.nextcloud.talk.utils.PushUtils: java.security.Key readKeyFromFile(boolean)>
		SHA-256: 7e80bb8cc344d4055c37c2393b18d325ff7e6deb16dbef4daee0b55495b07b49
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer109724)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 51187e15b17ece5ea25d847b89e21e770ca5ed96f8b14f9b26aa5ebf5071eeef
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer76076)
		Method: <de.cotech.hw.util.HashUtil: byte[] sha256(java.lang.String)>
		SHA-256: 7f0fa543866d9502b9b8edec9f3819fb31429a885b97064d1d299e337cd0a670
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer109728, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 48c296c349a55bc9ba5816a0a59720ca92fef2769c0c8c3572539deabe316171
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: c3dcfb07eabeaead2afa7b41e33d56187e303e14a7184c21b7bac99836f2c278
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.soloader.SoLoader$1: java.lang.String getLibHash(java.lang.String)>
		SHA-256: 842121e9d253cdf6db0e404fe95695ee0d6b5963fa7b8ac61ed9211e05a20b7c
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: f325059ee6f08c9776202e677308b0f19ca0767a6821e36b4f64a531d072fa45
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 15a76129680a3cd57380001c355c828c5afc3ba9ce32fff65b352ff3390bbd6
		Secure: false
	Object:
		Variable: $r15
		Type: javax.crypto.Cipher
		Statement: $r15 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer38094)
		Method: <com.nextcloud.talk.utils.SecurityUtils: boolean checkIfWeAreAuthenticated(java.lang.String)>
		SHA-256: 23c224871ce05d5906668ea4ec66d5a53496e4a732b9a4ef58702559ef70cc12
		Secure: false
	Object:
		Variable: $r5
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r5)
		Method: <com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher: void <init>(int,byte[],long,long)>
		SHA-256: 8b962118ea3c603585afd0c9cb8eebc7393b428bc7f8f570f875d4bc8d807d0e
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: 74efd2ca2013e34a93725a12b2428b082241b229a3b9c59222ec28d5225e0d5
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer97639)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: javax.crypto.Cipher getCipherInstance()>
		SHA-256: ac6040a6c942d9e9eaa6d7090cef0f157d08d12c099c52aa4cb32f40233874b8
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <de.cotech.hw.internal.transport.usb.u2fhid.U2fHidTransportProtocol: void <init>(android.hardware.usb.UsbDeviceConnection,android.hardware.usb.UsbEndpoint,android.hardware.usb.UsbEndpoint)>
		SHA-256: ee159665c73eed1962473c49837709fc4fb51807811a787fbcf8fea539f7ed1
		Secure: true
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r10)
		Method: <com.google.android.exoplayer2.source.rtsp.RtspAuthenticationInfo: java.lang.String getDigestAuthorizationHeaderValue(com.google.android.exoplayer2.source.rtsp.RtspMessageUtil$RtspAuthUserInfo,android.net.Uri,int)>
		SHA-256: 3afc78fee4b01922ba6feabb7a1f1b7addc3effc4c0ef5bca6a2938564e90984
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer109730, $r2)
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: c11a9965170f5447e3995bb380c014feb323a81f8888df1f2a5f35aa8245aab7
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r5)
		Method: <com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher: void <init>(int,byte[],long,long)>
		SHA-256: 904cc563415265daa258bb0005f4d8ce0eefc5d2a51ed39954b73bdc6cc251cb
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 84f17b7e3930c76e2b174d27b9668ee8d3209ae5512e2c539d541e6ef4265515
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.cert.TrustAnchor
		Statement: specialinvoke $r3.<java.security.cert.TrustAnchor: void <init>(java.security.cert.X509Certificate,byte[])>($r1, varReplacer136582)
		Method: <org.conscrypt.TrustManagerImpl: java.security.cert.TrustAnchor findTrustAnchorBySubjectAndPublicKey(java.security.cert.X509Certificate)>
		SHA-256: 6c439c5c7d142c88862f05f80647b0720682904052bedef1615f8f56422d617a
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher: com.google.common.hash.HashCode hash()>
		SHA-256: 498aa274b0e0dc658a96e5b82797c2ef859caa8cc0a4a03329fbcf0be8023051
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyFactory
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer85154)
		Method: <com.nextcloud.talk.utils.PushUtils: java.security.Key readKeyFromString(boolean,java.lang.String)>
		SHA-256: 780a6d2963fb2ae8d6e2b6f31cafa05de76316e2578c1e10e814526dca64e376
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer100296, varReplacer100297)
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 3cbff15499771922588ccf73cd89703476716ccacd7426150f7eddb527354456
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r9)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 7ac05a324707752a8fcdd9787a5fcda4e6af85c295ea6bb9f2ffcf779c41a30d
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 9d110d3f3943f5f1538d33e3d18932b71ca7accf2f86c174ab417a2b10712fb0
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: e75571d33abb1b5e330ac5b78fcc009ac5fa3b4053acda20dad8234c0598d879
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r13.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r9, $r12, $r4, $i1)
		Method: <org.conscrypt.OpenSSLECGroupContext: java.security.spec.ECParameterSpec getECParameterSpec()>
		SHA-256: 7223ae8f08ed0dba3dafb06f8e07e30310aca7c9be856d88494b5d1bd531fdf8
		Secure: true
	Object:
		Variable: varReplacer85154
		Type: java.lang.String
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer85154)
		Method: <com.nextcloud.talk.utils.PushUtils: java.security.Key readKeyFromString(boolean,java.lang.String)>
		SHA-256: 6e10af1d81169f890f2b6f7e767d1a0420a94b55ecf4e0ad257a338d5e835a0
		Secure: false
	Object:
		Variable: $r8
		Type: java.lang.String
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r8)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: fb24971f565cb4681c3c1e192adc31a35b4a987353817f6def6d3d265ac75389
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.cert.TrustAnchor
		Statement: specialinvoke $r2.<java.security.cert.TrustAnchor: void <init>(java.security.cert.X509Certificate,byte[])>($r1, varReplacer136709)
		Method: <org.conscrypt.TrustedCertificateIndex: java.security.cert.TrustAnchor index(java.security.cert.X509Certificate)>
		SHA-256: c4f051bc8275a50f1be65c2c150f9c15c8d5867f055b4e2eb044c7501daec7e2
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.Signature
		Statement: $r10 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r9)
		Method: <org.conscrypt.ct.CTLogInfo: org.conscrypt.ct.VerifiedSCT$Status verifySingleSCT(org.conscrypt.ct.SignedCertificateTimestamp,org.conscrypt.ct.CertificateEntry)>
		SHA-256: 4867510c33565cbf7503d38506e7d164c604c516c0e341aa908e97f733133e73
		Secure: false
	Object:
		Variable: $r28
		Type: java.security.cert.PKIXParameters
		Statement: specialinvoke $r28.<java.security.cert.PKIXParameters: void <init>(java.util.Set)>($r14)
		Method: <org.conscrypt.TrustManagerImpl: java.util.List verifyChain(java.util.List,java.util.List,java.lang.String,boolean,byte[],byte[])>
		SHA-256: 29e528ae7be0d7a995cb106994ad6f6666437ec8d286db5205a2265c45743387
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer82170)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: 2fdaf198911ea2f5d0292d8700a4d336896744a1e04172a72ee125379b6ba5b1
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.Mac
		Statement: $r0 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r1)
		Method: <com.google.common.hash.MacHashFunction: javax.crypto.Mac getMac(java.lang.String,java.security.Key)>
		SHA-256: 6dfe92fb5526abc60bb706d9a02bc7267374c73eb4cfabeec75ce74a35a0603d
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.cert.CertificateFactory
		Statement: $r6 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer118288)
		Method: <okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)>
		SHA-256: 8d53536211d4a8f8abac69df11a1643ba9bc458462801dd368340cd1bbec58dd
		Secure: false
	Object:
		Variable: varReplacer82170
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer82170)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: 29bf48e850b9220b06b8d4998fccd1ce8da68e935723d57aab43780d198169a4
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 1027fce20723454b26980f38c5edb26bcec19bffa5b6443c75459b577c51d460
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.nextcloud.talk.utils.PushUtils: java.lang.String generateSHA512Hash(java.lang.String)>
		SHA-256: 4748e0a230c9accdc331301b22f6b299c524a3f56ac791b538b8cb369ab5c41a
		Secure: true
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r10)
		Method: <com.google.android.exoplayer2.source.rtsp.RtspAuthenticationInfo: java.lang.String getDigestAuthorizationHeaderValue(com.google.android.exoplayer2.source.rtsp.RtspMessageUtil$RtspAuthUserInfo,android.net.Uri,int)>
		SHA-256: 3afc78fee4b01922ba6feabb7a1f1b7addc3effc4c0ef5bca6a2938564e90984
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.cert.CertificateFactory
		Statement: $r0 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer116843)
		Method: <org.conscrypt.SSLUtils: java.security.cert.CertificateFactory getCertificateFactory()>
		SHA-256: 60a4d5bb81f016615b5ca6eccafbb0d948dba0ec997306f624aee4c373c1c0c2
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer85319)
		Method: <com.nextcloud.talk.utils.PushUtils: java.lang.String generateSHA512Hash(java.lang.String)>
		SHA-256: 65a3b26c1569b12fc0ad51c56d61aedcdb64a6bfa85fec9c46b9364bb4fd4b2d
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyPair
		Statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.nextcloud.talk.utils.PushUtils: int generateRsa2048KeyPair()>
		SHA-256: faa2c226fe35edb22842477f344339e333a7bc3e1e2224af8feb17c78467d867
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer81395)
		Method: <com.google.android.exoplayer2.source.rtsp.RtspAuthenticationInfo: java.lang.String getDigestAuthorizationHeaderValue(com.google.android.exoplayer2.source.rtsp.RtspMessageUtil$RtspAuthUserInfo,android.net.Uri,int)>
		SHA-256: bc6cde24b0813c9af1dade5d80f3d14b693f328c3215351eec8119b3341d7f64
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.SegmentedByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: 6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.Key
		Statement: $r9 = interfaceinvoke $r7.<java.security.Key: byte[] getEncoded()>()
		Method: <com.nextcloud.talk.utils.PushUtils: int saveKeyToFile(java.security.Key,java.lang.String)>
		SHA-256: 5675a799a109e79b51356fd62504ce38058db90cac1402916e60fa6566b3978f
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.Key
		Statement: $r4 = virtualinvoke $r0.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer127533, varReplacer127534)
		Method: <androidx.biometric.CryptoObjectUtils: androidx.biometric.BiometricPrompt$CryptoObject createFakeCryptoObject()>
		SHA-256: 5c67258c6edeaa88768d86d26206ff78a690ea08a87a19d84b0ec3441e62186d
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher: com.google.common.hash.HashCode hash()>
		SHA-256: 498aa274b0e0dc658a96e5b82797c2ef859caa8cc0a4a03329fbcf0be8023051
		Secure: true
	Object:
		Variable: $r12
		Type: javax.net.ssl.TrustManager[]
		Statement: $r12 = virtualinvoke $r11.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.nextcloud.talk.utils.ssl.MagicTrustManager: void <init>()>
		SHA-256: 63a2180e15b432c7cf057cd1edfd71a53bccaec0c1ecfbae059352d62087cb9a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer76473)
		Method: <com.facebook.common.util.SecureHashUtil: java.lang.String makeSHA1HashBase64(byte[])>
		SHA-256: 3a6e9b206da74aca3d31246c2655ee26afad451bee7f1c5bd50c71cd0aa6fb44
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $z0 = virtualinvoke $r10.<java.security.Signature: boolean verify(byte[])>($r6)
		Method: <org.conscrypt.ct.CTLogInfo: org.conscrypt.ct.VerifiedSCT$Status verifySingleSCT(org.conscrypt.ct.SignedCertificateTimestamp,org.conscrypt.ct.CertificateEntry)>
		SHA-256: 364a0f9b2a164d6ed5f9fe3601603c1763c816cf1e8f96465873eaf08c0e8e11
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer633)
		Method: <com.nextcloud.talk.utils.SecurityUtils: void createKey(java.lang.String)>
		SHA-256: b1d415a6988cff31c306c5ea8ee32cc752c23fa403aa35ff4489b973037a1490
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer96509)
		Method: <com.nextcloud.talk.utils.ssl.SSLSocketFactoryCompat: void <init>(javax.net.ssl.KeyManager,javax.net.ssl.X509TrustManager)>
		SHA-256: 8660bcab2a4508299f98098a075b7837df67d3b5b53319929e3a6770b357c710
		Secure: false
	Object:
		Variable: $r15
		Type: javax.crypto.Cipher
		Statement: $r15 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer58471)
		Method: <com.nextcloud.talk.jobs.NotificationWorker: androidx.work.ListenableWorker$Result doWork()>
		SHA-256: 26fdd403a3aeadebee24293f356c5553b419a8ae10b6f3f13284dcffa90c8f60
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer127529)
		Method: <androidx.biometric.CryptoObjectUtils: androidx.biometric.BiometricPrompt$CryptoObject createFakeCryptoObject()>
		SHA-256: 320e7654bae21debc67f58b4ab7c5bed26fd9a58ee9b4a0a5a5647f08f8a90d7
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6)
		Method: <com.nextcloud.talk.utils.ssl.MagicTrustManager: void <init>()>
		SHA-256: b6822dc76a8dbc5d8ce88b42f0c1c6b8642466c6e707e206f480736ae5270cda
		Secure: true
	Object:
		Variable: $r14
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r14.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r5, $r11)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex$LegacyStorage: void writeFile(java.util.HashMap)>
		SHA-256: 919c51f2bd19b9457d5bf9c2c9405d711ebbdabf4e0bbd308cef071c75ff011b
		Secure: false
	Object:
		Variable: $r11
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r11 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r6)
		Method: <com.nextcloud.talk.utils.ssl.MagicTrustManager: void <init>()>
		SHA-256: c1eb619cff9dc65ce1eb03d086dd7ab0f804e947b0989aa4efdf81dfd05766f1
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r5)
		Method: <com.nextcloud.talk.utils.PushUtils: java.security.Key readKeyFromString(boolean,java.lang.String)>
		SHA-256: 60ea861504a0e0b453f6fb2752862891e88853fc11d29fcf8c093f35542c08e
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <okio.ByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: 9f3ba3dd35bfd88a8457060cd59e6e65af87cbea3e5170b1e5d11a5dc2171423
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.KeyGenerator
		Statement: $r8 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer634, varReplacer635)
		Method: <com.nextcloud.talk.utils.SecurityUtils: void createKey(java.lang.String)>
		SHA-256: 7b0f83b215f31ff155cd66e02a52f9905bcf45d0e2a9a08e146670c4fa1aa7de
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer107603)
		Method: <com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher: void <init>(int,byte[],long,long)>
		SHA-256: 8535be901970bf71d30d3258a347bb38cb9d71d55f657c8096ce821679120922
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyStore
		Statement: $r12 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer38081)
		Method: <com.nextcloud.talk.utils.SecurityUtils: boolean checkIfWeAreAuthenticated(java.lang.String)>
		SHA-256: 8d9a7ba15e6133ad74b197aaec54e5b502e9cdd204706c4233ecad4ca87f28e6
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r10.<java.security.Signature: boolean verify(byte[])>($r7)
		Method: <com.nextcloud.talk.utils.PushUtils: com.nextcloud.talk.models.SignatureVerification verifySignature(byte[],byte[])>
		SHA-256: 115098ad07f1579c8de8c90822565a8504b1ebe52613d717484b504723b7ce17
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.KeyManager[]
		Statement: $r6 = virtualinvoke $r5.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.nextcloud.talk.dagger.modules.RestModule: com.nextcloud.talk.utils.ssl.MagicKeyManager provideKeyManager(com.nextcloud.talk.utils.preferences.AppPreferences,com.nextcloud.talk.utils.database.user.UserUtils)>
		SHA-256: e7fe875c7a1cccbef22df5a37680aa8cb603a14b3921cdb95d6d2dce7112c7ef
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer82321)
		Method: <com.facebook.soloader.SoLoader$1: java.lang.String getLibHash(java.lang.String)>
		SHA-256: 754e5d7cffb123504d28dca39f70edb25fa4f5f063ef3f75cb979dd3965e8f7b
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher: void <init>(int,byte[],long,long)>
		SHA-256: d9f9b6685ddf3461eb2ea2eff23ffe28902e5309125e8841c7ce2eb950fff47a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: ea0840b94e95f767ea25aa35611d3fdb379cdb84c49be399c4ff7525b48fb7fc
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer109725, $r2)
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 4eebcad8ee108d36ed01690d1101595d431d5a7f253f221c42634842ba6e9cb2
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <okio.SegmentedByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: b189e83daa1cae39dacb5d56f8d20e560b21d5b6f8f0c6a35bc1a551d3d1c123
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $z0 = virtualinvoke $r10.<java.security.Signature: boolean verify(byte[])>($r7)
		Method: <com.nextcloud.talk.utils.PushUtils: com.nextcloud.talk.models.SignatureVerification verifySignature(byte[],byte[])>
		SHA-256: e16035590d37d4777bbde1a5fd0945a318dae9cfc641406ec4056d3d990f7607
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyFactory
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r8)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 6635af12fb8498a7bf018ada279831a6e3024bb07fe12c7daed2b6fbc372e6bb
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: a729cfd5669df603070b7ba7d05b524b10a048ab1da974a5ccb1df973521b7d3
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer136777)
		Method: <org.conscrypt.ct.CertificateEntry: org.conscrypt.ct.CertificateEntry createForPrecertificate(org.conscrypt.OpenSSLX509Certificate,org.conscrypt.OpenSSLX509Certificate)>
		SHA-256: 3cd92367e0d05e46fad301075ed9f4024b77f60c036eb587c8dfe332fcf612f3
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 5fb6984969c8c0f60ee84399ef18a49aa63648c889757c4080685ad119ecd903
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex$LegacyStorage: void writeFile(java.util.HashMap)>
		SHA-256: 3cb4f6e0634d9adbf1c78f0f473ac722e5863a92578288c79d261d48a43f5c2e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.exoplayer2.upstream.cache.SimpleCache: long createUid(java.io.File)>
		SHA-256: 99c672eefa4689a445952b16fc572f3658b4c117a83684d8406fcdb6e6246872
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer80825)
		Method: <com.nextcloud.talk.dagger.modules.RestModule: com.nextcloud.talk.utils.ssl.MagicKeyManager provideKeyManager(com.nextcloud.talk.utils.preferences.AppPreferences,com.nextcloud.talk.utils.database.user.UserUtils)>
		SHA-256: 428e90a0253b0c9ca99be57a40365721d0f1b9f2e54290452bc5f41d9d939966
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r4, $r2)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: 4b73d9ea47b70e095beb17e2b4e8c62bcb1a3b70cdd913b654094befd6fbd016
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 316cbc86e080130334eaabd60025d96084375d0058312a103cd3255ba6f0aeb
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r10.<java.security.Signature: boolean verify(byte[])>($r6)
		Method: <org.conscrypt.ct.CTLogInfo: org.conscrypt.ct.VerifiedSCT$Status verifySingleSCT(org.conscrypt.ct.SignedCertificateTimestamp,org.conscrypt.ct.CertificateEntry)>
		SHA-256: aab90aed2436cb82f786fedcbd27d0760f98b44acc28f6538b68a70b6e4bf50c
		Secure: false
	Object:
		Variable: $r22
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r22.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r20)
		Method: <com.nextcloud.talk.utils.PushUtils: java.security.Key readKeyFromFile(boolean)>
		SHA-256: 364e434a917aa920ab3f618c63b6a55d9f37f3c518ea0e28df75f8e4c93bb245
		Secure: false
	Object:
		Variable: $r21
		Type: java.security.KeyFactory
		Statement: $r21 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer72180)
		Method: <com.nextcloud.talk.utils.PushUtils: java.security.Key readKeyFromFile(boolean)>
		SHA-256: a3116e8b8b73a297ae5ca32d960968b6e7dfc07ffd5fbd1e1d55dd6e4f901128
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyStore
		Statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer127523)
		Method: <androidx.biometric.CryptoObjectUtils: androidx.biometric.BiometricPrompt$CryptoObject createFakeCryptoObject()>
		SHA-256: 2b807e7a2809f3220041434ae75bdfc8046a1c13f8b66922a557b8c15b6986e1
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.Key
		Statement: $r13 = virtualinvoke $r12.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer38079, varReplacer38080)
		Method: <com.nextcloud.talk.utils.SecurityUtils: boolean checkIfWeAreAuthenticated(java.lang.String)>
		SHA-256: 75b6088c9b706e11a3cd6cb32ca2905b7c1eeb2956184278ce21b3872a572a36
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <de.cotech.hw.util.HashUtil: byte[] sha256(java.lang.String)>
		SHA-256: d6e2026f9abf93913f89f98f1148c4354e007e447ea341831e98a355c4810e24
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.common.util.SecureHashUtil: java.lang.String makeSHA1HashBase64(byte[])>
		SHA-256: c6bb4832d15267321b64294e36949b1fc4731b855443ce4eba77a8ad3eaece90
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r8.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r6, $r1)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a
		Secure: false
	Object:
		Variable: $r25
		Type: java.security.PrivateKey
		Statement: $r25 = virtualinvoke $r21.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r24)
		Method: <com.nextcloud.talk.utils.PushUtils: java.security.Key readKeyFromFile(boolean)>
		SHA-256: 917990330c16d96a896680be4c07edcfddca518a423f33c25b48cd77938a77d7
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: d02affd279e8743b6fd64cdf0e2dd47c30a5603be2e61d5718cf63d25b2d1a15
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PrivateKey
		Statement: $r5 = virtualinvoke $r4.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.nextcloud.talk.utils.PushUtils: int generateRsa2048KeyPair()>
		SHA-256: e18b71d5c41b12c1ea02c0cb2ff6dc54c514b1af2fb284e6f88adc423016fd31
		Secure: true
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = interfaceinvoke $r7.<java.security.Key: byte[] getEncoded()>()
		Method: <com.nextcloud.talk.utils.PushUtils: int saveKeyToFile(java.security.Key,java.lang.String)>
		SHA-256: 644c8423aee86d0012eb5decbd78ba51c9e90edf7a0f8de1a0da76cc107e82b1
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)
		Method: <org.conscrypt.OpenSSLECKeyPairGenerator: java.security.KeyPair generateKeyPair()>
		SHA-256: aef20e7032630e11deed3f628a08d19dda84b6e7e544aa0bf3edd4943ce413d3
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <com.google.common.hash.MacHashFunction$MacHasher: com.google.common.hash.HashCode hash()>
		SHA-256: a89d37061ba0dac61e1b08aaf3eb3497c39726681770418d4469691a8e1f6dbc
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.google.common.hash.MessageDigestHashFunction: java.security.MessageDigest getMessageDigest(java.lang.String)>
		SHA-256: f4e887286d0504cb5722b1da9a4eac06d6ea434977af7216dbf1f6217c285838
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.Signature
		Statement: $r10 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer72192)
		Method: <com.nextcloud.talk.utils.PushUtils: com.nextcloud.talk.models.SignatureVerification verifySignature(byte[],byte[])>
		SHA-256: f09d9ddeb88e4064481976230e7025a02ba6bbf89fa1ce6f5acbe2fb8b1f0fc7
		Secure: false
	Object:
		Variable: varReplacer72180
		Type: java.lang.String
		Statement: $r21 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer72180)
		Method: <com.nextcloud.talk.utils.PushUtils: java.security.Key readKeyFromFile(boolean)>
		SHA-256: 6cd70a918a8724965052cbdf48c5f91e026952583df0d609afa0b748624afe9a
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r5 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r4)
		Method: <com.nextcloud.talk.dagger.modules.RestModule: com.nextcloud.talk.utils.ssl.MagicKeyManager provideKeyManager(com.nextcloud.talk.utils.preferences.AppPreferences,com.nextcloud.talk.utils.database.user.UserUtils)>
		SHA-256: bc697df0bdb58511cba74dde5aa16a9bf2446b0f2a04c988e5ac7610a90ca20d
		Secure: false
	Object:
		Variable: $r16
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r16.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r15)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex$LegacyStorage: boolean readFile(java.util.HashMap,android.util.SparseArray)>
		SHA-256: 5c8390126ebcbb5ddbf76db4602dc5d8f36a732b2def33cdbb420dbb221f041b
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyPairGenerator
		Statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer72328)
		Method: <com.nextcloud.talk.utils.PushUtils: int generateRsa2048KeyPair()>
		SHA-256: f7c1bcd0dc574f5ea67fda77cbbb0edfe60c411252e2b3480d3b4c32ffffb0ce
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.PrivateKey
		Statement: $r9 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r8)
		Method: <com.nextcloud.talk.utils.PushUtils: java.security.Key readKeyFromString(boolean,java.lang.String)>
		SHA-256: fa3bae554996d48fdbbf405ac260a8d77ebede072a47fe97b8254e72fbc9ddff
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r4.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.nextcloud.talk.utils.PushUtils: int generateRsa2048KeyPair()>
		SHA-256: a57652084a0d06f2b633ef708339ee944398397e3a7fbfd432777d6eb8b9e17
		Secure: true
	Object:
		Variable: $r20
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r20.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r11, $r14)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex$LegacyStorage: boolean readFile(java.util.HashMap,android.util.SparseArray)>
		SHA-256: 11475a025e41e25a0676f36d6f683f7f0992b68493547e3fe8eb17ae2bb7c8fe
		Secure: false

Findings in Java Class: com.nextcloud.talk.utils.SecurityUtils

	 in Method: void createKey(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #b1d415a6988cff31c306c5ea8ee32cc752c23fa403aa35ff4489b973037a1490)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer633)


	 in Method: boolean checkIfWeAreAuthenticated(java.lang.String)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #23c224871ce05d5906668ea4ec66d5a53496e4a732b9a4ef58702559ef70cc12)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: virtualinvoke $r15.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r16)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #8d9a7ba15e6133ad74b197aaec54e5b502e9cdd204706c4233ecad4ca87f28e6)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r12 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer38081)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r15.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer38085, $r14)


Findings in Java Class: com.nextcloud.talk.jobs.NotificationWorker

	 in Method: androidx.work.ListenableWorker$Result doWork()
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #26fdd403a3aeadebee24293f356c5553b419a8ae10b6f3f13284dcffa90c8f60)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r9 = virtualinvoke $r15.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r9)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #26fdd403a3aeadebee24293f356c5553b419a8ae10b6f3f13284dcffa90c8f60)
			First parameter (with value "RSA/None/PKCS1Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r15 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer58471)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r15.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer58476, $r13)


Findings in Java Class: com.nextcloud.talk.utils.PushUtils

	 in Method: com.nextcloud.talk.models.SignatureVerification verifySignature(byte[],byte[])
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #f09d9ddeb88e4064481976230e7025a02ba6bbf89fa1ce6f5acbe2fb8b1f0fc7)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $z0 = virtualinvoke $r10.<java.security.Signature: boolean verify(byte[])>($r7)

		TypestateError violating CrySL rule for java.security.Signature (on Object #f09d9ddeb88e4064481976230e7025a02ba6bbf89fa1ce6f5acbe2fb8b1f0fc7)
			Unexpected call to method initVerify on object of type java.security.Signature. Expect a call to one of the following methods update,verify
			at statement: virtualinvoke $r10.<java.security.Signature: void initVerify(java.security.PublicKey)>($r17)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #f09d9ddeb88e4064481976230e7025a02ba6bbf89fa1ce6f5acbe2fb8b1f0fc7)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r10 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer72192)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r10.<java.security.Signature: void initVerify(java.security.PublicKey)>($r17)


	 in Method: int generateRsa2048KeyPair()
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #f7c1bcd0dc574f5ea67fda77cbbb0edfe60c411252e2b3480d3b4c32ffffb0ce)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), genKeyPair, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()


	 in Method: java.security.Key readKeyFromString(boolean,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r9 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r8)


	 in Method: java.security.Key readKeyFromFile(boolean)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r25 = virtualinvoke $r21.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r24)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r22.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r20)


Findings in Java Class: com.facebook.common.util.SecureHashUtil

	 in Method: java.lang.String makeSHA1HashBase64(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3a6e9b206da74aca3d31246c2655ee26afad451bee7f1c5bd50c71cd0aa6fb44)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer76473)


Findings in Java Class: com.nextcloud.talk.dagger.modules.RestModule

	 in Method: com.nextcloud.talk.utils.ssl.MagicKeyManager provideKeyManager(com.nextcloud.talk.utils.preferences.AppPreferences,com.nextcloud.talk.utils.database.user.UserUtils)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #428e90a0253b0c9ca99be57a40365721d0f1b9f2e54290452bc5f41d9d939966)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer80825)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r5.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r3, varReplacer80812)


Findings in Java Class: com.google.android.exoplayer2.source.rtsp.RtspAuthenticationInfo

	 in Method: java.lang.String getDigestAuthorizationHeaderValue(com.google.android.exoplayer2.source.rtsp.RtspMessageUtil$RtspAuthUserInfo,android.net.Uri,int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bc6cde24b0813c9af1dade5d80f3d14b693f328c3215351eec8119b3341d7f64)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer81395)


Findings in Java Class: com.google.android.exoplayer2.upstream.cache.CacheDataSource

	 in Method: void openNextSource(com.google.android.exoplayer2.upstream.DataSpec,boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $r14 = interfaceinvoke $r10.<com.google.android.exoplayer2.upstream.DataSource: android.net.Uri getUri()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $l1 = interfaceinvoke $r10.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r12)


	 in Method: int read(byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #8535be901970bf71d30d3258a347bb38cb9d71d55f657c8096ce821679120922)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke r0.<com.google.android.exoplayer2.upstream.cache.CacheDataSource: void handleBeforeThrow(java.lang.Throwable)>($r7)


Findings in Java Class: com.google.android.exoplayer2.upstream.DataSourceInputStream

	 in Method: void checkOpened()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: interfaceinvoke $r2.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #8535be901970bf71d30d3258a347bb38cb9d71d55f657c8096ce821679120922)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: interfaceinvoke $r2.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r1)


Findings in Java Class: com.google.android.exoplayer2.upstream.StatsDataSource

	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #8535be901970bf71d30d3258a347bb38cb9d71d55f657c8096ce821679120922)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $l0 = interfaceinvoke $r4.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $l0 = interfaceinvoke $r4.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r1)


Findings in Java Class: com.google.android.exoplayer2.extractor.DefaultExtractorInput

	 in Method: int readFromUpstream(byte[],int,int,int,boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), java.io.InputStream: int read(), javax.crypto.CipherInputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[]), java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: $i0 = interfaceinvoke $r2.<com.google.android.exoplayer2.upstream.DataReader: int read(byte[],int,int)>($r1, $i0, $i1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #8535be901970bf71d30d3258a347bb38cb9d71d55f657c8096ce821679120922)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $i0 = interfaceinvoke $r2.<com.google.android.exoplayer2.upstream.DataReader: int read(byte[],int,int)>($r1, $i0, $i1)


Findings in Java Class: com.google.android.exoplayer2.upstream.crypto.AesCipherDataSource

	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $l0 = interfaceinvoke $r5.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r1)


Findings in Java Class: com.google.android.exoplayer2.upstream.ResolvingDataSource

	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #8535be901970bf71d30d3258a347bb38cb9d71d55f657c8096ce821679120922)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $l0 = interfaceinvoke $r3.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $l0 = interfaceinvoke $r3.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r1)


Findings in Java Class: com.facebook.soloader.SoLoader$1

	 in Method: java.lang.String getLibHash(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #754e5d7cffb123504d28dca39f70edb25fa4f5f063ef3f75cb979dd3965e8f7b)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #754e5d7cffb123504d28dca39f70edb25fa4f5f063ef3f75cb979dd3965e8f7b)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer82321)


Findings in Java Class: com.nextcloud.talk.utils.ssl.SSLSocketFactoryCompat

	 in Method: void <init>(javax.net.ssl.KeyManager,javax.net.ssl.X509TrustManager)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #8660bcab2a4508299f98098a075b7837df67d3b5b53319929e3a6770b357c710)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer96509)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r5, $r7, varReplacer96511)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r5, $r7, varReplacer96511)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r5, $r7, varReplacer96511)


Findings in Java Class: com.google.android.exoplayer2.source.hls.Aes128DataSource

	 in Method: javax.crypto.Cipher getCipherInstance()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ac6040a6c942d9e9eaa6d7090cef0f157d08d12c099c52aa4cb32f40233874b8)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer97639)


	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer82170)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer82169, $r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: com.google.common.hash.MacHashFunction$MacHasher

	 in Method: com.google.common.hash.HashCode hash()
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #6dfe92fb5526abc60bb706d9a02bc7267374c73eb4cfabeec75ce74a35a0603d)
			Unexpected call to method <javax.crypto.Mac: byte[] doFinal()> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: byte[] doFinal(byte[]),javax.crypto.Mac: void update(java.nio.ByteBuffer),javax.crypto.Mac: void update(byte),javax.crypto.Mac: void update(byte[],int,int)
			at statement: $r2 = virtualinvoke $r1.<javax.crypto.Mac: byte[] doFinal()>()


Findings in Java Class: com.google.common.hash.AbstractHashFunction

	 in Method: com.google.common.hash.HashCode hashObject(java.lang.Object,com.google.common.hash.Funnel)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6dfe92fb5526abc60bb706d9a02bc7267374c73eb4cfabeec75ce74a35a0603d)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $r4 = interfaceinvoke $r3.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f4e887286d0504cb5722b1da9a4eac06d6ea434977af7216dbf1f6217c285838)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = interfaceinvoke $r3.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()


Findings in Java Class: com.google.common.hash.AbstractCompositeHashFunction

	 in Method: com.google.common.hash.Hasher newHasher()
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6dfe92fb5526abc60bb706d9a02bc7267374c73eb4cfabeec75ce74a35a0603d)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $r4 = specialinvoke r0.<com.google.common.hash.AbstractCompositeHashFunction: com.google.common.hash.Hasher fromHashers(com.google.common.hash.Hasher[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f4e887286d0504cb5722b1da9a4eac06d6ea434977af7216dbf1f6217c285838)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = specialinvoke r0.<com.google.common.hash.AbstractCompositeHashFunction: com.google.common.hash.Hasher fromHashers(com.google.common.hash.Hasher[])>($r1)


Findings in Java Class: com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher

	 in Method: com.google.common.hash.HashCode hash()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #f4e887286d0504cb5722b1da9a4eac06d6ea434977af7216dbf1f6217c285838)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #f4e887286d0504cb5722b1da9a4eac06d6ea434977af7216dbf1f6217c285838)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest$okio(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ea0840b94e95f767ea25aa35611d3fdb379cdb84c49be399c4ff7525b48fb7fc)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ea0840b94e95f767ea25aa35611d3fdb379cdb84c49be399c4ff7525b48fb7fc)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: okio.SegmentedByteString

	 in Method: okio.ByteString digest$okio(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r6 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: com.google.android.exoplayer2.upstream.cache.CachedContentIndex$LegacyStorage

	 in Method: boolean readFile(java.util.HashMap,android.util.SparseArray)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #11475a025e41e25a0676f36d6f683f7f0992b68493547e3fe8eb17ae2bb7c8fe)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r10.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r20)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r16.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r15)


	 in Method: void writeFile(java.util.HashMap)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #919c51f2bd19b9457d5bf9c2c9405d711ebbdabf4e0bbd308cef071c75ff011b)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: specialinvoke $r2.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r14)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


Findings in Java Class: okhttp3.internal.platform.Platform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #51187e15b17ece5ea25d847b89e21e770ca5ed96f8b14f9b26aa5ebf5071eeef)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer109724)


	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer100306, $r3, varReplacer100306)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer100306, $r3, varReplacer100306)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer100306, $r3, varReplacer100306)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer100281)


Findings in Java Class: okhttp3.internal.platform.ConscryptPlatform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #48c296c349a55bc9ba5816a0a59720ca92fef2769c0c8c3572539deabe316171)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer109728, $r2)


	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer100308, $r3, varReplacer100308)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer100295)


Findings in Java Class: okhttp3.internal.platform.BouncyCastlePlatform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #c11a9965170f5447e3995bb380c014feb323a81f8888df1f2a5f35aa8245aab7)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer109730, $r2)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer100301)


Findings in Java Class: org.conscrypt.SSLUtils

	 in Method: java.security.cert.X509Certificate decodeX509Certificate(java.security.cert.CertificateFactory,byte[])
		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #60a4d5bb81f016615b5ca6eccafbb0d948dba0ec997306f624aee4c373c1c0c2)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r3 = virtualinvoke $r2.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r1)


	 in Method: java.security.cert.X509Certificate[] decodeX509CertificateChain(byte[][])
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #60a4d5bb81f016615b5ca6eccafbb0d948dba0ec997306f624aee4c373c1c0c2)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r4 = staticinvoke <org.conscrypt.SSLUtils: java.security.cert.X509Certificate decodeX509Certificate(java.security.cert.CertificateFactory,byte[])>($r2, $r3)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #60a4d5bb81f016615b5ca6eccafbb0d948dba0ec997306f624aee4c373c1c0c2)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r2 = staticinvoke <org.conscrypt.SSLUtils: java.security.cert.CertificateFactory getCertificateFactory()>()


Findings in Java Class: okhttp3.Cache$Entry

	 in Method: java.util.List readCertificateList(okio.BufferedSource)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #8d53536211d4a8f8abac69df11a1643ba9bc458462801dd368340cd1bbec58dd)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r6 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer118288)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #8d53536211d4a8f8abac69df11a1643ba9bc458462801dd368340cd1bbec58dd)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r11 = virtualinvoke $r6.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r10)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #8d53536211d4a8f8abac69df11a1643ba9bc458462801dd368340cd1bbec58dd)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r11 = virtualinvoke $r6.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r10)


Findings in Java Class: androidx.biometric.CryptoObjectUtils

	 in Method: androidx.biometric.BiometricPrompt$CryptoObject createFakeCryptoObject()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #2b807e7a2809f3220041434ae75bdfc8046a1c13f8b66922a557b8c15b6986e1)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer127523)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer127530, $r5)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #320e7654bae21debc67f58b4ab7c5bed26fd9a58ee9b4a0a5a5647f08f8a90d7)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer127529)


Findings in Java Class: com.nextcloud.talk.utils.ssl.MagicTrustManager

	 in Method: void <init>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r11.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer96471)


Findings in Java Class: org.conscrypt.OpenSSLX509Certificate

	 in Method: void verifyInternal(java.security.PublicKey,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


	 in Method: java.security.PublicKey getPublicKey()
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r9)


Findings in Java Class: com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher

	 in Method: void <init>(int,byte[],long,long)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: org.conscrypt.ct.CTLogInfo

	 in Method: org.conscrypt.ct.VerifiedSCT$Status verifySingleSCT(org.conscrypt.ct.SignedCertificateTimestamp,org.conscrypt.ct.CertificateEntry)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r10.<java.security.Signature: void initVerify(java.security.PublicKey)>($r11)


Findings in Java Class: com.google.common.hash.MacHashFunction

	 in Method: javax.crypto.Mac getMac(java.lang.String,java.security.Key)
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void init(java.security.Key)>($r2)


Findings in Java Class: org.conscrypt.OpenSSLECKeyPairGenerator

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)


Findings in Java Class: okhttp3.internal.platform.OpenJSSEPlatform

	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer100288)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 104

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 18
	RequiredPredicateError: 35
	TypestateError: 10
	IncompleteOperationError: 25
=====================================================================
