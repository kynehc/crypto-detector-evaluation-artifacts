0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r8
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r8.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r6, $r1)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA256(byte[][])>
		SHA-256: 93b49b2982758cf380dd047e9b2256c35ccb08ac89a748544ec976db0d8db2b0
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA256(byte[],int,int)>
		SHA-256: c5c902ac23aa05e811c2c1f7bb7c6e1ba90f1bed89ad6606942d1512a0d9990b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer54178)
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA512(byte[],byte[])>
		SHA-256: a725853f4706260a5e769ffdb366e67db12fabd984418491762d44ea90b13eff
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer123050)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: javax.crypto.Cipher getCipherInstance()>
		SHA-256: dca495b902f1d25fcbd9bbe3b8662282a955b8022937e3064732d8fb12d265f6
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA1(java.nio.ByteBuffer,int,int)>
		SHA-256: 74daf94868a734075009048e83f219b0aae5c10b6e4340571d26422d8fe6b83
		Secure: false
	Object:
		Variable: $r47
		Type: javax.crypto.Cipher
		Statement: $r47 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer152664)
		Method: <org.telegram.ui.PassportActivity: void lambda$createRequestInterface$16(android.view.View)>
		SHA-256: 772159a96783adee289d8e559bf59c207571bd8df3b858bd06fcfdd2fc14e479
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18278)
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA256(byte[][])>
		SHA-256: cc1328f03cfbd5d6debf273b34dc135e979908b9077e4fdcfeadf666f8c83afd
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: 74efd2ca2013e34a93725a12b2428b082241b229a3b9c59222ec28d5225e0d5
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA512(byte[],byte[])>
		SHA-256: f799f7ff126647872c6291e80e7e77e5dce1dde2083ec2340e84044d7db7e23c
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20055)
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA256(byte[],int,int,java.nio.ByteBuffer,int,int)>
		SHA-256: 94c3c186d1849d598666bb117233113e746193dd1813bf1d36b958589bbadb9c
		Secure: true
	Object:
		Variable: varReplacer152663
		Type: java.lang.String
		Statement: $r43 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer152663)
		Method: <org.telegram.ui.PassportActivity: void lambda$createRequestInterface$16(android.view.View)>
		SHA-256: 6196e59ec10e465fc9f5e4d1ee15e4597a338eb2d60f34968ae2448a5002933d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer24608)
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA512(byte[],byte[],byte[])>
		SHA-256: 7781cd890a155ba6e6cfc8aa6bd9145cb11deebb9786420036b593ac4b31176f
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA1(byte[],int,int)>
		SHA-256: 446328cb858d08348f89a8199875ab84833e16ef5324d1bae68d74313a23d1b6
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20058)
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA1(byte[],int,int)>
		SHA-256: ab2bfa6cfb5f2e30011add7c29570e17891a339cdb7550d16c62a904c8179181
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6444)
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA256(byte[],int,int)>
		SHA-256: a849dacdae5f4f59eb31efd86d1cc07f162b4b5d7a37f31551b8334043525cb3
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3223)
		Method: <org.telegram.messenger.Utilities: java.lang.String MD5(java.lang.String)>
		SHA-256: 90c769983e771da24f92b2fccdb6d77e860324cadbcd370e8564cd0121a5d378
		Secure: false
	Object:
		Variable: $r14
		Type: byte[]
		Statement: $r14 = virtualinvoke $r22.<java.security.MessageDigest: byte[] digest(byte[])>($r14)
		Method: <org.telegram.messenger.FileUploadOperation: void startUploadRequest()>
		SHA-256: e7027c7b10db0f8c9897594fe00a714f2c6de15302b439fd1788d1219e0bd9e2
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer107618)
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA1(java.nio.ByteBuffer,int,int)>
		SHA-256: d04a37c419e3f32a72bc5ce569cfd611445f303a40a658c3244a5a599bbaa5c8
		Secure: false
	Object:
		Variable: varReplacer95095
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer95095)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: 35a410a75ce82a66132d330ab8012fe4505cc10bd9b7854cf97743ddbfca785f
		Secure: false
	Object:
		Variable: $r22
		Type: java.security.MessageDigest
		Statement: $r22 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer45511)
		Method: <org.telegram.messenger.FileUploadOperation: void startUploadRequest()>
		SHA-256: 59cf0f12abb570dff2d2f4200f579ba331aca765bd1508b01eaa1c9f9ba21e53
		Secure: false
	Object:
		Variable: $r44
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r44.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r35)
		Method: <org.telegram.ui.PassportActivity: void lambda$createRequestInterface$16(android.view.View)>
		SHA-256: 3f3c80c41dbb3063910a7003d70274f7c44f4ba8574a0998bbbdad3bff565aff
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA256(byte[],int,int,java.nio.ByteBuffer,int,int)>
		SHA-256: 43de596602b4076dccb8e75a64385ee44431a9d65982e5eb1a07f5c852e1bb46
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer95095)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: c968b28fb870774512c7fb715a725e94a8529cdbd2a02a5c03b893d4285eaef2
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA512(byte[],byte[],byte[])>
		SHA-256: a81b473288a4fe5fc08d7756d0337ed7038166c4fa43f8265f138b34f2034f77
		Secure: true
	Object:
		Variable: $r45
		Type: java.security.PublicKey
		Statement: $r45 = virtualinvoke $r43.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r44)
		Method: <org.telegram.ui.PassportActivity: void lambda$createRequestInterface$16(android.view.View)>
		SHA-256: f1ef85818d202200fbc8310c88934fa1de108b5305189a62c099e112d0c53b9b
		Secure: false
	Object:
		Variable: $r43
		Type: java.security.KeyFactory
		Statement: $r43 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer152663)
		Method: <org.telegram.ui.PassportActivity: void lambda$createRequestInterface$16(android.view.View)>
		SHA-256: ceda8935f132c682d4d606d282a6e68d4d26821845e6e34e41986462e3b9510f
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <org.telegram.messenger.Utilities: java.lang.String MD5(java.lang.String)>
		SHA-256: 3841f076f52a81d10896a877971c89e55191f769babe9823c60ab9897adde0fa
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.cert.CertificateFactory
		Statement: $r9 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer9793)
		Method: <org.telegram.messenger.AndroidUtilities: java.lang.String getCertificateSHA256Fingerprint()>
		SHA-256: e2084d5520bcd1f9219c8ffa483e4fea0f4b65a2a964f202b40649718b26753a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.telegram.messenger.Utilities: void <clinit>()>
		SHA-256: 907a90307bb98e0c29df56c424f8ddb4650b06aa7c1f758b1a13b224743a1047
		Secure: true

Findings in Java Class: com.stripe.android.net.StripeSSLSocketFactory

	 in Method: void <init>()
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>.
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


Findings in Java Class: org.telegram.messenger.Utilities

	 in Method: java.lang.String MD5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #90c769983e771da24f92b2fccdb6d77e860324cadbcd370e8564cd0121a5d378)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3223)


	 in Method: byte[] computeSHA256(byte[],int,int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a849dacdae5f4f59eb31efd86d1cc07f162b4b5d7a37f31551b8334043525cb3)
			Third parameter (with value 0)Variable preLenmust be  greater than 0
			at statement: virtualinvoke $r1.<java.security.MessageDigest: void update(byte[],int,int)>($r0, $i0, $i1)


	 in Method: byte[] computeSHA256(byte[][])
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #cc1328f03cfbd5d6debf273b34dc135e979908b9077e4fdcfeadf666f8c83afd)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


	 in Method: byte[] computeSHA1(byte[],int,int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ab2bfa6cfb5f2e30011add7c29570e17891a339cdb7550d16c62a904c8179181)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20058)


	 in Method: byte[] computeSHA1(java.nio.ByteBuffer,int,int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d04a37c419e3f32a72bc5ce569cfd611445f303a40a658c3244a5a599bbaa5c8)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer107618)


Findings in Java Class: org.telegram.messenger.AndroidUtilities

	 in Method: java.lang.String getCertificateSHA256Fingerprint()
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #e2084d5520bcd1f9219c8ffa483e4fea0f4b65a2a964f202b40649718b26753a)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r10 = virtualinvoke $r9.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)


Findings in Java Class: org.telegram.messenger.FileUploadOperation

	 in Method: void startUploadRequest()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #59cf0f12abb570dff2d2f4200f579ba331aca765bd1508b01eaa1c9f9ba21e53)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r22 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer45511)


Findings in Java Class: com.google.android.exoplayer2.source.hls.Aes128DataSource

	 in Method: javax.crypto.Cipher getCipherInstance()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #dca495b902f1d25fcbd9bbe3b8662282a955b8022937e3064732d8fb12d265f6)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer123050)


	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer95095)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer95097, $r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: org.telegram.ui.PassportActivity

	 in Method: void lambda$createRequestInterface$16(android.view.View)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #772159a96783adee289d8e559bf59c207571bd8df3b858bd06fcfdd2fc14e479)
			First parameter (with value "RSA/NONE/OAEPWithSHA1AndMGF1Padding") should be any of RSA/{Empty String, ECB}
			at statement: $r47 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer152664)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #772159a96783adee289d8e559bf59c207571bd8df3b858bd06fcfdd2fc14e479)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r35 = virtualinvoke $r47.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r35)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r45 = virtualinvoke $r43.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r44)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r47.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer152672, $r46)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r44.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r35)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 30

	CryptoAnalysis found the following violations. For details see description above.
	ForbiddenMethodError: 1
	ConstraintError: 7
	IncompleteOperationError: 1
	TypestateError: 2
	RequiredPredicateError: 6
=====================================================================
