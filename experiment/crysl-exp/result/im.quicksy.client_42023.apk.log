0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.SegmentedByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: 6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357
		Secure: false
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r3)
		Method: <de.measite.minidns.dnssec.algorithms.JavaSecSignatureVerifier: void <init>(java.lang.String,java.lang.String)>
		SHA-256: 22e74f537b4fa4ebe6c0554ffcb237888613831bfc374c53ea2501d0e35bf0bb
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: void encrypt(java.lang.String)>
		SHA-256: 8fd86c5a53e96c35780b9e4ea6c837db7735a66644aa7d0c726414d88e675b6
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer19856)
		Method: <de.measite.minidns.AbstractDNSClient: void <init>(de.measite.minidns.DNSCache)>
		SHA-256: 66fc484f287fafb96c71553580c249b982b948a63d82d7ddb78c7560dcb006e3
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer43574)
		Method: <org.whispersystems.curve25519.JCESecureRandomProvider: void nextBytes(byte[])>
		SHA-256: ddcd3aa4635d3d64b8d3fbd2455369db71dfaf277d451219150eb66491102832
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9271)
		Method: <eu.siacs.conversations.xmpp.jingle.JingleSocks5Transport: void lambda$send$3(eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged,eu.siacs.conversations.entities.DownloadableFile)>
		SHA-256: 125883a5c6491328bd1a9a64e0fad71da94294012b01c5138fddc2f01c127d3b
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <eu.siacs.conversations.services.MemorizingTrustManager: java.security.KeyStore loadAppKeyStore()>
		SHA-256: ea1b92c62f96aa3843af7ac4ab293ee98950902fb5e6847c9de5ad96211af3a0
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r9)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 7ac05a324707752a8fcdd9787a5fcda4e6af85c295ea6bb9f2ffcf779c41a30d
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer16740)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: void encrypt(java.lang.String)>
		SHA-256: 9910c425f329a6c7c7cd658a1996a983c8d79d1da9a33ede86d6db5d619176af
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $z0 = virtualinvoke $r7.<java.security.Signature: boolean verify(byte[])>($r2)
		Method: <de.measite.minidns.dnssec.algorithms.JavaSecSignatureVerifier: boolean verify(byte[],byte[],byte[])>
		SHA-256: f1e30a6faf65a4b834a38c62244e89293f91a21f1362b088a697b9e242472c7b
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <okio.SegmentedByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: 9d21c3f9e3f612ea7264d21dc14a8967f32993fff60292ad252f8676282c7571
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.SecureRandom
		Statement: specialinvoke $r9.<java.security.SecureRandom: void <init>()>()
		Method: <eu.siacs.conversations.services.XmppConnectionService: void onCreate()>
		SHA-256: 130a0863d98ab3a5dc55aeeda16170eca324a5140b86df3f69432dfaf89033e
		Secure: true
	Object:
		Variable: varReplacer51662
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer51662)
		Method: <org.whispersystems.libsignal.state.SessionState: org.whispersystems.libsignal.ratchet.MessageKeys removeMessageKeys(org.whispersystems.libsignal.ecc.ECPublicKey,int)>
		SHA-256: 9b7ca50cb83fbdca456f5b71dcbf7da39d1b8241b2a0b88c0997489b1e1730e8
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: a729cfd5669df603070b7ba7d05b524b10a048ab1da974a5ccb1df973521b7d3
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer16744, varReplacer16745)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: void encrypt(java.lang.String)>
		SHA-256: 67b373838cd06d1a45cbf03013eda54b7065e6270e4667d5259261e7150f08a
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer43722)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage$XmppAxolotlPlaintextMessage decrypt(eu.siacs.conversations.crypto.axolotl.XmppAxolotlSession,java.lang.Integer)>
		SHA-256: 849a9b0a6880a1b78f84bf5e69c9a1697a8da8914d5394166cd5e543fab552ba
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: d02affd279e8743b6fd64cdf0e2dd47c30a5603be2e61d5718cf63d25b2d1a15
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14960)
		Method: <eu.siacs.conversations.utils.XEP0392Helper: double angle(java.lang.String)>
		SHA-256: 1052fb249e3a080e81278914a63978c7324b7631c9360579416bd3d9b5fccf3f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer44811)
		Method: <org.whispersystems.libsignal.kdf.DerivedMessageSecrets: void <init>(byte[])>
		SHA-256: 8027d1276e8fa839a7c6045c5c091c95f335f3d8717afc6629511b411e01ef08
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r1.<java.security.SecureRandom: int nextInt(int)>(varReplacer24437)
		Method: <eu.siacs.conversations.xmpp.jingle.DirectConnectionUtils: java.util.List getLocalCandidates(eu.siacs.conversations.xmpp.Jid)>
		SHA-256: 4c180c35650841e71cb176b2019d2da139317e467bc3d82f65d020b5c65f452c
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer44825)
		Method: <org.whispersystems.libsignal.protocol.SignalMessage: byte[] getMac(org.whispersystems.libsignal.IdentityKey,org.whispersystems.libsignal.IdentityKey,javax.crypto.spec.SecretKeySpec,byte[])>
		SHA-256: e1b87fbe1389d41e699717bab33c5f20b12039117903747611c51c85c83a1e5c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6215)
		Method: <eu.siacs.conversations.utils.CryptoHelper: java.lang.String getFingerprintCert(byte[])>
		SHA-256: 2e96f17fc2d0c16f4e6371e6bd60ba10547aacf49d826136152f48f1c53ba7e1
		Secure: false
	Object:
		Variable: varReplacer16743
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer16743)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: void encrypt(java.lang.String)>
		SHA-256: e42e4c01366497946ca2bd941ece050dbef49f90715057a65dc1f3f433d69396
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <eu.siacs.conversations.utils.CryptoHelper: java.lang.String getFingerprint(java.lang.String)>
		SHA-256: 91fd492baa91bed7f615dee0756947cd79e657310577765349ccc25936c69ae2
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.KeyGenerator
		Statement: $r0 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer8936)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: byte[] generateKey()>
		SHA-256: d979ac780bc36bf99d290bfe76affe30a0e1f6daf64953a78353e85750575525
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer43729)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage$XmppAxolotlPlaintextMessage decrypt(eu.siacs.conversations.crypto.axolotl.XmppAxolotlSession,java.lang.Integer)>
		SHA-256: 63b86148c80163a38f0cfc6009d2045f1e6da1fa937cd3ffcc0cf7d50b4f4aa7
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1508)
		Method: <eu.siacs.conversations.utils.CryptoHelper: java.lang.String getFingerprint(java.lang.String)>
		SHA-256: 5d3d62da7429476dd207a5d5df44ec85a8e674cf01193d7283b7c4e78c68c6e7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer44810)
		Method: <org.whispersystems.libsignal.kdf.DerivedMessageSecrets: void <init>(byte[])>
		SHA-256: a4507f89a12790aee39ba3ee3ac88a4df4d42922e0a3b6cc1c57a6e182c9a4fa
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r3, $r8, $r6, varReplacer44969)
		Method: <de.measite.minidns.dnssec.algorithms.ECDSASignatureVerifier: void <init>(java.math.BigInteger[],int,java.lang.String)>
		SHA-256: d077872c6489f7e0e2198acb11cd0d7deb32e249af3c9a3b055bbec49c93ff0d
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <org.whispersystems.libsignal.ratchet.ChainKey: byte[] getBaseMaterial(byte[])>
		SHA-256: 8fb4835c5bab5ec63a45e8872f59bf24a48f2f4c6d745dfc352aacb8be38f264
		Secure: false
	Object:
		Variable: varReplacer43729
		Type: java.lang.String
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer43729)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage$XmppAxolotlPlaintextMessage decrypt(eu.siacs.conversations.crypto.axolotl.XmppAxolotlSession,java.lang.Integer)>
		SHA-256: b1b8b629473e83a09f11609e6210cc115a5c3ddb0e4df17175fef78849f2ed7e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer48008)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] expand(byte[],byte[],int)>
		SHA-256: 88b46ac1aa1ae62d0c1fc47b099e75bbf5cb5384246bae271c67d9aa9867f963
		Secure: false
	Object:
		Variable: varReplacer18181
		Type: java.lang.String
		Statement: specialinvoke $r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r18, varReplacer18181)
		Method: <eu.siacs.conversations.services.ExportBackupService: java.util.List export()>
		SHA-256: 4e0bd44eb64d06e484566bcd07165effb31020d9416fc379bc72662158513d39
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.MessageDigest
		Statement: $r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer34717)
		Method: <eu.siacs.conversations.persistance.FileBackend: eu.siacs.conversations.xmpp.pep.Avatar getStoredPepAvatar(java.lang.String)>
		SHA-256: 53265761d060d236096dec687c38096d505a364c473b14232c70ea19c642a9c2
		Secure: false
	Object:
		Variable: $r8
		Type: java.lang.String
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r8)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: fb24971f565cb4681c3c1e192adc31a35b4a987353817f6def6d3d265ac75389
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <de.measite.minidns.dnssec.algorithms.JavaSecDigestCalculator: void <init>(java.lang.String)>
		SHA-256: 27f10d36f956bb46cbfe64756f259ad7962bc65acc218ac50caa3410dcd06af5
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer19066)
		Method: <eu.siacs.conversations.services.MemorizingTrustManager: javax.net.ssl.X509TrustManager getTrustManager(java.security.KeyStore)>
		SHA-256: 2600345ff84660dc478d04f28fceec7e7c865f3440a1d6c3052008ec3f817148
		Secure: false
	Object:
		Variable: varReplacer51661
		Type: java.lang.String
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer51661)
		Method: <org.whispersystems.libsignal.state.SessionState: org.whispersystems.libsignal.ratchet.MessageKeys removeMessageKeys(org.whispersystems.libsignal.ecc.ECPublicKey,int)>
		SHA-256: 3e655ccbfdd663875ef349e3d772c273bf637363f5b15cb7152894949b6ed8bb
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: f325059ee6f08c9776202e677308b0f19ca0767a6821e36b4f64a531d072fa45
		Secure: false
	Object:
		Variable: $r28
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r28.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r23, $r25)
		Method: <eu.siacs.conversations.services.ExportBackupService: java.util.List export()>
		SHA-256: a495b3968c68714e9542a7b15292351f2229178daf52bfd6975517581b87a662
		Secure: false
	Object:
		Variable: varReplacer44811
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer44811)
		Method: <org.whispersystems.libsignal.kdf.DerivedMessageSecrets: void <init>(byte[])>
		SHA-256: 823578094ff552c9b938489fc051c3e91fa0344bf7c394696cb874e39a29884d
		Secure: false
	Object:
		Variable: varReplacer48008
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer48008)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] expand(byte[],byte[],int)>
		SHA-256: a0fb2ec299e51dde3d17624a9aedac61577cb7c40421ade3c45b61a3d459663d
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher: com.google.common.hash.HashCode hash()>
		SHA-256: b224f5282192a2c7331d78a8bf3747030318d37863a6045610a9b207c94f35af
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.MessageDigest
		Statement: $r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer39507)
		Method: <eu.siacs.conversations.entities.ServiceDiscoveryResult: byte[] mkCapHash()>
		SHA-256: ac846df56e7ada9a4dbcde2a997c3496550b396311b4d2660e859dac91402e
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r7.<java.security.Signature: boolean verify(byte[])>($r2)
		Method: <de.measite.minidns.dnssec.algorithms.JavaSecSignatureVerifier: boolean verify(byte[],byte[],byte[])>
		SHA-256: fc135b08a70d678ef72fc96ee1a53136e76bd520f8ffb5d3883c91a74b3b0495
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.DigestOutputStream
		Statement: specialinvoke $r2.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r13, $r14)
		Method: <eu.siacs.conversations.persistance.FileBackend: eu.siacs.conversations.xmpp.pep.Avatar getStoredPepAvatar(java.lang.String)>
		SHA-256: ccffdc56aeedf26373126522c29f3f81bc4d43fe45704cb92d71aa4d0ea63c8f
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] extract(byte[],byte[])>
		SHA-256: 77738c0a376bd1be5b6a41999e448cb2557ed8c2bb6bfe91df3f0e78b78e87b1
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <eu.siacs.conversations.crypto.sasl.DigestMd5: java.lang.String getResponse(java.lang.String)>
		SHA-256: 2826da7562f2c1ee744517e4499fdf17272e8a80439f44a4573bde0ec542ccd4
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 1027fce20723454b26980f38c5edb26bcec19bffa5b6443c75459b577c51d460
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <eu.siacs.conversations.crypto.sasl.DigestMd5: java.lang.String getResponse(java.lang.String)>
		SHA-256: 2826da7562f2c1ee744517e4499fdf17272e8a80439f44a4573bde0ec542ccd4
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 316cbc86e080130334eaabd60025d96084375d0058312a103cd3255ba6f0aeb
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.DigestOutputStream
		Statement: specialinvoke $r8.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r6, $r7)
		Method: <eu.siacs.conversations.persistance.FileBackend: eu.siacs.conversations.xmpp.pep.Avatar getPepAvatar(android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat,int)>
		SHA-256: 12f4c30f4e2fa8f1370f65137a6288fe3ee8bd4402f6cd2f15dce8d3606233fa
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 84f17b7e3930c76e2b174d27b9668ee8d3209ae5512e2c539d541e6ef4265515
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r9)
		Method: <eu.siacs.conversations.generator.AbstractGenerator: java.lang.String getCapHash(eu.siacs.conversations.entities.Account)>
		SHA-256: 40e6ba7def175b601af0ebe658e12dbafe663826d23bcc0794776a9d5b369c8d
		Secure: false
	Object:
		Variable: $r25
		Type: javax.crypto.Cipher
		Statement: $r25 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer18177)
		Method: <eu.siacs.conversations.services.ExportBackupService: java.util.List export()>
		SHA-256: f4fda55be27f23263307bb556a6e8f30656aab919e458e293c9e1e3e2d72196e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <org.whispersystems.libsignal.protocol.SignalMessage: byte[] getMac(org.whispersystems.libsignal.IdentityKey,org.whispersystems.libsignal.IdentityKey,javax.crypto.spec.SecretKeySpec,byte[])>
		SHA-256: 5afcb2de494e113f2c3e8ca8d1193526f79296059cd74267f4045387b4e53bb1
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.SecureRandom
		Statement: specialinvoke $r11.<java.security.SecureRandom: void <init>()>()
		Method: <eu.siacs.conversations.services.QuickConversationsService: void createAccountAndWait(io.michaelrocks.libphonenumber.android.Phonenumber$PhoneNumber,long)>
		SHA-256: 77142e02c96210fa6f4378e9bd8bdae79219b39861e60195e8fb27b1dd653d5d
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <org.whispersystems.libsignal.kdf.DerivedMessageSecrets: void <init>(byte[])>
		SHA-256: 266602d7632e3c738b2dbca5b04568563deadca842aad0961eeb5315d5cef995
		Secure: false
	Object:
		Variable: $r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer51661)
		Method: <org.whispersystems.libsignal.state.SessionState: org.whispersystems.libsignal.ratchet.MessageKeys removeMessageKeys(org.whispersystems.libsignal.ecc.ECPublicKey,int)>
		SHA-256: 81e7e53f92cd204f414e7f0f61167be4393fb7cc7255f12588ef8f9eab6b5fe3
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: e75571d33abb1b5e330ac5b78fcc009ac5fa3b4053acda20dad8234c0598d879
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer43725, varReplacer43726)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage$XmppAxolotlPlaintextMessage decrypt(eu.siacs.conversations.crypto.axolotl.XmppAxolotlSession,java.lang.Integer)>
		SHA-256: 50b571ac37d00777371005231a234833af2ec30181a9a2c6786483d03c6a9e3
		Secure: false
	Object:
		Variable: $r17
		Type: byte[]
		Statement: virtualinvoke $r8.<java.security.SecureRandom: void nextBytes(byte[])>($r17)
		Method: <eu.siacs.conversations.services.ExportBackupService: java.util.List export()>
		SHA-256: e596b2cc18751afc6f64fb4527f4c42835b79b48259bab147195cbd537c4f4e4
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.google.common.hash.MessageDigestHashFunction: java.security.MessageDigest getMessageDigest(java.lang.String)>
		SHA-256: f4e887286d0504cb5722b1da9a4eac06d6ea434977af7216dbf1f6217c285838
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.cert.CertificateFactory
		Statement: $r0 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer40137)
		Method: <org.conscrypt.SSLUtils: java.security.cert.CertificateFactory getCertificateFactory()>
		SHA-256: 77704be9f2f5883f66d0fc07ea78ba61b70fed0e1ec00b6c2dc59314a675c4d0
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer22348)
		Method: <eu.siacs.conversations.utils.SSLSocketHelper: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 9a05e215cecda4db812f7655273a726cf9b54c81c9c8e72802fcae15899c2567
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.common.hash.MessageDigestHashFunction$MessageDigestHasher: com.google.common.hash.HashCode hash()>
		SHA-256: b224f5282192a2c7331d78a8bf3747030318d37863a6045610a9b207c94f35af
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <eu.siacs.conversations.crypto.sasl.DigestMd5: java.lang.String getResponse(java.lang.String)>
		SHA-256: 2826da7562f2c1ee744517e4499fdf17272e8a80439f44a4573bde0ec542ccd4
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.SecretKey
		Statement: $r1 = virtualinvoke $r0.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: byte[] generateKey()>
		SHA-256: f1baac84402a44fd10ac6acabbf8c0d9f4c76671def6c845ee93b9c32bd60c50
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <eu.siacs.conversations.xmpp.jingle.JingleConnectionManager: java.lang.String nextRandomId()>
		SHA-256: 407d5d9442e95cccbf94da8ee1ba431ba42c1d3807e704042386fca547d465a4
		Secure: true
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r0.<java.security.SecureRandom: int nextInt(int)>(varReplacer41626)
		Method: <org.whispersystems.libsignal.util.KeyHelper: int generateRegistrationId(boolean)>
		SHA-256: 7c4ea29f8cd631a319584affd3744a5561e4ae94f8db3bd4fe1de374278801ad
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer48006)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] expand(byte[],byte[],int)>
		SHA-256: f8c85db63c12f47480fdf8d85efdf2ed49bd91c1e5579beaf1ef6ccf328f98c1
		Secure: false
	Object:
		Variable: $i1
		Type: int
		Statement: $i1 = virtualinvoke $r1.<java.security.SecureRandom: int nextInt(int)>($i1)
		Method: <eu.siacs.conversations.utils.CryptoHelper: java.lang.String createPassword(java.security.SecureRandom)>
		SHA-256: 1cf14069a9d064319f779def772d986f3f94a7a3c2b0fb228ce6e99f41864d02
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer48005)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] extract(byte[],byte[])>
		SHA-256: 8e224eb69b669dda244d064d3825a63eef250328ab75acbe61e2288e5badf243
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: ae39b036c5eeeba58d380660f68e23806935f12d2f5c9cefe65440425aa34f4a
		Secure: false
	Object:
		Variable: $r18
		Type: byte[]
		Statement: virtualinvoke $r8.<java.security.SecureRandom: void nextBytes(byte[])>($r18)
		Method: <eu.siacs.conversations.services.ExportBackupService: java.util.List export()>
		SHA-256: 60255fe302c6a79211ceb454fb138ab92dacdc4619493d48cc308999f3e67b40
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <okio.ByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: d4bf5cc88c644b9a20ac4aef1746c1f0c9ae862102406e7436b8866c875859ff
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer24806)
		Method: <eu.siacs.conversations.xmpp.jingle.JingleInBandTransport: void send(eu.siacs.conversations.entities.DownloadableFile,eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged)>
		SHA-256: fb0a198e69c79f86f618a1bbda2f612ba743425776cf460c43b5fb08bde5a48b
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: byte[] generateIv()>
		SHA-256: fe0fead027707dbb9cb79541223d7eed971b9549c91abba553bacafb40bf0d8b
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer44824)
		Method: <org.whispersystems.libsignal.SessionCipher: javax.crypto.Cipher getCipher(int,javax.crypto.spec.SecretKeySpec,javax.crypto.spec.IvParameterSpec)>
		SHA-256: 3a22486844f144802713e9bbca01ef25e675d1b936a44ab6e2d0384569fa6735
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer24460)
		Method: <eu.siacs.conversations.xmpp.jingle.JingleInBandTransport: void receive(eu.siacs.conversations.entities.DownloadableFile,eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged)>
		SHA-256: 6d122b83cd93a9ad44eff2d3e453f62fa3917b3d021023f663ebe1bca9df9def
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer44808)
		Method: <org.whispersystems.libsignal.ratchet.ChainKey: byte[] getBaseMaterial(byte[])>
		SHA-256: f088a9d4070303bd69a867e33125a96410749a87903cb5e4affbddd54e4897c4
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer22349)
		Method: <eu.siacs.conversations.utils.SSLSocketHelper: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 99cdc1f39ba61b10cdac41d9914ce4d30cce1c4472464ecb311c15dbfb17510e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: c3dcfb07eabeaead2afa7b41e33d56187e303e14a7184c21b7bac99836f2c278
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyFactory
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r8)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 6635af12fb8498a7bf018ada279831a6e3024bb07fe12c7daed2b6fbc372e6bb
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 9d110d3f3943f5f1538d33e3d18932b71ca7accf2f86c174ab417a2b10712fb0
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r2, varReplacer18236, varReplacer18237)
		Method: <eu.siacs.conversations.services.ExportBackupService: byte[] getKey(java.lang.String,byte[])>
		SHA-256: 6639edadadc3a3851195cc3a0a8b991c3e7b6bb0d9021b94d5270e8a3cc6e96d
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9394)
		Method: <eu.siacs.conversations.xmpp.jingle.JingleSocks5Transport: void lambda$receive$4(eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged,eu.siacs.conversations.entities.DownloadableFile)>
		SHA-256: e1646a2dd17b10305fc68b8e9952d88048a3185646dd6ba83a207986ca15c12f
		Secure: false
	Object:
		Variable: $r27
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r27.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r17)
		Method: <eu.siacs.conversations.services.ExportBackupService: java.util.List export()>
		SHA-256: daa4f88d77e41256e7f291942b81ab1b5445af17392e0ccb4fcaca7e9f110a28
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] extract(byte[],byte[])>
		SHA-256: 361eed9cd14e6ff84c1daa2451338ec5c4dd793da69a1733393b9a61bdf2d763
		Secure: false
	Object:
		Variable: $r26
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r18, varReplacer18181)
		Method: <eu.siacs.conversations.services.ExportBackupService: java.util.List export()>
		SHA-256: c5a4921a1f4d096300bda202f26f65aeab173ffa5e756dafa2330b8e7093159b
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer24783)
		Method: <eu.siacs.conversations.persistance.FileBackend: eu.siacs.conversations.xmpp.pep.Avatar getPepAvatar(android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat,int)>
		SHA-256: 2393c14e5a7e71684e52785aa07b2a397e233ec376f5a327c3804df674b3c0b
		Secure: false
	Object:
		Variable: $r14
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage$XmppAxolotlPlaintextMessage decrypt(eu.siacs.conversations.crypto.axolotl.XmppAxolotlSession,java.lang.Integer)>
		SHA-256: 6de0974fe372410495adff952b9a5f55927e8003f0f1ec04fc1d7989588ebd7e
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer32474)
		Method: <eu.siacs.conversations.generator.AbstractGenerator: java.lang.String getCapHash(eu.siacs.conversations.entities.Account)>
		SHA-256: 5a5d8e4d794cea73e528b5b21f4bde6d8dbdb4b51d96f02e80388441b2558c76
		Secure: false
	Object:
		Variable: $r15
		Type: byte[]
		Statement: $r15 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <eu.siacs.conversations.xmpp.jingle.JingleSocks5Transport: void lambda$send$3(eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged,eu.siacs.conversations.entities.DownloadableFile)>
		SHA-256: d9b3293a70163c23f7231e7cfed48db45aefd0420120fd766ad97b2db682a0c
		Secure: false
	Object:
		Variable: $r20
		Type: java.security.MessageDigest
		Statement: $r20 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18474)
		Method: <eu.siacs.conversations.persistance.FileBackend: boolean save(eu.siacs.conversations.xmpp.pep.Avatar)>
		SHA-256: 73a316bc193c326ff3e4b7417142f95295d2d943e6dde2c94d497642cb9747e5
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <eu.siacs.conversations.utils.CryptoHelper: java.lang.String getFingerprintCert(byte[])>
		SHA-256: 30f2db8e38cb5c7dd01e2f6da37baa322f0e0f90e9ff398874d3725dbf7fef72
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.MessageDigest
		Statement: $r13 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer22470)
		Method: <eu.siacs.conversations.crypto.sasl.DigestMd5: java.lang.String getResponse(java.lang.String)>
		SHA-256: d15e9b05e814c02f6ba0f2e27f021d5ce1e6d4b99042f1768025cf66bf603692
		Secure: false
	Object:
		Variable: varReplacer44810
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer44810)
		Method: <org.whispersystems.libsignal.kdf.DerivedMessageSecrets: void <init>(byte[])>
		SHA-256: d4a8a5596496eb7abff4fea234007ae51f3f40cf03f9381883374df567a8ead8
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer25712)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 461649be004cb0c2988df6eb288b54c2baf678314a99d618591121f8d6db87ef
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] expand(byte[],byte[],int)>
		SHA-256: 3e233786151d239434b197b383e2e2f3502c681ec99902a2eeadf3d8d687d1b
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer48004)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] extract(byte[],byte[])>
		SHA-256: b9fa4a954f77beb179517744b1477b2e3a344cf37068f2a5c90be47704873856
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <de.measite.minidns.AbstractDNSClient: void <init>(de.measite.minidns.DNSCache)>
		SHA-256: e55ecf3493dde0cec51a717d23b0a62bf835fb741f3a71cdb824afda4d2f930
		Secure: true
	Object:
		Variable: $r13
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r13.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r9, $r12, $r4, $i1)
		Method: <org.conscrypt.OpenSSLECGroupContext: java.security.spec.ECParameterSpec getECParameterSpec()>
		SHA-256: 7223ae8f08ed0dba3dafb06f8e07e30310aca7c9be856d88494b5d1bd531fdf8
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer43576)
		Method: <org.whispersystems.curve25519.JCESha512Provider: void calculateDigest(byte[],byte[],long)>
		SHA-256: e4cd0e4281c5211084b9462f76e704d2b7dce9c5d33743c73278bf840bee249d
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)
		Method: <eu.siacs.conversations.services.ExportBackupService: byte[] getKey(java.lang.String,byte[])>
		SHA-256: c1388a4c3e329948c59ea8d0162d0a62ce25800028d5e710aeb499496fb1b1a2
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer16743)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: void encrypt(java.lang.String)>
		SHA-256: 6d5efc9db242d0123d71e3d15a746824a4c0277c029229c9f35437c5639fa274
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer44809)
		Method: <org.whispersystems.libsignal.ratchet.ChainKey: byte[] getBaseMaterial(byte[])>
		SHA-256: 5ae8e0e19431e63fcffa939c5f0bbc4d392d93f979dd20f2ecec7b5d5b395d52
		Secure: false
	Object:
		Variable: $r13
		Type: byte[]
		Statement: $r13 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r13)
		Method: <eu.siacs.conversations.xmpp.jingle.JingleSocks5Transport: void <init>(eu.siacs.conversations.xmpp.jingle.JingleFileTransferConnection,eu.siacs.conversations.xmpp.jingle.JingleCandidate)>
		SHA-256: e68e9f1c45f253bea3452ebd159638c4c3d78f0ab20a8fc5630a3368fc7792dc
		Secure: false
	Object:
		Variable: varReplacer48005
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer48005)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] extract(byte[],byte[])>
		SHA-256: 6e5d198be40c3202c9ff7245ee9f89ce5f778826c0906d7e89cd38d26d5cb054
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <eu.siacs.conversations.xmpp.jingle.JingleConnectionManager: java.lang.String nextRandomId()>
		SHA-256: 1c8e17be092d492ae0c8dacfc0164f27f46f3e81795801e6534d2107dbe4098c
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKeyFactory
		Statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer18235)
		Method: <eu.siacs.conversations.services.ExportBackupService: byte[] getKey(java.lang.String,byte[])>
		SHA-256: 4116bc2450d2855eae7aa5430999163adeae2477fbfce7a48d6daccc094c4c6b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <eu.siacs.conversations.services.MemorizingTrustManager: javax.net.ssl.X509TrustManager getTrustManager(java.security.KeyStore)>
		SHA-256: 1ec4bbda4edfb989da327e5834a9a1c29d2c84382584c92e6b00d5eafbad12c7
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 5fb6984969c8c0f60ee84399ef18a49aa63648c889757c4080685ad119ecd903
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.Signature
		Statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)
		Method: <de.measite.minidns.dnssec.algorithms.JavaSecSignatureVerifier: boolean verify(byte[],byte[],byte[])>
		SHA-256: 6e5a38081a611515d4b47f0556fd9fc4356c61c58cdada912e2d4ff1f24380f7
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r3)
		Method: <de.measite.minidns.dnssec.algorithms.JavaSecSignatureVerifier: void <init>(java.lang.String,java.lang.String)>
		SHA-256: d6bb4b30cdbee7ff837ce1cc95136a9cd54ac9f5129c558d6320a140033e2fcc
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <eu.siacs.conversations.xmpp.jingle.DirectConnectionUtils: java.util.List getLocalCandidates(eu.siacs.conversations.xmpp.Jid)>
		SHA-256: 8bd21b412b02ac222334f732a1de74a6757c6ea0f18b3fd26cd92f670779924
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <eu.siacs.conversations.crypto.sasl.DigestMd5: java.lang.String getResponse(java.lang.String)>
		SHA-256: 2826da7562f2c1ee744517e4499fdf17272e8a80439f44a4573bde0ec542ccd4
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <eu.siacs.conversations.ui.CreatePublicChannelDialog: void <clinit>()>
		SHA-256: 7759a648e9eff22dd49d5ca3a4757919012052c3a7313f2feeb29894b6d7de3f
		Secure: true
	Object:
		Variable: $r25
		Type: javax.crypto.Cipher
		Statement: $r25 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer18185, varReplacer18186)
		Method: <eu.siacs.conversations.services.ExportBackupService: java.util.List export()>
		SHA-256: 441fa9ddbcb2789743d679542cb87c452e4a23ff520ebd57c0f17e2cbae08e06
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.SecureRandom
		Statement: specialinvoke $r8.<java.security.SecureRandom: void <init>()>()
		Method: <eu.siacs.conversations.services.ExportBackupService: java.util.List export()>
		SHA-256: 55a7e7296290fb820e0c3f9d2be1be8ee902e82b31e0ee8ef8795c50fdd3efa0
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer25715, $r2)
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 81c4a73308b23c217ac9a9bb2413383859ebac3a47e1daf988934380ff87faaa
		Secure: false
	Object:
		Variable: varReplacer18237
		Type: int
		Statement: specialinvoke $r0.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r2, varReplacer18236, varReplacer18237)
		Method: <eu.siacs.conversations.services.ExportBackupService: byte[] getKey(java.lang.String,byte[])>
		SHA-256: 154fd4db8c8a5eb3ead32e40b9ab117ab5417c38421ee1287b6f23e8aea1f98a
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: byte[] generateIv()>
		SHA-256: 68c685a2f5dc2a1c14b34c4e5955a822fcef0ca661788bbfe7882e5b94ba74eb
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <eu.siacs.conversations.utils.XEP0392Helper: double angle(java.lang.String)>
		SHA-256: 5aa9281045c2fcc5dda0fd5cd3ce90e84bbad0aac6bd0a1ee93dbcc1ce265ed
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r0.<java.security.SecureRandom: int nextInt(int)>(varReplacer41624)
		Method: <org.whispersystems.libsignal.util.KeyHelper: int generateRegistrationId(boolean)>
		SHA-256: 7b6b5664f09e7dfdc44ecd6e303681ff36b277416d8957a65020453313d4ad75
		Secure: true
	Object:
		Variable: varReplacer44809
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer44809)
		Method: <org.whispersystems.libsignal.ratchet.ChainKey: byte[] getBaseMaterial(byte[])>
		SHA-256: 496dcd17ef7f30be2d1898e6df2dcc02691f619b6271da1e6f117613fa979756
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLParameters
		Statement: specialinvoke $r1.<javax.net.ssl.SSLParameters: void <init>()>()
		Method: <eu.siacs.conversations.utils.SSLSocketHelper: void setHostnameNougat(javax.net.ssl.SSLSocket,java.lang.String)>
		SHA-256: 231bd2c35b97482b01fa5454a4d75f2bdd3dd36dd6babd29cd865958e145d299
		Secure: false
	Object:
		Variable: $r16
		Type: byte[]
		Statement: $r16 = virtualinvoke $r14.<java.security.MessageDigest: byte[] digest(byte[])>($r16)
		Method: <eu.siacs.conversations.entities.ServiceDiscoveryResult: byte[] mkCapHash()>
		SHA-256: 874151ed6e63a7629a419b061b2b718f86b7804c40ee0313735d5640cca0fe42
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer31566)
		Method: <eu.siacs.conversations.xmpp.jingle.JingleSocks5Transport: void <init>(eu.siacs.conversations.xmpp.jingle.JingleFileTransferConnection,eu.siacs.conversations.xmpp.jingle.JingleCandidate)>
		SHA-256: 2028a23f00f9286238cb1b86a3ff076046e3d4e9df7f13e95505294e24b4816c
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer51662)
		Method: <org.whispersystems.libsignal.state.SessionState: org.whispersystems.libsignal.ratchet.MessageKeys removeMessageKeys(org.whispersystems.libsignal.ecc.ECPublicKey,int)>
		SHA-256: 8bdf9ef618b9ec21a159c3fe75a84ecdb1a521e5bd51e208d91b3a8af7e15e8f
		Secure: false
	Object:
		Variable: $r14
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)
		Method: <org.whispersystems.libsignal.state.SessionState: org.whispersystems.libsignal.ratchet.MessageKeys removeMessageKeys(org.whispersystems.libsignal.ecc.ECPublicKey,int)>
		SHA-256: 9eb8c1899b93ac2d0bf6cc25d1b2b35e39990f05cf39ad468e749dd3f9e4253f
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <org.whispersystems.curve25519.JCESecureRandomProvider: void nextBytes(byte[])>
		SHA-256: 44832361bdc950a41a177a5a770c2cdb1b4f012349b881ff8ad9aeb9b26f8bb6
		Secure: true
	Object:
		Variable: $r17
		Type: byte[]
		Statement: $r17 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <eu.siacs.conversations.xmpp.jingle.JingleSocks5Transport: void lambda$receive$4(eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged,eu.siacs.conversations.entities.DownloadableFile)>
		SHA-256: b6eb2468678034ca7325ca7d5394f2e3d2d9f8bf6d86ed95a61091ac6bbf8cd6
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r4, $r2)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: 4b73d9ea47b70e095beb17e2b4e8c62bcb1a3b70cdd913b654094befd6fbd016
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: $r0 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer41625)
		Method: <org.whispersystems.libsignal.util.KeyHelper: int generateRegistrationId(boolean)>
		SHA-256: 2ac79c86fe9b9a5ff5318679afb4b3c16c18d00ccea000ce7a388912a71c6e02
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer25710, $r2)
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 7de6a9dd9134f99f9a3ebea091fd055640e800ab800c4bf5d0ce34922a68f08d
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer19284, varReplacer19285)
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 704b463e5febdb10ff4b28b193cba2d57ebcd9a2718c1db991aeb2daa08751c7
		Secure: false
	Object:
		Variable: $r21
		Type: java.security.DigestOutputStream
		Statement: specialinvoke $r21.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r19, $r20)
		Method: <eu.siacs.conversations.persistance.FileBackend: boolean save(eu.siacs.conversations.xmpp.pep.Avatar)>
		SHA-256: f403dda9b8523eb763464336a8ff3ea97e82df53765e6097c8c68ac43419e1b7
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r3, varReplacer37542)
		Method: <de.measite.minidns.dnssec.algorithms.ECGOSTSignatureVerifier: void <clinit>()>
		SHA-256: c7d05ed177bd990f585bc94c839b1f128a01a8aa10ef341b446f7e5b26421bc7
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 15a76129680a3cd57380001c355c828c5afc3ba9ce32fff65b352ff3390bbd6
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer25708, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: d92c4428d52d7594473e75cbf06c6acd294b6aca81b72dcf1af85d90ca36bcd3
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = interfaceinvoke $r1.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: byte[] generateKey()>
		SHA-256: fe5862cf7f528a728ac3600322c6a1ea3e90a208569b5acab1f65e9c0ec473e
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.whispersystems.curve25519.JCESha512Provider: void calculateDigest(byte[],byte[],long)>
		SHA-256: e672fc3788936ab7174dbb1b35b297edc3547513e55768aca9c3c93c8a3395d7
		Secure: true

Findings in Java Class: eu.siacs.conversations.utils.CryptoHelper

	 in Method: java.lang.String getFingerprint(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5d3d62da7429476dd207a5d5df44ec85a8e674cf01193d7283b7c4e78c68c6e7)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1508)


	 in Method: java.lang.String getFingerprintCert(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2e96f17fc2d0c16f4e6371e6bd60ba10547aacf49d826136152f48f1c53ba7e1)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6215)


Findings in Java Class: eu.siacs.conversations.xmpp.jingle.JingleSocks5Transport

	 in Method: void lambda$send$3(eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged,eu.siacs.conversations.entities.DownloadableFile)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #125883a5c6491328bd1a9a64e0fad71da94294012b01c5138fddc2f01c127d3b)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r10.<java.security.MessageDigest: void reset()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #125883a5c6491328bd1a9a64e0fad71da94294012b01c5138fddc2f01c127d3b)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9271)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #125883a5c6491328bd1a9a64e0fad71da94294012b01c5138fddc2f01c127d3b)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r15 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()


	 in Method: void lambda$receive$4(eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged,eu.siacs.conversations.entities.DownloadableFile)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e1646a2dd17b10305fc68b8e9952d88048a3185646dd6ba83a207986ca15c12f)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9394)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e1646a2dd17b10305fc68b8e9952d88048a3185646dd6ba83a207986ca15c12f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, java.security.MessageDigest: void update(byte[],int,int), java.security.MessageDigest: void update(java.nio.ByteBuffer), java.security.MessageDigest: void update(byte), java.security.MessageDigest: void update(byte[])
			at statement: virtualinvoke $r10.<java.security.MessageDigest: void update(byte[],int,int)>($r17, varReplacer9395, $i2)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e1646a2dd17b10305fc68b8e9952d88048a3185646dd6ba83a207986ca15c12f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r10.<java.security.MessageDigest: void reset()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e1646a2dd17b10305fc68b8e9952d88048a3185646dd6ba83a207986ca15c12f)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r17 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()


	 in Method: void <init>(eu.siacs.conversations.xmpp.jingle.JingleFileTransferConnection,eu.siacs.conversations.xmpp.jingle.JingleCandidate)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2028a23f00f9286238cb1b86a3ff076046e3d4e9df7f13e95505294e24b4816c)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer31566)


Findings in Java Class: eu.siacs.conversations.utils.XEP0392Helper

	 in Method: double angle(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1052fb249e3a080e81278914a63978c7324b7631c9360579416bd3d9b5fccf3f)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14960)


Findings in Java Class: eu.siacs.conversations.utils.SSLSocketHelper

	 in Method: void setHostnameNougat(javax.net.ssl.SSLSocket,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLParameters (on Object #231bd2c35b97482b01fa5454a4d75f2bdd3dd36dd6babd29cd865958e145d299)
			Operation on object of type javax.net.ssl.SSLParameters object not completed. Expected call to setProtocols, setCipherSuites
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLSocket: void setSSLParameters(javax.net.ssl.SSLParameters)>($r1)


Findings in Java Class: eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage

	 in Method: void encrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer16737, $r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer16737, $r3, $r5)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #9910c425f329a6c7c7cd658a1996a983c8d79d1da9a33ede86d6db5d619176af)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #67b373838cd06d1a45cbf03013eda54b7065e6270e4667d5259261e7150f08a)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer16743)


	 in Method: eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage$XmppAxolotlPlaintextMessage decrypt(eu.siacs.conversations.crypto.axolotl.XmppAxolotlSession,java.lang.Integer)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer43728, $r8, $r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer43729)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #849a9b0a6880a1b78f84bf5e69c9a1697a8da8914d5394166cd5e543fab552ba)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #50b571ac37d00777371005231a234833af2ec30181a9a2c6786483d03c6a9e3)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer43728, $r8, $r9)


Findings in Java Class: eu.siacs.conversations.services.ExportBackupService

	 in Method: java.util.List export()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #a495b3968c68714e9542a7b15292351f2229178daf52bfd6975517581b87a662)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: specialinvoke $r29.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r28)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r25.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer18169, $r26, $r27)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r25.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer18169, $r26, $r27)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r18, varReplacer18181)


	 in Method: byte[] getKey(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #6639edadadc3a3851195cc3a0a8b991c3e7b6bb0d9021b94d5270e8a3cc6e96d)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #4116bc2450d2855eae7aa5430999163adeae2477fbfce7a48d6daccc094c4c6b)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer18235)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #6639edadadc3a3851195cc3a0a8b991c3e7b6bb0d9021b94d5270e8a3cc6e96d)
			Third parameter (with value 1024)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r0.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r2, varReplacer18236, varReplacer18237)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #6639edadadc3a3851195cc3a0a8b991c3e7b6bb0d9021b94d5270e8a3cc6e96d)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r2, varReplacer18236, varReplacer18237)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #6639edadadc3a3851195cc3a0a8b991c3e7b6bb0d9021b94d5270e8a3cc6e96d)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r0.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r2, varReplacer18236, varReplacer18237)


Findings in Java Class: eu.siacs.conversations.persistance.FileBackend

	 in Method: boolean save(eu.siacs.conversations.xmpp.pep.Avatar)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #73a316bc193c326ff3e4b7417142f95295d2d943e6dde2c94d497642cb9747e5)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r20 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18474)

		TypestateError violating CrySL rule for java.security.DigestOutputStream (on Object #f403dda9b8523eb763464336a8ff3ea97e82df53765e6097c8c68ac43419e1b7)
			Unexpected call to method close on object of type java.security.DigestOutputStream. Expect a call to one of the following methods write
			at statement: virtualinvoke $r21.<java.security.DigestOutputStream: void close()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #73a316bc193c326ff3e4b7417142f95295d2d943e6dde2c94d497642cb9747e5)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r23 = virtualinvoke $r20.<java.security.MessageDigest: byte[] digest()>()


	 in Method: eu.siacs.conversations.xmpp.pep.Avatar getPepAvatar(android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat,int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2393c14e5a7e71684e52785aa07b2a397e233ec376f5a327c3804df674b3c0b)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer24783)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #2393c14e5a7e71684e52785aa07b2a397e233ec376f5a327c3804df674b3c0b)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r14 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #2393c14e5a7e71684e52785aa07b2a397e233ec376f5a327c3804df674b3c0b)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r8.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r6, $r7)


	 in Method: eu.siacs.conversations.xmpp.pep.Avatar getStoredPepAvatar(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.DigestOutputStream
			Second parameter was not properly generated as generatedMessageDigest
			at statement: specialinvoke $r2.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r13, $r14)

		TypestateError violating CrySL rule for java.security.DigestOutputStream (on Object #ccffdc56aeedf26373126522c29f3f81bc4d43fe45704cb92d71aa4d0ea63c8f)
			Unexpected call to method close on object of type java.security.DigestOutputStream. Expect a call to one of the following methods write
			at statement: virtualinvoke $r2.<java.security.DigestOutputStream: void close()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #53265761d060d236096dec687c38096d505a364c473b14232c70ea19c642a9c2)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer34717)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #53265761d060d236096dec687c38096d505a364c473b14232c70ea19c642a9c2)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r15 = virtualinvoke $r14.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: eu.siacs.conversations.services.MemorizingTrustManager

	 in Method: javax.net.ssl.X509TrustManager getTrustManager(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r1)

		ConstraintError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #2600345ff84660dc478d04f28fceec7e7c865f3440a1d6c3052008ec3f817148)
			First parameter (with value "X509") should be any of {PKIX, SunX509}
			at statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer19066)


	 in Method: java.security.KeyStore loadAppKeyStore()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #ea1b92c62f96aa3843af7ac4ab293ee98950902fb5e6847c9de5ad96211af3a0)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r7, $r9)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #ea1b92c62f96aa3843af7ac4ab293ee98950902fb5e6847c9de5ad96211af3a0)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r7, $r9)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #ea1b92c62f96aa3843af7ac4ab293ee98950902fb5e6847c9de5ad96211af3a0)
			Unexpected call to method load on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r7, $r9)


Findings in Java Class: eu.siacs.conversations.crypto.sasl.DigestMd5

	 in Method: java.lang.String getResponse(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d15e9b05e814c02f6ba0f2e27f021d5ce1e6d4b99042f1768025cf66bf603692)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r13 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer22470)


Findings in Java Class: eu.siacs.conversations.xmpp.jingle.JingleInBandTransport

	 in Method: void receive(eu.siacs.conversations.entities.DownloadableFile,eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6d122b83cd93a9ad44eff2d3e453f62fa3917b3d021023f663ebe1bca9df9def)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer24460)


	 in Method: void send(eu.siacs.conversations.entities.DownloadableFile,eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fb0a198e69c79f86f618a1bbda2f612ba743425776cf460c43b5fb08bde5a48b)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer24806)


Findings in Java Class: okhttp3.internal.platform.ConscryptPlatform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #d92c4428d52d7594473e75cbf06c6acd294b6aca81b72dcf1af85d90ca36bcd3)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer25708, $r2)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer19272)


	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer19290, $r5, varReplacer19290)


Findings in Java Class: okhttp3.internal.platform.Platform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #461649be004cb0c2988df6eb288b54c2baf678314a99d618591121f8d6db87ef)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer25712)


	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer19297, $r10, varReplacer19297)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer19297, $r10, varReplacer19297)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer19297, $r10, varReplacer19297)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer19282)


Findings in Java Class: okhttp3.internal.platform.BouncyCastlePlatform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #81c4a73308b23c217ac9a9bb2413383859ebac3a47e1daf988934380ff87faaa)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer25715, $r2)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer19286)


Findings in Java Class: com.google.common.hash.MessageDigestHashFunction

	 in Method: java.security.MessageDigest getMessageDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f4e887286d0504cb5722b1da9a4eac06d6ea434977af7216dbf1f6217c285838)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


Findings in Java Class: eu.siacs.conversations.generator.AbstractGenerator

	 in Method: java.lang.String getCapHash(eu.siacs.conversations.entities.Account)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5a5d8e4d794cea73e528b5b21f4bde6d8dbdb4b51d96f02e80388441b2558c76)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer32474)


Findings in Java Class: eu.siacs.conversations.entities.ServiceDiscoveryResult

	 in Method: byte[] mkCapHash()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ac846df56e7ada9a4dbcde2a997c3496550b396311b4d2660e859dac91402e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer39507)


Findings in Java Class: org.conscrypt.SSLUtils

	 in Method: java.security.cert.X509Certificate decodeX509Certificate(java.security.cert.CertificateFactory,byte[])
		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #77704be9f2f5883f66d0fc07ea78ba61b70fed0e1ec00b6c2dc59314a675c4d0)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r3 = virtualinvoke $r2.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r1)


	 in Method: java.security.cert.X509Certificate[] decodeX509CertificateChain(byte[][])
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #77704be9f2f5883f66d0fc07ea78ba61b70fed0e1ec00b6c2dc59314a675c4d0)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r4 = staticinvoke <org.conscrypt.SSLUtils: java.security.cert.X509Certificate decodeX509Certificate(java.security.cert.CertificateFactory,byte[])>($r2, $r3)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #77704be9f2f5883f66d0fc07ea78ba61b70fed0e1ec00b6c2dc59314a675c4d0)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r2 = staticinvoke <org.conscrypt.SSLUtils: java.security.cert.CertificateFactory getCertificateFactory()>()


Findings in Java Class: de.measite.minidns.dnssec.algorithms.JavaSecDigestCalculator

	 in Method: void <init>(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #27f10d36f956bb46cbfe64756f259ad7962bc65acc218ac50caa3410dcd06af5)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


Findings in Java Class: de.measite.minidns.dnssec.algorithms.AlgorithmMap

	 in Method: void <init>()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #27f10d36f956bb46cbfe64756f259ad7962bc65acc218ac50caa3410dcd06af5)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8)


Findings in Java Class: org.whispersystems.libsignal.SessionCipher

	 in Method: byte[] getCiphertext(org.whispersystems.libsignal.ratchet.MessageKeys,byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #3a22486844f144802713e9bbca01ef25e675d1b936a44ab6e2d0384569fa6735)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)


	 in Method: byte[] getPlaintext(org.whispersystems.libsignal.ratchet.MessageKeys,byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #3a22486844f144802713e9bbca01ef25e675d1b936a44ab6e2d0384569fa6735)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)


	 in Method: javax.crypto.Cipher getCipher(int,javax.crypto.spec.SecretKeySpec,javax.crypto.spec.IvParameterSpec)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r3, $r1)


Findings in Java Class: de.measite.minidns.dnssec.algorithms.JavaSecSignatureVerifier

	 in Method: void <init>(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #d6bb4b30cdbee7ff837ce1cc95136a9cd54ac9f5129c558d6320a140033e2fcc)
			First parameter (with value "ECGOST3410") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r3)


	 in Method: boolean verify(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r7.<java.security.Signature: void initVerify(java.security.PublicKey)>($r5)


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest$okio(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ae39b036c5eeeba58d380660f68e23806935f12d2f5c9cefe65440425aa34f4a)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: okio.SegmentedByteString

	 in Method: okio.ByteString digest$okio(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: org.whispersystems.libsignal.ratchet.ChainKey

	 in Method: byte[] getBaseMaterial(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer44809)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r1)


Findings in Java Class: org.conscrypt.OpenSSLX509Certificate

	 in Method: java.security.PublicKey getPublicKey()
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r9)


	 in Method: void verifyInternal(java.security.PublicKey,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: eu.siacs.conversations.utils.TLSSocketFactory

	 in Method: void <init>(javax.net.ssl.X509TrustManager[],java.security.SecureRandom)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer34572, $r2, $r1)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer34572, $r2, $r1)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer34572, $r2, $r1)


Findings in Java Class: org.whispersystems.libsignal.kdf.DerivedMessageSecrets

	 in Method: void <init>(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer44811)


Findings in Java Class: org.whispersystems.libsignal.protocol.SignalMessage

	 in Method: byte[] getMac(org.whispersystems.libsignal.IdentityKey,org.whispersystems.libsignal.IdentityKey,javax.crypto.spec.SecretKeySpec,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Mac: void init(java.security.Key)>($r1)


Findings in Java Class: org.whispersystems.libsignal.kdf.HKDF

	 in Method: byte[] expand(byte[],byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer48008)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Mac: void init(java.security.Key)>($r2)


	 in Method: byte[] extract(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer48005)


Findings in Java Class: okhttp3.internal.platform.OpenJSSEPlatform

	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer19277)


Findings in Java Class: org.whispersystems.libsignal.state.SessionState

	 in Method: org.whispersystems.libsignal.ratchet.MessageKeys removeMessageKeys(org.whispersystems.libsignal.ecc.ECPublicKey,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer51661)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 143

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 25
	NeverTypeOfError: 2
	HardCodedError: 2
	RequiredPredicateError: 41
	TypestateError: 16
	IncompleteOperationError: 10
=====================================================================
