0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer129)
		Method: <nl.yoerinijs.nb.d.b: java.lang.String a(java.lang.String)>
		SHA-256: 62e9f530cd0563ff4c5ccbb76a8649d89e05d7cfc6df6740ff7930aa3f125115
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer6203)
		Method: <nl.yoerinijs.nb.d.a: nl.yoerinijs.nb.d.a$c a(java.lang.String,byte[])>
		SHA-256: c80622f5a65248d56ecc293ea579f4b7d51cf6ef72cdd1b708da61de76d53b53
		Secure: false
	Object:
		Variable: varReplacer6209
		Type: int
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer6208, varReplacer6209)
		Method: <nl.yoerinijs.nb.d.a: nl.yoerinijs.nb.d.a$c a(java.lang.String,byte[])>
		SHA-256: f51cb9470e4e6b3796c4490045780557bddf12270bb0ce33a5bf0934fb43043f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <nl.yoerinijs.nb.d.a: nl.yoerinijs.nb.d.a$a a(byte[],nl.yoerinijs.nb.d.a$c)>
		SHA-256: 70e7f4938fbe4c1f07f7d6a17c56b1d43684f9ea3071f1a0c7a7fa262e5066f
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <nl.yoerinijs.nb.d.a: byte[] b(nl.yoerinijs.nb.d.a$a,nl.yoerinijs.nb.d.a$c)>
		SHA-256: 93956974d148af49c7bedf886430bab7e5a8bdbb54e9810aa547f86e20abd43c
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer6221)
		Method: <nl.yoerinijs.nb.d.a$b: void d()>
		SHA-256: 8c5db36a55050cf407e85903260366ec4b70e33830ed0339025cf667dc9279d1
		Secure: true
	Object:
		Variable: varReplacer6207
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer6207)
		Method: <nl.yoerinijs.nb.d.a: nl.yoerinijs.nb.d.a$c a(java.lang.String,byte[])>
		SHA-256: b38e7d7bdd1a841092f4191f91046faae90c8845e56a85230da79b2f9a294d24
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6199)
		Method: <nl.yoerinijs.nb.d.a: nl.yoerinijs.nb.d.a$a a(byte[],nl.yoerinijs.nb.d.a$c)>
		SHA-256: 4a7f9d898e5c63173a6dd09eaf77e4533c4883f5a1e2a74e6c752426708dfe6f
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <nl.yoerinijs.nb.d.a: nl.yoerinijs.nb.d.a$c a(java.lang.String,byte[])>
		SHA-256: 4a4fcc961254ce892ff69201f61d125b482ffbb7934f8253126b2e5188129dbd
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <nl.yoerinijs.nb.d.b: java.lang.String a(java.lang.String)>
		SHA-256: a7ddebf428e75f3f565d2383bee39c0fa791a72d46ae6d7c0fca90ed91ea3702
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <nl.yoerinijs.nb.d.a: byte[] a(int)>
		SHA-256: 3f11a2aebe407b793940ab5a06c1a9c0c3504da88c0e2c8f3f4c736766d43690
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer6206)
		Method: <nl.yoerinijs.nb.d.a: nl.yoerinijs.nb.d.a$c a(java.lang.String,byte[])>
		SHA-256: b1b9919fbfd8f6e0862870b08fc11b5e9cf6fcffb64e6b0fb0151029fec5d998
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer6208, varReplacer6209)
		Method: <nl.yoerinijs.nb.d.a: nl.yoerinijs.nb.d.a$c a(java.lang.String,byte[])>
		SHA-256: 3757878895f15afd8e0db59839dfb6cd0f143480dbbf1c29dcc11a5779c238f7
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6760)
		Method: <nl.yoerinijs.nb.d.a: byte[] b(nl.yoerinijs.nb.d.a$a,nl.yoerinijs.nb.d.a$c)>
		SHA-256: 9348a0ad8c7f11cefa0a63002f46d7ea368c7bde074eb45479bac4bf851037e6
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <nl.yoerinijs.nb.d.a$b: void d()>
		SHA-256: c1439e9552cabf398946ae37f33d824ae60615d2f7edfa19f18395019470965b
		Secure: true
	Object:
		Variable: varReplacer6206
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer6206)
		Method: <nl.yoerinijs.nb.d.a: nl.yoerinijs.nb.d.a$c a(java.lang.String,byte[])>
		SHA-256: 520189b9592149dfbac17996c5d0f52deb60c9da5c5aa07476c646122ca3cb61
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <nl.yoerinijs.nb.d.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: bc52f6a277260163d3ae744eb294c3c45683e7fb94bc882e6ba8600c8773948e
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <nl.yoerinijs.nb.d.a: byte[] a(int)>
		SHA-256: 553a68d079e8636dfb60ee41e9f39dba7ea791bcd1d4d1153c7b59adb326d1e4
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer6207)
		Method: <nl.yoerinijs.nb.d.a: nl.yoerinijs.nb.d.a$c a(java.lang.String,byte[])>
		SHA-256: 2df6ba4352003b002a878daa7ad249b51a408ace490d8e96e635d041d8d01865
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Mac
		Statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer6211)
		Method: <nl.yoerinijs.nb.d.a: byte[] a(byte[],javax.crypto.SecretKey)>
		SHA-256: e6f2f3b1eb05a502078d360dc322726f2edf280413e9d96093d172e001c12a33
		Secure: false

Findings in Java Class: nl.yoerinijs.nb.d.a

	 in Method: nl.yoerinijs.nb.d.a$a a(byte[],nl.yoerinijs.nb.d.a$c)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6200, $r5, $r2)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #4a7f9d898e5c63173a6dd09eaf77e4533c4883f5a1e2a74e6c752426708dfe6f)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)


	 in Method: nl.yoerinijs.nb.d.a$c a(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer6208, varReplacer6209)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #c80622f5a65248d56ecc293ea579f4b7d51cf6ef72cdd1b708da61de76d53b53)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer6203)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer6206)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #3757878895f15afd8e0db59839dfb6cd0f143480dbbf1c29dcc11a5779c238f7)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer6208, varReplacer6209)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #3757878895f15afd8e0db59839dfb6cd0f143480dbbf1c29dcc11a5779c238f7)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r1, varReplacer6208, varReplacer6209)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #3757878895f15afd8e0db59839dfb6cd0f143480dbbf1c29dcc11a5779c238f7)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)


	 in Method: byte[] b(nl.yoerinijs.nb.d.a$a,nl.yoerinijs.nb.d.a$c)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6761, $r5, $r2)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #9348a0ad8c7f11cefa0a63002f46d7ea368c7bde074eb45479bac4bf851037e6)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


	 in Method: byte[] a(byte[],javax.crypto.SecretKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Mac: void init(java.security.Key)>($r1)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 20

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 7
	TypestateError: 2
	ConstraintError: 1
	NeverTypeOfError: 1
	HardCodedError: 1
	IncompleteOperationError: 1
=====================================================================
