0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer14842)
		Method: <h.g0.k.b: javax.net.ssl.SSLContext n()>
		SHA-256: 5aee7a61eb501f26089d1483068cecefaa998605c05387c7ef6f119ede3dccf0
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <i.i: i.i e(java.lang.String)>
		SHA-256: 92b64d1e390e57868b392dbe57fd78a85b04cdc5efd960a97603c16c177f6c1e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer14845)
		Method: <h.g0.k.g: javax.net.ssl.SSLContext n()>
		SHA-256: f18d04eba648dd5e0e696b300c46de6854174bff6c3058f1881abc1a6ad88f18
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer14847)
		Method: <h.g0.k.g: javax.net.ssl.SSLContext n()>
		SHA-256: 2f373ad5cc2d4a12aa80b3a3c1aa3307b1982a2730d2bb80dfb99f6095753537
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.TrustManager[]
		Statement: $r17 = virtualinvoke $r16.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.nikola.jakshic.dagger.u.s: h.x b(android.content.Context)>
		SHA-256: bb531ab6fcb33c28172b6f20ca3edb8c079c781c1202a78c7137f672f36b6c2f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer14851, $r2)
		Method: <h.g0.k.c: javax.net.ssl.SSLContext n()>
		SHA-256: 5b1bbf45387e1af97974d7a7b762abf28e51d94e443c32bb9268118525d9ae82
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r0)
		Method: <h.g0.c: javax.net.ssl.X509TrustManager B()>
		SHA-256: 8a650963ce964a0b56743789cbf32d5368acb08b52d053625af79d61d28333a2
		Secure: false
	Object:
		Variable: $r20
		Type: javax.net.ssl.SSLContext
		Statement: $r20 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6036)
		Method: <com.nikola.jakshic.dagger.u.s: h.x b(android.content.Context)>
		SHA-256: 4ec7b2ef265b6fee132348cdb6fe5912e03f43e9aab9bc98efaa4b69acf907c6
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <i.z: i.i e(java.lang.String)>
		SHA-256: 3774805d5e6f87255f17ef740d5675644127ade5c80214e756569035d4f4da26
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer14850, $r2)
		Method: <h.g0.k.c: javax.net.ssl.SSLContext n()>
		SHA-256: bbdd77ef9ef5389b25b7bc63280c9d4894fb7ba4826cc84eb3cd1808a05a5ce
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.cert.CertificateFactory
		Statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer24368)
		Method: <h.c$d: java.util.List c(i.h)>
		SHA-256: 8b65345a2c52dc5700d83444afad413ba82661db1d14658d600987f72e622fa5
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <i.z: i.i e(java.lang.String)>
		SHA-256: 518890a360f9f4e76e053c19c7c87fd0333b57c18957e47d99596c897e263d40
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer14844)
		Method: <h.g0.k.b: javax.net.ssl.SSLContext n()>
		SHA-256: 7fd63faf3289003aa4ae14469bfe4b9933d6a02810e1f04a24e6b1160463b393
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r15)
		Method: <com.nikola.jakshic.dagger.u.s: h.x b(android.content.Context)>
		SHA-256: d403b6fe1d6af4e0bda0313e7d6cea6c5c6285d49ba5e5c33ad1b8718577491a
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <h.g0.c: javax.net.ssl.X509TrustManager B()>
		SHA-256: cc11f235f44c3a612843c632d709982118bb1e2105d409628b8ffdf4cc9c740a
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <i.i: i.i e(java.lang.String)>
		SHA-256: f1d245ba61c59f76f5c9a33f2d3259a1eb50d8b8998d46718a94d12a15739adb
		Secure: false

Findings in Java Class: h.g0.k.b

	 in Method: javax.net.ssl.SSLContext n()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #7fd63faf3289003aa4ae14469bfe4b9933d6a02810e1f04a24e6b1160463b393)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer14844)


Findings in Java Class: h.g0.k.g

	 in Method: javax.net.ssl.SSLContext n()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f18d04eba648dd5e0e696b300c46de6854174bff6c3058f1881abc1a6ad88f18)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer14845)


Findings in Java Class: h.g0.k.c

	 in Method: javax.net.ssl.SSLContext n()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #bbdd77ef9ef5389b25b7bc63280c9d4894fb7ba4826cc84eb3cd1808a05a5ce)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer14850, $r2)


Findings in Java Class: h.c$d

	 in Method: java.util.List c(i.h)
		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #8b65345a2c52dc5700d83444afad413ba82661db1d14658d600987f72e622fa5)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #8b65345a2c52dc5700d83444afad413ba82661db1d14658d600987f72e622fa5)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #8b65345a2c52dc5700d83444afad413ba82661db1d14658d600987f72e622fa5)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer24368)


Findings in Java Class: i.z

	 in Method: i.i e(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3774805d5e6f87255f17ef740d5675644127ade5c80214e756569035d4f4da26)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3774805d5e6f87255f17ef740d5675644127ade5c80214e756569035d4f4da26)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #3774805d5e6f87255f17ef740d5675644127ade5c80214e756569035d4f4da26)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: i.i

	 in Method: i.i e(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #92b64d1e390e57868b392dbe57fd78a85b04cdc5efd960a97603c16c177f6c1e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #92b64d1e390e57868b392dbe57fd78a85b04cdc5efd960a97603c16c177f6c1e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: com.nikola.jakshic.dagger.u.s

	 in Method: h.x b(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r20.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6032, varReplacer6032, varReplacer6032)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r20.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6032, varReplacer6032, varReplacer6032)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r20.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer6032, varReplacer6032, varReplacer6032)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r16.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer6028)


Findings in Java Class: h.x

	 in Method: javax.net.ssl.SSLSocketFactory x(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12195, $r7, varReplacer12195)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12195, $r7, varReplacer12195)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12195, $r7, varReplacer12195)


Findings in Java Class: h.g0.c

	 in Method: javax.net.ssl.X509TrustManager B()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer12197)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 16

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 7
	IncompleteOperationError: 2
	RequiredPredicateError: 8
	TypestateError: 2
=====================================================================
