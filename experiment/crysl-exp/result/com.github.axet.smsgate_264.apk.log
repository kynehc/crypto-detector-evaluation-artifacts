0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2539)
		Method: <com.github.axet.androidlibrary.crypto.Bitcoin: byte[] decrypt(byte[])>
		SHA-256: d2c08c3dbea39fcbe7f022dead6b201596da16e2681abfb9131b9fe73b9360cc
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r6.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)
		Method: <com.github.axet.androidlibrary.crypto.Bitcoin: void loadPub(java.security.interfaces.ECPrivateKey)>
		SHA-256: 65d24392512bc2dfd3120213febb5f8d31a5d71da18038b6747bff8b78994c03
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer2513)
		Method: <com.github.axet.androidlibrary.crypto.Bitcoin: void <init>()>
		SHA-256: 4cbeafe7a0aefa15d0f82ce00caefb98dde6cc3e10ccd9d90c08d510a9547f2c
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13586)
		Method: <com.fsck.k9.mail.Authentication: byte[] computeCramMd5Bytes(java.lang.String,java.lang.String,byte[])>
		SHA-256: 135431f6a17f4f3f660daee0919a3f387cee7a750dbcd94dfa891df352fa42a
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer25058)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>
		SHA-256: f398673fc46da4ff8a53adec644b90127bece4658b4d7ea6c6522028f9b2ca90
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer15783)
		Method: <com.zegoggles.smssync.mail.AllTrustedSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,java.lang.String)>
		SHA-256: 5f549a7e361286eff26463225867b9929370001d1cd45ed5127242a6c111b7e2
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1590)
		Method: <com.github.axet.androidlibrary.crypto.SHA512: byte[] digest(byte[])>
		SHA-256: 187ae68dd589d69eec319ac97200cf2ed45a3ec35cf3e11c1e3ad261a5894336
		Secure: true
	Object:
		Variable: varReplacer727
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer727)
		Method: <com.github.axet.androidlibrary.crypto.Bitcoin: byte[] encrypt(byte[])>
		SHA-256: 467a9ee9ca0d4e42ccc36526f0d35be46a517a56e94af552ca58d0f344baeae5
		Secure: false
	Object:
		Variable: $r8
		Type: javax.net.ssl.SSLContext
		Statement: $r8 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer15777)
		Method: <com.fsck.k9.mail.ssl.DefaultTrustedSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,java.lang.String)>
		SHA-256: fbdbb0bda44c16c61fecb1294c6f06135f534ff8fad2d198da11a2e4dbf9e8f3
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer25168)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: 6aa56df3b46dc84da87cbed0215a58ee1a4c751ddad97ab4e5618e1541e61e11
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.github.axet.androidlibrary.crypto.Bitcoin: void <init>()>
		SHA-256: c7e9b3180ee37c1a7c7ed456a8fbf1240bdc68691a23232d750a357317623312
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.fsck.k9.mail.Authentication: byte[] computeCramMd5Bytes(java.lang.String,java.lang.String,byte[])>
		SHA-256: 1dcf364c31cd65115dfaddd1aae142d9fea4b77edad69e54cd7e2b0cfe9a8a10
		Secure: false
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke $r25.<java.security.MessageDigest: byte[] digest(byte[])>($r24)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: cz.msebera.android.httpclient.Header createDigestHeader(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest)>
		SHA-256: d6819f5a090592a9c309f7dee8c1d3060c928c197153632cc3c4595ac59ae53a
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer24957)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: e4a0573db5625630462db56865ff4888b7463647f3e49ac87b1c6cdebbda7dcc
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyFactory
		Statement: $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer2511, varReplacer2512)
		Method: <com.github.axet.androidlibrary.crypto.Bitcoin: void <init>()>
		SHA-256: 35035ded5fc217d3aae3ceb96f886c3782ed37ddabd8b40a46df1ecb2434b44c
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer21139)
		Method: <com.zegoggles.smssync.mail.HeaderGenerator: java.lang.String createMessageId(java.util.Date,java.lang.String,int)>
		SHA-256: 6652f5843c1973128d722f8010a81852f70486a5b3c13dce0b223d9788d0ecbb
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Mac
		Statement: $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer18560)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 7e04b650b8cdb1fde73c77170f904ee5ce49cbda51429deb45e8e92207280292
		Secure: false
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke $r25.<java.security.MessageDigest: byte[] digest(byte[])>($r24)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: cz.msebera.android.httpclient.Header createDigestHeader(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest)>
		SHA-256: d6819f5a090592a9c309f7dee8c1d3060c928c197153632cc3c4595ac59ae53a
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer15787)
		Method: <com.fsck.k9.mail.ssl.TrustManagerFactory: void <clinit>()>
		SHA-256: c96c850c62d95fd84152cf5d560b61253e307a185b9825f4b4a429b798a8eb09
		Secure: false
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke $r25.<java.security.MessageDigest: byte[] digest(byte[])>($r24)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: cz.msebera.android.httpclient.Header createDigestHeader(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest)>
		SHA-256: d6819f5a090592a9c309f7dee8c1d3060c928c197153632cc3c4595ac59ae53a
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 3bcbf4d912455255294e9bee4d91f33f3fa55dd4a67dc970c48252366cf97c1f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 51809b40f955da1fb4b3dcfeefebf59f1dd607b449e09656926351c68b1d5de6
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer25074)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: 5f7b84ddcb701ba75c26cf0625ff6a54a4c3e1870438dfa0a589ef109a802f10
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14209)
		Method: <com.android.dx.dex.file.DexFile: void calcSignature(byte[],int)>
		SHA-256: 352972b72137b116990c4ec6f05beac8fa2ff6336f4f615cc2fba50db89743c0
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <com.github.axet.androidlibrary.crypto.Bitcoin: byte[] sha256hmac(byte[],byte[])>
		SHA-256: 5e5dfd79f02eaf32bdc42b03dfdd02d839bd374994bcc728064d8ffd154cc47a
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.zegoggles.smssync.mail.HeaderGenerator: java.lang.String createMessageId(java.util.Date,java.lang.String,int)>
		SHA-256: 9d52f48e9798c92b201069f7de4a39a2ffdbb7ab74be6775351035cfd34ea395
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.github.axet.androidlibrary.crypto.SHA256: byte[] digest(byte[])>
		SHA-256: d950e84451ef253bef79e48c5e39a353957790fc2c99c759353ba9dd92cb49f5
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $i0 = virtualinvoke $r1.<java.security.MessageDigest: int digest(byte[],int,int)>($r0, varReplacer14210, varReplacer14211)
		Method: <com.android.dx.dex.file.DexFile: void calcSignature(byte[],int)>
		SHA-256: ff3a3295dc2c0f1c70eb0a9549a1b58ee4a8a41f175bbce3885b60db3c0d1867
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.github.axet.androidlibrary.crypto.Bitcoin: byte[] encrypt(byte[])>
		SHA-256: 180adfddfa73fe2daf43946e135ea3872ff7837cc330dbb0945132112b738469
		Secure: false
	Object:
		Variable: varReplacer25065
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer25065)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: daac50f70700b904deb3a20816ba691ed46a65648465759cd78e33152b6db9a1
		Secure: false
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke $r16.<java.security.MessageDigest: byte[] digest(byte[])>($r24)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: cz.msebera.android.httpclient.Header createDigestHeader(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest)>
		SHA-256: d36648b94075615d212b0236bc5cdfc92309766fe7b341b21d50caf50b71db90
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <com.github.axet.androidlibrary.crypto.Bitcoin: byte[] sha256hmac(byte[],byte[])>
		SHA-256: 118bb66ed08fc6e5793e94544e6c0dca29300e2dd88a891441e15ca5e7392a89
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer762)
		Method: <com.github.axet.androidlibrary.crypto.Bitcoin: byte[] sha256hmac(byte[],byte[])>
		SHA-256: 2daf65759f1fc807a71b0b5323b349176e9540b5effd491332faa4e9634c3480
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer763)
		Method: <com.github.axet.androidlibrary.crypto.Bitcoin: byte[] sha256hmac(byte[],byte[])>
		SHA-256: f1470c96596b68649e2ad92ff4c11f8db86165a1450968c5bf61e6d5ed76792f
		Secure: false
	Object:
		Variable: varReplacer762
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer762)
		Method: <com.github.axet.androidlibrary.crypto.Bitcoin: byte[] sha256hmac(byte[],byte[])>
		SHA-256: 63dc9c7304391505c39cb815aa6e32e4a77bb972b11ddbf6413cad35572e134b
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer25033)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 7ec7ddb4b96e3be85c36cb68c81372bcf9c1a26179f0e7b6f722d3c17b4af15f
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 8dda2f10cd4911a51ea6f84d756034bbd2b170b00e8eb73d84894dc35d4275e0
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2542, varReplacer2543)
		Method: <com.github.axet.androidlibrary.crypto.Bitcoin: byte[] decrypt(byte[])>
		SHA-256: 4b5c8a153566d6d7c10444a7a88acd99f31f3474cc94142aff4168fcd283b33c
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.fsck.k9.mail.Authentication: byte[] computeCramMd5Bytes(java.lang.String,java.lang.String,byte[])>
		SHA-256: 95f503430c99e6a22fc8c7a787692dceac738907a0ea81ed4f184d15cc9d1ae9
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: bbd35c0b9cc04d0eef73b2ad76dd3b0c8a90eec8bc1cf0e85b5f6d07c31b38bf
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.github.axet.androidlibrary.crypto.Bitcoin: byte[] decrypt(byte[])>
		SHA-256: b6bbcea5b5c30de9c91f3b0ba13b6350411ada54a0bd4d377c26bf6c959e5ffc
		Secure: false
	Object:
		Variable: varReplacer18563
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer18563)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: 490f840ce0c003b99aa83c1060ef5ff3cc64f26f692ef66fc46a0d1887492b09
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer25029)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 6aa51f5da44a5bbe8f23d8a7150bbb239bffda4eec4659fa278691e2714d4382
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer18563)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: a71b38a991d9818b8a49b2e2b543443e62b8d8e28e9c085d1d7c2123a39dbbc
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.fsck.k9.mail.ssl.TrustManagerFactory: void <clinit>()>
		SHA-256: 859bee31685c6309f68fe161d836a7623910c6a1665df8015d1bb0a7d238d71
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <cz.msebera.android.httpclient.impl.auth.HttpEntityDigester: void close()>
		SHA-256: 6e2f49082bf8a753b36c08d597efa7282d12c9a9b9a86cb704dfeec77e918e7c
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>
		SHA-256: d5cf1f8de9a5f17cad5006e43f64e63b02f8f56706a9e139ea0baeb6f7532b60
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r7.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5)
		Method: <oauth.signpost.signature.HmacSha1MessageSigner: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)>
		SHA-256: bece1140c0577cf6f297d91e1b0ca43d0606b323d3d9a50af430d2391ba581cd
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyPairGenerator
		Statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer2514, varReplacer2515)
		Method: <com.github.axet.androidlibrary.crypto.Bitcoin: void <init>()>
		SHA-256: 99efacffdfa3b8de8c1c380b50f431030030611aeaea6b57579d3b567fe181a4
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer24473)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: void <clinit>()>
		SHA-256: ac19d77611c20f5eea391079569979a8f65192161367aac7ddf2409b0e870573
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer25193)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>
		SHA-256: 65e7e8d9ae65dbbf622994706520228e52d1c8a1aaa24d94fba729d8d5e9368e
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.fsck.k9.mail.Authentication: byte[] computeCramMd5Bytes(java.lang.String,java.lang.String,byte[])>
		SHA-256: 95f503430c99e6a22fc8c7a787692dceac738907a0ea81ed4f184d15cc9d1ae9
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer7428)
		Method: <com.fsck.k9.mail.ssl.DefaultTrustedSocketFactory: void <clinit>()>
		SHA-256: 87212e964825cb64d015ddde8a4f9b0747fab7e73596dfaad448821dec99e563
		Secure: false
	Object:
		Variable: varReplacer24957
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer24957)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: bcd95846ca9013fb0c0ff41140c686fe8d91903f7c49fc70da615b8e8d1af6ef
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <com.fsck.k9.mail.ssl.LocalKeyStore: void setKeyStoreFile(java.io.File)>
		SHA-256: 4e8d6de239573c1d3b662c9d71ed007e1f089c5efcac87123547278ff002cfde
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.PrivateKey
		Statement: $r3 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r1)
		Method: <com.github.axet.androidlibrary.crypto.Bitcoin: void loadSec(java.math.BigInteger)>
		SHA-256: a29d2625bdfa5b7d0f6b6c2346518d95fe30b882c32d03912dbc581a95f772a3
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r5.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r0, $r4, $r2, varReplacer754)
		Method: <com.github.axet.androidlibrary.crypto.Bitcoin: void <clinit>()>
		SHA-256: 80fbf4eb747f6f920a73edb6f05e6dcaf90c71ba325b4bc63c97db758eb8c4c2
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1457)
		Method: <com.github.axet.androidlibrary.crypto.SHA256: byte[] digest(byte[])>
		SHA-256: 62c1ae2df73a8b273bf76f01dbbaa9d8ede87d6a9b0c9a232d3347ce54c321a2
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: f6730166425cdde60c0ca0f7f01862a2b9705ad5b213be5cd1a19bc89976254d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2442)
		Method: <com.github.axet.androidlibrary.crypto.MD5: byte[] digest(byte[])>
		SHA-256: aa541a3254eceb1abade9523561a2ef884e0025e466d0868d95fee1c2652e2db
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>
		SHA-256: 87142a8c4369ab14d23fa8690b807f0d900b1807831c8c0f8e6b4de4b8735e3b
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer722, varReplacer723)
		Method: <com.github.axet.androidlibrary.crypto.Bitcoin: byte[] encrypt(byte[])>
		SHA-256: dbb37e863a744bb22060576b0c3d7f7983f48b46b228c48fb82da1380a3882dc
		Secure: false
	Object:
		Variable: varReplacer2511
		Type: java.lang.String
		Statement: $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer2511, varReplacer2512)
		Method: <com.github.axet.androidlibrary.crypto.Bitcoin: void <init>()>
		SHA-256: 306bac8fcdac12590afd9090ae9ea93743ebed987f0837bffae5958c04990c4b
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.github.axet.androidlibrary.crypto.MD5: byte[] digest(byte[])>
		SHA-256: 5e97372c6b896a9ed8554ee619c1d230f0a22c4aac16da71146c7c70d64a8e79
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer24958)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: f6355d8a6fc99ed8e61afb601f62468760b7a9f91b479865a9faa9c4d749145a
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer727)
		Method: <com.github.axet.androidlibrary.crypto.Bitcoin: byte[] encrypt(byte[])>
		SHA-256: 5e1d2d583a93a580fa18a60c2cae3082e6d939064a08436d7695f3b52c79588
		Secure: false
	Object:
		Variable: varReplacer2539
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2539)
		Method: <com.github.axet.androidlibrary.crypto.Bitcoin: byte[] decrypt(byte[])>
		SHA-256: 88993fbf130a4b4de382a5e21a32593b93a7c3f3b095a595cb8498a807b28c23
		Secure: false
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer12711)
		Method: <cz.msebera.android.httpclient.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: 4b5ecad45c2179fc5421b236addaaa6dd0491f95e3fe3cb1132dc43fa2ce1213
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer25065)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: c68ffe0e2fef05130db8d1e540e9d591b58d603e0432202eb48018085acd9c16
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyPair
		Statement: $r2 = virtualinvoke $r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.github.axet.androidlibrary.crypto.Bitcoin: void generate()>
		SHA-256: b0bb583f1887ab372e8b373f5354e95a3b4c6343a3053596df44db1121097863
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.github.axet.androidlibrary.crypto.SHA512: byte[] digest(byte[])>
		SHA-256: 1fb09683cdc114fe59336f993ababdea2dbc9fa82302ecbd2f303edb03a05ba9
		Secure: true

Findings in Java Class: com.github.axet.androidlibrary.crypto.Bitcoin

	 in Method: byte[] encrypt(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer725, $r6, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer727)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #dbb37e863a744bb22060576b0c3d7f7983f48b46b228c48fb82da1380a3882dc)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer725, $r6, $r8)


	 in Method: byte[] decrypt(byte[])
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #99efacffdfa3b8de8c1c380b50f431030030611aeaea6b57579d3b567fe181a4)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to genKeyPair, generateKeyPair
			at statement: $r2 = virtualinvoke r0.<com.github.axet.androidlibrary.crypto.Bitcoin: byte[] getKEKM()>()

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2539)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #4b5c8a153566d6d7c10444a7a88acd99f31f3474cc94142aff4168fcd283b33c)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2544, $r7, $r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


	 in Method: void <init>()
		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #4cbeafe7a0aefa15d0f82ce00caefb98dde6cc3e10ccd9d90c08d510a9547f2c)
			First parameter (with value "secp256k1") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer2513)

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedEC
			at statement: virtualinvoke $r3.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>($r2, $r4)


	 in Method: void loadSec(java.math.BigInteger)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r3 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r1)


	 in Method: byte[] sha256hmac(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer762)


Findings in Java Class: com.github.axet.androidlibrary.crypto.MD5

	 in Method: byte[] digest(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #aa541a3254eceb1abade9523561a2ef884e0025e466d0868d95fee1c2652e2db)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2442)


Findings in Java Class: com.github.axet.smsgate.services.FirebaseService

	 in Method: int onStartCommand(android.content.Intent,int,int)
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #99efacffdfa3b8de8c1c380b50f431030030611aeaea6b57579d3b567fe181a4)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to genKeyPair, generateKeyPair
			at statement: $r8 = virtualinvoke $r17.<com.github.axet.androidlibrary.crypto.Bitcoin: byte[] encrypt(byte[])>($r8)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #99efacffdfa3b8de8c1c380b50f431030030611aeaea6b57579d3b567fe181a4)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to genKeyPair, generateKeyPair
			at statement: $r3 = virtualinvoke $r17.<com.github.axet.androidlibrary.crypto.Bitcoin: java.lang.String encrypt(java.lang.String)>($r3)


	 in Method: void process(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #99efacffdfa3b8de8c1c380b50f431030030611aeaea6b57579d3b567fe181a4)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to genKeyPair, generateKeyPair
			at statement: $r1 = virtualinvoke $r2.<com.github.axet.androidlibrary.crypto.Bitcoin: java.lang.String decrypt(java.lang.String)>($r1)


Findings in Java Class: com.github.axet.smsgate.services.FirebaseService$15

	 in Method: void run()
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #99efacffdfa3b8de8c1c380b50f431030030611aeaea6b57579d3b567fe181a4)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to genKeyPair, generateKeyPair
			at statement: virtualinvoke $r2.<com.github.axet.smsgate.services.FirebaseService: void reload()>()


Findings in Java Class: com.fsck.k9.mail.ssl.DefaultTrustedSocketFactory

	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7429, varReplacer7429, varReplacer7429)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7429, varReplacer7429, varReplacer7429)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #87212e964825cb64d015ddde8a4f9b0747fab7e73596dfaad448821dec99e563)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer7428)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7429, varReplacer7429, varReplacer7429)


	 in Method: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, $r14, varReplacer15776)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, $r14, varReplacer15776)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #fbdbb0bda44c16c61fecb1294c6f06135f534ff8fad2d198da11a2e4dbf9e8f3)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r8 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer15777)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, $r14, varReplacer15776)


Findings in Java Class: cz.msebera.android.httpclient.conn.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createDefault()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12712, varReplacer12712, varReplacer12712)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #4b5ecad45c2179fc5421b236addaaa6dd0491f95e3fe3cb1132dc43fa2ce1213)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer12711)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12712, varReplacer12712, varReplacer12712)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12712, varReplacer12712, varReplacer12712)


Findings in Java Class: com.fsck.k9.mail.Authentication

	 in Method: byte[] computeCramMd5Bytes(java.lang.String,java.lang.String,byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #135431f6a17f4f3f660daee0919a3f387cee7a750dbcd94dfa891df352fa42a)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13586)


Findings in Java Class: com.android.dx.dex.file.DexFile

	 in Method: void calcSignature(byte[],int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #352972b72137b116990c4ec6f05beac8fa2ff6336f4f615cc2fba50db89743c0)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14209)


Findings in Java Class: com.zegoggles.smssync.mail.AllTrustedSocketFactory

	 in Method: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,java.lang.String)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #5f549a7e361286eff26463225867b9929370001d1cd45ed5127242a6c111b7e2)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer15783)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer15781, $r8, varReplacer15781)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer15781, $r8, varReplacer15781)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer15781, $r8, varReplacer15781)


Findings in Java Class: com.fsck.k9.mail.ssl.TrustManagerFactory

	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer15788)

		ConstraintError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #c96c850c62d95fd84152cf5d560b61253e307a185b9825f4b4a429b798a8eb09)
			First parameter (with value "X509") should be any of {PKIX, SunX509}
			at statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer15787)


Findings in Java Class: oauth.signpost.signature.HmacSha1MessageSigner

	 in Method: java.lang.String sign(oauth.signpost.http.HttpRequest,oauth.signpost.http.HttpParameters)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer18563)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Mac: void init(java.security.Key)>($r6)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #7e04b650b8cdb1fde73c77170f904ee5ce49cbda51429deb45e8e92207280292)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer18560)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #a71b38a991d9818b8a49b2e2b543443e62b8d8e28e9c085d1d7c2123a39dbbc)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer18563)


Findings in Java Class: com.fsck.k9.mail.ssl.LocalKeyStore

	 in Method: void setKeyStoreFile(java.io.File)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #4e8d6de239573c1d3b662c9d71ed007e1f089c5efcac87123547278ff002cfde)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r5, $r7)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #4e8d6de239573c1d3b662c9d71ed007e1f089c5efcac87123547278ff002cfde)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r5, $r7)


Findings in Java Class: com.zegoggles.smssync.mail.HeaderGenerator

	 in Method: java.lang.String createMessageId(java.util.Date,java.lang.String,int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6652f5843c1973128d722f8010a81852f70486a5b3c13dce0b223d9788d0ecbb)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer21139)


Findings in Java Class: cz.msebera.android.httpclient.impl.auth.HttpEntityDigester

	 in Method: void write(byte[],int,int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd)
			Third parameter (with value 0)Variable preLenmust be  greater than 0
			at statement: virtualinvoke $r2.<java.security.MessageDigest: void update(byte[],int,int)>($r1, $i1, $i0)


	 in Method: void close()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: cz.msebera.android.httpclient.impl.auth.DigestScheme

	 in Method: java.security.MessageDigest createMessageDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)


Findings in Java Class: cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl

	 in Method: byte[] RC4(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer24956, $r0)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f6355d8a6fc99ed8e61afb601f62468760b7a9f91b479865a9faa9c4d749145a)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #e4a0573db5625630462db56865ff4888b7463647f3e49ac87b1c6cdebbda7dcc)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer24957)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #e4a0573db5625630462db56865ff4888b7463647f3e49ac87b1c6cdebbda7dcc)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer24957)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer24957)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #e4a0573db5625630462db56865ff4888b7463647f3e49ac87b1c6cdebbda7dcc)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer24957)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #e4a0573db5625630462db56865ff4888b7463647f3e49ac87b1c6cdebbda7dcc)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer24957)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f6355d8a6fc99ed8e61afb601f62468760b7a9f91b479865a9faa9c4d749145a)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer24958)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #e4a0573db5625630462db56865ff4888b7463647f3e49ac87b1c6cdebbda7dcc)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer24957)


	 in Method: byte[] ntlm2SessionResponse(byte[],byte[],byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f398673fc46da4ff8a53adec644b90127bece4658b4d7ea6c6522028f9b2ca90)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer25058)


	 in Method: java.security.Key createDESKey(byte[],int)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #c68ffe0e2fef05130db8d1e540e9d591b58d603e0432202eb48018085acd9c16)
			Second parameter (with value "DES") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer25065)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer25065)


	 in Method: byte[] lmResponse(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5f7b84ddcb701ba75c26cf0625ff6a54a4c3e1870438dfa0a589ef109a802f10)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer25074)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer25078, $r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #5f7b84ddcb701ba75c26cf0625ff6a54a4c3e1870438dfa0a589ef109a802f10)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


	 in Method: byte[] lmHash(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer25177, $r6)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #6aa56df3b46dc84da87cbed0215a58ee1a4c751ddad97ab4e5618e1541e61e11)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #6aa56df3b46dc84da87cbed0215a58ee1a4c751ddad97ab4e5618e1541e61e11)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer25168)


Findings in Java Class: cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$CipherGen

	 in Method: byte[] getLanManagerSessionKey()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7ec7ddb4b96e3be85c36cb68c81372bcf9c1a26179f0e7b6f722d3c17b4af15f)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer25033)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer25042, $r4)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #7ec7ddb4b96e3be85c36cb68c81372bcf9c1a26179f0e7b6f722d3c17b4af15f)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #6aa51f5da44a5bbe8f23d8a7150bbb239bffda4eec4659fa278691e2714d4382)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)


Findings in Java Class: cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5

	 in Method: void <init>(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #65e7e8d9ae65dbbf622994706520228e52d1c8a1aaa24d94fba729d8d5e9368e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer25193)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 72

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 5
	NeverTypeOfError: 5
	ConstraintError: 22
	HardCodedError: 1
	TypestateError: 8
	RequiredPredicateError: 32
=====================================================================
