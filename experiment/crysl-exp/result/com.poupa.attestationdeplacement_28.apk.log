0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: java.security.AlgorithmParameterGenerator
		Statement: $r3 = staticinvoke <java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameterGenerator getInstance(java.lang.String)>(varReplacer25255)
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.spongycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>
		SHA-256: 5557c198fb1da43176d1dac5680f58c8961bbd9b84e022ffff3b298bc904a626
		Secure: false
	Object:
		Variable: $r13
		Type: byte[]
		Statement: $r13 = virtualinvoke $r12.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.itextpdf.text.pdf.PdfEncryption: boolean readKey(com.itextpdf.text.pdf.PdfDictionary,byte[])>
		SHA-256: 8705c2dc6baeaf48e6d9149187a353da41db3d4755305322912b47d488180a0
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r12.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.itextpdf.text.pdf.PdfEncryption: boolean readKey(com.itextpdf.text.pdf.PdfDictionary,byte[])>
		SHA-256: cd8643090a9a4d38c9fb2bac4b47ac347142ec9fd58f71b4f3bd51170bc40621
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: void <init>()>
		SHA-256: 94a72c58557b7499ae339ccaddc26783d4e8f2479f98c3b8aaa1a96b1bd4d44d
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r3.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: void <init>()>
		SHA-256: dd6b1c4917e70c51ad4099a7151e602f2c5913dbb831d77fc5974257d09cf92f
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.KeyGenerator
		Statement: $r7 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer25257)
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.spongycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>
		SHA-256: 9f90e903482af01fcd2f8b28caa9bbfa3182203d1b4363160e76756447f455d3
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20602)
		Method: <com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.PdfDictionary getEncryptionDictionary()>
		SHA-256: 95cabd86ee820f50ed9d6a7d089ca796c9b1a90d0070cb5c4f6750813b791a9
		Secure: true
	Object:
		Variable: $r35
		Type: java.security.MessageDigest
		Statement: $r35 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer23495)
		Method: <com.itextpdf.text.pdf.PdfReader: void readDecryptedDocObj()>
		SHA-256: 1516a62914cbea9628e29d844fe19227a18b84e680f7259581ba131cf87c3077
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20486)
		Method: <com.itextpdf.text.pdf.PdfEncryption: void <init>()>
		SHA-256: 3702d4570f652b0d1f8205cb01f5c79d3f041a6cfaa154361d22e41b6c888a68
		Secure: false
	Object:
		Variable: $r35
		Type: java.security.MessageDigest
		Statement: $r35 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer23503)
		Method: <com.itextpdf.text.pdf.PdfReader: void readDecryptedDocObj()>
		SHA-256: 542bdf86544cf2a10828bfdf2622778a9f830dcd2a9ec76635aceab7919e9ba7
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17950)
		Method: <com.itextpdf.text.ImgJBIG2: void <init>(int,int,byte[],byte[])>
		SHA-256: 8562d0c5dfaebe95ba5cbb9c97561609e27e8cec7167ac374333c93fa6b42159
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke $r35.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.itextpdf.text.pdf.PdfReader: void readDecryptedDocObj()>
		SHA-256: 7083bc968edc0c01c7eed3b4a1ec379655491e18296dd62936bd59065272dc97
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.PdfDictionary getEncryptionDictionary()>
		SHA-256: be6aa4f138a2a87448d62a524ca03a5f0d5a05b4cc78557434be62edbaf89f29
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18327)
		Method: <com.itextpdf.text.pdf.PdfEncryption: byte[] createDocumentId()>
		SHA-256: 71451718df27bf64ca924bd64921c50a53ea1067ef096a5c0198875fa8fbbfd1
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.itextpdf.text.pdf.PdfEncryption: byte[] createDocumentId()>
		SHA-256: 377e6493d8ccc0dfe66339f0855347d94e9218e473fd5d6f3f1c9965baad4049
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r12.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.itextpdf.text.pdf.PdfEncryption: boolean readKey(com.itextpdf.text.pdf.PdfDictionary,byte[])>
		SHA-256: cd8643090a9a4d38c9fb2bac4b47ac347142ec9fd58f71b4f3bd51170bc40621
		Secure: true
	Object:
		Variable: $r12
		Type: java.security.MessageDigest
		Statement: $r12 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer25962)
		Method: <com.itextpdf.text.pdf.PdfEncryption: boolean readKey(com.itextpdf.text.pdf.PdfDictionary,byte[])>
		SHA-256: 5b937279a43f7f82db9853f83dbc4ff72d93da110ba0c657acbf2bd8e65ea123
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r12.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.itextpdf.text.pdf.PdfEncryption: boolean readKey(com.itextpdf.text.pdf.PdfDictionary,byte[])>
		SHA-256: 57777c5c1b2cfa8b76fdd847f8fff83acb794d69520ca4ad2909353df3043004
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.KeyGenerator
		Statement: $r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer22561)
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: void <init>()>
		SHA-256: 3fb2849d8078a4459a37cdffc6a9fb216673bb89b11003546f3e74121cc2dfb3
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer25254)
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.spongycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>
		SHA-256: a60441411647407f6788b2433f9fa991d648b755c752f423fa12120c474efa5d
		Secure: false
	Object:
		Variable: $r15
		Type: javax.crypto.Cipher
		Statement: $r15 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r14)
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.spongycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>
		SHA-256: af72fead94b2d64f11398cab2fcf81db6e23b7696111bef982499a268966c807
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20605)
		Method: <com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.PdfDictionary getEncryptionDictionary()>
		SHA-256: f8603840699ff3e67ed5d812b4aef3d575bc2351afde8622d747c30a25e96969
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.itextpdf.text.ImgJBIG2: void <init>(int,int,byte[],byte[])>
		SHA-256: 31b6e101b9f3333a119a2fb9e006de2c91549eb22f759226330fea33b2aa0dcd
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = interfaceinvoke $r5.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: void <init>()>
		SHA-256: 7ce2264834ca3b95cbe416e081422781f5046c1e1d9a6df061febc5e2919ee7
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r7.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.spongycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>
		SHA-256: 32f375bb75cd2da7fd1ce96a1c0affd2e25ce28a72cddccffbda519752e99ab6
		Secure: false

Findings in Java Class: com.itextpdf.text.ImgJBIG2

	 in Method: void <init>(int,int,byte[],byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8562d0c5dfaebe95ba5cbb9c97561609e27e8cec7167ac374333c93fa6b42159)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17950)


Findings in Java Class: com.itextpdf.text.pdf.PdfEncryption

	 in Method: byte[] createDocumentId()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #71451718df27bf64ca924bd64921c50a53ea1067ef096a5c0198875fa8fbbfd1)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18327)


	 in Method: void <init>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3702d4570f652b0d1f8205cb01f5c79d3f041a6cfaa154361d22e41b6c888a68)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20486)


	 in Method: com.itextpdf.text.pdf.PdfDictionary getEncryptionDictionary()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f8603840699ff3e67ed5d812b4aef3d575bc2351afde8622d747c30a25e96969)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20605)


Findings in Java Class: com.itextpdf.text.pdf.PdfReader

	 in Method: void readDecryptedDocObj()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1516a62914cbea9628e29d844fe19227a18b84e680f7259581ba131cf87c3077)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r35 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer23495)


Findings in Java Class: com.itextpdf.text.pdf.PdfPublicKeySecurityHandler

	 in Method: org.spongycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedAlg
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(varReplacer25256, $r8, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(varReplacer25256, $r8, $r4)

		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #9f90e903482af01fcd2f8b28caa9bbfa3182203d1b4363160e76756447f455d3)
			First parameter (with value "1.2.840.113549.3.2") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: $r7 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer25257)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a60441411647407f6788b2433f9fa991d648b755c752f423fa12120c474efa5d)
			First parameter (with value "1.2.840.113549.3.2") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer25254)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #a60441411647407f6788b2433f9fa991d648b755c752f423fa12120c474efa5d)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		ConstraintError violating CrySL rule for java.security.AlgorithmParameterGenerator (on Object #5557c198fb1da43176d1dac5680f58c8961bbd9b84e022ffff3b298bc904a626)
			First parameter (with value "1.2.840.113549.3.2") should be any of {DH, DiffieHellman, DSA}
			at statement: $r3 = staticinvoke <java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameterGenerator getInstance(java.lang.String)>(varReplacer25255)

		TypestateError violating CrySL rule for java.security.AlgorithmParameterGenerator (on Object #5557c198fb1da43176d1dac5680f58c8961bbd9b84e022ffff3b298bc904a626)
			Unexpected call to method generateParameters on object of type java.security.AlgorithmParameterGenerator. Expect a call to one of the following methods init
			at statement: $r4 = virtualinvoke $r3.<java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameters generateParameters()>()


	 in Method: org.spongycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #af72fead94b2d64f11398cab2fcf81db6e23b7696111bef982499a268966c807)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r15.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 25

	CryptoAnalysis found the following violations. For details see description above.
	TypestateError: 3
	RequiredPredicateError: 2
	ConstraintError: 8
=====================================================================
