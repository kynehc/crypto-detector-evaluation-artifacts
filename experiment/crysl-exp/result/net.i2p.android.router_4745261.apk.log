0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Alive 19069  5000
Alive 29486  5000
Alive 26803  5000
Alive 24958  5000
Alive 19380  5000
Alive 24548  5000
Alive 34455  5000
Alive 25253  5000
Alive 31467  5000
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r15
		Type: javax.net.ssl.SSLContext
		Statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5630)
		Method: <net.i2p.util.I2PSSLSocketFactory: javax.net.ssl.SSLSocketFactory initSSLContext(net.i2p.I2PAppContext,boolean,java.lang.String)>
		SHA-256: 4746e22f87ecb7902a788c2283e1fbcfe2ecc8333ec885320dbf1d2392568b31
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.MessageDigest: int digest(byte[],int,int)>($r0, varReplacer19771, varReplacer19772)
		Method: <com.southernstorm.noise.protocol.SymmetricState: void <clinit>()>
		SHA-256: a61b2f0bcc7c5b37bb49bf91b7e16d89d2d209eea2e7c8e1d004cb6848a51f5d
		Secure: true
	Object:
		Variable: $r9
		Type: javax.net.ssl.SSLContext
		Statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer43060)
		Method: <net.i2p.util.SSLEepGet: javax.net.ssl.SSLContext initSSLContext()>
		SHA-256: 847b18e51f0c0a3ae36676b8e0e7fbb14a71af35a133181aaede4cf56a52c14c
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: $r10 = virtualinvoke $r12.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <net.i2p.crypto.KeyGenerator: net.i2p.data.SimpleDataStructure[] generateSigningKeys(net.i2p.crypto.SigType)>
		SHA-256: 42449ce94f4b268316f53d78386c5064a15481279b27c41221a69bd0abbec9d
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyPairGenerator
		Statement: $r12 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r11)
		Method: <net.i2p.crypto.KeyGenerator: net.i2p.data.SimpleDataStructure[] generateSigningKeys(net.i2p.crypto.SigType)>
		SHA-256: 528a509e1da9539c51f5864ccbfa04c75c449c6f5bf7d7f4acda8db11d7ebdd2
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.SSLContext
		Statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2116)
		Method: <net.i2p.i2ptunnel.SSLClientUtil: javax.net.ssl.SSLServerSocketFactory initializeFactory(java.util.Properties)>
		SHA-256: 56427629bb861bae648fabb0e692d2ecf06bad8d5ac9de2b50351ba5a03951fa
		Secure: false
	Object:
		Variable: varReplacer3579
		Type: java.lang.String
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer3579)
		Method: <net.i2p.crypto.SigUtil: java.security.interfaces.DSAPrivateKey toJavaDSAKey(net.i2p.data.SigningPrivateKey)>
		SHA-256: 77de0bdbf17b5e4a2ee901612ef260268b00d4920270b2a188e2c88aab5b0b95
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.MessageDigest: int digest(byte[],int,int)>($r0, varReplacer19758, varReplacer19759)
		Method: <com.southernstorm.noise.protocol.SymmetricState: void <clinit>()>
		SHA-256: bb9c9c3ce595f6599b384087c0456c97b2a9218241fef7426a6a02e965068cee
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <net.i2p.util.RandomSource$SecureRandomInit: void run()>
		SHA-256: 815e5b3ebc72586547b65963d4b173150ca71261e840f7240b12c55eab75f9fd
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyFactory
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer3580)
		Method: <net.i2p.crypto.SigUtil: java.security.interfaces.RSAPrivateKey toJavaRSAKey(net.i2p.data.SigningPrivateKey)>
		SHA-256: 97febdc667ffff030437d55bc76c35ce92390889bc77695e2addef7f0debaffb
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyFactory
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer3582)
		Method: <net.i2p.crypto.SigUtil: java.security.interfaces.DSAPublicKey toJavaDSAKey(net.i2p.data.SigningPublicKey)>
		SHA-256: 8142d6645399ce140328bff98d0bcb76f4416c08745bf33de5388db14405211f
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer35997)
		Method: <net.i2p.crypto.HMAC256Generator: javax.crypto.Mac acquire()>
		SHA-256: 48781c5cf81bf14a308387f425fcb11049e477ed6b8063e5b4bf501a97fc70f1
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $z0 = virtualinvoke $r12.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <net.i2p.crypto.DSAEngine: boolean altVerifySigRaw(net.i2p.data.Signature,net.i2p.data.SimpleDataStructure,java.security.PublicKey)>
		SHA-256: c600329d118c99717827eb2911dac26c26d8779eaa93175cff1c34f3cedb35a2
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r0)
		Method: <net.i2p.crypto.SigUtil: java.security.interfaces.DSAPrivateKey toJavaDSAKey(net.i2p.data.SigningPrivateKey)>
		SHA-256: 790fe26033532bd4976fdc33dddc50e7ebfebf17b3699e896f52efc711cd971f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.cert.CertificateFactory
		Statement: $r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer5742)
		Method: <net.i2p.crypto.CertUtil: java.security.cert.X509CRL loadCRL(java.io.InputStream)>
		SHA-256: 95a4c270e2a361210a05c1079cf4ec1fa897a640113ae2a0820f59b6de8a6f29
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: $r10 = virtualinvoke $r12.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <net.i2p.crypto.KeyGenerator: net.i2p.data.SimpleDataStructure[] generateSigningKeys(net.i2p.crypto.SigType)>
		SHA-256: 42449ce94f4b268316f53d78386c5064a15481279b27c41221a69bd0abbec9d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer19776)
		Method: <com.southernstorm.noise.protocol.Noise: java.security.MessageDigest createHash(java.lang.String)>
		SHA-256: c49dee867fe0e3bab871c501d51b83833bc1912bd5a90a00bb8479475dff8bc9
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r3.<javax.crypto.Mac: void doFinal(byte[],int)>($r1, $i1)
		Method: <net.i2p.crypto.HMAC256Generator: void calculate(byte[],byte[],int,int,byte[],int)>
		SHA-256: b12327c67184108b70311b28db4c1593732192361e9c20d0ec09b5d0fbcd3d4b
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <net.i2p.crypto.DSAEngine: net.i2p.crypto.SHA1Hash calculateHash(byte[],int,int)>
		SHA-256: f329519d73c32d2428dd9f9ba80c0a54c293bafbcec6fda35b03eb15ae59324d
		Secure: false
	Object:
		Variable: varReplacer33539
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer33539)
		Method: <net.i2p.crypto.CryptixAESEngine: void encrypt(byte[],int,byte[],int,net.i2p.data.SessionKey,byte[],int,int)>
		SHA-256: 44ac75317878c524ac8544d7717eb67aea29cb53b1789532e2db25fbcbf19899
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer38754)
		Method: <net.i2p.crypto.DSAEngine: boolean altVerifySigSHA1(net.i2p.data.Signature,byte[],int,int,net.i2p.data.SigningPublicKey)>
		SHA-256: 888a8a0be5ebad5951545b480b69931895541e04771a587975b4cc6bec4ce2ec
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.PublicKey
		Statement: $r11 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r7)
		Method: <net.i2p.crypto.SigUtil: java.security.interfaces.ECPublicKey cvtToJavaECKey(net.i2p.data.SigningPublicKey)>
		SHA-256: c6d66c926058f4f8a9a52939845aaa75fc5460f3b5446fc4cd0e07cb0661049
		Secure: false
	Object:
		Variable: $r14
		Type: javax.net.ssl.KeyManager[]
		Statement: $r14 = virtualinvoke $r13.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <net.i2p.i2ptunnel.SSLClientUtil: javax.net.ssl.SSLServerSocketFactory initializeFactory(java.util.Properties)>
		SHA-256: a9da97eb7045cb0f7cd3221c0929c7fd2697edb8a8cb63a93226ae06f3c256d1
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyFactory
		Statement: $r7 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer3649)
		Method: <net.i2p.crypto.SigUtil: java.security.interfaces.ECPrivateKey cvtToJavaECKey(net.i2p.data.SigningPrivateKey)>
		SHA-256: dd4f91a22d7a12083a6e286c8d64824b7f94fa2872e85fb5abb2ac2dea93e446
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r7)
		Method: <net.i2p.util.I2PSSLSocketFactory: javax.net.ssl.SSLSocketFactory initSSLContext(net.i2p.I2PAppContext,boolean,java.lang.String)>
		SHA-256: fbdf52699f7862f4922f58df2503cf50c16681f33cd4a046b1eb91226564aba
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyStore
		Statement: $r10 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <net.i2p.sam.SSLUtil: javax.net.ssl.SSLServerSocketFactory initializeFactory(java.util.Properties)>
		SHA-256: 366329fdd12c97773b8784ed46ce6fef59aed38e550c733b02deeb035a914b57
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.KeyFactory
		Statement: $r17 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer22449)
		Method: <net.i2p.crypto.KeyGenerator: net.i2p.data.SigningPublicKey getSigningPublicKey(net.i2p.data.SigningPrivateKey)>
		SHA-256: 82d58e59dc0c62a7e56155353389c58c232d29676eb1b5ae2d2cb0f9fbc600d0
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.KeyStore
		Statement: $r9 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r8)
		Method: <net.i2p.crypto.KeyStoreUtil: java.security.PrivateKey getPrivateKey(java.io.File,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 131f8349ff9663629b6b80e1f473b18737ecfcd54c00ce0aa0fc3e29c2da4cd7
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.KeyStore
		Statement: $r9 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6)
		Method: <net.i2p.crypto.KeyStoreUtil: java.security.KeyStore createKeyStore(java.io.File,java.lang.String)>
		SHA-256: 67b34fcfafba33c33d5f1f20fd08a196ff8cda306d3d085b3e1e298082fa2dcf
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r1, $r2, $r3)
		Method: <net.i2p.crypto.CryptoConstants: void <clinit>()>
		SHA-256: 70f5b97705adcbf902fcd75c4f464606fd032fa5f8072e5f0cc3269c031121c1
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.nettgryppa.security.HashCash: void <init>(java.lang.String)>
		SHA-256: 14b1bbdd36cd61e66d739f40a8f71e9f6e364f0b34fe887aa5b78723529dba9a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r2, varReplacer33554, varReplacer33555)
		Method: <net.i2p.crypto.CryptixAESEngine: void <clinit>()>
		SHA-256: 8e8c806df91f54ed3becc41c793246360ec7daf00be3c49edc23b3d234ac6289
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.TrustManager[]
		Statement: $r17 = virtualinvoke $r16.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <net.i2p.util.I2PSSLSocketFactory: javax.net.ssl.SSLSocketFactory initSSLContext(net.i2p.I2PAppContext,boolean,java.lang.String)>
		SHA-256: b1cfc6694cef88dbde1cbcd33bc37de4d7574704aef2ffecc83eb66f97f5939
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <net.i2p.crypto.eddsa.spec.EdDSAPrivateKeySpec: void <init>(byte[],net.i2p.crypto.eddsa.spec.EdDSAParameterSpec)>
		SHA-256: 1dbf57a27ae4cae19ca0df068bc587116d14c8716d6aeb248563e15dc6867285
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.MessageDigest: int digest(byte[],int,int)>($r0, varReplacer19762, varReplacer19763)
		Method: <com.southernstorm.noise.protocol.SymmetricState: void <clinit>()>
		SHA-256: 1197a1c6265b5af6560d492465e699a3561ff251903fb72cb91768d024b3f251
		Secure: true
	Object:
		Variable: varReplacer22444
		Type: java.lang.String
		Statement: $r17 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer22444)
		Method: <net.i2p.crypto.KeyGenerator: net.i2p.data.SigningPublicKey getSigningPublicKey(net.i2p.data.SigningPrivateKey)>
		SHA-256: 78e73d0620d07dc90613cba1a8bb394684ebf57353cf1753ea9ddc1fd7f2c6d8
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyStore
		Statement: $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r7)
		Method: <net.i2p.crypto.KeyStoreUtil: java.security.cert.Certificate getCert(java.io.File,java.lang.String,java.lang.String)>
		SHA-256: 62931e3fa612eef334ef6d940f1bfa46326d27fc7680f0ea4148d3d4dea9efe6
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r4)
		Method: <net.i2p.crypto.SigUtil: java.security.interfaces.ECPrivateKey cvtToJavaECKey(net.i2p.data.SigningPrivateKey)>
		SHA-256: 24a89493528a3fecc0d6412821e2b233850f58ad9a4c2a597da26a1308f663b0
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.AlgorithmParameters
		Statement: $r1 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>(varReplacer3490)
		Method: <net.i2p.crypto.ECConstants: java.security.spec.ECParameterSpec genSpec(java.lang.String)>
		SHA-256: b73e8843ef6a987abb4176c1f8aaa31a719e751935e17aa3ed38e383a7e32f1f
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyFactory
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer3579)
		Method: <net.i2p.crypto.SigUtil: java.security.interfaces.DSAPrivateKey toJavaDSAKey(net.i2p.data.SigningPrivateKey)>
		SHA-256: ff9fe7ac6507b537498702d53dd2b3eb09799da1bf9cf60a0ca704bb0af0adc4
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyFactory
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer3658)
		Method: <net.i2p.crypto.SigUtil: java.security.interfaces.ECPublicKey cvtToJavaECKey(net.i2p.data.SigningPublicKey)>
		SHA-256: ceaa7b076838439970f6a903b49b2c8ba47ab845850324560d082667012ea1e5
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12642)
		Method: <net.i2p.crypto.CryptoCheck: void <clinit>()>
		SHA-256: daa7ee3c5b4594516257c7629be5e56636a587fa54db6676ab331d915d46c190
		Secure: false
	Object:
		Variable: $r13
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r13 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r3)
		Method: <net.i2p.i2ptunnel.SSLClientUtil: javax.net.ssl.SSLServerSocketFactory initializeFactory(java.util.Properties)>
		SHA-256: ceb11e5627b374e2576e92c4d0abcb0df98ad31d508e7c445102f8fdd748d0e7
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyStore
		Statement: $r10 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <net.i2p.i2ptunnel.SSLClientUtil: javax.net.ssl.SSLServerSocketFactory initializeFactory(java.util.Properties)>
		SHA-256: 36610f7bf2b6bc4c0f810c2fb869d1e9eb8f1043bde478bdd9f18d2b24361746
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer35977)
		Method: <com.nettgryppa.security.HashCash: void <init>(java.lang.String)>
		SHA-256: cfe8f8f8758ee48824b1477d405d6da24ec0929c938a569bc570aa5e87d13f25
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.Signature
		Statement: $r12 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r11)
		Method: <net.i2p.crypto.DSAEngine: boolean altVerifySigRaw(net.i2p.data.Signature,net.i2p.data.SimpleDataStructure,java.security.PublicKey)>
		SHA-256: 5bb88b1c4026dd776be5f8cddb0361f178be0374f86a9abc295c50060181fe8b
		Secure: false
	Object:
		Variable: varReplacer28305
		Type: java.lang.String
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer28303, varReplacer28304, varReplacer28305)
		Method: <net.i2p.crypto.HKDF: void calculate(byte[],byte[],java.lang.String,byte[],byte[],int)>
		SHA-256: fd4a99a26dfb2076d8b8aa643d7aeb734700b2275118282aa80766f4fc3669af
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $z0 = virtualinvoke $r13.<java.security.Signature: boolean verify(byte[])>($r7)
		Method: <net.i2p.crypto.DSAEngine: boolean altVerifySig(net.i2p.data.Signature,byte[],int,int,net.i2p.data.SigningPublicKey)>
		SHA-256: 9f4b248f802b4d8a7f37b0bfef3415cc62f10e12327045eb668b226b14c90dc3
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.Key
		Statement: $r13 = virtualinvoke $r9.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r0, $r10)
		Method: <net.i2p.crypto.KeyStoreUtil: java.security.PrivateKey getPrivateKey(java.io.File,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: deefb9a4515f9c5ae0fd1e1826ea3974091376e0af0ba06bcf9ab7c4d560997b
		Secure: false
	Object:
		Variable: $r37
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r37.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r16)
		Method: <net.i2p.crypto.SelfSignedGenerator: java.lang.Object[] generate(java.security.PublicKey,java.security.PrivateKey,net.i2p.data.SigningPrivateKey,net.i2p.crypto.SigType,java.lang.String,java.util.Set,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
		SHA-256: aa6ef6353526f4dd9e250dcc784a6bdeb0af768ff7a0e36dae3c369029a480ce
		Secure: false
	Object:
		Variable: varReplacer12643
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer12643)
		Method: <net.i2p.crypto.CryptoCheck: void <clinit>()>
		SHA-256: 1dc9717bacd40c71fdb0292b2db365a158c786d7add844653124bc6bda4eda24
		Secure: false
	Object:
		Variable: $r13
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r13 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r3)
		Method: <net.i2p.sam.SSLUtil: javax.net.ssl.SSLServerSocketFactory initializeFactory(java.util.Properties)>
		SHA-256: 397d6e48f059362231e27796c93073c6c20071069f19db959c608aa5d14fd5c9
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <net.i2p.data.router.RouterInfo: void readBytes(java.io.InputStream,boolean)>
		SHA-256: bcdfaa4ffb65a6e84f33f44405420a6b664c642edcbbbe228c93bb81f20e888c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.spec.RSAKeyGenParameterSpec
		Statement: specialinvoke $r1.<java.security.spec.RSAKeyGenParameterSpec: void <init>(int,java.math.BigInteger)>($i0, $r0)
		Method: <net.i2p.crypto.RSAConstants: java.security.spec.RSAKeyGenParameterSpec genSpec(int,java.math.BigInteger)>
		SHA-256: 910df4303d87df9cf8536746ae16cff7eeac42e32def0197965fa517efd46dce
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r9)
		Method: <net.i2p.crypto.KeyStoreUtil: int removeBlacklistedCerts(java.security.KeyStore)>
		SHA-256: 4b407f23923f95178809fec13cd3bde421bf0de5b802a44d1013deec01462e41
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r9.<javax.crypto.Mac: void doFinal(byte[],int)>($r1, varReplacer28302)
		Method: <net.i2p.crypto.HKDF: void calculate(byte[],byte[],java.lang.String,byte[],byte[],int)>
		SHA-256: 79c85a1fbbb8c71eabb53fb3e03c662bb47d87a81185961fd52eb951706c3ffb
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer33556)
		Method: <net.i2p.crypto.CryptixAESEngine: void <clinit>()>
		SHA-256: 2445e2d18a45acecffc46b19d9ade8353721f88e5346f0410156f9ed24a7f5d0
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.MessageDigest: int digest(byte[],int,int)>($r1, varReplacer43950, $i0)
		Method: <net.i2p.router.transport.udp.I2PHMac: void init(byte[])>
		SHA-256: 70809937184281fda60c64248752c443b0b5d8e0df7ebc9644bba29ab9b5f49a
		Secure: false
	Object:
		Variable: $r14
		Type: javax.net.ssl.KeyManager[]
		Statement: $r14 = virtualinvoke $r13.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <net.i2p.sam.SSLUtil: javax.net.ssl.SSLServerSocketFactory initializeFactory(java.util.Properties)>
		SHA-256: c50800474131ddfd6da2eb4f0d0f100d6dfbb1bee2ca0a90ff039ca76a470958
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r12.<java.security.Signature: byte[] sign()>()
		Method: <net.i2p.crypto.DSAEngine: net.i2p.data.Signature altSign(byte[],int,int,net.i2p.data.SigningPrivateKey)>
		SHA-256: 4ce71b2b2ea06ef1e61baf0d5ace0ae2630c51d23b740ef75792d743aa8a4509
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r17 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r6)
		Method: <net.i2p.router.client.SSLClientListenerRunner: boolean initializeFactory(java.io.File)>
		SHA-256: a0f629a1b552d0685b04dfd9b65569db28f903e4377c8f5b5476522e076152f3
		Secure: false
	Object:
		Variable: varReplacer34256
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer34256)
		Method: <net.i2p.crypto.CryptixAESEngine: void decrypt(byte[],int,byte[],int,net.i2p.data.SessionKey,byte[],int,int)>
		SHA-256: b223c8e796b92649307d2bb0e15ab02307a2ce4d878e94edf0c28b85bf8989da
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.KeyFactory
		Statement: $r17 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer22444)
		Method: <net.i2p.crypto.KeyGenerator: net.i2p.data.SigningPublicKey getSigningPublicKey(net.i2p.data.SigningPrivateKey)>
		SHA-256: 896212af15aa2507d3a39d6635ef236b1588cb240e2f3819bbeb8ac45ffbc2f0
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.cert.CertificateFactory
		Statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer5716)
		Method: <net.i2p.crypto.CertUtil: java.security.cert.X509Certificate loadCert(java.io.File)>
		SHA-256: c494d340e3f55f84dff51c6d8dd9ac7f3cb2bef7f68e77957b1c42a9e9657f34
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.SSLContext
		Statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer23771)
		Method: <net.i2p.sam.SSLUtil: javax.net.ssl.SSLServerSocketFactory initializeFactory(java.util.Properties)>
		SHA-256: b81a9bb6b3cfcce26541c150f6e3f6b8a3a7d2b30da8f3f59484358b4ba7aa7
		Secure: false
	Object:
		Variable: varReplacer3582
		Type: java.lang.String
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer3582)
		Method: <net.i2p.crypto.SigUtil: java.security.interfaces.DSAPublicKey toJavaDSAKey(net.i2p.data.SigningPublicKey)>
		SHA-256: 3f9dc12979a76af00131247c717c6282a37409e6e51bed8fd633eaff2efeaa9c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.AlgorithmParameters
		Statement: $r1 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>(varReplacer3491, varReplacer3492)
		Method: <net.i2p.crypto.ECConstants: java.security.spec.ECParameterSpec genSpec(java.lang.String)>
		SHA-256: 25c848d445a4308e6b32c0ee4eb7cd4f821a2cfda7666404b58ce6e9a3d2b132
		Secure: false
	Object:
		Variable: varReplacer3658
		Type: java.lang.String
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer3658)
		Method: <net.i2p.crypto.SigUtil: java.security.interfaces.ECPublicKey cvtToJavaECKey(net.i2p.data.SigningPublicKey)>
		SHA-256: a61380c9143209bb1f653ed3f9be742ccfc415e158f9b1df0f0e8daf995e027c
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3677)
		Method: <net.i2p.crypto.SHA1: java.security.MessageDigest getInstance()>
		SHA-256: c753994f40905c7bcd36ee5f1b26b3bd5c78e32ba53b5559854c208f6f7e85ec
		Secure: false
	Object:
		Variable: varReplacer3649
		Type: java.lang.String
		Statement: $r7 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer3649)
		Method: <net.i2p.crypto.SigUtil: java.security.interfaces.ECPrivateKey cvtToJavaECKey(net.i2p.data.SigningPrivateKey)>
		SHA-256: 79d914c69195a58c19298d4f3d134688f4f9f494b8c45ffbc08d78576d2b083d
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.KeyStore
		Statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r13)
		Method: <net.i2p.router.client.SSLClientListenerRunner: boolean initializeFactory(java.io.File)>
		SHA-256: 7c97e91a22c474b47f4b2b9d3a54052bf5422f87110638dbd0d59dad404f1612
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <net.i2p.crypto.SigType: java.security.MessageDigest getDigestInstance()>
		SHA-256: 4b2c36bec6a83bef7642eb3a7b1f93cf7c04d9f7ba9431560f9b145d7e6b8
		Secure: false
	Object:
		Variable: varReplacer3580
		Type: java.lang.String
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer3580)
		Method: <net.i2p.crypto.SigUtil: java.security.interfaces.RSAPrivateKey toJavaRSAKey(net.i2p.data.SigningPrivateKey)>
		SHA-256: 68be52ffc432bd0714656d41b8e36b7bed9dd5be356dbb03493db431f6663540
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.PublicKey
		Statement: $r9 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)
		Method: <net.i2p.crypto.SigUtil: java.security.interfaces.RSAPublicKey toJavaRSAKey(net.i2p.data.SigningPublicKey)>
		SHA-256: ae6c38995bd67b07147f208fbaab7117fd5b31ee36d45d5b899c6b08b2792123
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r6)
		Method: <net.i2p.crypto.eddsa.spec.EdDSAParameterSpec: void <init>(net.i2p.crypto.eddsa.math.Curve,java.lang.String,net.i2p.crypto.eddsa.math.ScalarOps,net.i2p.crypto.eddsa.math.GroupElement)>
		SHA-256: e2a7fde5e14223557a76ad0c1c621daab6834282af96171dab264b22557dc255
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer34256)
		Method: <net.i2p.crypto.CryptixAESEngine: void decrypt(byte[],int,byte[],int,net.i2p.data.SessionKey,byte[],int,int)>
		SHA-256: 5e7e013453befb1124796bf206cb6349cea8a738518fad51583bdd765ffbdc48
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r6)
		Method: <net.i2p.crypto.eddsa.spec.EdDSAPrivateKeySpec: void <init>(byte[],net.i2p.crypto.eddsa.spec.EdDSAParameterSpec)>
		SHA-256: d5b38735dd5a1264aff1067c406c42adc332ffc85d247dbac86d03b47b3b04b3
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer39578)
		Method: <net.i2p.crypto.CryptixAESEngine: javax.crypto.Cipher acquire()>
		SHA-256: 32c4765c3555bc503435901f26b08627720444ac3f176dea51a26bc645ae29b2
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyPairGenerator
		Statement: $r12 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>($r17, varReplacer9099)
		Method: <net.i2p.crypto.KeyGenerator: net.i2p.data.SimpleDataStructure[] generateSigningKeys(net.i2p.crypto.SigType)>
		SHA-256: 682577d45fb730af7a7d7c48623efef3d1eb3aa13de27e3f742e0a52a3148915
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.Signature
		Statement: $r12 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r11)
		Method: <net.i2p.crypto.DSAEngine: net.i2p.data.Signature altSign(byte[],int,int,net.i2p.data.SigningPrivateKey)>
		SHA-256: 9a5989ca5eb2c8f8e291339e76a5485a2d36a5655f0956af8def2bde97fb27a7
		Secure: false
	Object:
		Variable: $r23
		Type: java.security.cert.CertificateFactory
		Statement: $r23 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer3538)
		Method: <net.i2p.crypto.SelfSignedGenerator: java.lang.Object[] generate(java.security.PublicKey,java.security.PrivateKey,net.i2p.data.SigningPrivateKey,net.i2p.crypto.SigType,java.lang.String,java.util.Set,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
		SHA-256: 5d943e24e624839479c7bfcaa331caf3d8c6df88de36152fdfd836c0b0578090
		Secure: false
	Object:
		Variable: $r19
		Type: java.security.DigestInputStream
		Statement: specialinvoke $r19.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r3, $r9)
		Method: <net.i2p.data.router.RouterInfo: void readBytes(java.io.InputStream,boolean)>
		SHA-256: 1d521f6b7d859dd48f4293f2b0a3c75ea2828508b0cf0845f64574f59575dccc
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r14.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r11, $r13, $r3, varReplacer9077)
		Method: <net.i2p.crypto.ECConstants$ECParms: java.security.spec.ECParameterSpec genSpec()>
		SHA-256: 67c5284eb25a57b0915d15d4ff6cf226ab64ecfc35c9c71170aa78abce6cce4b
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r4)
		Method: <net.i2p.crypto.KeyStoreUtil: java.security.KeyStore loadSystemKeyStore()>
		SHA-256: 802b26876acee8405ecbc3d8e27df505470dcf8b3d6df5d21a42ec15a702827f
		Secure: false
	Object:
		Variable: $r12
		Type: javax.net.ssl.SSLContext
		Statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer17608)
		Method: <net.i2p.router.client.SSLClientListenerRunner: boolean initializeFactory(java.io.File)>
		SHA-256: ba8c3552e24394c94b5350ac51ebc1fb16e2a81200c8534c5efd2b1f1a39163c
		Secure: false
	Object:
		Variable: varReplacer22449
		Type: java.lang.String
		Statement: $r17 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer22449)
		Method: <net.i2p.crypto.KeyGenerator: net.i2p.data.SigningPublicKey getSigningPublicKey(net.i2p.data.SigningPrivateKey)>
		SHA-256: a5258ffefa5f65a337c6821375098a9612c754f65c435c6bbf9ca105c334cf3c
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <net.i2p.util.I2PSSLSocketFactory: javax.net.ssl.SSLSocketFactory initSSLContext(net.i2p.I2PAppContext,boolean,java.lang.String)>
		SHA-256: 6e4662bb05a325965fc90f1fad47bb5d41d1e35131c5488ac5f901b66925161b
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer35546)
		Method: <net.i2p.crypto.DSAEngine: net.i2p.data.Signature altSignSHA1(byte[],int,int,net.i2p.data.SigningPrivateKey)>
		SHA-256: 31a7e297a0bde78cd44690a99b58578c9c2c4aef3d472a6c892c1ac4c646a2f5
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)
		Method: <net.i2p.crypto.eddsa.RedKeyPairGenerator: java.security.KeyPair generateKeyPair()>
		SHA-256: a2db4279fa4e7adf9f405f16da43b5764e9aca49255c4fedde30687654b72b9b
		Secure: false
	Object:
		Variable: r0
		Type: net.i2p.util.RandomSource
		Statement: specialinvoke r0.<java.security.SecureRandom: void <init>()>()
		Method: <net.i2p.util.RandomSource: void <init>(net.i2p.I2PAppContext)>
		SHA-256: 92acbef778fdb663cc52472b2e900307cc79f5f37fbef863f423379060c6f285
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $i0 = virtualinvoke $r3.<java.security.MessageDigest: int digest(byte[],int,int)>($r1, $i0, $i1)
		Method: <net.i2p.router.transport.udp.I2PHMac: int doFinal(byte[],int)>
		SHA-256: 2962d1dee004cbaf48fa1ba1ed88af46901a0102ad2ab189eb0b9080439228fa
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.Signature
		Statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)
		Method: <net.i2p.crypto.SigType: boolean x_isAvailable()>
		SHA-256: 5f0c58ce260071ca6ac8d77f5db4584f89e06acdfad95361fea37d6ac6332dd1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer25148)
		Method: <net.i2p.util.PasswordManager: byte[] md5Sum(byte[])>
		SHA-256: e69a800e0d0b48b12aaeea031dea8423e987a57658c8a6e9b48ae2064173b163
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.Signature
		Statement: $r13 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r12)
		Method: <net.i2p.crypto.DSAEngine: boolean altVerifySig(net.i2p.data.Signature,byte[],int,int,net.i2p.data.SigningPublicKey)>
		SHA-256: 168f69818e33f6ae53e89d4c4bc3759827ffbcd168091c321bb3994f626e169a
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer33539)
		Method: <net.i2p.crypto.CryptixAESEngine: void encrypt(byte[],int,byte[],int,net.i2p.data.SessionKey,byte[],int,int)>
		SHA-256: f49727a8a3113628afe2547bb6b78436a826df31969792e1d7c4200f77f6e01f
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer43946)
		Method: <net.i2p.router.transport.udp.SSUHMACGenerator: net.i2p.router.transport.udp.I2PHMac acquire()>
		SHA-256: cbe0b494087838028e65e74d15e1ba4a1bdc4f166186580374c9f9bf29d2d719
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <net.i2p.crypto.DSAEngine: boolean altVerifySigSHA1(net.i2p.data.Signature,byte[],int,int,net.i2p.data.SigningPublicKey)>
		SHA-256: ad5bfa1e1eda74e159bbee0cd8fd682d6c8a2f88c67ee4c979910358dcaf9c54
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r12.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <net.i2p.crypto.DSAEngine: boolean altVerifySigRaw(net.i2p.data.Signature,net.i2p.data.SimpleDataStructure,java.security.PublicKey)>
		SHA-256: 54fb9fde4079b279ae1da1a7a5cd7e2c9999fcb32062634e44415c7ef32e9a70
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r4, $i2, varReplacer33542)
		Method: <net.i2p.crypto.CryptixAESEngine: void encrypt(byte[],int,byte[],int,net.i2p.data.SessionKey,byte[],int,int)>
		SHA-256: a79cf89df904f5b2d5768ca4cfcd8f022a9291cccf338ff01fb3bc8c4eeba364
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r10 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r4)
		Method: <net.i2p.util.SSLEepGet: javax.net.ssl.SSLContext initSSLContext()>
		SHA-256: 9b9d30808b69fb71f25e5181427da6ded3d3adbbdef94a712b95f47f5832d03
		Secure: false
	Object:
		Variable: $r11
		Type: javax.net.ssl.TrustManager[]
		Statement: $r11 = virtualinvoke $r10.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <net.i2p.util.SSLEepGet: javax.net.ssl.SSLContext initSSLContext()>
		SHA-256: c6bd4b66ab73940329b73e8cb15641de6abc56e12846797496acf15abc08e09e
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer3583)
		Method: <net.i2p.crypto.SigUtil: java.security.interfaces.RSAPublicKey toJavaRSAKey(net.i2p.data.SigningPublicKey)>
		SHA-256: 4a453c85f8ff8526eed215f31ae064bf29a0097b0e33957e975f5777059d3119
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer12643)
		Method: <net.i2p.crypto.CryptoCheck: void <clinit>()>
		SHA-256: 48c2689e369b35f36d49d779d3c92e56eeb03c6742a02c0eaa2de6c523f36d4a
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r3.<java.security.MessageDigest: int digest(byte[],int,int)>($r2, varReplacer43955, $i1)
		Method: <net.i2p.router.transport.udp.I2PHMac: int doFinal(byte[],int)>
		SHA-256: 6691e8666ef016dc8cec2ecdb1b9416021f08f91d629b0a896ac86f69ee2c314
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r5.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>($r0)
		Method: <net.i2p.crypto.ECConstants: java.security.spec.ECParameterSpec genSpec(java.lang.String)>
		SHA-256: f0ecfd1423ce3af7638f5e9cf38b929843437656d4076bc840fa3833516a3b62
		Secure: false
	Object:
		Variable: varReplacer3583
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer3583)
		Method: <net.i2p.crypto.SigUtil: java.security.interfaces.RSAPublicKey toJavaRSAKey(net.i2p.data.SigningPublicKey)>
		SHA-256: d3f1bb5c467a7bfa310d12b42bcc8a38cc196d4df53f9e869ba8c2070f81351c
		Secure: false
	Object:
		Variable: $r20
		Type: java.security.PrivateKey
		Statement: $r20 = virtualinvoke $r10.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <net.i2p.crypto.KeyGenerator: net.i2p.data.SimpleDataStructure[] generateSigningKeys(net.i2p.crypto.SigType)>
		SHA-256: 1d40e3965d41238174db49cb9aa4f7d8affa07859349a6257810098758d38e05
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer28303, varReplacer28304, varReplacer28305)
		Method: <net.i2p.crypto.HKDF: void calculate(byte[],byte[],java.lang.String,byte[],byte[],int)>
		SHA-256: e78a424ffd218173a8471c0c8cfcf86ccd42dd75539545e764de7bd9af702c04
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)
		Method: <net.i2p.crypto.eddsa.KeyPairGenerator: java.security.KeyPair generateKeyPair()>
		SHA-256: 7f553f848257c5556bec61e0f72924acad744b2954b20558d0f39f505e1c168d
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PublicKey
		Statement: $r8 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)
		Method: <net.i2p.crypto.SigUtil: java.security.interfaces.DSAPublicKey toJavaDSAKey(net.i2p.data.SigningPublicKey)>
		SHA-256: 6f2589694b383b27a5462d844ade3746df7172045b75d343065ced843bce02e0
		Secure: false
	Object:
		Variable: $r18
		Type: java.security.PublicKey
		Statement: $r18 = virtualinvoke $r17.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r24)
		Method: <net.i2p.crypto.KeyGenerator: net.i2p.data.SigningPublicKey getSigningPublicKey(net.i2p.data.SigningPrivateKey)>
		SHA-256: f42a9e9e403442d97f786c2d85026cd9dd515f52735d62d9b511745328c6af34
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <net.i2p.util.PasswordManager: byte[] md5Sum(byte[])>
		SHA-256: 604e28c3406d62a36e8bd42aded77b0bd2390d9cb3b0527ca3e8db672fe19c7
		Secure: false
	Object:
		Variable: $r35
		Type: java.security.DigestInputStream
		Statement: specialinvoke $r35.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r9, $r15)
		Method: <net.i2p.crypto.SU3File: boolean verifyAndMigrate(java.io.File)>
		SHA-256: b5f03154dd74910ce593f996644945fc2738749454ac5db16b9d6a61c0053e8e
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer1682)
		Method: <net.i2p.util.RandomSource$SecureRandomInit: void run()>
		SHA-256: 46cf4e9e3194b46b9054d2b6d2e9f0c29cacd5b2ce957be35e0380bb430db094
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <net.i2p.crypto.SelfSignedGenerator: byte[] getExtensions(byte[],java.lang.String,java.util.Set)>
		SHA-256: d1d5dc4bd15ccc28c4b89d54ee5b68c17bfbe8cb8f794142a439a04e01335184
		Secure: false
	Object:
		Variable: $r18
		Type: java.security.PublicKey
		Statement: $r18 = virtualinvoke $r17.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r15)
		Method: <net.i2p.crypto.KeyGenerator: net.i2p.data.SigningPublicKey getSigningPublicKey(net.i2p.data.SigningPrivateKey)>
		SHA-256: cc681cace11c8d500d8330d1b279a9a523a10c34993aaa21ac42d6c01f3820e
		Secure: false
	Object:
		Variable: varReplacer33556
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer33556)
		Method: <net.i2p.crypto.CryptixAESEngine: void <clinit>()>
		SHA-256: c90ec7f3b5565d5df6b082231f3e9862c4bd630f1a7e7f645974ad2a59178577
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.cert.CertificateFactory
		Statement: $r9 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer3550)
		Method: <net.i2p.crypto.SelfSignedGenerator: java.security.cert.X509CRL generateCRL(java.security.cert.X509Certificate,int,int,byte[],net.i2p.data.SigningPrivateKey)>
		SHA-256: 2a294af800f8831c409a306fb58b5f94507e9f10da0725bde4fc479f7c2a35a7
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <net.i2p.crypto.DSAEngine: boolean altVerifySigSHA1(net.i2p.data.Signature,byte[],int,int,net.i2p.data.SigningPublicKey)>
		SHA-256: ef9604f8fa0028d2cd092bd8e1e3c22e65d05d269b4568fc00a6cbe351d0d52a
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.PrivateKey
		Statement: $r9 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r0)
		Method: <net.i2p.crypto.SigUtil: java.security.interfaces.RSAPrivateKey toJavaRSAKey(net.i2p.data.SigningPrivateKey)>
		SHA-256: c2030718f16cbcf4c79019f3e17b39bc44090185e8eb8e23e4bc74d3405778f4
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r4, $i2, varReplacer34252)
		Method: <net.i2p.crypto.CryptixAESEngine: void decrypt(byte[],int,byte[],int,net.i2p.data.SessionKey,byte[],int,int)>
		SHA-256: a17a11f772be0ed239ccf30db5cf7aaac4769b344f5d05c367e9854fcbbb302a
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r13.<java.security.Signature: boolean verify(byte[])>($r7)
		Method: <net.i2p.crypto.DSAEngine: boolean altVerifySig(net.i2p.data.Signature,byte[],int,int,net.i2p.data.SigningPublicKey)>
		SHA-256: 8bddf4b3e5474438870077bd47400e09895ec3659caa5210ade97e16a7c7f1ca
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer24580)
		Method: <net.i2p.crypto.SHA256Generator: java.security.MessageDigest getDigestInstance()>
		SHA-256: d352ad4f1a9152f7722d1c4e1da5fc6468d0f1c21e2f5065fa35a8988a051c81
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.Signature: byte[] sign()>()
		Method: <net.i2p.crypto.DSAEngine: net.i2p.data.Signature altSignSHA1(byte[],int,int,net.i2p.data.SigningPrivateKey)>
		SHA-256: cd4847295ec739a6492c6f56cd9bb02f8a4e42ecdaaa09a90fc6a978e2b8169c
		Secure: false
	Object:
		Variable: $r18
		Type: javax.net.ssl.KeyManager[]
		Statement: $r18 = virtualinvoke $r17.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <net.i2p.router.client.SSLClientListenerRunner: boolean initializeFactory(java.io.File)>
		SHA-256: e65f8708503f9dcb96e3d30e628cdbbe28f54fa114726f2a5c9b6597020931ee
		Secure: false
	Object:
		Variable: $r19
		Type: java.security.PublicKey
		Statement: $r19 = virtualinvoke $r10.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <net.i2p.crypto.KeyGenerator: net.i2p.data.SimpleDataStructure[] generateSigningKeys(net.i2p.crypto.SigType)>
		SHA-256: 98ce6162ca2ebcaa517ad84661999487c4e61cff9c9619c7d86785fae9d2480e
		Secure: false

Findings in Java Class: net.i2p.crypto.SU3File

	 in Method: boolean verifyAndMigrate(java.io.File)
		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #b5f03154dd74910ce593f996644945fc2738749454ac5db16b9d6a61c0053e8e)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: virtualinvoke $r35.<java.security.DigestInputStream: void on(boolean)>(varReplacer37952)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c753994f40905c7bcd36ee5f1b26b3bd5c78e32ba53b5559854c208f6f7e85ec)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r35.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r9, $r15)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d352ad4f1a9152f7722d1c4e1da5fc6468d0f1c21e2f5065fa35a8988a051c81)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r35.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r9, $r15)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4b2c36bec6a83bef7642eb3a7b1f93cf7c04d9f7ba9431560f9b145d7e6b8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r35.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r9, $r15)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #c753994f40905c7bcd36ee5f1b26b3bd5c78e32ba53b5559854c208f6f7e85ec)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r12 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c753994f40905c7bcd36ee5f1b26b3bd5c78e32ba53b5559854c208f6f7e85ec)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r12 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #d352ad4f1a9152f7722d1c4e1da5fc6468d0f1c21e2f5065fa35a8988a051c81)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r12 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d352ad4f1a9152f7722d1c4e1da5fc6468d0f1c21e2f5065fa35a8988a051c81)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r12 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #4b2c36bec6a83bef7642eb3a7b1f93cf7c04d9f7ba9431560f9b145d7e6b8)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r12 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4b2c36bec6a83bef7642eb3a7b1f93cf7c04d9f7ba9431560f9b145d7e6b8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r12 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest()>()

		ForbiddenMethodError violating CrySL rule for java.security.DigestInputStream
			Detected call to forbidden method void on(boolean) of class java.security.DigestInputStream
			at statement: virtualinvoke $r35.<java.security.DigestInputStream: void on(boolean)>(varReplacer37952)

		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #b5f03154dd74910ce593f996644945fc2738749454ac5db16b9d6a61c0053e8e)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: specialinvoke $r35.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r9, $r15)


Findings in Java Class: net.i2p.i2ptunnel.SSLClientUtil

	 in Method: javax.net.ssl.SSLServerSocketFactory initializeFactory(java.util.Properties)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r14, varReplacer2110, $r15)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r14, varReplacer2110, $r15)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r13.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r10, $r12)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r14, varReplacer2110, $r15)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #ceb11e5627b374e2576e92c4d0abcb0df98ad31d508e7c445102f8fdd748d0e7)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r13.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r10, $r12)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #ceb11e5627b374e2576e92c4d0abcb0df98ad31d508e7c445102f8fdd748d0e7)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r13.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r10, $r12)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #56427629bb861bae648fabb0e692d2ecf06bad8d5ac9de2b50351ba5a03951fa)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2116)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #36610f7bf2b6bc4c0f810c2fb869d1e9eb8f1043bde478bdd9f18d2b24361746)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r10.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r11, $r12)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #36610f7bf2b6bc4c0f810c2fb869d1e9eb8f1043bde478bdd9f18d2b24361746)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r10.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r11, $r12)


Findings in Java Class: net.i2p.crypto.KeyStoreUtil

	 in Method: java.security.cert.Certificate getCert(java.io.File,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #62931e3fa612eef334ef6d940f1bfa46326d27fc7680f0ea4148d3d4dea9efe6)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r8.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r2, $r9)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #62931e3fa612eef334ef6d940f1bfa46326d27fc7680f0ea4148d3d4dea9efe6)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r8.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r2, $r9)


	 in Method: java.security.PrivateKey getPrivateKey(java.io.File,java.lang.String,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #131f8349ff9663629b6b80e1f473b18737ecfcd54c00ce0aa0fc3e29c2da4cd7)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r9.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r2, $r10)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #131f8349ff9663629b6b80e1f473b18737ecfcd54c00ce0aa0fc3e29c2da4cd7)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r9.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r2, $r10)


	 in Method: java.security.KeyStore createKeyStore(java.io.File,java.lang.String)
		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #67b34fcfafba33c33d5f1f20fd08a196ff8cda306d3d085b3e1e298082fa2dcf)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r9.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer3528, $r11)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #67b34fcfafba33c33d5f1f20fd08a196ff8cda306d3d085b3e1e298082fa2dcf)
			Unexpected call to method load on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r9.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer3528, $r11)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #67b34fcfafba33c33d5f1f20fd08a196ff8cda306d3d085b3e1e298082fa2dcf)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r9.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r12, $r8)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #67b34fcfafba33c33d5f1f20fd08a196ff8cda306d3d085b3e1e298082fa2dcf)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r9.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r0, $r8)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #67b34fcfafba33c33d5f1f20fd08a196ff8cda306d3d085b3e1e298082fa2dcf)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r9.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r0, $r8)


	 in Method: void storePrivateKey(java.io.File,java.lang.String,java.lang.String,java.lang.String,java.security.PrivateKey,java.util.List)
		TypestateError violating CrySL rule for java.security.KeyStore (on Object #67b34fcfafba33c33d5f1f20fd08a196ff8cda306d3d085b3e1e298082fa2dcf)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r9.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r13, $r10)


	 in Method: int removeBlacklistedCerts(java.security.KeyStore)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c753994f40905c7bcd36ee5f1b26b3bd5c78e32ba53b5559854c208f6f7e85ec)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r9 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r9)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c753994f40905c7bcd36ee5f1b26b3bd5c78e32ba53b5559854c208f6f7e85ec)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = staticinvoke <net.i2p.crypto.SHA1: java.security.MessageDigest getInstance()>()


	 in Method: boolean loadCerts(java.io.File,java.security.KeyStore)
		TypestateError violating CrySL rule for java.security.KeyStore (on Object #802b26876acee8405ecbc3d8e27df505470dcf8b3d6df5d21a42ec15a702827f)
			Unexpected call to method load on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r0.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r10, $r12)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #802b26876acee8405ecbc3d8e27df505470dcf8b3d6df5d21a42ec15a702827f)
			Unexpected call to method load on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r0.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer5709, $r12)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #802b26876acee8405ecbc3d8e27df505470dcf8b3d6df5d21a42ec15a702827f)
			Unexpected call to method load on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r0.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer5710, $r12)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #802b26876acee8405ecbc3d8e27df505470dcf8b3d6df5d21a42ec15a702827f)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r0.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r10, $r12)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #802b26876acee8405ecbc3d8e27df505470dcf8b3d6df5d21a42ec15a702827f)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r0.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer5709, $r12)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #802b26876acee8405ecbc3d8e27df505470dcf8b3d6df5d21a42ec15a702827f)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r0.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer5710, $r12)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #802b26876acee8405ecbc3d8e27df505470dcf8b3d6df5d21a42ec15a702827f)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r0.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer5710, $r12)


	 in Method: java.security.KeyStore loadSystemKeyStore()
		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #802b26876acee8405ecbc3d8e27df505470dcf8b3d6df5d21a42ec15a702827f)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer5666, $r7)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #802b26876acee8405ecbc3d8e27df505470dcf8b3d6df5d21a42ec15a702827f)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer5659, $r7)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #802b26876acee8405ecbc3d8e27df505470dcf8b3d6df5d21a42ec15a702827f)
			Unexpected call to method load on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer5659, $r7)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #802b26876acee8405ecbc3d8e27df505470dcf8b3d6df5d21a42ec15a702827f)
			Unexpected call to method load on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer5666, $r7)


Findings in Java Class: net.i2p.crypto.RSAConstants

	 in Method: java.security.spec.RSAKeyGenParameterSpec genSpec(int,java.math.BigInteger)
		ConstraintError violating CrySL rule for java.security.spec.RSAKeyGenParameterSpec (on Object #910df4303d87df9cf8536746ae16cff7eeac42e32def0197965fa517efd46dce)
			First parameter (with value 3072) should be any of {1024, 2048, 4096}
			at statement: specialinvoke $r1.<java.security.spec.RSAKeyGenParameterSpec: void <init>(int,java.math.BigInteger)>($i0, $r0)


Findings in Java Class: net.i2p.crypto.ECConstants

	 in Method: java.security.spec.ECParameterSpec genSpec(java.lang.String)
		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #f0ecfd1423ce3af7638f5e9cf38b929843437656d4076bc840fa3833516a3b62)
			First parameter (with value "P-256") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r5.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>($r0)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #f0ecfd1423ce3af7638f5e9cf38b929843437656d4076bc840fa3833516a3b62)
			First parameter (with value "P-384") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r5.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>($r0)

		ConstraintError violating CrySL rule for java.security.AlgorithmParameters (on Object #25c848d445a4308e6b32c0ee4eb7cd4f821a2cfda7666404b58ce6e9a3d2b132)
			First parameter (with value "EC") should be any of {AES, DiffieHellman, DH, OAEP, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r1 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>(varReplacer3491, varReplacer3492)

		ConstraintError violating CrySL rule for java.security.AlgorithmParameters (on Object #b73e8843ef6a987abb4176c1f8aaa31a719e751935e17aa3ed38e383a7e32f1f)
			First parameter (with value "EC") should be any of {AES, DiffieHellman, DH, OAEP, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r1 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>(varReplacer3490)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #f0ecfd1423ce3af7638f5e9cf38b929843437656d4076bc840fa3833516a3b62)
			First parameter (with value "P-521") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r5.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>($r0)


Findings in Java Class: net.i2p.crypto.SelfSignedGenerator

	 in Method: java.lang.Object[] generate(java.security.PublicKey,java.security.PrivateKey,net.i2p.data.SigningPrivateKey,net.i2p.crypto.SigType,java.lang.String,java.util.Set,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)
		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r37.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r16)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #5d943e24e624839479c7bfcaa331caf3d8c6df88de36152fdfd836c0b0578090)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r24 = virtualinvoke $r23.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r22)


	 in Method: java.security.cert.X509CRL generateCRL(java.security.cert.X509Certificate,int,int,byte[],net.i2p.data.SigningPrivateKey)
		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #2a294af800f8831c409a306fb58b5f94507e9f10da0725bde4fc479f7c2a35a7)
			Unexpected call to method generateCRL on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCertPath,generateCertificate
			at statement: $r10 = virtualinvoke $r9.<java.security.cert.CertificateFactory: java.security.cert.CRL generateCRL(java.io.InputStream)>($r8)


Findings in Java Class: net.i2p.crypto.SHA1

	 in Method: java.security.MessageDigest getInstance()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c753994f40905c7bcd36ee5f1b26b3bd5c78e32ba53b5559854c208f6f7e85ec)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3677)


Findings in Java Class: net.i2p.data.router.RouterInfo

	 in Method: void readBytes(java.io.InputStream,boolean)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c753994f40905c7bcd36ee5f1b26b3bd5c78e32ba53b5559854c208f6f7e85ec)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to java.security.MessageDigest: int digest(byte[],int,int), java.security.MessageDigest: byte[] digest(byte[]), java.security.MessageDigest: byte[] digest()
			at statement: $r11 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4b2c36bec6a83bef7642eb3a7b1f93cf7c04d9f7ba9431560f9b145d7e6b8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to java.security.MessageDigest: int digest(byte[],int,int), java.security.MessageDigest: byte[] digest(byte[]), java.security.MessageDigest: byte[] digest()
			at statement: $r11 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c753994f40905c7bcd36ee5f1b26b3bd5c78e32ba53b5559854c208f6f7e85ec)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: specialinvoke $r19.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r3, $r9)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d352ad4f1a9152f7722d1c4e1da5fc6468d0f1c21e2f5065fa35a8988a051c81)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: specialinvoke $r19.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r3, $r9)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4b2c36bec6a83bef7642eb3a7b1f93cf7c04d9f7ba9431560f9b145d7e6b8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: specialinvoke $r19.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r3, $r9)

		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #1d521f6b7d859dd48f4293f2b0a3c75ea2828508b0cf0845f64574f59575dccc)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: specialinvoke $r19.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r3, $r9)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #d352ad4f1a9152f7722d1c4e1da5fc6468d0f1c21e2f5065fa35a8988a051c81)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r11 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d352ad4f1a9152f7722d1c4e1da5fc6468d0f1c21e2f5065fa35a8988a051c81)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r11 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c753994f40905c7bcd36ee5f1b26b3bd5c78e32ba53b5559854c208f6f7e85ec)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: $r10 = null

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c753994f40905c7bcd36ee5f1b26b3bd5c78e32ba53b5559854c208f6f7e85ec)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: $r10 = null

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4b2c36bec6a83bef7642eb3a7b1f93cf7c04d9f7ba9431560f9b145d7e6b8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: $r10 = null

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4b2c36bec6a83bef7642eb3a7b1f93cf7c04d9f7ba9431560f9b145d7e6b8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: $r10 = null

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d352ad4f1a9152f7722d1c4e1da5fc6468d0f1c21e2f5065fa35a8988a051c81)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r10 = null

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d352ad4f1a9152f7722d1c4e1da5fc6468d0f1c21e2f5065fa35a8988a051c81)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r10 = null


Findings in Java Class: net.i2p.crypto.DSAEngine

	 in Method: boolean altVerifySig(net.i2p.data.Signature,byte[],int,int,net.i2p.data.SigningPublicKey)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c753994f40905c7bcd36ee5f1b26b3bd5c78e32ba53b5559854c208f6f7e85ec)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r16.<net.i2p.crypto.eddsa.EdDSAEngine: void <init>(java.security.MessageDigest)>($r10)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d352ad4f1a9152f7722d1c4e1da5fc6468d0f1c21e2f5065fa35a8988a051c81)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r16.<net.i2p.crypto.eddsa.EdDSAEngine: void <init>(java.security.MessageDigest)>($r10)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4b2c36bec6a83bef7642eb3a7b1f93cf7c04d9f7ba9431560f9b145d7e6b8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r16.<net.i2p.crypto.eddsa.EdDSAEngine: void <init>(java.security.MessageDigest)>($r10)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c753994f40905c7bcd36ee5f1b26b3bd5c78e32ba53b5559854c208f6f7e85ec)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r15.<net.i2p.crypto.eddsa.RedDSAEngine: void <init>(java.security.MessageDigest)>($r10)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c753994f40905c7bcd36ee5f1b26b3bd5c78e32ba53b5559854c208f6f7e85ec)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r15.<net.i2p.crypto.eddsa.RedDSAEngine: void <init>(java.security.MessageDigest)>($r10)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d352ad4f1a9152f7722d1c4e1da5fc6468d0f1c21e2f5065fa35a8988a051c81)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r15.<net.i2p.crypto.eddsa.RedDSAEngine: void <init>(java.security.MessageDigest)>($r10)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d352ad4f1a9152f7722d1c4e1da5fc6468d0f1c21e2f5065fa35a8988a051c81)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r15.<net.i2p.crypto.eddsa.RedDSAEngine: void <init>(java.security.MessageDigest)>($r10)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4b2c36bec6a83bef7642eb3a7b1f93cf7c04d9f7ba9431560f9b145d7e6b8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r15.<net.i2p.crypto.eddsa.RedDSAEngine: void <init>(java.security.MessageDigest)>($r10)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4b2c36bec6a83bef7642eb3a7b1f93cf7c04d9f7ba9431560f9b145d7e6b8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r15.<net.i2p.crypto.eddsa.RedDSAEngine: void <init>(java.security.MessageDigest)>($r10)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r13.<java.security.Signature: void initVerify(java.security.PublicKey)>($r6)


	 in Method: net.i2p.data.Signature altSign(byte[],int,int,net.i2p.data.SigningPrivateKey)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c753994f40905c7bcd36ee5f1b26b3bd5c78e32ba53b5559854c208f6f7e85ec)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r15.<net.i2p.crypto.eddsa.RedDSAEngine: void <init>(java.security.MessageDigest)>($r9)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c753994f40905c7bcd36ee5f1b26b3bd5c78e32ba53b5559854c208f6f7e85ec)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r15.<net.i2p.crypto.eddsa.RedDSAEngine: void <init>(java.security.MessageDigest)>($r9)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d352ad4f1a9152f7722d1c4e1da5fc6468d0f1c21e2f5065fa35a8988a051c81)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r15.<net.i2p.crypto.eddsa.RedDSAEngine: void <init>(java.security.MessageDigest)>($r9)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d352ad4f1a9152f7722d1c4e1da5fc6468d0f1c21e2f5065fa35a8988a051c81)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r15.<net.i2p.crypto.eddsa.RedDSAEngine: void <init>(java.security.MessageDigest)>($r9)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4b2c36bec6a83bef7642eb3a7b1f93cf7c04d9f7ba9431560f9b145d7e6b8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r15.<net.i2p.crypto.eddsa.RedDSAEngine: void <init>(java.security.MessageDigest)>($r9)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4b2c36bec6a83bef7642eb3a7b1f93cf7c04d9f7ba9431560f9b145d7e6b8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r15.<net.i2p.crypto.eddsa.RedDSAEngine: void <init>(java.security.MessageDigest)>($r9)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c753994f40905c7bcd36ee5f1b26b3bd5c78e32ba53b5559854c208f6f7e85ec)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r16.<net.i2p.crypto.eddsa.EdDSAEngine: void <init>(java.security.MessageDigest)>($r9)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d352ad4f1a9152f7722d1c4e1da5fc6468d0f1c21e2f5065fa35a8988a051c81)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r16.<net.i2p.crypto.eddsa.EdDSAEngine: void <init>(java.security.MessageDigest)>($r9)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4b2c36bec6a83bef7642eb3a7b1f93cf7c04d9f7ba9431560f9b145d7e6b8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r16.<net.i2p.crypto.eddsa.EdDSAEngine: void <init>(java.security.MessageDigest)>($r9)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r12.<java.security.Signature: void initSign(java.security.PrivateKey,java.security.SecureRandom)>($r6, $r14)


	 in Method: net.i2p.data.Signature altSignSHA1(byte[],int,int,net.i2p.data.SigningPrivateKey)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #31a7e297a0bde78cd44690a99b58578c9c2c4aef3d472a6c892c1ac4c646a2f5)
			First parameter (with value "SHA1withDSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer35546)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initSign(java.security.PrivateKey,java.security.SecureRandom)>($r4, $r6)


	 in Method: boolean altVerifySigSHA1(net.i2p.data.Signature,byte[],int,int,net.i2p.data.SigningPublicKey)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r5)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #888a8a0be5ebad5951545b480b69931895541e04771a587975b4cc6bec4ce2ec)
			First parameter (with value "SHA1withDSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer38754)


	 in Method: boolean altVerifySigRaw(net.i2p.data.Signature,net.i2p.data.SimpleDataStructure,java.security.PublicKey)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r12.<java.security.Signature: void initVerify(java.security.PublicKey)>($r3)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #5bb88b1c4026dd776be5f8cddb0361f178be0374f86a9abc295c50060181fe8b)
			First parameter (with value "NONEwithRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r12 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r11)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #5bb88b1c4026dd776be5f8cddb0361f178be0374f86a9abc295c50060181fe8b)
			First parameter (with value "NONEwithDSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r12 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r11)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #5bb88b1c4026dd776be5f8cddb0361f178be0374f86a9abc295c50060181fe8b)
			First parameter (with value "NONEwithEdDSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r12 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r11)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #5bb88b1c4026dd776be5f8cddb0361f178be0374f86a9abc295c50060181fe8b)
			First parameter (with value "NONEwithECDSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r12 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r11)


Findings in Java Class: net.i2p.util.I2PSSLSocketFactory

	 in Method: javax.net.ssl.SSLSocketFactory initSSLContext(net.i2p.I2PAppContext,boolean,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #802b26876acee8405ecbc3d8e27df505470dcf8b3d6df5d21a42ec15a702827f)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: virtualinvoke $r16.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r5)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r15.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5629, $r17, $r18)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #802b26876acee8405ecbc3d8e27df505470dcf8b3d6df5d21a42ec15a702827f)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $r5 = $r4

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r15.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5629, $r17, $r18)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #fbdf52699f7862f4922f58df2503cf50c16681f33cd4a046b1eb91226564aba)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r4.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer5625, $r8)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #fbdf52699f7862f4922f58df2503cf50c16681f33cd4a046b1eb91226564aba)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r4.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer5625, $r8)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r16.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r5)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #4746e22f87ecb7902a788c2283e1fbcfe2ecc8333ec885320dbf1d2392568b31)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5630)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #802b26876acee8405ecbc3d8e27df505470dcf8b3d6df5d21a42ec15a702827f)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $i2 = staticinvoke <net.i2p.crypto.KeyStoreUtil: int addCerts(java.io.File,java.security.KeyStore)>($r10, $r5)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #802b26876acee8405ecbc3d8e27df505470dcf8b3d6df5d21a42ec15a702827f)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $i0 = staticinvoke <net.i2p.crypto.KeyStoreUtil: int addCerts(java.io.File,java.security.KeyStore)>($r9, $r5)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r15.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer5629, $r17, $r18)


Findings in Java Class: net.i2p.util.SSLEepGet

	 in Method: javax.net.ssl.SSLContext initSSLContext()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer43076, $r11, varReplacer43076)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer43076, $r11, varReplacer43076)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #802b26876acee8405ecbc3d8e27df505470dcf8b3d6df5d21a42ec15a702827f)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: virtualinvoke $r10.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r1)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #847b18e51f0c0a3ae36676b8e0e7fbb14a71af35a133181aaede4cf56a52c14c)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer43060)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r10.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r1)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer43076, $r11, varReplacer43076)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #802b26876acee8405ecbc3d8e27df505470dcf8b3d6df5d21a42ec15a702827f)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $r1 = staticinvoke <net.i2p.crypto.KeyStoreUtil: java.security.KeyStore loadSystemKeyStore()>()


Findings in Java Class: net.i2p.crypto.CertUtil

	 in Method: java.security.cert.X509Certificate loadCert(java.io.File)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #c494d340e3f55f84dff51c6d8dd9ac7f3cb2bef7f68e77957b1c42a9e9657f34)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r6 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r4)


	 in Method: java.security.cert.X509CRL loadCRL(java.io.InputStream)
		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #95a4c270e2a361210a05c1079cf4ec1fa897a640113ae2a0820f59b6de8a6f29)
			Unexpected call to method generateCRL on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCertPath,generateCertificate
			at statement: $r2 = virtualinvoke $r1.<java.security.cert.CertificateFactory: java.security.cert.CRL generateCRL(java.io.InputStream)>($r0)


Findings in Java Class: net.i2p.crypto.CryptoCheck

	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer12643)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #daa7ee3c5b4594516257c7629be5e56636a587fa54db6676ab331d915d46c190)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12642)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer12641, $r5)


Findings in Java Class: net.i2p.router.client.SSLClientListenerRunner

	 in Method: boolean initializeFactory(java.io.File)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #7c97e91a22c474b47f4b2b9d3a54052bf5422f87110638dbd0d59dad404f1612)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r16)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #7c97e91a22c474b47f4b2b9d3a54052bf5422f87110638dbd0d59dad404f1612)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r16)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ba8c3552e24394c94b5350ac51ebc1fb16e2a81200c8534c5efd2b1f1a39163c)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer17608)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r18, varReplacer17606, $r19)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r18, varReplacer17606, $r19)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #a0f629a1b552d0685b04dfd9b65569db28f903e4377c8f5b5476522e076152f3)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r17.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r16)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #a0f629a1b552d0685b04dfd9b65569db28f903e4377c8f5b5476522e076152f3)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r17.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r16)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r18, varReplacer17606, $r19)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r17.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r16)


Findings in Java Class: net.i2p.crypto.SigType

	 in Method: boolean x_isAvailable()
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #5f0c58ce260071ca6ac8d77f5db4584f89e06acdfad95361fea37d6ac6332dd1)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: virtualinvoke $r7.<java.security.Signature: byte[] sign()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #5f0c58ce260071ca6ac8d77f5db4584f89e06acdfad95361fea37d6ac6332dd1)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r7.<java.security.Signature: void initSign(java.security.PrivateKey)>($r12)


	 in Method: java.security.MessageDigest getDigestInstance()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4b2c36bec6a83bef7642eb3a7b1f93cf7c04d9f7ba9431560f9b145d7e6b8)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: net.i2p.crypto.eddsa.spec.EdDSAParameterSpec

	 in Method: void <init>(net.i2p.crypto.eddsa.math.Curve,java.lang.String,net.i2p.crypto.eddsa.math.ScalarOps,net.i2p.crypto.eddsa.math.GroupElement)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e2a7fde5e14223557a76ad0c1c621daab6834282af96171dab264b22557dc255)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i1 = virtualinvoke $r7.<java.security.MessageDigest: int getDigestLength()>()


Findings in Java Class: net.i2p.sam.SSLUtil

	 in Method: javax.net.ssl.SSLServerSocketFactory initializeFactory(java.util.Properties)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #366329fdd12c97773b8784ed46ce6fef59aed38e550c733b02deeb035a914b57)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r10.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r11, $r12)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #366329fdd12c97773b8784ed46ce6fef59aed38e550c733b02deeb035a914b57)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r10.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r11, $r12)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r14, varReplacer23769, $r15)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r14, varReplacer23769, $r15)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r13.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r10, $r12)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #397d6e48f059362231e27796c93073c6c20071069f19db959c608aa5d14fd5c9)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r13.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r10, $r12)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #397d6e48f059362231e27796c93073c6c20071069f19db959c608aa5d14fd5c9)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r13.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r10, $r12)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #b81a9bb6b3cfcce26541c150f6e3f6b8a3a7d2b30da8f3f59484358b4ba7aa7)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer23771)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r14, varReplacer23769, $r15)


Findings in Java Class: net.i2p.util.PasswordManager

	 in Method: byte[] md5Sum(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e69a800e0d0b48b12aaeea031dea8423e987a57658c8a6e9b48ae2064173b163)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer25148)


Findings in Java Class: com.nettgryppa.security.HashCash

	 in Method: void <init>(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #cfe8f8f8758ee48824b1477d405d6da24ec0929c938a569bc570aa5e87d13f25)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer35977)


Findings in Java Class: net.i2p.crypto.HMAC256Generator

	 in Method: void release(javax.crypto.Mac)
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #48781c5cf81bf14a308387f425fcb11049e477ed6b8063e5b4bf501a97fc70f1)
			Unexpected call to method init on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r1.<javax.crypto.Mac: void init(java.security.Key)>($r3)


Findings in Java Class: net.i2p.crypto.HKDF

	 in Method: void calculate(byte[],byte[],java.lang.String,byte[],byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer28303, varReplacer28304, varReplacer28305)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r9.<javax.crypto.Mac: void init(java.security.Key)>($r10)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #48781c5cf81bf14a308387f425fcb11049e477ed6b8063e5b4bf501a97fc70f1)
			Unexpected call to method init on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r9.<javax.crypto.Mac: void init(java.security.Key)>($r11)


Findings in Java Class: net.i2p.crypto.CryptixAESEngine

	 in Method: javax.crypto.Cipher acquire()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #32c4765c3555bc503435901f26b08627720444ac3f176dea51a26bc645ae29b2)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer39578)


	 in Method: void encrypt(byte[],int,byte[],int,net.i2p.data.SessionKey,byte[],int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r4, $i2, varReplacer33542)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #32c4765c3555bc503435901f26b08627720444ac3f176dea51a26bc645ae29b2)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, $i0, $i3, $r2, $i1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer33539)


	 in Method: void decrypt(byte[],int,byte[],int,net.i2p.data.SessionKey,byte[],int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer34256)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r4, $i2, varReplacer34252)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #32c4765c3555bc503435901f26b08627720444ac3f176dea51a26bc645ae29b2)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, $i0, $i3, $r2, $i1)


	 in Method: void release(javax.crypto.Cipher)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(varReplacer39579, $r2, $r3, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Fourth parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(varReplacer39579, $r2, $r3, $r4)


	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r2, varReplacer33554, varReplacer33555)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer33556)


Findings in Java Class: net.i2p.router.transport.udp.SSUHMACGenerator

	 in Method: net.i2p.router.transport.udp.I2PHMac acquire()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #cbe0b494087838028e65e74d15e1ba4a1bdc4f166186580374c9f9bf29d2d719)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer43946)


	 in Method: void calculate(net.i2p.data.SessionKey,byte[],int,int,byte[],int)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #cbe0b494087838028e65e74d15e1ba4a1bdc4f166186580374c9f9bf29d2d719)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: specialinvoke r0.<net.i2p.router.transport.udp.SSUHMACGenerator: void release(net.i2p.router.transport.udp.I2PHMac)>($r5)


	 in Method: boolean verify(net.i2p.data.SessionKey,byte[],int,int,byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #cbe0b494087838028e65e74d15e1ba4a1bdc4f166186580374c9f9bf29d2d719)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: specialinvoke r0.<net.i2p.router.transport.udp.SSUHMACGenerator: void release(net.i2p.router.transport.udp.I2PHMac)>($r5)


Findings in Java Class: net.i2p.router.transport.udp.I2PHMac

	 in Method: int doFinal(byte[],int)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #cbe0b494087838028e65e74d15e1ba4a1bdc4f166186580374c9f9bf29d2d719)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: virtualinvoke r0.<net.i2p.router.transport.udp.I2PHMac: void reset()>()


	 in Method: void init(byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #cbe0b494087838028e65e74d15e1ba4a1bdc4f166186580374c9f9bf29d2d719)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r2.<java.security.MessageDigest: void reset()>()


Findings in Java Class: net.i2p.crypto.KeyGenerator

	 in Method: net.i2p.data.SigningPublicKey getSigningPublicKey(net.i2p.data.SigningPrivateKey)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r18 = virtualinvoke $r17.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r15)


	 in Method: net.i2p.data.SimpleDataStructure[] generateSigningKeys(net.i2p.crypto.SigType)
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedRSA
			at statement: virtualinvoke $r12.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>($r7, $r9)

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedDH
			at statement: virtualinvoke $r12.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>($r7, $r9)

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedDSA
			at statement: virtualinvoke $r12.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>($r7, $r9)

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedEC
			at statement: virtualinvoke $r12.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>($r7, $r9)


Findings in Java Class: net.i2p.crypto.SigUtil

	 in Method: java.security.interfaces.RSAPrivateKey toJavaRSAKey(net.i2p.data.SigningPrivateKey)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r9 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r0)


	 in Method: java.security.interfaces.DSAPublicKey toJavaDSAKey(net.i2p.data.SigningPublicKey)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r8 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)


	 in Method: java.security.interfaces.ECPrivateKey cvtToJavaECKey(net.i2p.data.SigningPrivateKey)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r8 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r4)


	 in Method: java.security.interfaces.RSAPublicKey toJavaRSAKey(net.i2p.data.SigningPublicKey)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r9 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)


	 in Method: java.security.interfaces.DSAPrivateKey toJavaDSAKey(net.i2p.data.SigningPrivateKey)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r8 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r0)


	 in Method: java.security.interfaces.ECPublicKey cvtToJavaECKey(net.i2p.data.SigningPublicKey)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r11 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r7)


Findings in Java Class: net.i2p.crypto.eddsa.RedKeyPairGenerator

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)


Findings in Java Class: net.i2p.crypto.eddsa.KeyPairGenerator

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 126

	CryptoAnalysis found the following violations. For details see description above.
	ForbiddenMethodError: 1
	ConstraintError: 24
	NeverTypeOfError: 11
	HardCodedError: 16
	TypestateError: 18
	IncompleteOperationError: 56
	RequiredPredicateError: 54
=====================================================================
