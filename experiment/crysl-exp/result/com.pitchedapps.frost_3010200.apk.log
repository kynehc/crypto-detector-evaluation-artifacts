0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <ma.g: javax.net.ssl.X509TrustManager o()>
		SHA-256: 26635e1f6e50977ea9036fab1d7ea4d8fc4844fa478d9179411a32fe3c0a34e7
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer53251)
		Method: <t5.a: javax.crypto.Cipher a()>
		SHA-256: a70ac215deb583c612d720445e9e1693cae76aeede085bd9e8ae8d907572986b
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer36720, varReplacer36721)
		Method: <ma.c: javax.net.ssl.X509TrustManager o()>
		SHA-256: 2cf1489c97b47613aa8a3b37c8926ffca6c4ae8df38658d0b3e9a018181cfaac
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer56688)
		Method: <androidx.biometric.h: androidx.biometric.BiometricPrompt$c a()>
		SHA-256: 868b21af4d82e77115c384a4188bf169556494b0448bf03b21f0061948784556
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer41442)
		Method: <ma.h: javax.net.ssl.SSLContext m()>
		SHA-256: ca7729ab0935aea3b9f89694addb361da0f6f1c32882395b09858aa4dc0c4749
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer41448, $r2)
		Method: <ma.g: javax.net.ssl.SSLContext m()>
		SHA-256: 5dff5394790e7b0ab75721b781d14cd5fbd52343e36e6d7e77f1da03a3ce9dfc
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <ma.d: javax.net.ssl.X509TrustManager o()>
		SHA-256: a34ad8d86b652fa71a1784d9f182aa64a3c216ee8de503c46a73dc51f3087c3b
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer56694, varReplacer56695)
		Method: <androidx.biometric.h: androidx.biometric.BiometricPrompt$c a()>
		SHA-256: 6f6b30c190ee88c4e5c1fcd959614f9da488b7e046cc6218e9c93586e8eaa4bb
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer48828)
		Method: <t5.a: long d(h6.l)>
		SHA-256: f33690043b154ef2019c0e8c47f95bebcc9bb7460d3b55f3c65d5832f85963e1
		Secure: false
	Object:
		Variable: varReplacer48828
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer48828)
		Method: <t5.a: long d(h6.l)>
		SHA-256: 1a26c3e772983614f4f859f2c0db05e536becb3b5605c8d9578d6bfa1614e8c2
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r8.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r6, $r1)
		Method: <t5.a: long d(h6.l)>
		SHA-256: f5ad76617ef53776b3efaa60c76922d19e425b204ccc8c9ba07369862f6a1b3c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <qa.x: qa.h c(java.lang.String)>
		SHA-256: a6c05a3bdda0e820fbbcce4f5904e8a8cf7ed657060c1e836666fd93534e2b6e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <ma.h: javax.net.ssl.X509TrustManager o()>
		SHA-256: 89c519fb5c53040abfd451f8c76e1cb4b3d66a265ddb8a64853e6d503f2cb4b7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <ma.h: javax.net.ssl.X509TrustManager o()>
		SHA-256: e96f48aec6cc97f7532bcbe531c167aa82c80310434b106dfa2f0748e41ce496
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <ma.c: javax.net.ssl.X509TrustManager o()>
		SHA-256: 5b3ac97e809537d5c0508fcc4ad2f3a133ee2cbf70757bb86fa788a0dc8ad012
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <ma.g: javax.net.ssl.X509TrustManager o()>
		SHA-256: d5902af5b12cbea8d29b04e4ea1cbe171ede53e2df358f38e0e53e0bb63d0f5c
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer41443, $r2)
		Method: <ma.d: javax.net.ssl.SSLContext m()>
		SHA-256: c30ee6c65e0746adbc6864f13f628fd44b7fa8b72bc8d5deb5ddfca474b73d6d
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <ma.d: javax.net.ssl.X509TrustManager o()>
		SHA-256: ab810cd89b3cbafbfe53daa64cb3badf928278ee6192424597b551bb74325b46
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyStore
		Statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer56696)
		Method: <androidx.biometric.h: androidx.biometric.BiometricPrompt$c a()>
		SHA-256: b9a140f34d52188827849eabe6563903ac142e9c6958c4233ae4e41702020084
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <t5.a: long d(h6.l)>
		SHA-256: a19642859452302026bb7a60f1e392c186164367b4eb1f30c61e64fec6a7cf56
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Key
		Statement: $r4 = virtualinvoke $r0.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer56685, varReplacer56686)
		Method: <androidx.biometric.h: androidx.biometric.BiometricPrompt$c a()>
		SHA-256: 2ebe8eaafc36cb56e2ba38e2f14f57410acbaf3d0bb20ed716c66d0f67c01237
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <qa.h: qa.h c(java.lang.String)>
		SHA-256: b437009f9c3c9517da4042a13ecedeeb623dd5aad0b327b5545a84d4a6050d6c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer56141)
		Method: <f3.j$a: f3.j$b b()>
		SHA-256: 1c0b4d1022f7e276cef613ab76b6fe56ca3af67a8a42fb42bdf0457edea3c1b4
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <qa.h: qa.h c(java.lang.String)>
		SHA-256: 7a62705013d140fd456ede4e0644f3751e6554dd8c5c7909869b95f322f2be41
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer41445, $r2)
		Method: <ma.c: javax.net.ssl.SSLContext m()>
		SHA-256: 6ec3ba911baac0be2449d553fa46f4ce34d1b0d1f1e58d33e1f3ef0788684a68
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <qa.x: qa.h c(java.lang.String)>
		SHA-256: cac3a8921c0ecf1d3a78041a3b01565538babb474b9a5db9df4def50d3fa6c9a
		Secure: false

Findings in Java Class: ma.h

	 in Method: javax.net.ssl.SSLContext m()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ca7729ab0935aea3b9f89694addb361da0f6f1c32882395b09858aa4dc0c4749)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer41442)


	 in Method: javax.net.ssl.SSLSocketFactory n(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer36730, $r10, varReplacer36730)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer36730, $r10, varReplacer36730)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer36730, $r10, varReplacer36730)


	 in Method: javax.net.ssl.X509TrustManager o()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer36709)


Findings in Java Class: ma.d

	 in Method: javax.net.ssl.SSLContext m()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #c30ee6c65e0746adbc6864f13f628fd44b7fa8b72bc8d5deb5ddfca474b73d6d)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer41443, $r2)


	 in Method: javax.net.ssl.SSLSocketFactory n(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer36737, $r5, varReplacer36737)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer36737, $r5, varReplacer36737)


	 in Method: javax.net.ssl.X509TrustManager o()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer36715)


Findings in Java Class: ma.c

	 in Method: javax.net.ssl.SSLContext m()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #6ec3ba911baac0be2449d553fa46f4ce34d1b0d1f1e58d33e1f3ef0788684a68)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer41445, $r2)


	 in Method: javax.net.ssl.X509TrustManager o()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer36722)


Findings in Java Class: h6.r

	 in Method: void r()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #f5ad76617ef53776b3efaa60c76922d19e425b204ccc8c9ba07369862f6a1b3c)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: virtualinvoke r0.<h6.e: void a(int)>($i3)


Findings in Java Class: y4.d

	 in Method: int n(byte[],int,int,int,boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #f5ad76617ef53776b3efaa60c76922d19e425b204ccc8c9ba07369862f6a1b3c)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $i0 = interfaceinvoke $r2.<h6.i: int b(byte[],int,int)>($r1, $i0, $i1)


Findings in Java Class: h6.k

	 in Method: void d()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #f5ad76617ef53776b3efaa60c76922d19e425b204ccc8c9ba07369862f6a1b3c)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: interfaceinvoke $r2.<h6.i: long d(h6.l)>($r1)


Findings in Java Class: t5.a

	 in Method: javax.crypto.Cipher a()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a70ac215deb583c612d720445e9e1693cae76aeede085bd9e8ae8d907572986b)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer53251)


	 in Method: long d(h6.l)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer48828)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer48827, $r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: androidx.biometric.h

	 in Method: androidx.biometric.BiometricPrompt$c a()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #868b21af4d82e77115c384a4188bf169556494b0448bf03b21f0061948784556)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer56688)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #b9a140f34d52188827849eabe6563903ac142e9c6958c4233ae4e41702020084)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer56696)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer56697, $r5)


Findings in Java Class: qa.h

	 in Method: qa.h c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7a62705013d140fd456ede4e0644f3751e6554dd8c5c7909869b95f322f2be41)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: qa.x

	 in Method: qa.h c(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #a6c05a3bdda0e820fbbcce4f5904e8a8cf7ed657060c1e836666fd93534e2b6e)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a6c05a3bdda0e820fbbcce4f5904e8a8cf7ed657060c1e836666fd93534e2b6e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: ma.g

	 in Method: javax.net.ssl.X509TrustManager o()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer36726)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 26

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 13
	IncompleteOperationError: 3
	TypestateError: 1
	ConstraintError: 8
=====================================================================
