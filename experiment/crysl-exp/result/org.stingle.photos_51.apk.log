0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer48869)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: cb5723a088d8fb06b9250f5df162773b3f0ca50c99099a6cedd450aabfc82d3c
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11654)
		Method: <androidx.biometric.CryptoObjectUtils: androidx.biometric.BiometricPrompt$CryptoObject createFakeCryptoObject()>
		SHA-256: d7eca98805ed906170ef57490f60a7a3c2323b438a71c1964bcede59e6fab3b5
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r5)
		Method: <com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher: void <init>(int,byte[],long,long)>
		SHA-256: 95de6006659c5b201ab78fe692245d3536f1b9a1bd5dcc899d6091a1fa00afac
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer48128, varReplacer48129)
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: e9a8c5b44f06d974fd7b9b51fd3f913fed4e9a4310f349da85158cbc1dcb723c
		Secure: false
	Object:
		Variable: $r18
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r18.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r15)
		Method: <org.stingle.photos.Auth.BiometricsManagerWrapper: boolean unlock(org.stingle.photos.Auth.BiometricsManagerWrapper$BiometricsCallback,org.stingle.photos.Auth.LoginManager$UserLogedinCallback,boolean)>
		SHA-256: e90d753b5c6632ead5a545b7a34b78a5a183d374acb4607e6dc7ab20a9958d91
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher: void <init>(int,byte[],long,long)>
		SHA-256: 1f659adc03f7387c35917cac546d9dbd9967a59f1249808c1d74cc9d15840120
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1997)
		Method: <org.stingle.photos.Auth.BiometricsManagerWrapper: javax.crypto.SecretKey getSecretKey()>
		SHA-256: 3bd9e3c484cac4b3a886f8d3267346c879e8531503e19a7298e8e9e69cd5741a
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer48867, $r2)
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 91310c5d7dd252e7779a83702303178719e1b827ef709b45a8842180ed11c88b
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1996)
		Method: <org.stingle.photos.Auth.BiometricsManagerWrapper: javax.crypto.Cipher getCipher()>
		SHA-256: faab5aee995c2d11d4fd68fd43dd1911dd2a12ceda464f1f275c502ed57ad6b1
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <okio.internal.HashFunctionKt$newHashFunction$1: byte[] digest()>
		SHA-256: abd36d23985861cecf525fa9e76c9fe1519f19d5da99874a7aa4b14909046fe9
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.cert.CertificateFactory
		Statement: $r6 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer39627)
		Method: <okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)>
		SHA-256: ab1a27a42b0f9fc1493f487094a601eb7caaede0bd70ee9f1197e9556a0ddd13
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 84f17b7e3930c76e2b174d27b9668ee8d3209ae5512e2c539d541e6ef4265515
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex: void writeFile()>
		SHA-256: e92cc326d599cffd30e7683ecdf45badf5aa69482ff08414261765cd7d25e976
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <org.stingle.photos.Crypto.Crypto: byte[] sha256(byte[])>
		SHA-256: c4e001373e8d6ce5a660a3b739cb85ce7cfee73cab48f8a19d5f2437e143bc74
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: c3dcfb07eabeaead2afa7b41e33d56187e303e14a7184c21b7bac99836f2c278
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer40546, varReplacer40547)
		Method: <org.stingle.photos.Auth.BiometricsManagerWrapper: void generateSecretKey(android.security.keystore.KeyGenParameterSpec)>
		SHA-256: b23296eea410fca06d4a15e026e8c0c08845e8e9beacbee286cea7984c0d122e
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer48866, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 4917e19d91d504fc394b82c99c2e7bbb5320a2b201b265eecb90c0bfdc33ed7
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer15397)
		Method: <org.stingle.photos.Net.HttpsClient: void getFileAsByteArray(java.lang.String,java.util.HashMap,java.io.OutputStream,boolean)>
		SHA-256: 358b992462452a110dac75662d638145a01ef3fc234854a29fe0c6438e12a554
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.SecureRandom
		Statement: specialinvoke $r9.<java.security.SecureRandom: void <init>()>()
		Method: <org.stingle.photos.Net.HttpsClient: void getFileAsByteArray(java.lang.String,java.util.HashMap,java.io.OutputStream,boolean)>
		SHA-256: cce13b75350ee5a9736db0226bcaa587b1d9969d3fd8814aef39d941f27389
		Secure: true
	Object:
		Variable: $r5
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r5)
		Method: <com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher: void <init>(int,byte[],long,long)>
		SHA-256: 668fb282133b6fd8e89f162eb69e092bf9de2d4d534ba58afcbc19a2d13c13c6
		Secure: false
	Object:
		Variable: $r16
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r16.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r15)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex: boolean readFile()>
		SHA-256: b6c697fa0162487d2234220839affd07a08a1b765452b0abb8abcfe1b41dc7a6
		Secure: false
	Object:
		Variable: $r28
		Type: java.security.SecureRandom
		Statement: specialinvoke $r28.<java.security.SecureRandom: void <init>()>()
		Method: <org.stingle.photos.Net.HttpsClient: org.json.JSONObject postFunc(java.lang.String,java.util.HashMap)>
		SHA-256: dd3354f4652dbe6a8b7cfd08252ae18c48701e850c3a491c1e0254d07c66669d
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.Key
		Statement: $r4 = virtualinvoke $r0.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer11655, varReplacer11656)
		Method: <androidx.biometric.CryptoObjectUtils: androidx.biometric.BiometricPrompt$CryptoObject createFakeCryptoObject()>
		SHA-256: c35011473eb628081322998cf7866ada0a7fa674462bf356d53acefe8c268c3
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer11665, varReplacer11666)
		Method: <androidx.biometric.CryptoObjectUtils: androidx.biometric.BiometricPrompt$CryptoObject createFakeCryptoObject()>
		SHA-256: d58de69f645294089bb58c468b36c8fd490afa67f8a7d4d768dba51784cf63
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 316cbc86e080130334eaabd60025d96084375d0058312a103cd3255ba6f0aeb
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer867)
		Method: <org.stingle.photos.Crypto.Crypto: byte[] sha256(byte[])>
		SHA-256: 760b3e7fffe47ff10313713012b682cbc85b2abb8c4384d42bc569af735b4e47
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <okio.internal.HashFunctionKt$newHashFunction$1: void <init>(java.lang.String)>
		SHA-256: fb20828268f9af11f84a173397314af78807c8f30fa598e3eb0515374b28cb82
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r11.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r4, $r9)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex: void writeFile()>
		SHA-256: dadc3abd80ab175e2a8cb465d21ff9cca1f3896811eda25fff2b253d3368c9f5
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer48871, $r2)
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 1e5f2b129133c5b37241c81b04d645e17c9a1d4f7d5bb85cb5b64f86c661688b
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer13118)
		Method: <org.stingle.photos.Net.HttpsClient: org.json.JSONObject postFunc(java.lang.String,java.util.HashMap)>
		SHA-256: 20e1828cb691913e98625d7e2d12e47f91373757308e4deb3be95b0c4adba247
		Secure: false
	Object:
		Variable: $r28
		Type: java.security.SecureRandom
		Statement: specialinvoke $r28.<java.security.SecureRandom: void <init>()>()
		Method: <org.stingle.photos.Net.HttpsClient: org.json.JSONObject postFunc(java.lang.String,java.util.HashMap)>
		SHA-256: dd3354f4652dbe6a8b7cfd08252ae18c48701e850c3a491c1e0254d07c66669d
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.SecureRandom
		Statement: specialinvoke $r9.<java.security.SecureRandom: void <init>()>()
		Method: <org.stingle.photos.Net.HttpsClient: void getFileAsByteArray(java.lang.String,java.util.HashMap,java.io.OutputStream,boolean)>
		SHA-256: cce13b75350ee5a9736db0226bcaa587b1d9969d3fd8814aef39d941f27389
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 1027fce20723454b26980f38c5edb26bcec19bffa5b6443c75459b577c51d460
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 15a76129680a3cd57380001c355c828c5afc3ba9ce32fff65b352ff3390bbd6
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Key
		Statement: $r2 = virtualinvoke $r1.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer1999, varReplacer2000)
		Method: <org.stingle.photos.Auth.BiometricsManagerWrapper: javax.crypto.SecretKey getSecretKey()>
		SHA-256: a722b381cb670b8f3a5fa6bf54d65ef354cacb3220487a0e835abb8f714ef09b
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 5fb6984969c8c0f60ee84399ef18a49aa63648c889757c4080685ad119ecd903
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: a729cfd5669df603070b7ba7d05b524b10a048ab1da974a5ccb1df973521b7d3
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer21488)
		Method: <com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher: void <init>(int,byte[],long,long)>
		SHA-256: f9f5028e95ec6d0c56a523445942497be6690e9cc4d9c0f063dbd30b5c30f9b4
		Secure: false
	Object:
		Variable: $r17
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r17.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r10, $r14)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex: boolean readFile()>
		SHA-256: aaf00be843aa192c1df73f8c0e7e73c4634fdd45b36ba77693a5b34062706f7
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyStore
		Statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer11659)
		Method: <androidx.biometric.CryptoObjectUtils: androidx.biometric.BiometricPrompt$CryptoObject createFakeCryptoObject()>
		SHA-256: ca0b6a573116f4e6d95fc3db4599280f303b25c937514668026b2a426fbe121d
		Secure: false

Findings in Java Class: org.stingle.photos.Auth.BiometricsManagerWrapper

	 in Method: javax.crypto.Cipher getCipher()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #faab5aee995c2d11d4fd68fd43dd1911dd2a12ceda464f1f275c502ed57ad6b1)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1996)


	 in Method: javax.crypto.SecretKey getSecretKey()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #3bd9e3c484cac4b3a886f8d3267346c879e8531503e19a7298e8e9e69cd5741a)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1997)


	 in Method: boolean unlock(org.stingle.photos.Auth.BiometricsManagerWrapper$BiometricsCallback,org.stingle.photos.Auth.LoginManager$UserLogedinCallback,boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r18.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r15)


	 in Method: boolean setupBiometrics(androidx.preference.Preference,java.lang.String,org.stingle.photos.Auth.BiometricsManagerWrapper$BiometricsSetupCallback)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r20.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer36037, $r21)


Findings in Java Class: androidx.biometric.CryptoObjectUtils

	 in Method: androidx.biometric.BiometricPrompt$CryptoObject createFakeCryptoObject()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #ca0b6a573116f4e6d95fc3db4599280f303b25c937514668026b2a426fbe121d)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer11659)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer11657, $r5)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d7eca98805ed906170ef57490f60a7a3c2323b438a71c1964bcede59e6fab3b5)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11654)


Findings in Java Class: org.stingle.photos.Net.HttpsClient

	 in Method: org.json.JSONObject postFunc(java.lang.String,java.util.HashMap)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer13120, varReplacer13120, $r9)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer13120, varReplacer13120, $r9)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #20e1828cb691913e98625d7e2d12e47f91373757308e4deb3be95b0c4adba247)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer13118)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer13116, $r8, $r9)


	 in Method: void getFileAsByteArray(java.lang.String,java.util.HashMap,java.io.OutputStream,boolean)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer15392, $r8, $r9)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #358b992462452a110dac75662d638145a01ef3fc234854a29fe0c6438e12a554)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer15397)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer15392, $r8, $r9)


Findings in Java Class: com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher

	 in Method: int nonFlushingUpdate(byte[],int,int,byte[],int)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f9f5028e95ec6d0c56a523445942497be6690e9cc4d9c0f063dbd30b5c30f9b4)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $i2 = virtualinvoke $r2.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>($r3, $i2, $i0, $r1, $i1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f9f5028e95ec6d0c56a523445942497be6690e9cc4d9c0f063dbd30b5c30f9b4)
			Third parameter (with value 0)Variable prePlainTextLenmust be  greater than 0
			at statement: $i2 = virtualinvoke $r2.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>($r3, $i2, $i0, $r1, $i1)


	 in Method: void <init>(int,byte[],long,long)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r1, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)


Findings in Java Class: com.google.android.exoplayer2.upstream.cache.CachedContentIndex

	 in Method: boolean readFile()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r16.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r15)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #aaf00be843aa192c1df73f8c0e7e73c4634fdd45b36ba77693a5b34062706f7)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r9.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r17)


	 in Method: void writeFile()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #dadc3abd80ab175e2a8cb465d21ff9cca1f3896811eda25fff2b253d3368c9f5)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: specialinvoke $r1.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r11)


Findings in Java Class: okio.internal.HashFunctionKt$newHashFunction$1

	 in Method: void <init>(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fb20828268f9af11f84a173397314af78807c8f30fa598e3eb0515374b28cb82)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fb20828268f9af11f84a173397314af78807c8f30fa598e3eb0515374b28cb82)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


	 in Method: byte[] digest()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #fb20828268f9af11f84a173397314af78807c8f30fa598e3eb0515374b28cb82)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: okhttp3.Cache$Entry

	 in Method: java.util.List readCertificateList(okio.BufferedSource)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #ab1a27a42b0f9fc1493f487094a601eb7caaede0bd70ee9f1197e9556a0ddd13)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r6 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer39627)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #ab1a27a42b0f9fc1493f487094a601eb7caaede0bd70ee9f1197e9556a0ddd13)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r11 = virtualinvoke $r6.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r10)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #ab1a27a42b0f9fc1493f487094a601eb7caaede0bd70ee9f1197e9556a0ddd13)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r11 = virtualinvoke $r6.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r10)


Findings in Java Class: okhttp3.internal.platform.ConscryptPlatform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #4917e19d91d504fc394b82c99c2e7bbb5320a2b201b265eecb90c0bfdc33ed7)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer48866, $r2)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer48114)


Findings in Java Class: okhttp3.internal.platform.Platform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #cb5723a088d8fb06b9250f5df162773b3f0ca50c99099a6cedd450aabfc82d3c)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer48869)


	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer48139, $r3, varReplacer48139)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer48139, $r3, varReplacer48139)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer48139, $r3, varReplacer48139)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer48126)


Findings in Java Class: okhttp3.internal.platform.BouncyCastlePlatform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #1e5f2b129133c5b37241c81b04d645e17c9a1d4f7d5bb85cb5b64f86c661688b)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer48871, $r2)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer48130)


Findings in Java Class: okhttp3.internal.platform.OpenJSSEPlatform

	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer48119)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 40

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 12
	TypestateError: 3
	IncompleteOperationError: 4
	RequiredPredicateError: 20
=====================================================================
