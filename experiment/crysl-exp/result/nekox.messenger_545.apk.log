0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: varReplacer73751
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer73751)
		Method: <org.h2.security.SHA256: javax.crypto.Mac initMac(byte[])>
		SHA-256: 6c1d108a106606a74557cbb66a30c26a8f3b6ddf2f49a456ad8908f4ca188866
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer159535, $r2)
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 824010f0a2e83c806d226d553b943c5579844654e693ee6bcbc10e05884b77f7
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: $r0 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer73757)
		Method: <org.h2.util.MathUtils: java.security.SecureRandom getSecureRandom()>
		SHA-256: 158726ea7d98323edff3cc9d47a1a4586f9cc6a038b95a14f569c870efd3407a
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKeyFactory
		Statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer60416)
		Method: <org.dizitart.no2.Security: byte[] hash(char[],byte[])>
		SHA-256: c9bfdaf9409cdb739d119f427a142532e9215e8e1582ed2ca60ebb2ae98ad3de
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.SecureRandom: byte[] generateSeed(int)>(varReplacer11302)
		Method: <org.h2.util.MathUtils$1: void run()>
		SHA-256: 3446c221f0a7162cf3b3698bbcf2ce0632bbe11330f4bf6b4ac05ec764de5233
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer11301)
		Method: <org.h2.util.MathUtils$1: void run()>
		SHA-256: cabe087ff9fc3e7709595b0bad34fc25d9f33b7d10c2f08817106f8d70b9d587
		Secure: true
	Object:
		Variable: varReplacer193831
		Type: java.lang.String
		Statement: $r41 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer193831)
		Method: <org.telegram.ui.PassportActivity: void lambda$createRequestInterface$16(android.view.View)>
		SHA-256: 4268003f24c1683b419afb1b3bea770f9368b8fe5e987b0817c3507f45bf11bd
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12853)
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA256(byte[],int,int)>
		SHA-256: 7e608cf427f7ed6aedf58448eedbff545a613f203aa425faddee5313e5305286
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.SegmentedByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: 6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357
		Secure: false
	Object:
		Variable: $r22
		Type: java.security.SecureRandom
		Statement: specialinvoke $r22.<java.security.SecureRandom: void <init>()>()
		Method: <org.dizitart.no2.sync.DataGateClient: okhttp3.OkHttpClient getHttpClient()>
		SHA-256: 7aca0bc2e175ec72622c98424eaae091552de4d6ae2e3fd0f631f30a7175fd02
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer159530)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: b4a01fb53f0a7f3be0f88cbd0e216213bd80c71867e0150323da10fb35115e7
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.hutool.crypto.digest.Digester: java.lang.String digestHex(byte[])>
		SHA-256: ee3cd7f2b40d5ddc00443c0f973925acb77a786ea9eec117544f380698408f6d
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.xbill.DNS.Header: void <clinit>()>
		SHA-256: a7bd1f471dbfaae28cf3a5073bdc83b553fe9720a29013b88a4716f64d953e41
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer73751)
		Method: <org.h2.security.SHA256: javax.crypto.Mac initMac(byte[])>
		SHA-256: 2efc84731741fa52d312e5cc2af9e7e65816605f95025a62f7e7aa20eddc2e32
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer159534, $r2)
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 3698cd969546382a84af1249e821ff685cb34c3e6f06820180556c7c839f7700
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.h2.util.MathUtils: java.security.SecureRandom getSecureRandom()>
		SHA-256: d75550c9083472c7c43e6f5f5860285f0b52621e3cdc9ab4b5797d07c8c57724
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <cn.hutool.core.net.SSLContextBuilder: void <init>()>
		SHA-256: c5447e7489779fb02df7ac9bf16051f2a5c2423ed6122f3b120e13c389a153e2
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA256(byte[],int,int)>
		SHA-256: c5c902ac23aa05e811c2c1f7bb7c6e1ba90f1bed89ad6606942d1512a0d9990b
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Mac
		Statement: $r1 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer73750)
		Method: <org.h2.security.SHA256: javax.crypto.Mac initMac(byte[])>
		SHA-256: 229aa4a54912ad88fb5f076c26ccb0402f90767610b7cf03ae869f45507d2a4c
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA1(byte[])>
		SHA-256: 446328cb858d08348f89a8199875ab84833e16ef5324d1bae68d74313a23d1b6
		Secure: false
	Object:
		Variable: $r21
		Type: java.security.MessageDigest
		Statement: $r21 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer31073)
		Method: <org.telegram.messenger.FileUploadOperation: void startUploadRequest()>
		SHA-256: 167f1a6fdf73ef6790503fcbae1a903579897ada9b82bf63d7b7d52838ec08b4
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <okio.SegmentedByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: 9d21c3f9e3f612ea7264d21dc14a8967f32993fff60292ad252f8676282c7571
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 1027fce20723454b26980f38c5edb26bcec19bffa5b6443c75459b577c51d460
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKey
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)
		Method: <org.dizitart.no2.Security: byte[] hash(char[],byte[])>
		SHA-256: 41b6e8306702b696f5da71bb531ca22d765affd78d5cbef40a43d6b2fe97077e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 15a76129680a3cd57380001c355c828c5afc3ba9ce32fff65b352ff3390bbd6
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.telegram.messenger.SecretChatHelper: boolean decryptWithMtProtoVersion(org.telegram.tgnet.NativeByteBuffer,byte[],byte[],int,boolean,boolean)>
		SHA-256: cbf389bcb28343916873c8bc80f53d4a89e3e784867b63e826de5787ca1feed7
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 84f17b7e3930c76e2b174d27b9668ee8d3209ae5512e2c539d541e6ef4265515
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <okio.ByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: 9f3ba3dd35bfd88a8457060cd59e6e65af87cbea3e5170b1e5d11a5dc2171423
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer65093)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: 83621dbf18f306faff37b57ae9262fb1f52657efbda5d14a57ffabe65d7b2ad2
		Secure: false
	Object:
		Variable: $r42
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r42.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r33)
		Method: <org.telegram.ui.PassportActivity: void lambda$createRequestInterface$16(android.view.View)>
		SHA-256: 941a9fb065d6683395fc2040a3ce03959e0a9663ed5080c8f8b5aeb70eb3c96d
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r2, $r4)
		Method: <cn.hutool.crypto.digest.Digester: void <init>(cn.hutool.crypto.digest.DigestAlgorithm)>
		SHA-256: 81ad1b2be5f45a2012bac2b48fbb60ff3edde37cc56c803fdda9b8f6564b5575
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.dizitart.no2.Security: void <clinit>()>
		SHA-256: 91c37ad2be5d4dbbfef8f15d8c3a1f10810340f28211f7a5794c4e13e621501c
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 316cbc86e080130334eaabd60025d96084375d0058312a103cd3255ba6f0aeb
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <cn.hutool.crypto.digest.Digester: void <init>(cn.hutool.crypto.digest.DigestAlgorithm)>
		SHA-256: 57249c9afbb4870a87a86f322c63e102406b72c88914bec565d6cf94ef276c94
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer159531, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: ebb2f916af3a66d6db0d2938e874b2ef4886a9c9743b4fbc55f60ed341fa38f1
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer72760)
		Method: <org.telegram.messenger.SecretChatHelper: boolean decryptWithMtProtoVersion(org.telegram.tgnet.NativeByteBuffer,byte[],byte[],int,boolean,boolean)>
		SHA-256: 43225ef06595387dd4d45d91df355c0dc4f8d8c14c60eb5ab0b63619148bc395
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA512(byte[],byte[],byte[])>
		SHA-256: a81b473288a4fe5fc08d7756d0337ed7038166c4fa43f8265f138b34f2034f77
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA256(byte[],int,int,java.nio.ByteBuffer,int,int)>
		SHA-256: 43de596602b4076dccb8e75a64385ee44431a9d65982e5eb1a07f5c852e1bb46
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer82871)
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA512(byte[],byte[])>
		SHA-256: d06ac38428ac345ff6f7be6d61dce6d58a89dc1ddefd8a93933fa22b185bbda5
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer168483)
		Method: <cn.hutool.http.ssl.CustomProtocolsSSLFactory: void <init>(java.lang.String[])>
		SHA-256: a24ec6bd82d7cccfdded326a0e79a3fe95be37422222a8d394cb2e04036db06d
		Secure: false
	Object:
		Variable: $r41
		Type: java.security.KeyFactory
		Statement: $r41 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer193831)
		Method: <org.telegram.ui.PassportActivity: void lambda$createRequestInterface$16(android.view.View)>
		SHA-256: 86ad12731028720eec6d2e126db16b0c1cd59c907a4bf93382d1c9d415dddd30
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: a729cfd5669df603070b7ba7d05b524b10a048ab1da974a5ccb1df973521b7d3
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA256(byte[][])>
		SHA-256: 93b49b2982758cf380dd047e9b2256c35ccb08ac89a748544ec976db0d8db2b0
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 5fb6984969c8c0f60ee84399ef18a49aa63648c889757c4080685ad119ecd903
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <org.telegram.messenger.Utilities: java.lang.String MD5(java.lang.String)>
		SHA-256: 3841f076f52a81d10896a877971c89e55191f769babe9823c60ab9897adde0fa
		Secure: false
	Object:
		Variable: $r24
		Type: java.security.cert.CertificateFactory
		Statement: $r24 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer22551)
		Method: <org.telegram.tgnet.ConnectionsManager: void <init>(int)>
		SHA-256: 72ddda49003808c086275805c46a7d899d352a4d162c0a5a272a4f68ad62d112
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer65094)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: 909e2773c909d847897b8beb01e7308489932da61cc31253d1ff10cb96f93b69
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer128016, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)>
		SHA-256: 3e3a3ae0e723f0a7e69447d83c5db483afe95db55576496cd0142c65acfd9043
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: ea0840b94e95f767ea25aa35611d3fdb379cdb84c49be399c4ff7525b48fb7fc
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <org.h2.util.MathUtils: byte[] secureRandomBytes(int)>
		SHA-256: 91ce9507093051f07110513e77c9f4d346c70bcfa61389b82942a855f064fa5b
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer49858)
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA512(byte[],byte[],byte[])>
		SHA-256: 7310b531c2598ec2ef744d4f28a1b8769933f1b47c9b72060ae2bd94f07a5a0f
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.hutool.crypto.digest.Digester: byte[] doDigest(byte[][])>
		SHA-256: be288beaa1fa242ed8c93a3a7ff3dbf714b846b639487c68aa2de1f6313ae55
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.telegram.messenger.Utilities: void <clinit>()>
		SHA-256: 907a90307bb98e0c29df56c424f8ddb4650b06aa7c1f758b1a13b224743a1047
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer35460)
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA256(byte[][])>
		SHA-256: 37439b2a249804ac3ab053de92698675b2a3a2b10a94ba5d22582b4589bfc508
		Secure: true
	Object:
		Variable: varReplacer65093
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer65093)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: 777706befba0d3c318b09e76ebc4c814db165cd9fb212c1ac68f3d14e9f80a4d
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r8.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r6, $r1)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer128006, varReplacer128007)
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 72e7b8282a09da631f8b785fa0e78f669847b5d36f721dddb9e144aac0fea337
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: c3dcfb07eabeaead2afa7b41e33d56187e303e14a7184c21b7bac99836f2c278
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: 74efd2ca2013e34a93725a12b2428b082241b229a3b9c59222ec28d5225e0d5
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3814)
		Method: <org.telegram.messenger.Utilities: java.lang.String MD5(java.lang.String)>
		SHA-256: c768f3aec6f1688d019612903cb250e7623f230d67e7d61a0a1a41a018d5c5c
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.SSLContext
		Statement: $r10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer133635)
		Method: <org.dizitart.no2.sync.DataGateClient: okhttp3.OkHttpClient getHttpClient()>
		SHA-256: 767f23e27ebf6231d409963ff5067ac1c2302bb836d463e651a9400d9296dd3f
		Secure: false
	Object:
		Variable: $r45
		Type: javax.crypto.Cipher
		Statement: $r45 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer193844)
		Method: <org.telegram.ui.PassportActivity: void lambda$createRequestInterface$16(android.view.View)>
		SHA-256: 5aab5229605591d0f1cd1523174ad2ab6b72b1aabfa01a3eb09b0a05929e83e4
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA512(byte[],byte[])>
		SHA-256: f799f7ff126647872c6291e80e7e77e5dce1dde2083ec2340e84044d7db7e23c
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, varReplacer60414, varReplacer60415)
		Method: <org.dizitart.no2.Security: byte[] hash(char[],byte[])>
		SHA-256: 6f842ac49955bcd64a6e5c0257addeaf994887986dd7c3904f0660ff992fe0f4
		Secure: false
	Object:
		Variable: $r13
		Type: byte[]
		Statement: $r13 = virtualinvoke $r21.<java.security.MessageDigest: byte[] digest(byte[])>($r13)
		Method: <org.telegram.messenger.FileUploadOperation: void startUploadRequest()>
		SHA-256: af06444d86b8fc93f4ee5e2140e812def802ba899eb62bf51109ce0aaff7c72e
		Secure: false
	Object:
		Variable: varReplacer60415
		Type: int
		Statement: specialinvoke $r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, varReplacer60414, varReplacer60415)
		Method: <org.dizitart.no2.Security: byte[] hash(char[],byte[])>
		SHA-256: 3d7961b97157878ae257077a22bc9a47e2a6ff926540c739cc153ccde9af689c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13597)
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA1(byte[])>
		SHA-256: 499f38f89576660ecc7ee437e81b012bd724c25291fbfaada31cf93c81a329a1
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <org.h2.security.SHA256: byte[] getPBKDF2(byte[],byte[],int,int)>
		SHA-256: 257166a330b4ad57e90fab724efd591f0383e46912a757101ac47f4006c844ed
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12574)
		Method: <org.telegram.messenger.Utilities: byte[] computeSHA256(byte[],int,int,java.nio.ByteBuffer,int,int)>
		SHA-256: 5fc9bf3a10c97e39fbc0fa56aeb3765e2161610bdc638224d04a63b85453e7d6
		Secure: true
	Object:
		Variable: $r43
		Type: java.security.PublicKey
		Statement: $r43 = virtualinvoke $r41.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r42)
		Method: <org.telegram.ui.PassportActivity: void lambda$createRequestInterface$16(android.view.View)>
		SHA-256: 177650d16bf44deac339d25a12ea41cf5d9faaf4dde769effba103dc14166f41
		Secure: false

Findings in Java Class: org.telegram.messenger.Utilities

	 in Method: java.lang.String MD5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c768f3aec6f1688d019612903cb250e7623f230d67e7d61a0a1a41a018d5c5c)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3814)


	 in Method: byte[] computeSHA256(byte[],int,int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7e608cf427f7ed6aedf58448eedbff545a613f203aa425faddee5313e5305286)
			Third parameter (with value 0)Variable preLenmust be  greater than 0
			at statement: virtualinvoke $r1.<java.security.MessageDigest: void update(byte[],int,int)>($r0, $i0, $i1)


	 in Method: byte[] computeSHA1(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #499f38f89576660ecc7ee437e81b012bd724c25291fbfaada31cf93c81a329a1)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13597)


	 in Method: byte[] computeSHA256(byte[][])
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #37439b2a249804ac3ab053de92698675b2a3a2b10a94ba5d22582b4589bfc508)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.telegram.tgnet.ConnectionsManager

	 in Method: void <init>(int)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #72ddda49003808c086275805c46a7d899d352a4d162c0a5a272a4f68ad62d112)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r25 = virtualinvoke $r24.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r23)


Findings in Java Class: org.telegram.messenger.FileUploadOperation

	 in Method: void startUploadRequest()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #167f1a6fdf73ef6790503fcbae1a903579897ada9b82bf63d7b7d52838ec08b4)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r21 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer31073)


Findings in Java Class: cn.hutool.crypto.digest.Digester

	 in Method: byte[] doDigest(byte[][])
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #81ad1b2be5f45a2012bac2b48fbb60ff3edde37cc56c803fdda9b8f6564b5575)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #57249c9afbb4870a87a86f322c63e102406b72c88914bec565d6cf94ef276c94)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.dizitart.no2.Security

	 in Method: byte[] hash(char[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r4 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, varReplacer60414, varReplacer60415)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #6f842ac49955bcd64a6e5c0257addeaf994887986dd7c3904f0660ff992fe0f4)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, varReplacer60414, varReplacer60415)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #6f842ac49955bcd64a6e5c0257addeaf994887986dd7c3904f0660ff992fe0f4)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, varReplacer60414, varReplacer60415)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #6f842ac49955bcd64a6e5c0257addeaf994887986dd7c3904f0660ff992fe0f4)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, varReplacer60414, varReplacer60415)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #6f842ac49955bcd64a6e5c0257addeaf994887986dd7c3904f0660ff992fe0f4)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, varReplacer60414, varReplacer60415)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #6f842ac49955bcd64a6e5c0257addeaf994887986dd7c3904f0660ff992fe0f4)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: specialinvoke $r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, varReplacer60414, varReplacer60415)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #c9bfdaf9409cdb739d119f427a142532e9215e8e1582ed2ca60ebb2ae98ad3de)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer60416)


Findings in Java Class: org.telegram.ui.LoginActivity$LoginActivitySmsView$5

	 in Method: void run()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: staticinvoke <org.telegram.messenger.AndroidUtilities: void runOnUIThread(java.lang.Runnable,long)>($r1, varReplacer11941)


Findings in Java Class: com.google.android.exoplayer2.source.hls.HlsMediaChunk

	 in Method: com.google.android.exoplayer2.extractor.DefaultExtractorInput prepareExtraction(com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r40.<com.google.android.exoplayer2.extractor.DefaultExtractorInput: void <init>(com.google.android.exoplayer2.upstream.DataSource,long,long)>($r4, $l1, $l0)


Findings in Java Class: org.telegram.messenger.FileStreamLoadOperation

	 in Method: void close()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: virtualinvoke $r3.<org.telegram.messenger.DispatchQueue: boolean postRunnable(java.lang.Runnable)>($r1)


Findings in Java Class: com.google.android.exoplayer2.source.hls.Aes128DataSource

	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer65093)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer65095, $r3, $r5)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #909e2773c909d847897b8beb01e7308489932da61cc31253d1ff10cb96f93b69)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer65094)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: org.telegram.messenger.SecretChatHelper

	 in Method: boolean decryptWithMtProtoVersion(org.telegram.tgnet.NativeByteBuffer,byte[],byte[],int,boolean,boolean)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #43225ef06595387dd4d45d91df355c0dc4f8d8c14c60eb5ab0b63619148bc395)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer72760)


Findings in Java Class: org.h2.security.SHA256

	 in Method: byte[] getPBKDF2(byte[],byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #229aa4a54912ad88fb5f076c26ccb0402f90767610b7cf03ae869f45507d2a4c)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to javax.crypto.Mac: byte[] doFinal(byte[]), update
			at statement: $r6 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #229aa4a54912ad88fb5f076c26ccb0402f90767610b7cf03ae869f45507d2a4c)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $r3 = staticinvoke <org.h2.security.SHA256: javax.crypto.Mac initMac(byte[])>($r0)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #229aa4a54912ad88fb5f076c26ccb0402f90767610b7cf03ae869f45507d2a4c)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r3.<javax.crypto.Mac: void update(byte[],int,int)>($r4, varReplacer73745, $i2)


	 in Method: javax.crypto.Mac initMac(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r1.<javax.crypto.Mac: void init(java.security.Key)>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer73751)


Findings in Java Class: okhttp3.internal.platform.ConscryptPlatform

	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer128018, $r6, varReplacer128018)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer128018, $r6, varReplacer128018)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer128018, $r6, varReplacer128018)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #3e3a3ae0e723f0a7e69447d83c5db483afe95db55576496cd0142c65acfd9043)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer128016, $r2)


	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ebb2f916af3a66d6db0d2938e874b2ef4886a9c9743b4fbc55f60ed341fa38f1)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer159531, $r2)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer128001)


Findings in Java Class: org.dizitart.no2.sync.DataGateClient

	 in Method: okhttp3.OkHttpClient getHttpClient()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer133639, $r25, $r2)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer133639, $r25, $r2)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #767f23e27ebf6231d409963ff5067ac1c2302bb836d463e651a9400d9296dd3f)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer133635)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer133639, $r25, $r2)


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest$okio(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ea0840b94e95f767ea25aa35611d3fdb379cdb84c49be399c4ff7525b48fb7fc)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: okio.SegmentedByteString

	 in Method: okio.ByteString digest$okio(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: okhttp3.internal.platform.Platform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #b4a01fb53f0a7f3be0f88cbd0e216213bd80c71867e0150323da10fb35115e7)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer159530)


	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer128013, $r11, varReplacer128013)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer128013, $r11, varReplacer128013)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer128013, $r11, varReplacer128013)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer127995)


Findings in Java Class: okhttp3.internal.platform.BouncyCastlePlatform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #824010f0a2e83c806d226d553b943c5579844654e693ee6bcbc10e05884b77f7)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer159535, $r2)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer128009)


Findings in Java Class: cn.hutool.http.ssl.CustomProtocolsSSLFactory

	 in Method: void <init>(java.lang.String[])
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #a24ec6bd82d7cccfdded326a0e79a3fe95be37422222a8d394cb2e04036db06d)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer168483)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer168482, $r1, $r5)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer168482, $r1, $r5)


Findings in Java Class: org.telegram.ui.PassportActivity

	 in Method: void lambda$createRequestInterface$16(android.view.View)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5aab5229605591d0f1cd1523174ad2ab6b72b1aabfa01a3eb09b0a05929e83e4)
			First parameter (with value "RSA/NONE/OAEPWithSHA1AndMGF1Padding") should be any of RSA/{Empty String, ECB}
			at statement: $r45 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer193844)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #5aab5229605591d0f1cd1523174ad2ab6b72b1aabfa01a3eb09b0a05929e83e4)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r33 = virtualinvoke $r45.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r33)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r43 = virtualinvoke $r41.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r42)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r45.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer193826, $r44)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r42.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r33)


Findings in Java Class: okhttp3.internal.platform.OpenJSSEPlatform

	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer128002)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 70

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 7
	NeverTypeOfError: 2
	RequiredPredicateError: 25
	HardCodedError: 2
	ConstraintError: 16
	TypestateError: 6
=====================================================================
