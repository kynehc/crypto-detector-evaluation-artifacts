0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9647)
		Method: <t2.e$a: java.security.MessageDigest b()>
		SHA-256: d05eac4e1c80f4d9407bdda67c01dccd35a1355f9de612ec3864865ca93cc11e
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <org.whispersystems.curve25519.e: void a(byte[])>
		SHA-256: 88ce02e005a80b084e7a79e17caba6579feb7bea6827ee80d60ab51ba6d86ef8
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.whispersystems.curve25519.f: void a(byte[],byte[],long)>
		SHA-256: cf85638ca6f72996b6b0be3780068e288324e8ea6eb577d2f53e74b05dfa401e
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r1.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r2)
		Method: <v3.f: void <clinit>()>
		SHA-256: bde1fde71da9e1796a6c9f32f5e977c1429f78454c08edbc3bb132f014d1014
		Secure: false
	Object:
		Variable: varReplacer6249
		Type: java.lang.String
		Statement: $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer6249)
		Method: <v3.f: void <clinit>()>
		SHA-256: 550267a2de6289d52e68f7673a864a1fd4509b4238016af547fb76f99716f4a7
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <k7.a: java.lang.String i(int)>
		SHA-256: df5fac678213444f8160d4b51367362c05931862e9b3cb353f61c7f43dcb2675
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.whispersystems.curve25519.e: void a(byte[])>
		SHA-256: 86505ddf77eb6c75edc3f9ad6ad171289a8d8c96f65e9ead6b5a53f2a126aad3
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <k7.a: java.lang.String j(int,java.security.SecureRandom)>
		SHA-256: bd1a5715d3f2f1a1fb1216c142da12037443c959e5085e814656e2d4b5c037a1
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyStore
		Statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer29497)
		Method: <androidx.biometric.h: androidx.biometric.BiometricPrompt$c a()>
		SHA-256: b03641d5401eb2de8b6a467608b46aefdc8fba24c2f599384e671ea5296f3ded
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <u2.c$a: java.security.SecureRandom b()>
		SHA-256: 359df8e1954d8b8e27f672d005b82b4d6171cbbbbc345f41a7949f2657b57274
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer29491)
		Method: <androidx.biometric.h: androidx.biometric.BiometricPrompt$c a()>
		SHA-256: ecb12296e1ff2e3d5c1520347cba463c781d4d0453b1586c4b7b6afde906f20f
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <v3.f$a: boolean b(java.lang.String,byte[])>
		SHA-256: 9b524f06e84da308c4f7d758e992fbee748a77a36050719f7c22f8d1373020b7
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyFactory
		Statement: $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer6249)
		Method: <v3.f: void <clinit>()>
		SHA-256: b0d74f6dcce8cd293b48d5360f5f4d307a4ea60653f8964e258c10d5325bcf9
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r2.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r4)
		Method: <v3.f: void <clinit>()>
		SHA-256: b83a88d60d09e15a99320f9bed7ac6b01fbaa1f8d21e0a1ebc5b1b95ee138326
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27332)
		Method: <org.whispersystems.curve25519.f: void a(byte[],byte[],long)>
		SHA-256: a64feb988f633a298bb4bf90bf91b00e1d21d40ff6168e3bae491b8f31acaf38
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer15130)
		Method: <v3.f$a: boolean b(java.lang.String,byte[])>
		SHA-256: 92c5c63eb8167a2ef364ccc310cbeb4f9c81e90d78e36a92d3960bee05e2e2e4
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer29495, varReplacer29496)
		Method: <androidx.biometric.h: androidx.biometric.BiometricPrompt$c a()>
		SHA-256: 251b9210e84d9e2e9da0b20d6c4b262171f6b4807867dbeede791cdf27c22ecb
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <v3.f$a: boolean b(java.lang.String,byte[])>
		SHA-256: 8f42fcfd2956c1a5a87d3685f2ab3b20b00aaddc937b70a459fbdd476880f785
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Key
		Statement: $r4 = virtualinvoke $r0.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer29492, varReplacer29493)
		Method: <androidx.biometric.h: androidx.biometric.BiometricPrompt$c a()>
		SHA-256: fe0fb62c418516892ee975767af512d85732730bcf8f8184ae9e3e5a613c4276
		Secure: false

Findings in Java Class: d5.p$h

	 in Method: androidx.lifecycle.i0 b()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d05eac4e1c80f4d9407bdda67c01dccd35a1355f9de612ec3864865ca93cc11e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = interfaceinvoke $r3.<androidx.lifecycle.j0: androidx.lifecycle.i0 w()>()


Findings in Java Class: androidx.fragment.app.Fragment

	 in Method: androidx.lifecycle.i0 w()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d05eac4e1c80f4d9407bdda67c01dccd35a1355f9de612ec3864865ca93cc11e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i0 = specialinvoke r0.<androidx.fragment.app.Fragment: int d0()>()


Findings in Java Class: androidx.fragment.app.f0

	 in Method: void c()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d05eac4e1c80f4d9407bdda67c01dccd35a1355f9de612ec3864865ca93cc11e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = staticinvoke <androidx.savedstate.b: androidx.savedstate.b a(androidx.savedstate.c)>(r0)


Findings in Java Class: androidx.biometric.h

	 in Method: androidx.biometric.BiometricPrompt$c a()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ecb12296e1ff2e3d5c1520347cba463c781d4d0453b1586c4b7b6afde906f20f)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer29491)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #b03641d5401eb2de8b6a467608b46aefdc8fba24c2f599384e671ea5296f3ded)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer29497)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer29494, $r5)


Findings in Java Class: v3.f

	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r1.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r4)


Findings in Java Class: v3.f$a

	 in Method: boolean b(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r4)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 19

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 4
	IncompleteOperationError: 3
	ConstraintError: 2
=====================================================================
