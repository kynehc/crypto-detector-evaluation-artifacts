0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $z0 = virtualinvoke $r7.<java.security.Signature: boolean verify(byte[])>($r6)
		Method: <org.quantumbadger.redreader.receivers.announcements.SignedDataSerializer: byte[] deserialize(java.security.PublicKey,java.lang.String)>
		SHA-256: cd0bb0bf4420d98aba5e8eb3ce381e8ebad5fea11378cf74cb65ed528020153a
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.PublicKey
		Statement: $r11 = virtualinvoke $r8.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r9)
		Method: <org.quantumbadger.redreader.receivers.announcements.AnnouncementDownloader$1: void onJsonParsed(org.quantumbadger.redreader.jsonwrap.JsonValue,long,java.util.UUID,boolean)>
		SHA-256: 26363cf9b926a7f60690705ebcbd11687a944089291570576805321e39b8a243
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: d7cfeb8f6c3a2c789242a278cd66bef53a0cdf458d966f6fe3d202e24f9203a1
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2038)
		Method: <org.quantumbadger.redreader.http.okhttp.OKHTTPBackend: void <init>()>
		SHA-256: ec848cc9de96dcd3e35a4247d5d0a3e6c8169333ff654c0d46e3d075eeefea80
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r7.<java.security.Signature: boolean verify(byte[])>($r6)
		Method: <org.quantumbadger.redreader.receivers.announcements.SignedDataSerializer: byte[] deserialize(java.security.PublicKey,java.lang.String)>
		SHA-256: d4c08029389e4c85bfd9d9b2ee8543ff69c9f0a9fcb7d981f6e9db58ee3797b7
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r9.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r10)
		Method: <org.quantumbadger.redreader.receivers.announcements.AnnouncementDownloader$1: void onJsonParsed(org.quantumbadger.redreader.jsonwrap.JsonValue,long,java.util.UUID,boolean)>
		SHA-256: 83b917fdfea18cf2d916b7f8717d5018fb6b663bb16d798b3a9753b7a76d90d
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer12863)
		Method: <okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 32239b2d0f8747ca52673cf9fb5a3fc558e419dbc97aaba3ce71b1f51f8dfd5c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer12861)
		Method: <okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: a1337200533686d624d43d4a0aea20809794a09fcd3c23ee7b45aeab33cbdfa5
		Secure: false
	Object:
		Variable: varReplacer8753
		Type: java.lang.String
		Statement: $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer8753)
		Method: <org.quantumbadger.redreader.receivers.announcements.AnnouncementDownloader$1: void onJsonParsed(org.quantumbadger.redreader.jsonwrap.JsonValue,long,java.util.UUID,boolean)>
		SHA-256: 5cef013f1eb02928f6474a7f7da019de7ae44b494a8e6e56132946b1ddee7ab9
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer12866, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 165e51f6c1b52546c6cda239236baf279fe3ac31943ef9ff3636b336f1ad3eff
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer12857)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 560668ac280f18867c4c2c228d5ac58d5af264208124e06723abb39d9ad3d798
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer12860)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 1cf04bba6703eb444c971b43196e2b03ce90a61f5beb20819485a43852aa0eb7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer12865, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: bfcf2789374ce9e620f5ce40a74d1ebcea64e06ef95c895b0386d930e99acb09
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.Signature
		Statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer9018)
		Method: <org.quantumbadger.redreader.receivers.announcements.SignedDataSerializer: byte[] deserialize(java.security.PublicKey,java.lang.String)>
		SHA-256: ca4d554208ae8ccd267d048a7899e98b2266bdff63e7e5c0e24d82f79d49d83f
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.TrustManager[]
		Statement: $r16 = virtualinvoke $r15.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>
		SHA-256: 2f62c404b25d1312df5241322ea6a3077ce38e67b30ceb201d9f146de7918b57
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.quantumbadger.redreader.reddit.RedditSubredditManager: void <init>(android.content.Context,org.quantumbadger.redreader.account.RedditAccount)>
		SHA-256: b6acb538ecd67873040b5e7ce01a37297096a678cc39b3baa9627740ee718df6
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyFactory
		Statement: $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer8753)
		Method: <org.quantumbadger.redreader.receivers.announcements.AnnouncementDownloader$1: void onJsonParsed(org.quantumbadger.redreader.jsonwrap.JsonValue,long,java.util.UUID,boolean)>
		SHA-256: b326d8848493e0436ba7f268dadbcdbf4846d2351c1c3d8b370dabc489cd4a71
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.MessageDigest
		Statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14844)
		Method: <org.quantumbadger.redreader.reddit.RedditSubredditManager: void <init>(android.content.Context,org.quantumbadger.redreader.account.RedditAccount)>
		SHA-256: 185a3f670d07a5ce1472e89d02206ae03709ac268532cbd844da1dfc389f1874
		Secure: false
	Object:
		Variable: $r15
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r15 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r14)
		Method: <okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>
		SHA-256: 15f92f5000dafea90b3e75fdae1b8accb40bde58e00531b38343f614324d74aa
		Secure: false

Findings in Java Class: okhttp3.internal.platform.Platform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #560668ac280f18867c4c2c228d5ac58d5af264208124e06723abb39d9ad3d798)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer12857)


Findings in Java Class: okhttp3.internal.platform.AndroidPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #a1337200533686d624d43d4a0aea20809794a09fcd3c23ee7b45aeab33cbdfa5)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer12861)


Findings in Java Class: okhttp3.internal.platform.ConscryptPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #165e51f6c1b52546c6cda239236baf279fe3ac31943ef9ff3636b336f1ad3eff)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer12866, $r2)


Findings in Java Class: org.quantumbadger.redreader.reddit.RedditSubredditManager

	 in Method: void <init>(android.content.Context,org.quantumbadger.redreader.account.RedditAccount)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #185a3f670d07a5ce1472e89d02206ae03709ac268532cbd844da1dfc389f1874)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14844)


Findings in Java Class: org.quantumbadger.redreader.http.okhttp.OKHTTPBackend

	 in Method: void <init>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2048, varReplacer2048, varReplacer2048)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2048, varReplacer2048, varReplacer2048)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2048, varReplacer2048, varReplacer2048)


Findings in Java Class: org.quantumbadger.redreader.receivers.announcements.AnnouncementDownloader$1

	 in Method: void onJsonParsed(org.quantumbadger.redreader.jsonwrap.JsonValue,long,java.util.UUID,boolean)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r11 = virtualinvoke $r8.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r9)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r10)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: void <init>(okhttp3.OkHttpClient$Builder)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r20.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7298, $r16, varReplacer7298)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r20.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7298, $r16, varReplacer7298)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r20.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7298, $r16, varReplacer7298)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r15.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer7292)


Findings in Java Class: org.quantumbadger.redreader.receivers.announcements.SignedDataSerializer

	 in Method: byte[] deserialize(java.security.PublicKey,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r7.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 20

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 4
	RequiredPredicateError: 10
=====================================================================
