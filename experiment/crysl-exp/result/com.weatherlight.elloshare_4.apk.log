0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: varReplacer8144
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer8144)
		Method: <ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: 43eafefd0a5a609900a6287269d9d4ee4c0cc7f984832caa3aa4b32310184b1e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer8144)
		Method: <ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: 6b14c6a57a8cd18581a5730a740c2671ad60994c3ded8bc49d3eeb50130da713
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8120)
		Method: <ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 10eb089ca0718a51fb0141dee1af8903af994f89853d9a133f2b2723341da46b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7808)
		Method: <ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 811aa611d7f5aba7b5c3347e35b6982266d78a4858d778e9a0fd0765586110a1
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: virtualinvoke r0.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
		Method: <ch.boye.httpclientandroidlib.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 156cbf551d6e1beb81241eb72d74c33b8c0683b6a4ddbbd561927c6397757da7
		Secure: true
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer7219)
		Method: <ch.boye.httpclientandroidlib.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: 3443003bc079db399814df3320b69ded0813653e04151916064ce5b5ef1cde56
		Secure: false
	Object:
		Variable: r0
		Type: java.security.SecureRandom
		Statement: specialinvoke r0.<java.security.SecureRandom: void <init>()>()
		Method: <ch.boye.httpclientandroidlib.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: b56bf2cae5bfa605b5c0f3f1ed3c66e7efd35dd5f6695c94d88024e2f86cbfeb
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <ch.boye.httpclientandroidlib.impl.auth.DigestScheme: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: 1a242a50035a2f12b0c41660a772866f29bb169e7ab8ef503713f67db7fc3d3c
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8310)
		Method: <ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: 4021b6ce12c8f6be0b071b1e8ae44fc63633f9ffa862105cb0078780ca65eea8
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer7757)
		Method: <ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl: void <clinit>()>
		SHA-256: cfbd12e2da89e0e60a196b97e9e79cb20294f81b7313c02cc00adc21e06ba56
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: f6730166425cdde60c0ca0f7f01862a2b9705ad5b213be5cd1a19bc89976254d
		Secure: false
	Object:
		Variable: $r28
		Type: byte[]
		Statement: $r28 = virtualinvoke $r21.<java.security.MessageDigest: byte[] digest(byte[])>($r28)
		Method: <ch.boye.httpclientandroidlib.impl.auth.DigestScheme: ch.boye.httpclientandroidlib.Header createDigestHeader(ch.boye.httpclientandroidlib.auth.Credentials,ch.boye.httpclientandroidlib.HttpRequest)>
		SHA-256: b15a6ec79c15ae64ba8b3c671970a78ae15be1f9a6f6b1511d223ad1927950c8
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8140)
		Method: <ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>
		SHA-256: 2edd390aa2d0758df4a31245edf8f1d23e9902b3e04cb47f4dd2ca90ea2aef21
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer7810)
		Method: <ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 3ab3c8fee85b291115ad2665efc47a6ef46ddeff0ec6308f7138143a815221a2
		Secure: false
	Object:
		Variable: $r28
		Type: byte[]
		Statement: $r28 = virtualinvoke $r21.<java.security.MessageDigest: byte[] digest(byte[])>($r28)
		Method: <ch.boye.httpclientandroidlib.impl.auth.DigestScheme: ch.boye.httpclientandroidlib.Header createDigestHeader(ch.boye.httpclientandroidlib.auth.Credentials,ch.boye.httpclientandroidlib.HttpRequest)>
		SHA-256: b15a6ec79c15ae64ba8b3c671970a78ae15be1f9a6f6b1511d223ad1927950c8
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>
		SHA-256: 90089763a6d8ad99d7a078009f4f20f1280e88a97f87e7a81671c3cbb9756ff
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8336)
		Method: <ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>
		SHA-256: f80f0b05f32897fe727077684755dddc5f510092f36f9840982bb1f43c63fb5
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <ch.boye.httpclientandroidlib.impl.auth.HttpEntityDigester: void close()>
		SHA-256: 6e2f49082bf8a753b36c08d597efa7282d12c9a9b9a86cb704dfeec77e918e7c
		Secure: false
	Object:
		Variable: varReplacer7810
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer7810)
		Method: <ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 4d0f32abef1b2f88856f5a807b5989ff270041e68dd3daf6ca0f41b029627f9b
		Secure: false
	Object:
		Variable: $r28
		Type: byte[]
		Statement: $r28 = virtualinvoke $r21.<java.security.MessageDigest: byte[] digest(byte[])>($r28)
		Method: <ch.boye.httpclientandroidlib.impl.auth.DigestScheme: ch.boye.httpclientandroidlib.Header createDigestHeader(ch.boye.httpclientandroidlib.auth.Credentials,ch.boye.httpclientandroidlib.HttpRequest)>
		SHA-256: b15a6ec79c15ae64ba8b3c671970a78ae15be1f9a6f6b1511d223ad1927950c8
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>
		SHA-256: d8520a3a2d487807e0d145c0db7ce0651afa0bb43a713882d5447ec42f6f3f86
		Secure: false
	Object:
		Variable: $r28
		Type: byte[]
		Statement: $r28 = virtualinvoke $r21.<java.security.MessageDigest: byte[] digest(byte[])>($r28)
		Method: <ch.boye.httpclientandroidlib.impl.auth.DigestScheme: ch.boye.httpclientandroidlib.Header createDigestHeader(ch.boye.httpclientandroidlib.auth.Credentials,ch.boye.httpclientandroidlib.HttpRequest)>
		SHA-256: b15a6ec79c15ae64ba8b3c671970a78ae15be1f9a6f6b1511d223ad1927950c8
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8152)
		Method: <ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: c4622a03f1fa0f9a1946c8a82dbdff1772cbef63f85565253c527531d55e0bc8
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 8dda2f10cd4911a51ea6f84d756034bbd2b170b00e8eb73d84894dc35d4275e0
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8106)
		Method: <ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 70e88fce798be235c5c4359d4cebc0ab1cd9854945da1e990357055a7285f883
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 3bcbf4d912455255294e9bee4d91f33f3fa55dd4a67dc970c48252366cf97c1f
		Secure: false

Findings in Java Class: ch.boye.httpclientandroidlib.impl.auth.DigestScheme

	 in Method: java.security.MessageDigest createMessageDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1a242a50035a2f12b0c41660a772866f29bb169e7ab8ef503713f67db7fc3d3c)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)


Findings in Java Class: ch.boye.httpclientandroidlib.impl.auth.HttpEntityDigester

	 in Method: void close()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #1a242a50035a2f12b0c41660a772866f29bb169e7ab8ef503713f67db7fc3d3c)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: ch.boye.httpclientandroidlib.conn.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createDefault()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #3443003bc079db399814df3320b69ded0813653e04151916064ce5b5ef1cde56)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer7219)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7216, varReplacer7216, varReplacer7216)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7216, varReplacer7216, varReplacer7216)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7216, varReplacer7216, varReplacer7216)


Findings in Java Class: ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl

	 in Method: byte[] RC4(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #3ab3c8fee85b291115ad2665efc47a6ef46ddeff0ec6308f7138143a815221a2)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer7810)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #811aa611d7f5aba7b5c3347e35b6982266d78a4858d778e9a0fd0765586110a1)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer7809, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer7810)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #811aa611d7f5aba7b5c3347e35b6982266d78a4858d778e9a0fd0765586110a1)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7808)


	 in Method: byte[] ntlm2SessionResponse(byte[],byte[],byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2edd390aa2d0758df4a31245edf8f1d23e9902b3e04cb47f4dd2ca90ea2aef21)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8140)


	 in Method: java.security.Key createDESKey(byte[],int)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #6b14c6a57a8cd18581a5730a740c2671ad60994c3ded8bc49d3eeb50130da713)
			Second parameter (with value "DES") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer8144)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer8144)


	 in Method: byte[] lmResponse(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c4622a03f1fa0f9a1946c8a82dbdff1772cbef63f85565253c527531d55e0bc8)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8152)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8153, $r4)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #c4622a03f1fa0f9a1946c8a82dbdff1772cbef63f85565253c527531d55e0bc8)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r0 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


	 in Method: byte[] lmHash(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #4021b6ce12c8f6be0b071b1e8ae44fc63633f9ffa862105cb0078780ca65eea8)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8310)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #4021b6ce12c8f6be0b071b1e8ae44fc63633f9ffa862105cb0078780ca65eea8)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: r2 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8323, $r5)


	 in Method: byte[] ntlmv2Hash(java.lang.String,java.lang.String,byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f80f0b05f32897fe727077684755dddc5f510092f36f9840982bb1f43c63fb5)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: specialinvoke $r7.<ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>($r2)


	 in Method: byte[] lmv2Hash(java.lang.String,java.lang.String,byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f80f0b05f32897fe727077684755dddc5f510092f36f9840982bb1f43c63fb5)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: specialinvoke $r7.<ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>($r2)


Findings in Java Class: ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl$CipherGen

	 in Method: byte[] getLanManagerSessionKey()
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8110, $r6)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #70e88fce798be235c5c4359d4cebc0ab1cd9854945da1e990357055a7285f883)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8106)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #70e88fce798be235c5c4359d4cebc0ab1cd9854945da1e990357055a7285f883)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r2)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #10eb089ca0718a51fb0141dee1af8903af994f89853d9a133f2b2723341da46b)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: r2 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r2)


Findings in Java Class: ch.boye.httpclientandroidlib.impl.auth.NTLMEngineImpl$HMACMD5

	 in Method: void <init>(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f80f0b05f32897fe727077684755dddc5f510092f36f9840982bb1f43c63fb5)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8336)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 26

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 2
	ConstraintError: 10
	TypestateError: 6
	RequiredPredicateError: 9
=====================================================================
