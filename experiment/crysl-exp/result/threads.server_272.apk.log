0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Alive 16969  5000
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)
		Method: <y1.b$a: javax.crypto.SecretKey b(byte[])>
		SHA-256: ae1118690fb2abefc6a9162b1ead2bb389e0e19e94adeff8ace9ca1029f62ca
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <e9.l: void i(java.security.SecureRandom,int[])>
		SHA-256: 52908bd135e75c1277aa207c53f4dc1ff1e9eb55320f9d8999dfef656b528e1d
		Secure: true
	Object:
		Variable: $r7
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r7 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer42111)
		Method: <h7.b1: void P(java.util.List)>
		SHA-256: ffc8499e3f3cf14dfa62ddb61454908f4d1450263ca30aac7d94fe8cd8d76e9
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.PublicKey
		Statement: $r13 = virtualinvoke $r4.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <jb.j: java.lang.String[] c(android.content.Context,eb.e,java.lang.String,java.security.KeyPair,java.security.SecureRandom,java.util.Date,java.util.Date)>
		SHA-256: b301b74be12de2df9192dbf8af424d72dc5ef74bc141d56390c1502402c9720e
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <eb.a$a: boolean f(byte[],byte[])>
		SHA-256: e3f567d94ef9b1e4e79524271b12f4dfc77518aa396ee30fe93956e9167a3199
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r0)
		Method: <ha.b: byte[] b(int,java.security.SecureRandom)>
		SHA-256: 5ecf2d630d1ac1379292157243bcc9b2d09fca08c205d310afc3667ac8802965
		Secure: true
	Object:
		Variable: $r12
		Type: java.security.KeyPairGenerator
		Statement: $r12 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer776)
		Method: <ab.h: java.security.KeyPair v(android.content.Context)>
		SHA-256: 4af157a6f8ae49a94847ae3d49a60938343ee8fa8e4a6db787b3c44295af9fc9
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer34750)
		Method: <t6.d: javax.crypto.spec.SecretKeySpec t()>
		SHA-256: ee234ef1418d1298366be353a02c0509bf310de10abed5f70d249fa277cc4963
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <t6.b: byte[] b(byte[],byte[],byte[])>
		SHA-256: 426098325b2a788d5dfc3c6b719eadeb34912c78dc66eddfe3533aa14f5004c3
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.PrivateKey
		Statement: $r10 = virtualinvoke $r11.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <ab.h: java.security.KeyPair v(android.content.Context)>
		SHA-256: 45fadd201f7998a602390747ee1dc733b42810e7eb90fb1437f98575942c7f7e
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <h7.n: void <clinit>()>
		SHA-256: b0dc1dc07dcaa949ad0affba408d7d23362302cf019a9d0b73c91ccea8e3e54f
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)
		Method: <t6.b: byte[] a(byte[],byte[],byte[])>
		SHA-256: 2d1bb7c37c2a2a6f0a2564a5d2fd1285ee19a5e177904bc088d9fbd99969aabd
		Secure: false
	Object:
		Variable: varReplacer21664
		Type: java.lang.String
		Statement: $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer21664)
		Method: <h7.r1: java.security.interfaces.RSAPrivateKey c(java.io.InputStream)>
		SHA-256: b8094d2a5cda2ee6802d21ae646763e0ab89f08f34df625dbad82b03d24ca22b
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.PrivateKey
		Statement: $r11 = virtualinvoke $r10.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <h7.c1: void p(e7.k)>
		SHA-256: f4ef846ca6063dc012cab0b224c0f71de517a8ebb3b3c7b4c2c76a2eb02f105f
		Secure: true
	Object:
		Variable: $r14
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer34664)
		Method: <t6.b: byte[] l(byte[])>
		SHA-256: 91be00d5620ecad2e2ffb8991f30a4253f2d3aa2379b2ee605fa15c5eb449640
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <jb.j$b: java.util.Random b()>
		SHA-256: d7091480cce97a6585e7cbbc9ec89fe463b12f23a04398dcec7f59437135523b
		Secure: true
	Object:
		Variable: $r12
		Type: javax.crypto.Cipher
		Statement: $r12 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer28349)
		Method: <w6.m: byte[] P(byte[])>
		SHA-256: ac1e475110112dc17de33736b7caba424498f0866e0590736bebf7145174c590
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.PublicKey
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)
		Method: <eb.a: eb.a$a a(byte[])>
		SHA-256: cffab0761c00064cea601ab3166dbe8f05dabbedc7b92d1ae1356a4d84531724
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <e9.t: void j(java.security.SecureRandom,int[])>
		SHA-256: 183de0a66cd6f6c498b8cdb5810a51f6c64950dce560e543760fc8ef49548025
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <ib.a: ib.b c(byte[])>
		SHA-256: 3ae2991cc983818d75f8aca41ddf879200bddae6104575bf0cc4833a7ddf7a2d
		Secure: true
	Object:
		Variable: varReplacer34751
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer34751)
		Method: <t6.b: javax.crypto.spec.SecretKeySpec t()>
		SHA-256: 3fea89188f33f96559c3e3ba69b3afe844aa3b872a04949fe7244d947c68979c
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyFactory
		Statement: $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer21664)
		Method: <h7.r1: java.security.interfaces.RSAPrivateKey c(java.io.InputStream)>
		SHA-256: 991a497252dda729a2e43144a27f780988cf5b10355b7c938d6607af5d5f3969
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer34753)
		Method: <t6.b: javax.crypto.Cipher r()>
		SHA-256: 65cf5b8eef859ba510fea0893c6bb875bae58725a07894ab82b30ed3578f9f1d
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.PublicKey
		Statement: $r13 = virtualinvoke $r4.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <jb.j: java.lang.String[] c(android.content.Context,eb.e,java.lang.String,java.security.KeyPair,java.security.SecureRandom,java.util.Date,java.util.Date)>
		SHA-256: b301b74be12de2df9192dbf8af424d72dc5ef74bc141d56390c1502402c9720e
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <hb.b: hb.b g(byte[])>
		SHA-256: d020d713445b47046c192339c18b2a681ed6113d0ab526b48c00e3372d7aa9d5
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.KeyPairGenerator
		Statement: $r8 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer34677)
		Method: <h7.c1: void p(e7.k)>
		SHA-256: 8c7b4b7038ad80090a98c2374b98b0b0bae88ef21ab2a0cd62d6cb57bcfa87dd
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <cb.m: cb.m i(eb.f)>
		SHA-256: 5d311a9bdc0e11a5c6793cb6adb39b1cca12a021b190613c646c69b294b00d38
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.PrivateKey
		Statement: $r10 = virtualinvoke $r8.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r9)
		Method: <h7.r1: java.security.interfaces.RSAPrivateKey c(java.io.InputStream)>
		SHA-256: cfd9c370c935deecfdb44ebf5f485d0421fa7b39a159455e3fc2ad554bd654b1
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.PublicKey
		Statement: $r13 = virtualinvoke $r4.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <jb.j: java.lang.String[] c(android.content.Context,eb.e,java.lang.String,java.security.KeyPair,java.security.SecureRandom,java.util.Date,java.util.Date)>
		SHA-256: b301b74be12de2df9192dbf8af424d72dc5ef74bc141d56390c1502402c9720e
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer34682)
		Method: <e7.o: void <init>(java.security.PrivateKey,e7.q,byte[])>
		SHA-256: 61fa18415c6cabafb439c4850083252bec8f1c1ccb6499f2d5a1d2cb7ab57675
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.KeyAgreement
		Statement: $r2 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>(varReplacer42056)
		Method: <e7.o: void h()>
		SHA-256: c46296b9c392d5edb2b69c15f72c9f57fc7f7e5b023b99ddb54836919055d3cc
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>($r7)
		Method: <h7.c1: void p(e7.k)>
		SHA-256: 99cfdd03567bb59dbad08254096060d5c03bd1e9beb41b221fee97843627078d
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <e9.n0: void j(java.security.SecureRandom,int[])>
		SHA-256: f0b663335fbba966f8a9f7da90d32e503599d6a1fbbea9258bc2a71455e96f8a
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.cert.CertificateFactory
		Statement: $r6 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer15579)
		Method: <h7.r1: java.util.List b(java.io.InputStream)>
		SHA-256: 6e52fedfc159d95a29b36ffb1923dc9a25f6e39eaec012de7bf6cea1671e8924
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer23868)
		Method: <eb.a: eb.a$a a(byte[])>
		SHA-256: dd300395fea056b923aa02988c1ea377c82d4de72e58b4e91c838f68dd399ef7
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer30866)
		Method: <g2.j$a: g2.j$b b()>
		SHA-256: a1ee5003b9efe33fa78cdb9566a0b1e0caeb2179906d35f14cd635a50d940ff8
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.PrivateKey
		Statement: $r10 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r9)
		Method: <ab.h: java.security.KeyPair v(android.content.Context)>
		SHA-256: 291f14796b921d3120999a5ba4f8074513735ef9147a65bcc71fb781a8fc734d
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.Signature
		Statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer42305)
		Method: <h7.c1: java.security.Signature q(e7.m)>
		SHA-256: 32ed6a567598571947d63e995733f0c474faa9791542c6afce71b1c6549bfefa
		Secure: false
	Object:
		Variable: $r14
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer28347)
		Method: <w6.m: byte[] P(byte[])>
		SHA-256: 277b06d26316619aec27f0cfbfb193131f7558ac85414f3ef5912f7c5049dfd6
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <a7.o: void <init>(int,java.net.DatagramSocket,h7.r1,boolean,a7.c,int,java.util.function.Consumer,v6.a)>
		SHA-256: a3fff5c5eb43cdd33b22e4332cf84c9441dbbdd5bf378ca015851eefbc694cca
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)
		Method: <eb.a: eb.a$a a(byte[])>
		SHA-256: ce74baabc24e84081866f69296ab420e750d3310f33fc1b46c643dcd71bcc480
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <e9.f0: void i(java.security.SecureRandom,int[])>
		SHA-256: a23508fcc9a86b0329cc82536be31e7da5d036b4f203dba38c38b212fdb5590b
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.Signature
		Statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer42303)
		Method: <h7.c1: java.security.Signature q(e7.m)>
		SHA-256: edea324f34595e8474367794ccdbeda3a06788babc50e7b74f4656d9fb6b65d9
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20815)
		Method: <cb.n: cb.h b(byte[])>
		SHA-256: b58d4f700d1ecdff246691f44c455e269e6943e07927726f4434624f91f13808
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <ib.a: ib.b c(byte[])>
		SHA-256: 1637e7f2f493f28cc1dbfe08aefd9cf328872bfb70f9e8d3ca920cfe06ec3fbb
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <e7.o: byte[] g(byte[])>
		SHA-256: f5cd1b7e4c0c63683ba666c42a1ae55a43c9186d89e5ce279d3091df494111d5
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer37658)
		Method: <t6.b: javax.crypto.Cipher m()>
		SHA-256: a2b817a5c82bc49114378b0ef4d012c6b4f46e4804647ae263e44d1145d16e8a
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <eb.g$b: boolean f(byte[],byte[])>
		SHA-256: 8c96f621d1af7523264a988bc9a71856a8e02c6682cc23bf93b9faf6b945dd87
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <t6.d: byte[] b(byte[],byte[],byte[])>
		SHA-256: 1d1c2a5d2cbd44c1c0b7f0a957a008f941e43cc07c692481d475dbcce6e5b51c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3393)
		Method: <hb.b: hb.b g(byte[])>
		SHA-256: 93ecdb7ba6886bbd74419d7cbb35a9e66a8ea09a14317fa7e189dd34d1cbf055
		Secure: true
	Object:
		Variable: $r7
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r7)
		Method: <h7.c1: byte[] n(byte[],byte[])>
		SHA-256: 1e1b318170934a6e390800b8fd4ad9cf5f80976757e9281291a965fa2a917dea
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PublicKey
		Statement: $r8 = virtualinvoke $r11.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <ab.h: java.security.KeyPair v(android.content.Context)>
		SHA-256: f3ddd89095a84a76291384548c902f55f705c48c1e422cfd69ef8b168c239e90
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r7 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <t6.b: byte[] b(byte[],byte[],byte[])>
		SHA-256: 54bc380ef497577d3146a936528808d45dcd2ccde18a0149a7ba7688711b3fa5
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <n8.c: java.security.SecureRandom b()>
		SHA-256: f553b48a635029790275912b97d0aacc6da60ddbca420931ab14baf838d2e16c
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <e9.r0: void j(java.security.SecureRandom,int[])>
		SHA-256: 3891743bdbf74ed0c9865549683af3ff74e70a445dfd2430aef8d9d8e28bf564
		Secure: true
	Object:
		Variable: r0
		Type: jb.j$b
		Statement: specialinvoke r0.<java.security.SecureRandom: void <init>()>()
		Method: <jb.j$b: void <init>()>
		SHA-256: 8d718b4134c60e903f2363f9eb1b29919ee706e0202c8c2cd496daf66be23db6
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <h7.c0: void <clinit>()>
		SHA-256: 96ddf6e99cf17ec0e8b7e60ae3703e56fb7044353059c6a7df6dde97010cec56
		Secure: true
	Object:
		Variable: varReplacer34750
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer34750)
		Method: <t6.d: javax.crypto.spec.SecretKeySpec t()>
		SHA-256: 5dedc2692e88812c31d2d66da1e92a5b2c73a863b4de576aa0b6e2c8289c7d1d
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.PublicKey
		Statement: $r12 = virtualinvoke $r10.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <h7.c1: void p(e7.k)>
		SHA-256: 68a53a87d78a060fb09aeab3cb89c9f9547bc477c37955e1900168179276dcd5
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r12.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <w6.m: byte[] P(byte[])>
		SHA-256: f0306dc9eb09813d44b62b45e7b06559b41c554a2ac9ee7b7be38328edbba2cb
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)
		Method: <eb.g: eb.f a(byte[])>
		SHA-256: 7559df12fd41314539ec280cebc69671c99fc27d127558e137ecf310283a11f
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r7)
		Method: <h7.c1: byte[] n(byte[],byte[])>
		SHA-256: 83f19dffdb4981cb04a59cc3af9f6f79373d26d7e79179ad409c33b13117cbd4
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.util.Random: void nextBytes(byte[])>($r1)
		Method: <jb.j$b: void nextBytes(byte[])>
		SHA-256: eee4bc11b7c6aa663f8a3ba30a258a9f9e82b52dd2a5c935f3a8d272832d4a25
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <t6.d: byte[] a(byte[],byte[],byte[])>
		SHA-256: 6de7c7553c7aa5b24815863bd207885398fa1a226802a63e3af162934f17cc2b
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.cert.CertificateFactory
		Statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer42126)
		Method: <h7.d: int q(java.nio.ByteBuffer)>
		SHA-256: ee422999492ec797d8f1745d3430ecf3c6bef0b0f4dff0c85abccadc07cf5258
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer23866)
		Method: <eb.g: eb.f a(byte[])>
		SHA-256: 31172fe8dbc265785b9cd0559dfffa52bfb647d80cf3ba4673229bc78eb749d
		Secure: false
	Object:
		Variable: varReplacer39300
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer39300)
		Method: <e7.o: byte[] g(byte[])>
		SHA-256: 2917b7560464285365b184e8f54cc362c019c74ae7a8b6846a94ebe6fb03f487
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.Signature: byte[] sign()>()
		Method: <eb.g$a: byte[] e(byte[])>
		SHA-256: 19fe500f1cbf0ac9009534187dece408a74bc2f5abae56b3875ea2296ef4447d
		Secure: false
	Object:
		Variable: $r21
		Type: java.security.SecureRandom
		Statement: specialinvoke $r21.<java.security.SecureRandom: void <init>()>()
		Method: <a7.y: void <init>(p6.t1,java.net.DatagramSocket,java.net.InetSocketAddress,byte[],byte[],byte[],h7.r1,boolean,a7.c,java.lang.Integer,java.util.function.Consumer,v6.a)>
		SHA-256: 6aa021ae30530f5e101ac7f4eb7859b7b70415f191727fa06b98d9024dc93028
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.Signature
		Statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer42302)
		Method: <h7.c1: java.security.Signature q(e7.m)>
		SHA-256: c15e234034a93af7e0173b8fa083a87aaa14a49aefa4ccef331e12abe1c73b2c
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <e9.p: void i(java.security.SecureRandom,int[])>
		SHA-256: 90b33f1198935f2797a3302b0abdd0c07362e8373480862eb29d7d2a53aad6f0
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <t6.b: byte[] a(byte[],byte[],byte[])>
		SHA-256: 8adf985f1a3ad2a056ebf244ccf41d67542bb34800e383a156f7c1e6e51771a7
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.AlgorithmParameters
		Statement: $r4 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>(varReplacer42628)
		Method: <g7.n: java.security.spec.ECParameterSpec i(java.lang.String)>
		SHA-256: 3ed9edfe92a65dabbc8096f2dc1905e6103975635de075b74f6fe6b3ff953b8c
		Secure: false
	Object:
		Variable: varReplacer34664
		Type: java.lang.String
		Statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer34664)
		Method: <t6.b: byte[] l(byte[])>
		SHA-256: ad5484fa1d03165f83e447211d827871f3085a30ec8460da41f1eb3fb7347651
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.Signature
		Statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer42304)
		Method: <h7.c1: java.security.Signature q(e7.m)>
		SHA-256: a373a69d92e72a7572477d9c0622e3dcfe871ea003a88c0eb4d2dbb1c0c4a0a5
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r1.<java.util.Random: int nextInt(int)>($i0)
		Method: <jb.j$b: int nextInt(int)>
		SHA-256: baf9c82624faced998aad237d531c7cdcbf493ca9f969283b38e1a774a42d4bd
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Mac
		Statement: $r7 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer39297)
		Method: <e7.o: byte[] g(byte[])>
		SHA-256: d3d9ce1802c0e6a8194e3885c06011bb40c9dbce8be757928b94583df937b293
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13340)
		Method: <ib.a: ib.b c(byte[])>
		SHA-256: 9155a8a960e74edfb358b529226d29fdfaf2aac11305abb63f90cbc852ad354
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <y1.b$a: javax.crypto.Mac d()>
		SHA-256: 9036d3726dc3a36a367d704fc9d2f27c24fcbd12fb6f01b19ae1bb06f06c3891
		Secure: false
	Object:
		Variable: $r16
		Type: java.security.PrivateKey
		Statement: $r16 = virtualinvoke $r3.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <jb.j: void <init>(android.content.Context,eb.e,java.security.KeyPair,java.lang.String,java.security.SecureRandom)>
		SHA-256: c26cbe2955e4d5e27aff3934b02fb2d46a3a98f6493de65b22d5dee994daecc0
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyFactory
		Statement: $r7 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer779)
		Method: <ab.h: java.security.KeyPair v(android.content.Context)>
		SHA-256: f678b53c14684df0fe3613847a5e61bb1a767adb0d7da9cee7bdc6f5ddab7eca
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: $r10 = virtualinvoke $r8.<java.security.KeyPairGenerator: java.security.KeyPair genKeyPair()>()
		Method: <h7.c1: void p(e7.k)>
		SHA-256: 11db929558b6a481fcd6be0b692e22b43c47d149238f0a80149074187b439760
		Secure: false
	Object:
		Variable: varReplacer37655
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer37655)
		Method: <t6.d: javax.crypto.Cipher m()>
		SHA-256: f52db6fd46fbaf8d8277b203df0a4838dcd95552078d2c417a657e5d176e9689
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.PublicKey
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)
		Method: <eb.g: eb.f a(byte[])>
		SHA-256: f59ac7cba3cf1d6ffbe560b18191c3440e0c007f08049489de7947a498f628fb
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r6)
		Method: <ab.h: java.security.KeyPair v(android.content.Context)>
		SHA-256: 2f270048b2df9d2c4d505fd3ea7a1a74e90c243bbf63f89fff16f32fecec21dc
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <t6.d: byte[] b(byte[],byte[],byte[])>
		SHA-256: 7ea7b9935b2f044c4ccc6222c6bf4f46a232efb9a72050040b9de6c728ef2629
		Secure: false
	Object:
		Variable: varReplacer28347
		Type: java.lang.String
		Statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer28347)
		Method: <w6.m: byte[] P(byte[])>
		SHA-256: 17799e6a424a6f195a62547ab89296f18d19528257d42e06f1117f7a1fde99a
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <y1.a$a: byte[] a(javax.crypto.SecretKey,byte[],int)>
		SHA-256: 50dab5d834456a77b189a68509fd93de0b1e3a7080d48f175108b1fb031fca1f
		Secure: false
	Object:
		Variable: $r8
		Type: javax.net.ssl.TrustManager[]
		Statement: $r8 = virtualinvoke $r7.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <h7.b1: void P(java.util.List)>
		SHA-256: 2c8b0fd9c2914b087e49fc94fb593962970128c63067073d8f5190af003b68e4
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4)
		Method: <e7.q: void <init>(int)>
		SHA-256: c12e2fa13055634f855ddb1d11aadd902b0d6667fd614fb465e85be6faa51ca9
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r9.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <h7.c1: byte[] n(byte[],byte[])>
		SHA-256: 4cd80a35488bd6c68f3c3cf3aa09cfad38c7e3e4431460e04915e775e9b688fa
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyFactory
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer42623)
		Method: <g7.n: java.security.interfaces.ECPublicKey q(e7.k,byte[])>
		SHA-256: d1f7bb7caf5f3de71b9ef8792c841826190f3bbe34963105a2a4fc8343917680
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)
		Method: <y1.b$a: javax.crypto.Mac d()>
		SHA-256: 72ae67a49cf4ea59a23b4cd5b91d8ba846c42582f4c9b5bfad863e105526a45c
		Secure: false
	Object:
		Variable: varReplacer777
		Type: java.lang.String
		Statement: $r7 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer777)
		Method: <ab.h: java.security.KeyPair v(android.content.Context)>
		SHA-256: 210595fe723dccee4bf463f3ea05c3ffe153fcd397253923e52011d608e49d5e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <z8.a: java.security.MessageDigest a(java.lang.String)>
		SHA-256: a6cc438dab3b82736ea543d2bb9c3ec40d524b56d13a92511203c3cd90fb19c0
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <la.a: void <init>(la.b)>
		SHA-256: e7026bb11e11017bf02ea91dde1699264077a18bdea6fc2f75c8d60890c67fe7
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PrivateKey
		Statement: $r5 = virtualinvoke $r4.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <ab.h: void <init>(android.content.Context)>
		SHA-256: b6f249eb511149637719374b763c9f5be15b51ac42946005a10bdf852e42f335
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <cb.n: cb.h b(byte[])>
		SHA-256: 7915be4772d81852d036a1d40ac9c13fcb32081c507927e35dd7f618abce1de3
		Secure: true
	Object:
		Variable: $r18
		Type: java.security.cert.CertificateFactory
		Statement: $r18 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer7889)
		Method: <jb.j: void <init>(android.content.Context,eb.e,java.security.KeyPair,java.lang.String,java.security.SecureRandom)>
		SHA-256: 6da21058cce4afbd4fb0b738cdfb7dd1fe96f9e9a321e022d56f68e3c27ee235
		Secure: false
	Object:
		Variable: varReplacer779
		Type: java.lang.String
		Statement: $r7 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer779)
		Method: <ab.h: java.security.KeyPair v(android.content.Context)>
		SHA-256: 328b1a292381853c482be69479ae82f337169151a5ae1231217baa79d54e3c2b
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PublicKey
		Statement: $r8 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)
		Method: <ab.h: java.security.KeyPair v(android.content.Context)>
		SHA-256: 555fed55978f1312d5d248bdc67c8e0bea50cc991bd457032802f61cbf8f1c18
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <e9.h: void i(java.security.SecureRandom,int[])>
		SHA-256: 11bdeae54e9f7631bb3c73a1678178505572dd7131a886511b9f895583f13075
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<javax.crypto.KeyAgreement: byte[] generateSecret()>()
		Method: <e7.o: void h()>
		SHA-256: ceb3600a2f6a469fe01566e6e7f221a775f0efc95ed56da4a45482379bcd5c1f
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r1.<java.util.Random: int nextInt()>()
		Method: <jb.j$b: int nextInt()>
		SHA-256: 786050112072aa87c1eebe08f6a36f058d74432b93d91056fe0830a1b0003eac
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <e9.b0: void j(java.security.SecureRandom,int[])>
		SHA-256: 39f8de02a3d1dd9fe69a29af6ad0ba01956650e541310f3688c455ad25aafb18
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.PublicKey
		Statement: $r6 = virtualinvoke $r4.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <ab.h: void <init>(android.content.Context)>
		SHA-256: 871db5e81739774fb7097f0cb58bf26088a1dddedb147fdf20f2226c048f7b7a
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <e9.b: void j(java.security.SecureRandom,int[])>
		SHA-256: b4e971e82e8f2d3cfa6b902cdcb57864818bf5e6e467b223f8428784d2916284
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer34751)
		Method: <t6.b: javax.crypto.spec.SecretKeySpec t()>
		SHA-256: ce50f1ecae15d94e86c92d131fd13472472753fc8fc4c661b3b8680b0dc4326
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <e9.x: void i(java.security.SecureRandom,int[])>
		SHA-256: c70c844f4d8d122ed4276c3701398a5eb318564a4f311f829c2f36ff4c389b46
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer37046)
		Method: <eb.g$b: boolean f(byte[],byte[])>
		SHA-256: f5f57ad66195aef642cb2d8ab71a319789422f3dcb960e9e179fe074fb8d9db8
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer34659, $r4)
		Method: <t6.d: byte[] b(byte[],byte[],byte[])>
		SHA-256: a204d26618c796ab7b4696af3cc24455efdcf9d3879a96a04215b85ab8e25948
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r8 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <t6.b: byte[] a(byte[],byte[],byte[])>
		SHA-256: 22cf5a7b05d6b440ce5210fb109afba4af4cb442975ad591ecf786e451358edd
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyPair
		Statement: $r11 = virtualinvoke $r12.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <ab.h: java.security.KeyPair v(android.content.Context)>
		SHA-256: a863231dcf2467772d31cfbc63a6c2df56ef04309214a33d9ea7066e51779418
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r8)
		Method: <e7.o: void <init>(java.security.PrivateKey,e7.q,byte[])>
		SHA-256: 1a83d35b4204586d203b592763c3feece90484da22727b5ff3ec3f580a535e72
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer34665)
		Method: <t6.b: byte[] l(byte[])>
		SHA-256: ee8d0f929c983c8b5be2225feab411de25e7da48408ead7afc6550df69532d3d
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer39300)
		Method: <e7.o: byte[] g(byte[])>
		SHA-256: ce0810a7413cc655ba8fee2b853e2654aa2745984b5725bddc02b9b019a200dc
		Secure: false
	Object:
		Variable: $r15
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r15.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer28350, $r6)
		Method: <w6.m: byte[] P(byte[])>
		SHA-256: 2b37d5d1e905f23a02b09e13ff3effe3d7f5a84b8ccf7f0fe7959d9e86b9323b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)
		Method: <y1.b$a: javax.crypto.SecretKey b(byte[])>
		SHA-256: 3d1846c03e8c502a9209b6f941a9703b504ce77c0b84f825dbef69327616edfc
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <eb.g$b: boolean f(byte[],byte[])>
		SHA-256: 2ac33c0c7ce6ea6f9a7bef8fa2996e3b1cac6b626b687afa1e898fa78c1047f6
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <e9.j0: void j(java.security.SecureRandom,int[])>
		SHA-256: 7351280ba03e8814ee0445a9380da817ecf6f15ae082b01ff563d7d453600ea1
		Secure: true
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r11.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <h7.b1: boolean u0(byte[],e7.m,java.security.cert.Certificate,byte[])>
		SHA-256: 97bd7b2042093f5b8058fc3c7d7d2b0c691dcfc8a327eef5e6e08761aac234b4
		Secure: false
	Object:
		Variable: varReplacer42623
		Type: java.lang.String
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer42623)
		Method: <g7.n: java.security.interfaces.ECPublicKey q(e7.k,byte[])>
		SHA-256: 83094c6278955f8b2308179a2755625a482c72affed1aa7be6856169962e05dd
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.cert.CertificateFactory
		Statement: $r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>($r2)
		Method: <m8.b: java.security.cert.CertificateFactory a(java.lang.String)>
		SHA-256: cbd72781171cf1eeb08ffea452d6dcd823cb58b2fc0a062813ffdbce082255e4
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $z0 = virtualinvoke $r11.<java.security.Signature: boolean verify(byte[])>($r4)
		Method: <h7.b1: boolean u0(byte[],e7.m,java.security.cert.Certificate,byte[])>
		SHA-256: 21242d2bbe81118e1d1260b8302305fab2824f6dff6886d91d5501373cea1d8d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.AlgorithmParameters
		Statement: $r1 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>($r2)
		Method: <z8.a: java.security.AlgorithmParameters b(java.lang.String)>
		SHA-256: 7eecdcbc63e03e239acd83603e971ceebd8530c341243d4bff6c735c377d46ef
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer15098)
		Method: <eb.g$a: byte[] e(byte[])>
		SHA-256: fed786854115a3f354d4372940bb66f93f271ff1c279ea1079797f6da6d9fc06
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer34752)
		Method: <t6.d: javax.crypto.Cipher r()>
		SHA-256: 3ed7c9f26fdbc6f3b274d945ab5f376c1fa79bd569ceb2f5b2e297b67a40ed55
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <y1.a$b: byte[] a(javax.crypto.SecretKey,byte[])>
		SHA-256: e1a42e43eadd4a15d37a3321dc10843ea8aa2be2d38feb7408bc61c64cd866ad
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r8)
		Method: <t6.b: byte[] b(byte[],byte[],byte[])>
		SHA-256: 654463b6fede1469f829e7ab77c996172ce1dd34ba98d69bc957402994f399da
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r0.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>($r3)
		Method: <g7.n: java.security.spec.ECParameterSpec i(java.lang.String)>
		SHA-256: 6e391724d75f2b1427b0e5955f4bd5a820d2ddb22ff60acfd5ce57791118b498
		Secure: true
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <eb.a$a: boolean f(byte[],byte[])>
		SHA-256: ff8421cf6137d88866afb5b08970bdc7c335f7f25ed801c92cd7e61e6ab1b354
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r12.<java.security.Signature: byte[] sign()>()
		Method: <h7.c1: byte[] o(byte[],java.security.PrivateKey,e7.m,boolean)>
		SHA-256: c1b6b43609cec1afa0b7c171bebc7bbacb2d5a9f6cdd9a01882836d30dde6eb2
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer37052)
		Method: <eb.a$a: boolean f(byte[],byte[])>
		SHA-256: 252049d6af8802a66b592d3c21ebc2f06dfd7e8e4f6434030a4e431e7fc137a8
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.PublicKey
		Statement: $r12 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r9)
		Method: <g7.n: java.security.interfaces.ECPublicKey q(e7.k,byte[])>
		SHA-256: cf1a25077a859f9e2dad06a1380a22e64f757c666ac8de9d8cc4eede1fb92818
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyPair
		Statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r10)
		Method: <ab.h: java.security.KeyPair v(android.content.Context)>
		SHA-256: 4f8dc32d1d76de1189f831b3b54dabdf7432c6ed8bda722a43c827093004ec43
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <t6.d: byte[] a(byte[],byte[],byte[])>
		SHA-256: ef972f8eaeccb89a0b34981b3061b922c315fe010a5916859feee8005e83a0ee
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.Signature
		Statement: $r1 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <z8.a: java.security.Signature c(java.lang.String)>
		SHA-256: e797936116740ca56894f3371bb335a71d4b643cfbdf9f9d98e95b3f8ea33d31
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer27466)
		Method: <la.a: void <init>(la.b)>
		SHA-256: 4291444ec63b19ae4363fe902c043fac80439b011f3c4722877148ed34943731
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer34749)
		Method: <t6.d: javax.crypto.spec.SecretKeySpec t()>
		SHA-256: ca2710e6f20cf3a00c4c240c649428ef47e72d2e5bd51c609ad8d344fad34a1
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer37655)
		Method: <t6.d: javax.crypto.Cipher m()>
		SHA-256: f0cf4a6e0a74e0bdad1810418f82fd29949f1285c84b865473c7d54823c467c2
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r4.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <jb.j: java.lang.String[] c(android.content.Context,eb.e,java.lang.String,java.security.KeyPair,java.security.SecureRandom,java.util.Date,java.util.Date)>
		SHA-256: 996c1269784f2e10a862029d0509311f0273255cdd9b808a7f985940c8b222e7
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <d9.b: void j(java.security.SecureRandom,int[])>
		SHA-256: b4e971e82e8f2d3cfa6b902cdcb57864818bf5e6e467b223f8428784d2916284
		Secure: true
	Object:
		Variable: varReplacer34749
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer34749)
		Method: <t6.d: javax.crypto.spec.SecretKeySpec t()>
		SHA-256: 70f641da92eeb9622d5671d38a1c4f81a40d580e2a0bd842f47ee2dab0869fc7
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyFactory
		Statement: $r7 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer777)
		Method: <ab.h: java.security.KeyPair v(android.content.Context)>
		SHA-256: 7c4bde429837238542aed08af75392f3b561e2cfcd7a3e4cf0ff2430bf432607
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: $r10 = virtualinvoke $r8.<java.security.KeyPairGenerator: java.security.KeyPair genKeyPair()>()
		Method: <h7.c1: void p(e7.k)>
		SHA-256: d8e309edaa5f45a65e62e2839c7c235100291d9f528479cc731ab8f1a41dd8aa
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.Mac
		Statement: $r9 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r7)
		Method: <h7.c1: byte[] n(byte[],byte[])>
		SHA-256: f6cb2fc8d32ea262c1cd24c1e0d4dd766daff31b07d4f2246bd84b3af00b2dcb
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <c9.b: void j(java.security.SecureRandom,int[])>
		SHA-256: b4e971e82e8f2d3cfa6b902cdcb57864818bf5e6e467b223f8428784d2916284
		Secure: true
	Object:
		Variable: varReplacer23866
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer23866)
		Method: <eb.g: eb.f a(byte[])>
		SHA-256: db150240f19317c0b4be414ef7d906cac40f354e8a1303d03f8a7e38b9914811
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer37656)
		Method: <t6.d: javax.crypto.Cipher m()>
		SHA-256: 392d82dec5135eb6c8ed871f1433889c4d35faf4e42a1e90bdf86d41e9228ee7
		Secure: false
	Object:
		Variable: varReplacer23868
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer23868)
		Method: <eb.a: eb.a$a a(byte[])>
		SHA-256: 4656df9a6e4e569d1b47b897873c3fd639e4f2b3cc7b257613765cdcb5dc3fec
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer31694, $r5)
		Method: <t6.d: byte[] a(byte[],byte[],byte[])>
		SHA-256: 428be166e2e6f3b8d259ea0afca710be4a52c1cf2131c91e103eef2aa55c3cf4
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2296)
		Method: <cb.m: cb.m i(eb.f)>
		SHA-256: 902f03c48934adcf8a51377cb24c86de0cd9a21f4fdac708e39406c48dd85fd2
		Secure: true

Findings in Java Class: jb.j

	 in Method: void <init>(android.content.Context,eb.e,java.security.KeyPair,java.lang.String,java.security.SecureRandom)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #6da21058cce4afbd4fb0b738cdfb7dd1fe96f9e9a321e022d56f68e3c27ee235)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r19 = virtualinvoke $r18.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r17)


	 in Method: java.lang.String[] c(android.content.Context,eb.e,java.lang.String,java.security.KeyPair,java.security.SecureRandom,java.util.Date,java.util.Date)
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #e797936116740ca56894f3371bb335a71d4b643cfbdf9f9d98e95b3f8ea33d31)
			Operation on object of type java.security.Signature object not completed. Expected call to sign, update
			at statement: $r27 = virtualinvoke $r12.<l8.c: l8.b b(k9.a)>($r26)


Findings in Java Class: h7.r1

	 in Method: java.util.List b(java.io.InputStream)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #6e52fedfc159d95a29b36ffb1923dc9a25f6e39eaec012de7bf6cea1671e8924)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r6 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer15579)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #6e52fedfc159d95a29b36ffb1923dc9a25f6e39eaec012de7bf6cea1671e8924)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r10 = virtualinvoke $r6.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #6e52fedfc159d95a29b36ffb1923dc9a25f6e39eaec012de7bf6cea1671e8924)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r10 = virtualinvoke $r6.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)


	 in Method: java.security.interfaces.RSAPrivateKey c(java.io.InputStream)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r10 = virtualinvoke $r8.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r9)


Findings in Java Class: eb.a

	 in Method: eb.a$a a(byte[])
		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #dd300395fea056b923aa02988c1ea377c82d4de72e58b4e91c838f68dd399ef7)
			First parameter (with value "ECDSA") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer23868)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r3 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)


Findings in Java Class: z8.a

	 in Method: java.security.AlgorithmParameters b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.AlgorithmParameters (on Object #7eecdcbc63e03e239acd83603e971ceebd8530c341243d4bff6c735c377d46ef)
			First parameter (with value "PSS") should be any of {AES, DiffieHellman, DH, OAEP, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r1 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>($r2)

		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: $r1 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>($r2)


Findings in Java Class: m8.c

	 in Method: java.security.cert.X509Certificate a(l8.b)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #cbd72781171cf1eeb08ffea452d6dcd823cb58b2fc0a062813ffdbce082255e4)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r6 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r4)


Findings in Java Class: l9.b

	 in Method: boolean d(m7.d0)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a6cc438dab3b82736ea543d2bb9c3ec40d524b56d13a92511203c3cd90fb19c0)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i1 = virtualinvoke $r8.<java.security.MessageDigest: int getDigestLength()>()


Findings in Java Class: t6.b

	 in Method: byte[] l(byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ee8d0f929c983c8b5be2225feab411de25e7da48408ead7afc6550df69532d3d)
			First parameter (with value "ChaCha20") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer34665)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer34664)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer34666, $r8, $r7)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #91be00d5620ecad2e2ffb8991f30a4253f2d3aa2379b2ee605fa15c5eb449640)
			Second parameter (with value "ChaCha20") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer34664)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ee8d0f929c983c8b5be2225feab411de25e7da48408ead7afc6550df69532d3d)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)


	 in Method: javax.crypto.spec.SecretKeySpec t()
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #ce50f1ecae15d94e86c92d131fd13472472753fc8fc4c661b3b8680b0dc4326)
			Second parameter (with value "ChaCha20-Poly1305") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer34751)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer34751)


	 in Method: javax.crypto.Cipher r()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #65cf5b8eef859ba510fea0893c6bb875bae58725a07894ab82b30ed3578f9f1d)
			First parameter (with value "ChaCha20-Poly1305") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer34753)


	 in Method: javax.crypto.Cipher m()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a2b817a5c82bc49114378b0ef4d012c6b4f46e4804647ae263e44d1145d16e8a)
			First parameter (with value "ChaCha20") should be any of {AES, RSA, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer37658)


	 in Method: byte[] a(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)


	 in Method: byte[] b(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r8)


Findings in Java Class: e7.q

	 in Method: void <init>(int)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c12e2fa13055634f855ddb1d11aadd902b0d6667fd614fb465e85be6faa51ca9)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r4)


Findings in Java Class: a7.n

	 in Method: w6.c h(int,java.time.Instant,java.nio.ByteBuffer)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #3ed7c9f26fdbc6f3b274d945ab5f376c1fa79bd569ceb2f5b2e297b67a40ed55)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r4.<w6.f: void I(java.nio.ByteBuffer,t6.d,long,v6.a,int)>($r3, $r10, varReplacer13448, $r1, varReplacer13449)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #65cf5b8eef859ba510fea0893c6bb875bae58725a07894ab82b30ed3578f9f1d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r4.<w6.f: void I(java.nio.ByteBuffer,t6.d,long,v6.a,int)>($r3, $r10, varReplacer13448, $r1, varReplacer13449)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #392d82dec5135eb6c8ed871f1433889c4d35faf4e42a1e90bdf86d41e9228ee7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r4.<w6.f: void I(java.nio.ByteBuffer,t6.d,long,v6.a,int)>($r3, $r10, varReplacer13448, $r1, varReplacer13449)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #a2b817a5c82bc49114378b0ef4d012c6b4f46e4804647ae263e44d1145d16e8a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r4.<w6.f: void I(java.nio.ByteBuffer,t6.d,long,v6.a,int)>($r3, $r10, varReplacer13448, $r1, varReplacer13449)


Findings in Java Class: p6.d1

	 in Method: w6.l w0(java.nio.ByteBuffer)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #3ed7c9f26fdbc6f3b274d945ab5f376c1fa79bd569ceb2f5b2e297b67a40ed55)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r2.<w6.l: void I(java.nio.ByteBuffer,t6.d,long,v6.a,int)>($r1, $r7, $l2, $r8, $i0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #65cf5b8eef859ba510fea0893c6bb875bae58725a07894ab82b30ed3578f9f1d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r2.<w6.l: void I(java.nio.ByteBuffer,t6.d,long,v6.a,int)>($r1, $r7, $l2, $r8, $i0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #392d82dec5135eb6c8ed871f1433889c4d35faf4e42a1e90bdf86d41e9228ee7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r2.<w6.l: void I(java.nio.ByteBuffer,t6.d,long,v6.a,int)>($r1, $r7, $l2, $r8, $i0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #a2b817a5c82bc49114378b0ef4d012c6b4f46e4804647ae263e44d1145d16e8a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r2.<w6.l: void I(java.nio.ByteBuffer,t6.d,long,v6.a,int)>($r1, $r7, $l2, $r8, $i0)


Findings in Java Class: z6.p0

	 in Method: void G(java.nio.ByteBuffer,w6.l)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #3ed7c9f26fdbc6f3b274d945ab5f376c1fa79bd569ceb2f5b2e297b67a40ed55)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r7 = virtualinvoke $r2.<w6.l: byte[] s(java.lang.Long,t6.d)>($r6, $r5)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #65cf5b8eef859ba510fea0893c6bb875bae58725a07894ab82b30ed3578f9f1d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r7 = virtualinvoke $r2.<w6.l: byte[] s(java.lang.Long,t6.d)>($r6, $r5)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #392d82dec5135eb6c8ed871f1433889c4d35faf4e42a1e90bdf86d41e9228ee7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r7 = virtualinvoke $r2.<w6.l: byte[] s(java.lang.Long,t6.d)>($r6, $r5)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #a2b817a5c82bc49114378b0ef4d012c6b4f46e4804647ae263e44d1145d16e8a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r7 = virtualinvoke $r2.<w6.l: byte[] s(java.lang.Long,t6.d)>($r6, $r5)


Findings in Java Class: t6.d

	 in Method: javax.crypto.Cipher m()
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer37657, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #392d82dec5135eb6c8ed871f1433889c4d35faf4e42a1e90bdf86d41e9228ee7)
			First parameter (with value "AES/ECB/NoPadding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer37656)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer37655)


	 in Method: byte[] l(byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #392d82dec5135eb6c8ed871f1433889c4d35faf4e42a1e90bdf86d41e9228ee7)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #a2b817a5c82bc49114378b0ef4d012c6b4f46e4804647ae263e44d1145d16e8a)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


	 in Method: javax.crypto.spec.SecretKeySpec t()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer34750)


	 in Method: byte[] a(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer31695, $r6, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer31694, $r5)


	 in Method: byte[] b(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer34659, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer34660, $r6, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer34660, $r6, $r1)


Findings in Java Class: w6.l

	 in Method: void K(java.nio.ByteBuffer,byte,int,t6.d,long,v6.a)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #392d82dec5135eb6c8ed871f1433889c4d35faf4e42a1e90bdf86d41e9228ee7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r6 = virtualinvoke r0.<w6.l: byte[] l(byte[],t6.d)>($r4, $r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #a2b817a5c82bc49114378b0ef4d012c6b4f46e4804647ae263e44d1145d16e8a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r6 = virtualinvoke r0.<w6.l: byte[] l(byte[],t6.d)>($r4, $r2)


Findings in Java Class: y1.a$a

	 in Method: byte[] a(javax.crypto.SecretKey,byte[],int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #9036d3726dc3a36a367d704fc9d2f27c24fcbd12fb6f01b19ae1bb06f06c3891)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to javax.crypto.Mac: byte[] doFinal(byte[]), update
			at statement: $r7 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #72ae67a49cf4ea59a23b4cd5b91d8ba846c42582f4c9b5bfad863e105526a45c)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to javax.crypto.Mac: byte[] doFinal(byte[]), update
			at statement: $r7 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal()>()

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #9036d3726dc3a36a367d704fc9d2f27c24fcbd12fb6f01b19ae1bb06f06c3891)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void update(byte[])>($r5)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #72ae67a49cf4ea59a23b4cd5b91d8ba846c42582f4c9b5bfad863e105526a45c)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void update(byte[])>($r5)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #9036d3726dc3a36a367d704fc9d2f27c24fcbd12fb6f01b19ae1bb06f06c3891)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $i1 = virtualinvoke $r4.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #72ae67a49cf4ea59a23b4cd5b91d8ba846c42582f4c9b5bfad863e105526a45c)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $i1 = virtualinvoke $r4.<javax.crypto.Mac: int getMacLength()>()


Findings in Java Class: y1.b$a

	 in Method: int c()
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #9036d3726dc3a36a367d704fc9d2f27c24fcbd12fb6f01b19ae1bb06f06c3891)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $i0 = virtualinvoke $r1.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #72ae67a49cf4ea59a23b4cd5b91d8ba846c42582f4c9b5bfad863e105526a45c)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $i0 = virtualinvoke $r1.<javax.crypto.Mac: int getMacLength()>()


	 in Method: javax.crypto.Mac a(javax.crypto.SecretKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r1.<javax.crypto.Mac: void init(java.security.Key)>($r2)


	 in Method: javax.crypto.SecretKey b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)


Findings in Java Class: h7.d

	 in Method: int q(java.nio.ByteBuffer)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #ee422999492ec797d8f1745d3430ecf3c6bef0b0f4dff0c85abccadc07cf5258)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r6 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r1)


Findings in Java Class: h7.c1

	 in Method: java.security.Signature q(e7.m)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #edea324f34595e8474367794ccdbeda3a06788babc50e7b74f4656d9fb6b65d9)
			First parameter (with value "SHA384withRSA/PSS") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer42303)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #c15e234034a93af7e0173b8fa083a87aaa14a49aefa4ccef331e12abe1c73b2c)
			First parameter (with value "SHA256withRSA/PSS") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer42302)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #a373a69d92e72a7572477d9c0622e3dcfe871ea003a88c0eb4d2dbb1c0c4a0a5)
			First parameter (with value "SHA512withRSA/PSS") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer42304)


	 in Method: byte[] o(byte[],java.security.PrivateKey,e7.m,boolean)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r12.<java.security.Signature: void initSign(java.security.PrivateKey)>($r7)


	 in Method: byte[] n(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r9.<javax.crypto.Mac: void init(java.security.Key)>($r8)


Findings in Java Class: g7.n

	 in Method: java.security.spec.ECParameterSpec i(java.lang.String)
		ConstraintError violating CrySL rule for java.security.AlgorithmParameters (on Object #3ed9edfe92a65dabbc8096f2dc1905e6103975635de075b74f6fe6b3ff953b8c)
			First parameter (with value "EC") should be any of {AES, DiffieHellman, DH, OAEP, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r4 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>(varReplacer42628)


	 in Method: java.security.interfaces.ECPublicKey q(e7.k,byte[])
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r12 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r9)


Findings in Java Class: ab.h

	 in Method: java.security.KeyPair v(android.content.Context)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r10 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r9)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r10)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r8 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r10)


Findings in Java Class: h7.b1

	 in Method: void P(java.util.List)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r7.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer42107)


Findings in Java Class: w6.m

	 in Method: byte[] P(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r12.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer28348, $r9, $r11)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r12.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer28348, $r9, $r11)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer28347)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r15.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer28350, $r6)


Findings in Java Class: e7.o

	 in Method: void h()
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyAgreement
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r2.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>($r1, varReplacer42053)

		RequiredPredicateError violating CrySL rule for javax.crypto.KeyAgreement
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r2.<javax.crypto.KeyAgreement: void init(java.security.Key)>($r3)


	 in Method: byte[] g(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Mac: void init(java.security.Key)>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer39300)


Findings in Java Class: eb.g$b

	 in Method: boolean f(byte[],byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: eb.g$a

	 in Method: byte[] e(byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initSign(java.security.PrivateKey)>($r1)


Findings in Java Class: eb.a$a

	 in Method: boolean f(byte[],byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: eb.g

	 in Method: eb.f a(byte[])
		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r3 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 152

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 28
	TypestateError: 6
	ConstraintError: 12
	RequiredPredicateError: 42
=====================================================================
