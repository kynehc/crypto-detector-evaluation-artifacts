0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r13
		Type: java.security.SecureRandom
		Statement: $r13 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer78)
		Method: <org.ttrssreader.MyApplication: void onCreate()>
		SHA-256: fd716571efeb3d48195d7fd2e9ca2f4d9ae7b731998b9c2335cd65e85fc9e672
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <d.h: d.h d(java.lang.String)>
		SHA-256: 3ed66dfa3c3cac2a599a66f225bdd71ad27013a8badb5539418a1a942ad53b99
		Secure: true
	Object:
		Variable: $r12
		Type: javax.net.ssl.KeyManager[]
		Statement: $r12 = virtualinvoke $r11.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <e.e.g.l: void a(java.lang.String)>
		SHA-256: 62efe778ec00bcdf11fec3b9c4008eecba6687a35d3bc35cedf63e33033002bf
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6552)
		Method: <c.e0.j.b: javax.net.ssl.SSLContext h()>
		SHA-256: 55e707dfb5552afceb39487938d1cc3c10daa7c735f35aa492852296b94831c6
		Secure: false
	Object:
		Variable: $r15
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r15 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r14)
		Method: <c.t: void <init>(c.t$b)>
		SHA-256: fa0b5fc7358a9888a555739872a9ad8899961359f550d936a85e9935a01ee95b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer509)
		Method: <e.e.a.a: boolean K(android.content.pm.Signature)>
		SHA-256: 24cb40b09846ef72eb55006f258615d889f61acb6db7242187bd2a504a366dfe
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <e.e.g.l: void a(java.lang.String)>
		SHA-256: 2f5d3d116914c334fbed83f3a3eb939921a5978eb9bf181f598aaf40ebf825d1
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.SecureRandom
		Statement: specialinvoke $r13.<java.security.SecureRandom: void <init>()>()
		Method: <org.ttrssreader.MyApplication: void onCreate()>
		SHA-256: 7bb0d4bf5a2811bcda86c85af78c58ddfafb5315da1ad47d51fd742419789a8c
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer6551, $r2)
		Method: <c.e0.j.c: javax.net.ssl.SSLContext h()>
		SHA-256: c9696ed90c0796445c26e0f82c083793aefd6c7bb122162a2462344f67f6e302
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <d.h: d.h d(java.lang.String)>
		SHA-256: 54703eca9ef53d1305ad81725c67ecdcb20e0005827131ac410060c05092e93d
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer499)
		Method: <e.e.g.l: void d()>
		SHA-256: 460c22409a46bc4197b574ec6b5a02744ad2812d6755cc68d6671d2f6d3a6836
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6555)
		Method: <c.e0.j.g: javax.net.ssl.SSLContext h()>
		SHA-256: 67e1b9a90ae04ebdbd2a0ef780f0a714a49227869bf7f251212084bd945824bf
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <e.e.a.a: boolean K(android.content.pm.Signature)>
		SHA-256: 4190d38eb8404c5a3eda122032e11b717b30801f7b5c28d310e0962d13ac93f4
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer498)
		Method: <e.e.g.l: void b(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[])>
		SHA-256: f0d647cc07c1ec9052ca3a50821db4a7741d93d43d0d37b7ee75ad39f9ce36b8
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.TrustManager[]
		Statement: $r16 = virtualinvoke $r15.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <c.t: void <init>(c.t$b)>
		SHA-256: de4e2642f1de122abf120ff084a2383ee812fae6130ae53c92de60a0c9696198
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6557)
		Method: <c.e0.j.g: javax.net.ssl.SSLContext h()>
		SHA-256: 5b99a1b28ffcf4a4faae9195056f7d75a0fc987b118fed823f9907ddc414ca4f
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r10 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r2)
		Method: <e.e.g.l: void a(java.lang.String)>
		SHA-256: 3cfa8da836bc3f687b19d65702b4e630719a4f11d5a200ee71b1f7cb98fe25e8
		Secure: false
	Object:
		Variable: $r13
		Type: javax.net.ssl.TrustManager[]
		Statement: $r13 = virtualinvoke $r10.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <e.e.g.l: void a(java.lang.String)>
		SHA-256: 39dfd72547b2aae98f57133715c9a99e75775b763bdddb75bb683e602cb257c5
		Secure: false
	Object:
		Variable: $r11
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r11 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r2)
		Method: <e.e.g.l: void a(java.lang.String)>
		SHA-256: 3812661541888eb18157dbd36549cfc9783e125215da39310a9a49c4cd6f0082
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6553)
		Method: <c.e0.j.b: javax.net.ssl.SSLContext h()>
		SHA-256: 482f5921f88823f4d0c78d5134a989dfd9643659b6de9d3e9589b5d4aedb5fc1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer6549, $r2)
		Method: <c.e0.j.c: javax.net.ssl.SSLContext h()>
		SHA-256: 808b9cb42c58848263ac51d534765e7407a9ca6af4942ea7eb09683ccbbd63f6
		Secure: false

Findings in Java Class: e.e.g.l

	 in Method: void b(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[])
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r1, $r0, varReplacer497)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r1, $r0, varReplacer497)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f0d647cc07c1ec9052ca3a50821db4a7741d93d43d0d37b7ee75ad39f9ce36b8)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer498)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r1, $r0, varReplacer497)


	 in Method: void d()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, varReplacer500, varReplacer500)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, varReplacer500, varReplacer500)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, varReplacer500, varReplacer500)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #460c22409a46bc4197b574ec6b5a02744ad2812d6755cc68d6671d2f6d3a6836)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer499)


	 in Method: void a(java.lang.String)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #3812661541888eb18157dbd36549cfc9783e125215da39310a9a49c4cd6f0082)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r11.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r4, $r9)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #3812661541888eb18157dbd36549cfc9783e125215da39310a9a49c4cd6f0082)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r11.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r4, $r9)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #2f5d3d116914c334fbed83f3a3eb939921a5978eb9bf181f598aaf40ebf825d1)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r8, $r9)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #2f5d3d116914c334fbed83f3a3eb939921a5978eb9bf181f598aaf40ebf825d1)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r8, $r9)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r11.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r4, $r9)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #2f5d3d116914c334fbed83f3a3eb939921a5978eb9bf181f598aaf40ebf825d1)
			Operation on object of type java.security.KeyStore object not completed. Expected call to java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter), java.security.KeyStore: void load(java.io.InputStream,char[])
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r8, $r9)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r10.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r4)


Findings in Java Class: e.e.a.a

	 in Method: boolean K(android.content.pm.Signature)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #24cb40b09846ef72eb55006f258615d889f61acb6db7242187bd2a504a366dfe)
			First parameter (with value "SHA") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer509)


Findings in Java Class: c.e0.j.c

	 in Method: javax.net.ssl.SSLContext h()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #c9696ed90c0796445c26e0f82c083793aefd6c7bb122162a2462344f67f6e302)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer6551, $r2)


Findings in Java Class: c.e0.j.b

	 in Method: javax.net.ssl.SSLContext h()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #482f5921f88823f4d0c78d5134a989dfd9643659b6de9d3e9589b5d4aedb5fc1)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6553)


Findings in Java Class: c.e0.j.g

	 in Method: javax.net.ssl.SSLContext h()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #5b99a1b28ffcf4a4faae9195056f7d75a0fc987b118fed823f9907ddc414ca4f)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6557)


Findings in Java Class: c.t

	 in Method: void <init>(c.t$b)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r20.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4454, $r16, varReplacer4454)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r20.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4454, $r16, varReplacer4454)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r15.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer4457)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r20.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4454, $r16, varReplacer4454)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 21

	CryptoAnalysis found the following violations. For details see description above.
	NeverTypeOfError: 2
	IncompleteOperationError: 1
	ConstraintError: 6
	HardCodedError: 2
	RequiredPredicateError: 12
=====================================================================
