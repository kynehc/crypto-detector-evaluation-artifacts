0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Alive 21854  5000
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r29
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r29 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r3)
		Method: <org.jivesoftware.smack.ConnectionConfiguration: org.jivesoftware.smack.internal.SmackTlsContext getSmackTlsContext(org.jivesoftware.smack.ConnectionConfiguration$DnssecMode,org.jivesoftware.smack.util.SslContextFactory,javax.net.ssl.X509TrustManager,java.lang.String,java.lang.String,javax.security.auth.callback.CallbackHandler,java.lang.String)>
		SHA-256: fd779b9fc02f227b322f979ce273b70c37b0e96b86c189c364a05515cb583cd3
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <de.duenndns.ssl.MemorizingTrustManager: java.security.KeyStore loadAppKeyStore()>
		SHA-256: a0d886ba8aea7bea916de7686fe57c655595742412b53e072766552c698c8eb7
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.AlgorithmParameters
		Statement: $r1 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.util.DefaultJcaJceHelper: java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String)>
		SHA-256: 8d123772629184fc0669650c061426f57f5203aa49ca1fae65ed6e679e158734
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyAgreement
		Statement: $r2 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.NamedJcaJceHelper: javax.crypto.KeyAgreement createKeyAgreement(java.lang.String)>
		SHA-256: 9fe72c223d129f10a805f89192bd1abb08a988210778834dd27fc86f434bb399
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <de.duenndns.ssl.MemorizingTrustManager: javax.net.ssl.X509TrustManager getTrustManager(java.security.KeyStore)>
		SHA-256: 1ec4bbda4edfb989da327e5834a9a1c29d2c84382584c92e6b00d5eafbad12c7
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <de.duenndns.ssl.MemorizingTrustManager: java.lang.String certHash(java.security.cert.X509Certificate,java.lang.String)>
		SHA-256: 3a04276bb0bb90e77a093c5e678664dc0a04b35c414095f1d090094fe6701393
		Secure: false
	Object:
		Variable: $r27
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r27.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r6, $r15, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: c67a58db466f44792924e383c9800713831ce853e3ca81f3580a8d50f581e617
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r5)
		Method: <org.minidns.dnssec.algorithms.JavaSecSignatureVerifier: boolean verify(byte[],org.minidns.record.RRSIG,org.minidns.record.DNSKEY)>
		SHA-256: 992ff7cd83990bd86af65ca5aca1832f7e56d10c9e7fe4dfba6fa71e37f3b47
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.JCEElGamalPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: 6b8822e70d4604e23c0ea07692bf2c9c1daaa36d64fb48b6df14aae465189041
		Secure: true
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = interfaceinvoke $r32.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.openpgp.operator.jcajce.JcePublicKeyDataDecryptorFactoryBuilder: byte[] decryptSessionData(org.bouncycastle.openpgp.operator.jcajce.JcaPGPKeyConverter,org.bouncycastle.openpgp.PGPPrivateKey,byte[][])>
		SHA-256: 2fe22dd5e26adba86c0bdafd31dd8d4cceb86645e076034de35113eb0f2cb6f1
		Secure: true
	Object:
		Variable: $r29
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r29.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r26, $r27, $r1, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey: void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 69d36116f62acb406343ba2a4bd3c5dfb318c67056454f8adafd51a6e6f7e175
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.ProviderJcaJceHelper: javax.crypto.Cipher createCipher(java.lang.String)>
		SHA-256: ca3ef12264c5513176d477a4de074d29ef2f633740f40c33890cc0dc48fde865
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Mac
		Statement: $r1 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer26544)
		Method: <org.jivesoftware.smack.util.MAC: void <clinit>()>
		SHA-256: b1b99c3ecd2846294cf4ba9f0943aa5c1d2aa979ecd700dbb991a78b40716d3e
		Secure: false
	Object:
		Variable: $r19
		Type: java.security.KeyStore
		Statement: $r19 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer19277)
		Method: <org.jivesoftware.smack.ConnectionConfiguration: org.jivesoftware.smack.internal.SmackTlsContext getSmackTlsContext(org.jivesoftware.smack.ConnectionConfiguration$DnssecMode,org.jivesoftware.smack.util.SslContextFactory,javax.net.ssl.X509TrustManager,java.lang.String,java.lang.String,javax.security.auth.callback.CallbackHandler,java.lang.String)>
		SHA-256: 5aa6b025652f56cefe9486059df46d1f8fedf720d4fd8a5380bd41d6bedb6e95
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.minidns.dane.X509TrustManagerUtil: javax.net.ssl.X509TrustManager getDefault(java.security.KeyStore)>
		SHA-256: 4416358c2ec0781572d43a905fd9ec06ed28592b53db1bf5f3a81c5226ff0d50
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.util.DefaultJcaJceHelper: java.security.KeyFactory createKeyFactory(java.lang.String)>
		SHA-256: f7bc006853af11db2bdefc50a8970a168ddfa89f06fcc40a58d92e615afa11c9
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: c908257ebef1e44e27421c3dc6127a4c79990e1515e273132ea2c2cb020fcdee
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.KeyAgreement
		Statement: $r2 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.ProviderJcaJceHelper: javax.crypto.KeyAgreement createKeyAgreement(java.lang.String)>
		SHA-256: 323c67a49c6311ac9e500e18404027f2724104a4c746fc3693f887d119e44880
		Secure: false
	Object:
		Variable: $r19
		Type: java.security.KeyStore
		Statement: $r19 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(varReplacer19274, varReplacer19275)
		Method: <org.jivesoftware.smack.ConnectionConfiguration: org.jivesoftware.smack.internal.SmackTlsContext getSmackTlsContext(org.jivesoftware.smack.ConnectionConfiguration$DnssecMode,org.jivesoftware.smack.util.SslContextFactory,javax.net.ssl.X509TrustManager,java.lang.String,java.lang.String,javax.security.auth.callback.CallbackHandler,java.lang.String)>
		SHA-256: ac6ff46f83d56212e0afdd425a90470edfe47a7534276471e995ce732697f10
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <org.bouncycastle.openpgp.operator.jcajce.OperatorHelper: org.bouncycastle.openpgp.operator.PGPDataDecryptor createDataDecryptor(boolean,int,byte[])>
		SHA-256: 4b577aa4a25e9f6d47d2455a15028ee349c6d851143005b846fd715c3a17e601
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer8796)
		Method: <org.minidns.AbstractDnsClient: void <init>(org.minidns.DnsCache)>
		SHA-256: d5aef8ea28d0e87646f89332af3accd771eaaa57a79174c61de059ee6aec6eff
		Secure: true
	Object:
		Variable: $r19
		Type: java.security.KeyStore
		Statement: $r19 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)>(varReplacer19286, $r18)
		Method: <org.jivesoftware.smack.ConnectionConfiguration: org.jivesoftware.smack.internal.SmackTlsContext getSmackTlsContext(org.jivesoftware.smack.ConnectionConfiguration$DnssecMode,org.jivesoftware.smack.util.SslContextFactory,javax.net.ssl.X509TrustManager,java.lang.String,java.lang.String,javax.security.auth.callback.CallbackHandler,java.lang.String)>
		SHA-256: d7aef7bec666a77c24482c531d4159747699da97a5ab6e7156ec1378b87ca5a0
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.util.DefaultJcaJceHelper: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: d5732c60dfdd260fa2584e01723a020872061316c1136df9f421e4c02f29b5db
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r5.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>($r6)
		Method: <org.bouncycastle.openpgp.operator.jcajce.JcaPGPKeyConverter: java.security.spec.ECParameterSpec getECParameterSpec(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.asn1.x9.X9ECParameters)>
		SHA-256: 2c6cc24741c8a792383b946ad0e31f50a090e17cecc27a48e4a77be199c501b4
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r3, varReplacer26268)
		Method: <org.minidns.dnssec.algorithms.EcgostSignatureVerifier: void <clinit>()>
		SHA-256: 84b15daf6c936a7e59c0d588eed53c6a64bcf05fcff68037947275c69adf5bd6
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.JCEElGamalPublicKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: 2f96be90287037dd5aa521a81412c6567fe97ad3bdc0a3e0dd37cb2855cfb876
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.AlgorithmParameters
		Statement: $r2 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.ProviderJcaJceHelper: java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String)>
		SHA-256: c8b20f17b82de52ab097a55145288f3a16a7d8b203dd25e179f63dac5e41d4d7
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.minidns.AbstractDnsClient: void <init>(org.minidns.DnsCache)>
		SHA-256: b16aedd2b5a002c3f21fc519f65ffc3b24d3449a6b202f6221cca4a80b8638eb
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16378)
		Method: <org.jivesoftware.smack.util.SHA1: void <clinit>()>
		SHA-256: 210545b17d72d2d53b679a24dc9769c0f12dfec9f148b4b8111aec76baaa4ab8
		Secure: false
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.NamedJcaJceHelper: java.security.KeyFactory createKeyFactory(java.lang.String)>
		SHA-256: 2a6b13f22a78806d8df4779023ab556cbd7ca1041e2ddfe2773a7d67b92cb347
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer120)
		Method: <org.projectmaxs.shared.transport.PrngFixes: void installLinuxPRNGSecureRandom()>
		SHA-256: 29dfdf2fcc5cc69c8111a43868c9acc5beeb86e6e760ab34e95256084b3c2d0
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r3, $r8, $r6, varReplacer26537)
		Method: <org.minidns.dnssec.algorithms.EcdsaSignatureVerifier: void <init>(java.math.BigInteger[],int,java.lang.String)>
		SHA-256: 6815d6506cdfa7e9944959ee127fa4b29219dd4d7cf3abf1f4d3f27edd847235
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.ProviderJcaJceHelper: java.security.KeyFactory createKeyFactory(java.lang.String)>
		SHA-256: 6dcd9842a19e4a606d2bb7099685ef7f6c6b488582376a788f81b0044f4df306
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $z0 = virtualinvoke $r6.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <org.minidns.dnssec.algorithms.JavaSecSignatureVerifier: boolean verify(byte[],org.minidns.record.RRSIG,org.minidns.record.DNSKEY)>
		SHA-256: 7f139298b9cb634995cdca517569eeb41749114a45f34790f4316e0a82c95519
		Secure: false
	Object:
		Variable: $r14
		Type: javax.net.ssl.SSLContext
		Statement: $r14 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2881)
		Method: <org.projectmaxs.transport.xmpp.Settings: org.jivesoftware.smack.tcp.XMPPTCPConnectionConfiguration getConnectionConfiguration(android.content.Context)>
		SHA-256: 586ade61e2cdee5df4f7d6b5b6ebb8f373cda9930a3da5256c9e19217f677d9c
		Secure: false
	Object:
		Variable: $r21
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r21.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r14, $r15, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(org.bouncycastle.asn1.x9.X962Parameters,org.bouncycastle.math.ec.ECCurve)>
		SHA-256: 49063db5056501dc5b91a4e377b49a58eeeabe81598cccd9ccf90a92bea4339c
		Secure: true
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r6.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <org.minidns.dnssec.algorithms.JavaSecSignatureVerifier: boolean verify(byte[],org.minidns.record.RRSIG,org.minidns.record.DNSKEY)>
		SHA-256: 5775280e2a1c202d464c06a8d7bea1e2d607f943ed7aff49ad5194891ec02515
		Secure: false
	Object:
		Variable: $r32
		Type: java.security.Key
		Statement: $r9 = interfaceinvoke $r32.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.openpgp.operator.jcajce.JcePublicKeyDataDecryptorFactoryBuilder: byte[] decryptSessionData(org.bouncycastle.openpgp.operator.jcajce.JcaPGPKeyConverter,org.bouncycastle.openpgp.PGPPrivateKey,byte[][])>
		SHA-256: edfca2a2df96c2d9b752dc3f499f72d6f3fc022d6b67ee7017cbb81ad7d73a35
		Secure: true
	Object:
		Variable: r0
		Type: org.bouncycastle.x509.ExtendedPKIXParameters
		Statement: specialinvoke r0.<java.security.cert.PKIXParameters: void <init>(java.util.Set)>($r1)
		Method: <org.bouncycastle.x509.ExtendedPKIXParameters: void <init>(java.util.Set)>
		SHA-256: bc4db4edf85d5095c872f763083d4cdd57eaf413157a98ff957c0439448eaca6
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.ProviderJcaJceHelper: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 14ead5b41e52dcc0971ab3bbf6947b9738bc0cfa14d4e782ddd7a129f6301c26
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer26545)
		Method: <org.jivesoftware.smack.util.MAC: byte[] hmacsha1(byte[],byte[])>
		SHA-256: fd119bddf7bff7c740a771878d7002f0aed417d506bc0a8516b317235699b95
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.jivesoftware.smack.util.TLSUtils: byte[] getChannelBindingTlsServerEndPoint(javax.net.ssl.SSLSession)>
		SHA-256: 644e803ae1dbcce115a8c1e2e05f656a631ef11efcc09f8f14edabd27112becf
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.ProviderJcaJceHelper: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: 4426af26dc3fc58a067c5a58b3c0542c3dfa1bc92e57d2921b3ab11f647f0193
		Secure: false
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r3)
		Method: <org.minidns.dnssec.algorithms.JavaSecSignatureVerifier: void <init>(java.lang.String,java.lang.String)>
		SHA-256: 22e74f537b4fa4ebe6c0554ffcb237888613831bfc374c53ea2501d0e35bf0bb
		Secure: false
	Object:
		Variable: $r16
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r16.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <org.bouncycastle.openpgp.operator.jcajce.JcePBESecretKeyDecryptorBuilder$1: byte[] recoverKeyData(int,byte[],byte[],byte[],int,int)>
		SHA-256: 7c357fcd02e7fcea3a833743777734117a3afcc81f090ea51ac7d62c1e5f2bdb
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.bouncycastle.openpgp.operator.jcajce.JcaKeyFingerprintCalculator: byte[] calculateFingerprint(org.bouncycastle.bcpg.PublicKeyPacket)>
		SHA-256: 3fef9d428160445b6af200f7cfe8e94907dca1ed32bd2d606731541240257069
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.NamedJcaJceHelper: java.security.Signature createSignature(java.lang.String)>
		SHA-256: cb6dbedb66709ff933343a7a19443259032632b9744c262530a2bb4dc73beae9
		Secure: false
	Object:
		Variable: r0
		Type: org.bouncycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r2, $r3, $r4, $i0)
		Method: <org.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>
		SHA-256: b36d50207c12d926e435b859cb9848007d52f50b2e62c847e597de1f84f657c6
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <de.duenndns.ssl.MemorizingTrustManager: java.lang.String certHash(java.security.cert.X509Certificate,java.lang.String)>
		SHA-256: 8b7639901cba0fc0b09ad196bf67ee0f2b1e650fe9638857a5eb14884412141c
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r3)
		Method: <org.bouncycastle.openpgp.operator.jcajce.OperatorHelper: org.bouncycastle.openpgp.operator.PGPDataDecryptor createDataDecryptor(boolean,int,byte[])>
		SHA-256: c93cc5c87c436ee2f6273748e5a492242e455a41fa1029adc8860caf8480aa75
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r3, $r5, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(org.bouncycastle.asn1.x9.X9ECParameters)>
		SHA-256: a4b7a5874d7ddc91e3fe1c6f80927286981244105f50c9286ac1b1cb27893d7d
		Secure: true
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r9)
		Method: <org.minidns.dane.DaneVerifier: boolean checkCertificateMatches(java.security.cert.X509Certificate,org.minidns.record.TLSA,java.lang.String)>
		SHA-256: 56dc3c95d0b5708d20a4ee44b52b6055a07187078deff1675f6fe17b1e1b3bc5
		Secure: true
	Object:
		Variable: varReplacer26545
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer26545)
		Method: <org.jivesoftware.smack.util.MAC: byte[] hmacsha1(byte[],byte[])>
		SHA-256: 41fae22ed6a7068062cd62be9ffe1c083779e0bddd33a140d1af204ad2878a70
		Secure: false
	Object:
		Variable: r0
		Type: org.bouncycastle.jcajce.spec.DHDomainParameterSpec
		Statement: specialinvoke r0.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r1, $r3, $i1)
		Method: <org.bouncycastle.jcajce.spec.DHDomainParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int,int)>
		SHA-256: 9cdde17292729ed12e67e00ef32f20bc0ba0a50cc823d5bcab3268462fa45fcd
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.NamedJcaJceHelper: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: b0d5cd113028009cca34a566f603cb63613569a1586081066100dacfc7c80673
		Secure: false
	Object:
		Variable: $r16
		Type: java.security.SecureRandom
		Statement: specialinvoke $r16.<java.security.SecureRandom: void <init>()>()
		Method: <org.projectmaxs.transport.xmpp.Settings: org.jivesoftware.smack.tcp.XMPPTCPConnectionConfiguration getConnectionConfiguration(android.content.Context)>
		SHA-256: e10cba16dc44e405c333e8830868ff6122a7870b70e3bbf884638c021ea342a0
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer10214)
		Method: <de.duenndns.ssl.MemorizingTrustManager: javax.net.ssl.X509TrustManager getTrustManager(java.security.KeyStore)>
		SHA-256: 1879611391d496106e94631e9e01a1fe28980f4e4cc86e71ea5e4d6060f874e9
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.NamedJcaJceHelper: java.security.KeyFactory createKeyFactory(java.lang.String)>
		SHA-256: fed0f6bb87cbcef61bb361a7a2af43c9b85514c599a8c1ca47f496063046c25d
		Secure: false
	Object:
		Variable: $r21
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r21.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r14, $r15, varReplacer18173)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(org.bouncycastle.asn1.x9.X962Parameters,org.bouncycastle.math.ec.ECCurve)>
		SHA-256: da425c787c0bb2b53be790c3706880f74f25ea87b8209ace299a11d07f8c455
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <org.minidns.dnssec.algorithms.JavaSecDigestCalculator: void <init>(java.lang.String)>
		SHA-256: 27f10d36f956bb46cbfe64756f259ad7962bc65acc218ac50caa3410dcd06af5
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r4)
		Method: <org.bouncycastle.openpgp.operator.jcajce.JcaPGPKeyConverter: java.security.PublicKey implGetPublicKeyX509(java.lang.String,org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 594290ac9b7158d57f2c3d963973f77dc2717e7d3a8e1977e36022a589d7b0f3
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PrivateKey
		Statement: $r5 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r1)
		Method: <org.bouncycastle.openpgp.operator.jcajce.JcaPGPKeyConverter: java.security.PrivateKey implGeneratePrivate(java.lang.String,java.security.spec.KeySpec)>
		SHA-256: 311be8b9b72bf400d3e4ace34a58433d465a1a25e93e73c17632a2097d462f9d
		Secure: false
	Object:
		Variable: $r30
		Type: javax.net.ssl.KeyManager[]
		Statement: $r30 = virtualinvoke $r29.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.jivesoftware.smack.ConnectionConfiguration: org.jivesoftware.smack.internal.SmackTlsContext getSmackTlsContext(org.jivesoftware.smack.ConnectionConfiguration$DnssecMode,org.jivesoftware.smack.util.SslContextFactory,javax.net.ssl.X509TrustManager,java.lang.String,java.lang.String,javax.security.auth.callback.CallbackHandler,java.lang.String)>
		SHA-256: 8b9e485868f1c0dac9b34a21c8a2818b16b068b64ea249ba72319957edbcfb71
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r3)
		Method: <org.minidns.dnssec.algorithms.JavaSecSignatureVerifier: void <init>(java.lang.String,java.lang.String)>
		SHA-256: d6bb4b30cdbee7ff837ce1cc95136a9cd54ac9f5129c558d6320a140033e2fcc
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r9)
		Method: <org.minidns.dane.DaneVerifier: boolean checkCertificateMatches(java.security.cert.X509Certificate,org.minidns.record.TLSA,java.lang.String)>
		SHA-256: 56dc3c95d0b5708d20a4ee44b52b6055a07187078deff1675f6fe17b1e1b3bc5
		Secure: true
	Object:
		Variable: $r27
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r27.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r6, $r15)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 17ea506228f5dc57471137e0b695352a3774e9c7e597031eeeb9157ef0e2b937
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.NamedJcaJceHelper: javax.crypto.Cipher createCipher(java.lang.String)>
		SHA-256: 501c10614db02957e3ae13b2c498b5aa91dc860475280637d18024daa86dc06a
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLContext
		Statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer19271)
		Method: <org.jivesoftware.smack.ConnectionConfiguration: org.jivesoftware.smack.internal.SmackTlsContext getSmackTlsContext(org.jivesoftware.smack.ConnectionConfiguration$DnssecMode,org.jivesoftware.smack.util.SslContextFactory,javax.net.ssl.X509TrustManager,java.lang.String,java.lang.String,javax.security.auth.callback.CallbackHandler,java.lang.String)>
		SHA-256: 7986882042e7b57c958f32499e920f4b1d95b50a797807afd947e179daf2a9b
		Secure: false
	Object:
		Variable: $r19
		Type: java.security.KeyStore
		Statement: $r19 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <org.jivesoftware.smack.ConnectionConfiguration: org.jivesoftware.smack.internal.SmackTlsContext getSmackTlsContext(org.jivesoftware.smack.ConnectionConfiguration$DnssecMode,org.jivesoftware.smack.util.SslContextFactory,javax.net.ssl.X509TrustManager,java.lang.String,java.lang.String,javax.security.auth.callback.CallbackHandler,java.lang.String)>
		SHA-256: 5040d63cf8cf5ee3e01b4e6b525ab14f227df3badc4e0516dd69c6e70c7376ec
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.util.DefaultJcaJceHelper: javax.crypto.Cipher createCipher(java.lang.String)>
		SHA-256: f67221e8b24ffcca30ab38daf074c49210c9335dd0405b41923b398eb3511595
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.bouncycastle.openpgp.operator.jcajce.JcaKeyFingerprintCalculator: byte[] calculateFingerprint(org.bouncycastle.bcpg.PublicKeyPacket)>
		SHA-256: 3fef9d428160445b6af200f7cfe8e94907dca1ed32bd2d606731541240257069
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r5)
		Method: <org.jivesoftware.smack.util.TLSUtils: byte[] getChannelBindingTlsServerEndPoint(javax.net.ssl.SSLSession)>
		SHA-256: ebe7591f1c8b439a832c4e1943124ae0fd9b8d043d5bf772a9068e23f62297db
		Secure: false
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.ProviderJcaJceHelper: java.security.KeyFactory createKeyFactory(java.lang.String)>
		SHA-256: 7977622ee9f57d4a4fd2018199ea273a0f9eaba1f33ffad00fe7c48b628f908e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <org.minidns.dane.X509TrustManagerUtil: javax.net.ssl.X509TrustManager getDefault(java.security.KeyStore)>
		SHA-256: 10b3ad67fea3d4784faf80132e85cbca1a288dd441a9a26717510c9f5296d871
		Secure: false
	Object:
		Variable: $r19
		Type: java.security.PublicKey
		Statement: $r19 = virtualinvoke $r15.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r16)
		Method: <org.bouncycastle.openpgp.operator.jcajce.JcePublicKeyDataDecryptorFactoryBuilder: byte[] decryptSessionData(org.bouncycastle.openpgp.operator.jcajce.JcaPGPKeyConverter,org.bouncycastle.openpgp.PGPPrivateKey,byte[][])>
		SHA-256: 1d2a3c0e59b0f14f1bfd9b23e781c1a576d6e6e817ce58085df9227e1792675f
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <org.projectmaxs.shared.transport.PrngFixes: void installLinuxPRNGSecureRandom()>
		SHA-256: bb887d07e28dba6339e8fed0d633baabf5ade378ece54c7cc634dcc82b771cc3
		Secure: true
	Object:
		Variable: $r16
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r16.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <org.bouncycastle.openpgp.operator.jcajce.JcePBEProtectionRemoverFactory$1: byte[] recoverKeyData(int,byte[],byte[],byte[],int,int)>
		SHA-256: d1b1c051eed1459bc96e854a41a0df021f8ca2cc0f138c1466361bdd83e12b20
		Secure: false
	Object:
		Variable: $r40
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r40.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r7)
		Method: <org.bouncycastle.openpgp.operator.jcajce.JcePublicKeyDataDecryptorFactoryBuilder: byte[] decryptSessionData(org.bouncycastle.openpgp.operator.jcajce.JcaPGPKeyConverter,org.bouncycastle.openpgp.PGPPrivateKey,byte[][])>
		SHA-256: 42785ddf76b066ce021e3a2fc21ef852859cca09549e8254ceb9342e1fce9edc
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)
		Method: <org.bouncycastle.openpgp.operator.jcajce.JcaPGPKeyConverter: java.security.PublicKey implGeneratePublic(java.lang.String,java.security.spec.KeySpec)>
		SHA-256: f60555bb24f7c8310e0b9059873a60beb098e5cca0d2014263ccab1163f75c13
		Secure: false
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r3)
		Method: <org.bouncycastle.openpgp.operator.jcajce.OperatorHelper: org.bouncycastle.openpgp.operator.PGPDataDecryptor createDataDecryptor(boolean,int,byte[])>
		SHA-256: b933a27cb5cc4d14a6d5d4e0ee468c9c3815cb0b4c661733349bbdb11def8361
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, $r1)
		Method: <org.bouncycastle.openpgp.operator.jcajce.JcaJcePGPUtil: javax.crypto.SecretKey makeSymmetricKey(int,byte[])>
		SHA-256: 3ccc3406cfeafd7b46866517dedfb2477702d2b717288019d85bb6730ede7c78
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, $r1)
		Method: <org.bouncycastle.openpgp.operator.jcajce.JcaJcePGPUtil: javax.crypto.SecretKey makeSymmetricKey(int,byte[])>
		SHA-256: 8c9aa0086a276ea95bd97e6427dfb1993cb88ee068d3c86c148e4c06f1e4818d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.CryptoServicesRegistrar: java.security.SecureRandom getSecureRandom()>
		SHA-256: 375867338a8d572664475cac25bcfa294db8f2af8faff8d50836d5d6dcf8ab15
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyFactory
		Statement: $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.util.DefaultJcaJceHelper: java.security.KeyFactory createKeyFactory(java.lang.String)>
		SHA-256: 7f07316255acf6c2b7bca090a4e664f355d182706a163acbdb368bfde642c5ac
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer344)
		Method: <org.jivesoftware.smackx.caps.EntityCapsManager: void <clinit>()>
		SHA-256: 3f879bb9d67c6d00905cf6e2129bcb84469ba4567cf220eeb84ef0b95ac9e067
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer22294)
		Method: <org.minidns.dane.DaneVerifier: boolean checkCertificateMatches(java.security.cert.X509Certificate,org.minidns.record.TLSA,java.lang.String)>
		SHA-256: 3edd1fb1362efde95c697d05413ebfea520541fb40de21ed93601350a78265c1
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.AlgorithmParameters
		Statement: $r2 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.bouncycastle.jcajce.util.NamedJcaJceHelper: java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String)>
		SHA-256: 56833da8ae3d4d36272676cbcfa817da382e9d7b4afee7b28b5bc0913a1acaac
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: a9c19b12994234db6ec00ed5b541d5738b556e23d3870b731ea4245dbf932de7
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.Signature
		Statement: $r1 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.util.DefaultJcaJceHelper: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 66f26381b2b186fbed59de5f1091ee81e1ff14794fdb45154aac9feab8965356
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer25805)
		Method: <org.bouncycastle.openpgp.operator.jcajce.SHA1PGPDigestCalculator: void <init>()>
		SHA-256: a41062f2ab0acb8c13112c8fc9dfa95ead1ec80e6a43e06e3b2e69a64ea9ee7c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer26373)
		Method: <org.jivesoftware.smack.util.MD5: void <clinit>()>
		SHA-256: ed12ec2cb7cd3918707de22cd9f8d3da7f10f6ebef7d95d0098cbf952493546b
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyAgreement
		Statement: $r1 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)
		Method: <org.bouncycastle.jcajce.util.DefaultJcaJceHelper: javax.crypto.KeyAgreement createKeyAgreement(java.lang.String)>
		SHA-256: fe7d46332ba22cacd3398f7afba223f16ac2b8c77c223d82fb2fde8216db6ca8
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer22286)
		Method: <org.minidns.dane.DaneVerifier: boolean checkCertificateMatches(java.security.cert.X509Certificate,org.minidns.record.TLSA,java.lang.String)>
		SHA-256: 9f7117a0d79f5627071a555c79cbbf838a5363f585b26213220d0fc2096a960a
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r10, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: ca8c57f00e636666523b3803cf2d449c7668aea2653306a5d436a81914fd7df0
		Secure: true

Findings in Java Class: org.jivesoftware.smackx.caps.EntityCapsManager

	 in Method: void <clinit>()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3f879bb9d67c6d00905cf6e2129bcb84469ba4567cf220eeb84ef0b95ac9e067)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(varReplacer340, $r0)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3f879bb9d67c6d00905cf6e2129bcb84469ba4567cf220eeb84ef0b95ac9e067)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer344)


Findings in Java Class: org.projectmaxs.transport.xmpp.Settings

	 in Method: org.jivesoftware.smack.tcp.XMPPTCPConnectionConfiguration getConnectionConfiguration(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2889, $r15, $r16)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #586ade61e2cdee5df4f7d6b5b6ebb8f373cda9930a3da5256c9e19217f677d9c)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r14 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2881)


Findings in Java Class: org.jivesoftware.smack.util.dns.minidns.MiniDnsDaneVerifier

	 in Method: void init(javax.net.ssl.SSLContext,javax.net.ssl.KeyManager[],javax.net.ssl.X509TrustManager,java.security.SecureRandom)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r3, $r9, $r1)

		TypestateError violating CrySL rule for javax.net.ssl.SSLContext (on Object #586ade61e2cdee5df4f7d6b5b6ebb8f373cda9930a3da5256c9e19217f677d9c)
			Unexpected call to method init on object of type javax.net.ssl.SSLContext. Expect a call to one of the following methods createSSLEngine
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r3, $r9, $r1)


Findings in Java Class: de.duenndns.ssl.MemorizingTrustManager

	 in Method: javax.net.ssl.X509TrustManager getTrustManager(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r1)

		ConstraintError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #1879611391d496106e94631e9e01a1fe28980f4e4cc86e71ea5e4d6060f874e9)
			First parameter (with value "X509") should be any of {PKIX, SunX509}
			at statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer10214)


	 in Method: java.security.KeyStore loadAppKeyStore()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #a0d886ba8aea7bea916de7686fe57c655595742412b53e072766552c698c8eb7)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r8, $r9)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #a0d886ba8aea7bea916de7686fe57c655595742412b53e072766552c698c8eb7)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r8, $r9)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #a0d886ba8aea7bea916de7686fe57c655595742412b53e072766552c698c8eb7)
			Unexpected call to method load on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r8, $r9)


	 in Method: java.lang.String certHash(java.security.cert.X509Certificate,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3a04276bb0bb90e77a093c5e678664dc0a04b35c414095f1d090094fe6701393)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: org.jivesoftware.smack.util.SHA1

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #210545b17d72d2d53b679a24dc9769c0f12dfec9f148b4b8111aec76baaa4ab8)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16378)


Findings in Java Class: dummyMainClass

	 in Method: void dummyMainMethod(java.lang.String[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #b1b99c3ecd2846294cf4ba9f0943aa5c1d2aa979ecd700dbb991a78b40716d3e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: return

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #210545b17d72d2d53b679a24dc9769c0f12dfec9f148b4b8111aec76baaa4ab8)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ed12ec2cb7cd3918707de22cd9f8d3da7f10f6ebef7d95d0098cbf952493546b)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return


Findings in Java Class: org.jivesoftware.smack.ConnectionConfiguration

	 in Method: org.jivesoftware.smack.internal.SmackTlsContext getSmackTlsContext(org.jivesoftware.smack.ConnectionConfiguration$DnssecMode,org.jivesoftware.smack.util.SslContextFactory,javax.net.ssl.X509TrustManager,java.lang.String,java.lang.String,javax.security.auth.callback.CallbackHandler,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #fd779b9fc02f227b322f979ce273b70c37b0e96b86c189c364a05515cb583cd3)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: $r29 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r30, $r41, varReplacer19287)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #7986882042e7b57c958f32499e920f4b1d95b50a797807afd947e179daf2a9b)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer19271)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #fd779b9fc02f227b322f979ce273b70c37b0e96b86c189c364a05515cb583cd3)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: $r30 = virtualinvoke $r29.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r30, $r41, varReplacer19287)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #7986882042e7b57c958f32499e920f4b1d95b50a797807afd947e179daf2a9b)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer19271)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #ac6ff46f83d56212e0afdd425a90470edfe47a7534276471e995ce732697f10)
			First parameter (with value "KeychainStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r19 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(varReplacer19274, varReplacer19275)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #7986882042e7b57c958f32499e920f4b1d95b50a797807afd947e179daf2a9b)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: $r7 = interfaceinvoke $r2.<org.jivesoftware.smack.util.SslContextFactory: javax.net.ssl.SSLContext createSslContext()>()

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #5040d63cf8cf5ee3e01b4e6b525ab14f227df3badc4e0516dd69c6e70c7376ec)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r19.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r23, $r22)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #5040d63cf8cf5ee3e01b4e6b525ab14f227df3badc4e0516dd69c6e70c7376ec)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r19.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r23, $r22)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #fd779b9fc02f227b322f979ce273b70c37b0e96b86c189c364a05515cb583cd3)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r29.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r20, $r22)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #d7aef7bec666a77c24482c531d4159747699da97a5ab6e7156ec1378b87ca5a0)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r19.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer19273, $r22)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #5040d63cf8cf5ee3e01b4e6b525ab14f227df3badc4e0516dd69c6e70c7376ec)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r19.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r36, $r22)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r30, $r41, varReplacer19287)


Findings in Java Class: org.bouncycastle.jcajce.util.ProviderJcaJceHelper

	 in Method: java.security.MessageDigest createMessageDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4426af26dc3fc58a067c5a58b3c0542c3dfa1bc92e57d2921b3ab11f647f0193)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r3, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4426af26dc3fc58a067c5a58b3c0542c3dfa1bc92e57d2921b3ab11f647f0193)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r3, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4426af26dc3fc58a067c5a58b3c0542c3dfa1bc92e57d2921b3ab11f647f0193)
			First parameter (with value "MD2") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r3, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4426af26dc3fc58a067c5a58b3c0542c3dfa1bc92e57d2921b3ab11f647f0193)
			First parameter (with value "RIPEMD160") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r3, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4426af26dc3fc58a067c5a58b3c0542c3dfa1bc92e57d2921b3ab11f647f0193)
			First parameter (with value "SHA-224") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r3, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4426af26dc3fc58a067c5a58b3c0542c3dfa1bc92e57d2921b3ab11f647f0193)
			First parameter (with value "TIGER") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r3, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4426af26dc3fc58a067c5a58b3c0542c3dfa1bc92e57d2921b3ab11f647f0193)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r3, $r1)


	 in Method: java.security.Signature createSignature(java.lang.String)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #14ead5b41e52dcc0971ab3bbf6947b9738bc0cfa14d4e782ddd7a129f6301c26)
			First parameter (with value "Ed25519") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r3, $r1)


	 in Method: java.security.KeyFactory createKeyFactory(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #6dcd9842a19e4a606d2bb7099685ef7f6c6b488582376a788f81b0044f4df306)
			First parameter (with value "ElGamal") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r3, $r1)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #6dcd9842a19e4a606d2bb7099685ef7f6c6b488582376a788f81b0044f4df306)
			First parameter (with value "ECDSA") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r3, $r1)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #6dcd9842a19e4a606d2bb7099685ef7f6c6b488582376a788f81b0044f4df306)
			First parameter (with value "ECDH") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r3, $r1)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #6dcd9842a19e4a606d2bb7099685ef7f6c6b488582376a788f81b0044f4df306)
			First parameter (with value "XDH") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r3, $r1)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #6dcd9842a19e4a606d2bb7099685ef7f6c6b488582376a788f81b0044f4df306)
			First parameter (with value "EdDSA") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r3, $r1)


	 in Method: java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String)
		ConstraintError violating CrySL rule for java.security.AlgorithmParameters (on Object #c8b20f17b82de52ab097a55145288f3a16a7d8b203dd25e179f63dac5e41d4d7)
			First parameter (with value "EC") should be any of {AES, DiffieHellman, DH, OAEP, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r1)


	 in Method: javax.crypto.KeyAgreement createKeyAgreement(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #323c67a49c6311ac9e500e18404027f2724104a4c746fc3693f887d119e44880)
			First parameter (with value "X25519withSHA512CKDF") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r2 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r3, $r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #323c67a49c6311ac9e500e18404027f2724104a4c746fc3693f887d119e44880)
			First parameter (with value "ECCDHwithSHA512CKDF") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r2 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r3, $r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #323c67a49c6311ac9e500e18404027f2724104a4c746fc3693f887d119e44880)
			First parameter (with value "ECCDHwithSHA384CKDF") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r2 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r3, $r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #323c67a49c6311ac9e500e18404027f2724104a4c746fc3693f887d119e44880)
			First parameter (with value "X25519withSHA384CKDF") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r2 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r3, $r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #323c67a49c6311ac9e500e18404027f2724104a4c746fc3693f887d119e44880)
			First parameter (with value "ECCDHwithSHA256CKDF") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r2 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r3, $r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #323c67a49c6311ac9e500e18404027f2724104a4c746fc3693f887d119e44880)
			First parameter (with value "X25519withSHA256CKDF") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r2 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r3, $r1)


Findings in Java Class: org.bouncycastle.openpgp.operator.jcajce.JcaPGPDigestCalculatorProviderBuilder$1

	 in Method: org.bouncycastle.openpgp.operator.PGPDigestCalculator get(int)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4426af26dc3fc58a067c5a58b3c0542c3dfa1bc92e57d2921b3ab11f647f0193)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r8.<org.bouncycastle.openpgp.operator.jcajce.JcaPGPDigestCalculatorProviderBuilder$1$1: void <init>(org.bouncycastle.openpgp.operator.jcajce.JcaPGPDigestCalculatorProviderBuilder$1,int,org.bouncycastle.openpgp.operator.jcajce.JcaPGPDigestCalculatorProviderBuilder$DigestOutputStream,java.security.MessageDigest)>(r0, $i0, $r7, $r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4426af26dc3fc58a067c5a58b3c0542c3dfa1bc92e57d2921b3ab11f647f0193)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r8.<org.bouncycastle.openpgp.operator.jcajce.JcaPGPDigestCalculatorProviderBuilder$1$1: void <init>(org.bouncycastle.openpgp.operator.jcajce.JcaPGPDigestCalculatorProviderBuilder$1,int,org.bouncycastle.openpgp.operator.jcajce.JcaPGPDigestCalculatorProviderBuilder$DigestOutputStream,java.security.MessageDigest)>(r0, $i0, $r7, $r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d5732c60dfdd260fa2584e01723a020872061316c1136df9f421e4c02f29b5db)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r8.<org.bouncycastle.openpgp.operator.jcajce.JcaPGPDigestCalculatorProviderBuilder$1$1: void <init>(org.bouncycastle.openpgp.operator.jcajce.JcaPGPDigestCalculatorProviderBuilder$1,int,org.bouncycastle.openpgp.operator.jcajce.JcaPGPDigestCalculatorProviderBuilder$DigestOutputStream,java.security.MessageDigest)>(r0, $i0, $r7, $r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d5732c60dfdd260fa2584e01723a020872061316c1136df9f421e4c02f29b5db)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r8.<org.bouncycastle.openpgp.operator.jcajce.JcaPGPDigestCalculatorProviderBuilder$1$1: void <init>(org.bouncycastle.openpgp.operator.jcajce.JcaPGPDigestCalculatorProviderBuilder$1,int,org.bouncycastle.openpgp.operator.jcajce.JcaPGPDigestCalculatorProviderBuilder$DigestOutputStream,java.security.MessageDigest)>(r0, $i0, $r7, $r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b0d5cd113028009cca34a566f603cb63613569a1586081066100dacfc7c80673)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r8.<org.bouncycastle.openpgp.operator.jcajce.JcaPGPDigestCalculatorProviderBuilder$1$1: void <init>(org.bouncycastle.openpgp.operator.jcajce.JcaPGPDigestCalculatorProviderBuilder$1,int,org.bouncycastle.openpgp.operator.jcajce.JcaPGPDigestCalculatorProviderBuilder$DigestOutputStream,java.security.MessageDigest)>(r0, $i0, $r7, $r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b0d5cd113028009cca34a566f603cb63613569a1586081066100dacfc7c80673)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r8.<org.bouncycastle.openpgp.operator.jcajce.JcaPGPDigestCalculatorProviderBuilder$1$1: void <init>(org.bouncycastle.openpgp.operator.jcajce.JcaPGPDigestCalculatorProviderBuilder$1,int,org.bouncycastle.openpgp.operator.jcajce.JcaPGPDigestCalculatorProviderBuilder$DigestOutputStream,java.security.MessageDigest)>(r0, $i0, $r7, $r3)


Findings in Java Class: org.bouncycastle.jcajce.util.DefaultJcaJceHelper

	 in Method: java.security.MessageDigest createMessageDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d5732c60dfdd260fa2584e01723a020872061316c1136df9f421e4c02f29b5db)
			First parameter (with value "MD2") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d5732c60dfdd260fa2584e01723a020872061316c1136df9f421e4c02f29b5db)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d5732c60dfdd260fa2584e01723a020872061316c1136df9f421e4c02f29b5db)
			First parameter (with value "RIPEMD160") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d5732c60dfdd260fa2584e01723a020872061316c1136df9f421e4c02f29b5db)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d5732c60dfdd260fa2584e01723a020872061316c1136df9f421e4c02f29b5db)
			First parameter (with value "TIGER") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d5732c60dfdd260fa2584e01723a020872061316c1136df9f421e4c02f29b5db)
			First parameter (with value "SHA-224") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d5732c60dfdd260fa2584e01723a020872061316c1136df9f421e4c02f29b5db)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


	 in Method: java.security.Signature createSignature(java.lang.String)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #66f26381b2b186fbed59de5f1091ee81e1ff14794fdb45154aac9feab8965356)
			First parameter (with value "Ed25519") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r1 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


	 in Method: java.security.KeyFactory createKeyFactory(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #7f07316255acf6c2b7bca090a4e664f355d182706a163acbdb368bfde642c5ac)
			First parameter (with value "ECDH") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #7f07316255acf6c2b7bca090a4e664f355d182706a163acbdb368bfde642c5ac)
			First parameter (with value "ElGamal") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #7f07316255acf6c2b7bca090a4e664f355d182706a163acbdb368bfde642c5ac)
			First parameter (with value "ECDSA") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #7f07316255acf6c2b7bca090a4e664f355d182706a163acbdb368bfde642c5ac)
			First parameter (with value "EdDSA") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #7f07316255acf6c2b7bca090a4e664f355d182706a163acbdb368bfde642c5ac)
			First parameter (with value "XDH") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)


	 in Method: java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String)
		ConstraintError violating CrySL rule for java.security.AlgorithmParameters (on Object #8d123772629184fc0669650c061426f57f5203aa49ca1fae65ed6e679e158734)
			First parameter (with value "EC") should be any of {AES, DiffieHellman, DH, OAEP, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r1 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>($r2)


	 in Method: javax.crypto.KeyAgreement createKeyAgreement(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #fe7d46332ba22cacd3398f7afba223f16ac2b8c77c223d82fb2fde8216db6ca8)
			First parameter (with value "X25519withSHA256CKDF") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r1 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #fe7d46332ba22cacd3398f7afba223f16ac2b8c77c223d82fb2fde8216db6ca8)
			First parameter (with value "ECCDHwithSHA256CKDF") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r1 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #fe7d46332ba22cacd3398f7afba223f16ac2b8c77c223d82fb2fde8216db6ca8)
			First parameter (with value "ECCDHwithSHA512CKDF") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r1 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #fe7d46332ba22cacd3398f7afba223f16ac2b8c77c223d82fb2fde8216db6ca8)
			First parameter (with value "X25519withSHA384CKDF") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r1 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #fe7d46332ba22cacd3398f7afba223f16ac2b8c77c223d82fb2fde8216db6ca8)
			First parameter (with value "ECCDHwithSHA384CKDF") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r1 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #fe7d46332ba22cacd3398f7afba223f16ac2b8c77c223d82fb2fde8216db6ca8)
			First parameter (with value "X25519withSHA512CKDF") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r1 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)


Findings in Java Class: org.bouncycastle.jcajce.util.NamedJcaJceHelper

	 in Method: java.security.MessageDigest createMessageDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b0d5cd113028009cca34a566f603cb63613569a1586081066100dacfc7c80673)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r3, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b0d5cd113028009cca34a566f603cb63613569a1586081066100dacfc7c80673)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r3, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b0d5cd113028009cca34a566f603cb63613569a1586081066100dacfc7c80673)
			First parameter (with value "TIGER") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r3, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b0d5cd113028009cca34a566f603cb63613569a1586081066100dacfc7c80673)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r3, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b0d5cd113028009cca34a566f603cb63613569a1586081066100dacfc7c80673)
			First parameter (with value "SHA-224") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r3, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b0d5cd113028009cca34a566f603cb63613569a1586081066100dacfc7c80673)
			First parameter (with value "MD2") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r3, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b0d5cd113028009cca34a566f603cb63613569a1586081066100dacfc7c80673)
			First parameter (with value "RIPEMD160") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r3, $r1)


	 in Method: java.security.Signature createSignature(java.lang.String)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #cb6dbedb66709ff933343a7a19443259032632b9744c262530a2bb4dc73beae9)
			First parameter (with value "Ed25519") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r3, $r1)


	 in Method: java.security.KeyFactory createKeyFactory(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #fed0f6bb87cbcef61bb361a7a2af43c9b85514c599a8c1ca47f496063046c25d)
			First parameter (with value "ElGamal") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>($r3, $r1)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #fed0f6bb87cbcef61bb361a7a2af43c9b85514c599a8c1ca47f496063046c25d)
			First parameter (with value "EdDSA") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>($r3, $r1)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #fed0f6bb87cbcef61bb361a7a2af43c9b85514c599a8c1ca47f496063046c25d)
			First parameter (with value "XDH") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>($r3, $r1)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #fed0f6bb87cbcef61bb361a7a2af43c9b85514c599a8c1ca47f496063046c25d)
			First parameter (with value "ECDSA") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>($r3, $r1)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #fed0f6bb87cbcef61bb361a7a2af43c9b85514c599a8c1ca47f496063046c25d)
			First parameter (with value "ECDH") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>($r3, $r1)


	 in Method: java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String)
		ConstraintError violating CrySL rule for java.security.AlgorithmParameters (on Object #56833da8ae3d4d36272676cbcfa817da382e9d7b4afee7b28b5bc0913a1acaac)
			First parameter (with value "EC") should be any of {AES, DiffieHellman, DH, OAEP, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>($r3, $r1)


	 in Method: javax.crypto.KeyAgreement createKeyAgreement(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9fe72c223d129f10a805f89192bd1abb08a988210778834dd27fc86f434bb399)
			First parameter (with value "X25519withSHA512CKDF") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r2 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.lang.String)>($r3, $r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9fe72c223d129f10a805f89192bd1abb08a988210778834dd27fc86f434bb399)
			First parameter (with value "ECCDHwithSHA512CKDF") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r2 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.lang.String)>($r3, $r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9fe72c223d129f10a805f89192bd1abb08a988210778834dd27fc86f434bb399)
			First parameter (with value "ECCDHwithSHA256CKDF") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r2 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.lang.String)>($r3, $r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9fe72c223d129f10a805f89192bd1abb08a988210778834dd27fc86f434bb399)
			First parameter (with value "X25519withSHA384CKDF") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r2 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.lang.String)>($r3, $r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9fe72c223d129f10a805f89192bd1abb08a988210778834dd27fc86f434bb399)
			First parameter (with value "ECCDHwithSHA384CKDF") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r2 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.lang.String)>($r3, $r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9fe72c223d129f10a805f89192bd1abb08a988210778834dd27fc86f434bb399)
			First parameter (with value "X25519withSHA256CKDF") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r2 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.lang.String)>($r3, $r1)


Findings in Java Class: org.bouncycastle.openpgp.operator.jcajce.JcaPGPContentVerifierBuilderProvider$JcaPGPContentVerifierBuilder

	 in Method: org.bouncycastle.openpgp.operator.PGPContentVerifier build(org.bouncycastle.openpgp.PGPPublicKey)
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #66f26381b2b186fbed59de5f1091ee81e1ff14794fdb45154aac9feab8965356)
			Operation on object of type java.security.Signature object not completed. Expected call to verify, update
			at statement: specialinvoke $r11.<org.bouncycastle.openpgp.operator.jcajce.JcaPGPContentVerifierBuilderProvider$JcaPGPContentVerifierBuilder$1: void <init>(org.bouncycastle.openpgp.operator.jcajce.JcaPGPContentVerifierBuilderProvider$JcaPGPContentVerifierBuilder,org.bouncycastle.openpgp.PGPPublicKey,java.security.PublicKey,java.security.Signature,org.bouncycastle.openpgp.operator.PGPDigestCalculator)>(r0, $r1, $r9, $r4, $r7)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #cb6dbedb66709ff933343a7a19443259032632b9744c262530a2bb4dc73beae9)
			Operation on object of type java.security.Signature object not completed. Expected call to verify, update
			at statement: specialinvoke $r11.<org.bouncycastle.openpgp.operator.jcajce.JcaPGPContentVerifierBuilderProvider$JcaPGPContentVerifierBuilder$1: void <init>(org.bouncycastle.openpgp.operator.jcajce.JcaPGPContentVerifierBuilderProvider$JcaPGPContentVerifierBuilder,org.bouncycastle.openpgp.PGPPublicKey,java.security.PublicKey,java.security.Signature,org.bouncycastle.openpgp.operator.PGPDigestCalculator)>(r0, $r1, $r9, $r4, $r7)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #14ead5b41e52dcc0971ab3bbf6947b9738bc0cfa14d4e782ddd7a129f6301c26)
			Operation on object of type java.security.Signature object not completed. Expected call to verify, update
			at statement: specialinvoke $r11.<org.bouncycastle.openpgp.operator.jcajce.JcaPGPContentVerifierBuilderProvider$JcaPGPContentVerifierBuilder$1: void <init>(org.bouncycastle.openpgp.operator.jcajce.JcaPGPContentVerifierBuilderProvider$JcaPGPContentVerifierBuilder,org.bouncycastle.openpgp.PGPPublicKey,java.security.PublicKey,java.security.Signature,org.bouncycastle.openpgp.operator.PGPDigestCalculator)>(r0, $r1, $r9, $r4, $r7)


Findings in Java Class: org.bouncycastle.openpgp.operator.jcajce.JcaJcePGPUtil

	 in Method: javax.crypto.SecretKey makeSymmetricKey(int,byte[])
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #8c9aa0086a276ea95bd97e6427dfb1993cb88ee068d3c86c148e4c06f1e4818d)
			Second parameter (with value "DES") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, $r1)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #8c9aa0086a276ea95bd97e6427dfb1993cb88ee068d3c86c148e4c06f1e4818d)
			Second parameter (with value "SAFER") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, $r1)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #8c9aa0086a276ea95bd97e6427dfb1993cb88ee068d3c86c148e4c06f1e4818d)
			Second parameter (with value "Camellia") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, $r1)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #8c9aa0086a276ea95bd97e6427dfb1993cb88ee068d3c86c148e4c06f1e4818d)
			Second parameter (with value "CAST5") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, $r1)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #8c9aa0086a276ea95bd97e6427dfb1993cb88ee068d3c86c148e4c06f1e4818d)
			Second parameter (with value "IDEA") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, $r1)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #8c9aa0086a276ea95bd97e6427dfb1993cb88ee068d3c86c148e4c06f1e4818d)
			Second parameter (with value "Twofish") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, $r1)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #8c9aa0086a276ea95bd97e6427dfb1993cb88ee068d3c86c148e4c06f1e4818d)
			Second parameter (with value "DESEDE") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, $r1)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #8c9aa0086a276ea95bd97e6427dfb1993cb88ee068d3c86c148e4c06f1e4818d)
			Second parameter (with value "Blowfish") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, $r1)


Findings in Java Class: org.bouncycastle.openpgp.operator.jcajce.OperatorHelper

	 in Method: org.bouncycastle.openpgp.operator.PGPDataDecryptor createDataDecryptor(boolean,int,byte[])
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #c93cc5c87c436ee2f6273748e5a492242e455a41fa1029adc8860caf8480aa75)
			Second parameter (with value "DES") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r3)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #c93cc5c87c436ee2f6273748e5a492242e455a41fa1029adc8860caf8480aa75)
			Second parameter (with value "Camellia") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #c93cc5c87c436ee2f6273748e5a492242e455a41fa1029adc8860caf8480aa75)
			Second parameter (with value "Blowfish") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r3)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #c93cc5c87c436ee2f6273748e5a492242e455a41fa1029adc8860caf8480aa75)
			Second parameter (with value "Twofish") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer25800, $r1)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #c93cc5c87c436ee2f6273748e5a492242e455a41fa1029adc8860caf8480aa75)
			Second parameter (with value "DESEDE") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r3)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #c93cc5c87c436ee2f6273748e5a492242e455a41fa1029adc8860caf8480aa75)
			Second parameter (with value "SAFER") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r3)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #c93cc5c87c436ee2f6273748e5a492242e455a41fa1029adc8860caf8480aa75)
			Second parameter (with value "IDEA") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r3)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #c93cc5c87c436ee2f6273748e5a492242e455a41fa1029adc8860caf8480aa75)
			Second parameter (with value "CAST5") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r3)


Findings in Java Class: org.bouncycastle.openpgp.operator.jcajce.SHA1PGPDigestCalculator

	 in Method: void <init>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a41062f2ab0acb8c13112c8fc9dfa95ead1ec80e6a43e06e3b2e69a64ea9ee7c)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer25805)


Findings in Java Class: org.bouncycastle.openpgp.PGPObjectFactory

	 in Method: java.lang.Object nextObject()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a41062f2ab0acb8c13112c8fc9dfa95ead1ec80e6a43e06e3b2e69a64ea9ee7c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i0 = virtualinvoke $r1.<org.bouncycastle.bcpg.BCPGInputStream: int nextPacketTag()>()


Findings in Java Class: org.bouncycastle.openpgp.PGPPublicKeyEncryptedData

	 in Method: java.io.InputStream getDataStream(org.bouncycastle.openpgp.operator.PublicKeyDataDecryptorFactory)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a41062f2ab0acb8c13112c8fc9dfa95ead1ec80e6a43e06e3b2e69a64ea9ee7c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r11.<org.bouncycastle.openpgp.PGPEncryptedData$TruncatedStream: void <init>(org.bouncycastle.openpgp.PGPEncryptedData,java.io.InputStream)>(r0, $r10)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a41062f2ab0acb8c13112c8fc9dfa95ead1ec80e6a43e06e3b2e69a64ea9ee7c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $z0 = specialinvoke r0.<org.bouncycastle.openpgp.PGPPublicKeyEncryptedData: boolean confirmCheckSum(byte[])>($r5)


Findings in Java Class: org.bouncycastle.util.io.TeeInputStream

	 in Method: int read()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a41062f2ab0acb8c13112c8fc9dfa95ead1ec80e6a43e06e3b2e69a64ea9ee7c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r1.<java.io.OutputStream: void write(int)>($i0)


Findings in Java Class: org.jivesoftware.smack.util.MD5

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ed12ec2cb7cd3918707de22cd9f8d3da7f10f6ebef7d95d0098cbf952493546b)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer26373)


Findings in Java Class: org.bouncycastle.openpgp.operator.jcajce.JcePublicKeyDataDecryptorFactoryBuilder

	 in Method: byte[] decryptSessionData(int,java.security.PrivateKey,byte[][])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f67221e8b24ffcca30ab38daf074c49210c9335dd0405b41923b398eb3511595)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r1, varReplacer25770, $i1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f67221e8b24ffcca30ab38daf074c49210c9335dd0405b41923b398eb3511595)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r9, varReplacer25771, $i0)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #501c10614db02957e3ae13b2c498b5aa91dc860475280637d18024daa86dc06a)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r1, varReplacer25770, $i1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #501c10614db02957e3ae13b2c498b5aa91dc860475280637d18024daa86dc06a)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r9, varReplacer25771, $i0)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ca3ef12264c5513176d477a4de074d29ef2f633740f40c33890cc0dc48fde865)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r1, varReplacer25770, $i1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ca3ef12264c5513176d477a4de074d29ef2f633740f40c33890cc0dc48fde865)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r9, varReplacer25771, $i0)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f67221e8b24ffcca30ab38daf074c49210c9335dd0405b41923b398eb3511595)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: byte[] update(byte[])>($r9)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #501c10614db02957e3ae13b2c498b5aa91dc860475280637d18024daa86dc06a)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: byte[] update(byte[])>($r9)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ca3ef12264c5513176d477a4de074d29ef2f633740f40c33890cc0dc48fde865)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: byte[] update(byte[])>($r9)


	 in Method: byte[] decryptSessionData(org.bouncycastle.openpgp.operator.jcajce.JcaPGPKeyConverter,org.bouncycastle.openpgp.PGPPrivateKey,byte[][])
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #fe7d46332ba22cacd3398f7afba223f16ac2b8c77c223d82fb2fde8216db6ca8)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to javax.crypto.KeyAgreement: byte[] generateSecret(), getInstance
			at statement: $r30 = virtualinvoke $r14.<javax.crypto.KeyAgreement: javax.crypto.SecretKey generateSecret(java.lang.String)>($r13)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9fe72c223d129f10a805f89192bd1abb08a988210778834dd27fc86f434bb399)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to javax.crypto.KeyAgreement: byte[] generateSecret(), getInstance
			at statement: $r30 = virtualinvoke $r14.<javax.crypto.KeyAgreement: javax.crypto.SecretKey generateSecret(java.lang.String)>($r13)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #323c67a49c6311ac9e500e18404027f2724104a4c746fc3693f887d119e44880)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to javax.crypto.KeyAgreement: byte[] generateSecret(), getInstance
			at statement: $r30 = virtualinvoke $r14.<javax.crypto.KeyAgreement: javax.crypto.SecretKey generateSecret(java.lang.String)>($r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r19 = virtualinvoke $r15.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r16)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r40.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #fe7d46332ba22cacd3398f7afba223f16ac2b8c77c223d82fb2fde8216db6ca8)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r14 = virtualinvoke $r12.<org.bouncycastle.openpgp.operator.jcajce.OperatorHelper: javax.crypto.KeyAgreement createKeyAgreement(java.lang.String)>($r13)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9fe72c223d129f10a805f89192bd1abb08a988210778834dd27fc86f434bb399)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r14 = virtualinvoke $r12.<org.bouncycastle.openpgp.operator.jcajce.OperatorHelper: javax.crypto.KeyAgreement createKeyAgreement(java.lang.String)>($r13)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #323c67a49c6311ac9e500e18404027f2724104a4c746fc3693f887d119e44880)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r14 = virtualinvoke $r12.<org.bouncycastle.openpgp.operator.jcajce.OperatorHelper: javax.crypto.KeyAgreement createKeyAgreement(java.lang.String)>($r13)


Findings in Java Class: org.bouncycastle.openpgp.operator.jcajce.JcePBEProtectionRemoverFactory$1

	 in Method: byte[] recoverKeyData(int,byte[],byte[],byte[],int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r16.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f67221e8b24ffcca30ab38daf074c49210c9335dd0405b41923b398eb3511595)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r3, $i0, $i1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #501c10614db02957e3ae13b2c498b5aa91dc860475280637d18024daa86dc06a)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r3, $i0, $i1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ca3ef12264c5513176d477a4de074d29ef2f633740f40c33890cc0dc48fde865)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r3, $i0, $i1)


Findings in Java Class: org.bouncycastle.openpgp.operator.jcajce.JcePBESecretKeyDecryptorBuilder$1

	 in Method: byte[] recoverKeyData(int,byte[],byte[],byte[],int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r16.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f67221e8b24ffcca30ab38daf074c49210c9335dd0405b41923b398eb3511595)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r3, $i0, $i1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #501c10614db02957e3ae13b2c498b5aa91dc860475280637d18024daa86dc06a)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r3, $i0, $i1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ca3ef12264c5513176d477a4de074d29ef2f633740f40c33890cc0dc48fde865)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r3, $i0, $i1)


Findings in Java Class: org.minidns.dnssec.algorithms.JavaSecDigestCalculator

	 in Method: void <init>(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #27f10d36f956bb46cbfe64756f259ad7962bc65acc218ac50caa3410dcd06af5)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


Findings in Java Class: org.minidns.dnssec.algorithms.AlgorithmMap

	 in Method: void <init>()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #27f10d36f956bb46cbfe64756f259ad7962bc65acc218ac50caa3410dcd06af5)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8)


Findings in Java Class: org.minidns.dnssec.algorithms.JavaSecSignatureVerifier

	 in Method: void <init>(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #d6bb4b30cdbee7ff837ce1cc95136a9cd54ac9f5129c558d6320a140033e2fcc)
			First parameter (with value "ECGOST3410") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r3)


	 in Method: boolean verify(byte[],org.minidns.record.RRSIG,org.minidns.record.DNSKEY)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r6.<java.security.Signature: void initVerify(java.security.PublicKey)>($r4)


Findings in Java Class: org.jivesoftware.smack.util.TLSUtils

	 in Method: byte[] getChannelBindingTlsServerEndPoint(javax.net.ssl.SSLSession)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ebe7591f1c8b439a832c4e1943124ae0fd9b8d043d5bf772a9068e23f62297db)
			First parameter (with value "X25519") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r5)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ebe7591f1c8b439a832c4e1943124ae0fd9b8d043d5bf772a9068e23f62297db)
			First parameter (with value "Ed448") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r5)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ebe7591f1c8b439a832c4e1943124ae0fd9b8d043d5bf772a9068e23f62297db)
			First parameter (with value "Ed25519") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r5)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ebe7591f1c8b439a832c4e1943124ae0fd9b8d043d5bf772a9068e23f62297db)
			First parameter (with value "X448") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r5)


Findings in Java Class: org.jivesoftware.smack.util.MAC

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #b1b99c3ecd2846294cf4ba9f0943aa5c1d2aa979ecd700dbb991a78b40716d3e)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r1 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer26544)


	 in Method: byte[] hmacsha1(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #fd119bddf7bff7c740a771878d7002f0aed417d506bc0a8516b317235699b95)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer26545)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer26545)


Findings in Java Class: org.bouncycastle.openpgp.operator.jcajce.JcaPGPKeyConverter

	 in Method: java.security.PublicKey implGetPublicKeyX509(java.lang.String,org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)
		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r4)


Findings in Java Class: org.minidns.dane.X509TrustManagerUtil

	 in Method: javax.net.ssl.X509TrustManager getDefault(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r0)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 94

	CryptoAnalysis found the following violations. For details see description above.
	TypestateError: 17
	IncompleteOperationError: 28
	NeverTypeOfError: 2
	HardCodedError: 5
	RequiredPredicateError: 17
	ConstraintError: 93
=====================================================================
