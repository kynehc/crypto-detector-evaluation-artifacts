0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r6
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r6)
		Method: <l.b.b.l.b.e: l.b.b.l.b.e a()>
		SHA-256: 7698a8b487827c4948e306725e93504919818ef8b8d5cd34ff88363f9273144c
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r1)
		Method: <l.b.b.l.b.m.a: boolean d(java.lang.String)>
		SHA-256: 311e9d51281a2183a3420ef50dbfa1e46a013f27cef7cef28bf0944f3d8b9f2a
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r1.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[])>($r3, varReplacer29215, $i0, $r3)
		Method: <l.b.b.l.b.b: void p()>
		SHA-256: 4a254e6b6b14c28c6236e39293f02e50a0a78235af12e1cc1be1900b4a1860ff
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <k.h: k.h f(java.lang.String)>
		SHA-256: 659a3fd45ae92803cec34256cfa9d2214749202d01fd576cccfc27fe48a2a66f
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <l.b.b.l.b.m.a: javax.crypto.Cipher g(javax.crypto.Cipher,int,l.b.b.l.b.g,javax.crypto.SecretKey,int)>
		SHA-256: 549db64a7604853850c6e3b4cffae98c062e3bd1e9ec9ba3f0a88c51b21c60c1
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r1, varReplacer33153)
		Method: <l.b.b.l.b.d: java.security.MessageDigest c(l.b.b.l.b.k)>
		SHA-256: 36b7d459637fe5adc1bdff1e5d0855d1cd5d336134c3addc15046aa10c1cbb1
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer22719)
		Method: <j.e0.j.f: javax.net.ssl.SSLContext h()>
		SHA-256: 41fe6164e67ddf0efcba0b3f8ea07777d10174eee5c8a9999214a781138226c1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11044)
		Method: <org.apache.poi.hssf.usermodel.HSSFWorkbook: int addPicture(byte[],int)>
		SHA-256: f0227b426f5312c84e00dcde192f972d36e7b93835e3825ea3cf0acfd4e22c92
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer22715, $r2)
		Method: <j.e0.j.b: javax.net.ssl.SSLContext h()>
		SHA-256: 8c79c4b6da9cb42a319e0553f9319b18fcedada9614caa00bedc970eec6dbcfa
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer22713, $r2)
		Method: <j.e0.j.b: javax.net.ssl.SSLContext h()>
		SHA-256: b173fc1625c4827c5959935fb1916903cc93ace93ad5edfc55d6312e6cc6d5ed
		Secure: false
	Object:
		Variable: $r20
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r20 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r19)
		Method: <j.t: void <init>()>
		SHA-256: 739813fea8bcbfc88b5ff31ed8cf611dcc44cb5522e6001b850ee3747023e20
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer22717)
		Method: <j.e0.j.a: javax.net.ssl.SSLContext h()>
		SHA-256: e64c70610e2331d2c2d39c24cf6700fda5704ebab3f18d18feb6a6e87132d5f3
		Secure: false
	Object:
		Variable: $r21
		Type: javax.net.ssl.TrustManager[]
		Statement: $r21 = virtualinvoke $r20.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <j.t: void <init>()>
		SHA-256: c5a534bc4485af90bf52f57c5215ba8c2a0ff0ee33a03a6b2df876369dee17fd
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r6)
		Method: <l.b.b.l.b.e: l.b.b.l.b.e a()>
		SHA-256: ab8ed1b53a4bba9efa4c81c6c8262fabd94dd0c47b08b8888baec29e6b9c8992
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <k.h: k.h f(java.lang.String)>
		SHA-256: 77b52200c47716bb92e5dfc693ee86adb9d7b04608daa779a5c641a010e35da
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <l.b.b.l.b.m.a: boolean d(java.lang.String)>
		SHA-256: c3b44268b26fa4d4acd452263370515f75e3873c53ac8eda5f2648f36641fbac
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.Cipher
		Statement: $r0 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r10)
		Method: <l.b.b.l.b.m.a: javax.crypto.Cipher g(javax.crypto.Cipher,int,l.b.b.l.b.g,javax.crypto.SecretKey,int)>
		SHA-256: feb912156e1b45a936e785908b85c98d61ae5d6d76c07a2aa6d38c23c9030f36
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <org.apache.poi.hssf.usermodel.HSSFWorkbook: int addPicture(byte[],int)>
		SHA-256: 429c115ddb183b32986bb27a117a715bbb22730a5135ea9ae6ea6e138a64d3ab
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, $r10)
		Method: <l.b.b.l.b.m.a: javax.crypto.Cipher g(javax.crypto.Cipher,int,l.b.b.l.b.g,javax.crypto.SecretKey,int)>
		SHA-256: d6e0bc811ba8ac946f60b9c3254130872d6df2b9fbc149f669f587e2aba84156
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer22721)
		Method: <j.e0.j.f: javax.net.ssl.SSLContext h()>
		SHA-256: ea35c746c549da19e1b2cd464175d498344fed86c499bfc24627c15647f0143c
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r1)
		Method: <l.b.b.l.b.m.a: boolean d(java.lang.String)>
		SHA-256: faec2a1b4a44e65282e96fd04ce03a43dda964aee9b1f99e052be9a0bde265c6
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer22718)
		Method: <j.e0.j.a: javax.net.ssl.SSLContext h()>
		SHA-256: 72797889334317bee05a4e38378719f1900054e7a1eb3fc91f1c5afad7aa444d
		Secure: false
	Object:
		Variable: $r10
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, $r10)
		Method: <l.b.b.l.b.m.a: javax.crypto.Cipher g(javax.crypto.Cipher,int,l.b.b.l.b.g,javax.crypto.SecretKey,int)>
		SHA-256: ea3113bd398f6e47c524187ecb51e613ac3ceef68bb5dceeb4fc2d8f9f62bc32
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <org.apache.poi.hssf.usermodel.HSSFWorkbook: int addPicture(byte[],int)>
		SHA-256: d4828f8c8937ba4d45c452bcf3c04f7cbd4c527493732d1909363aa1dbb18c80
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <l.b.b.l.b.m.a: boolean d(java.lang.String)>
		SHA-256: c3b44268b26fa4d4acd452263370515f75e3873c53ac8eda5f2648f36641fbac
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <l.b.b.l.b.d: java.security.MessageDigest c(l.b.b.l.b.k)>
		SHA-256: e5ea721968a8f8bb7ecf8ed1451271fe5db64a0c738b1cb5c646449a958ff7b4
		Secure: true

Findings in Java Class: org.apache.poi.hssf.usermodel.HSSFWorkbook

	 in Method: int addPicture(byte[],int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f0227b426f5312c84e00dcde192f972d36e7b93835e3825ea3cf0acfd4e22c92)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11044)


Findings in Java Class: j.e0.j.b

	 in Method: javax.net.ssl.SSLContext h()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #b173fc1625c4827c5959935fb1916903cc93ace93ad5edfc55d6312e6cc6d5ed)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer22713, $r2)


Findings in Java Class: j.e0.j.a

	 in Method: javax.net.ssl.SSLContext h()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #72797889334317bee05a4e38378719f1900054e7a1eb3fc91f1c5afad7aa444d)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer22718)


Findings in Java Class: j.e0.j.f

	 in Method: javax.net.ssl.SSLContext h()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ea35c746c549da19e1b2cd464175d498344fed86c499bfc24627c15647f0143c)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer22721)


Findings in Java Class: l.b.b.l.b.m.a

	 in Method: javax.crypto.Cipher g(javax.crypto.Cipher,int,l.b.b.l.b.g,javax.crypto.SecretKey,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r0.<javax.crypto.Cipher: void init(int,java.security.Key)>($i0, $r9)

		ForbiddenMethodError violating CrySL rule for javax.crypto.Cipher
			Detected call to forbidden method void init(int,java.security.Key) of class javax.crypto.Cipher. Instead, call method <javax.crypto.Cipher: void init(int,java.security.Key)>.
			at statement: virtualinvoke $r0.<javax.crypto.Cipher: void init(int,java.security.Key)>($i0, $r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, $r10)


	 in Method: boolean d(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r1)


Findings in Java Class: l.b.b.l.b.b

	 in Method: void p()
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #feb912156e1b45a936e785908b85c98d61ae5d6d76c07a2aa6d38c23c9030f36)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: int update(byte[],int,int,byte[])>($r3, varReplacer29221, $i0, $r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #feb912156e1b45a936e785908b85c98d61ae5d6d76c07a2aa6d38c23c9030f36)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[])>($r3, varReplacer29215, $i0, $r3)


Findings in Java Class: l.b.b.l.b.e

	 in Method: l.b.b.l.b.e a()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r6)


Findings in Java Class: j.t

	 in Method: void <init>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r25.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer11566, $r21, varReplacer11566)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r25.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer11566, $r21, varReplacer11566)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r25.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer11566, $r21, varReplacer11566)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r20.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer11570)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 26

	CryptoAnalysis found the following violations. For details see description above.
	ForbiddenMethodError: 1
	ConstraintError: 4
	TypestateError: 2
	RequiredPredicateError: 8
=====================================================================
