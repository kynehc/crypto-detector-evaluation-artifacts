0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer39255, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: b7b6856781a2948aee330e848f2559c13fca44b2c9097c42a952cb5241423f87
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27206)
		Method: <org.matrix.androidsdk.crypto.cryptostore.db.HelperKt: java.lang.String hash(java.lang.String)>
		SHA-256: fcc10e2c35f45d3b4499641a0e3e278fc69655262bf05b9dc4e62805d49220e3
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: byte[] encryptMegolmKeyFile(java.lang.String,java.lang.String,int)>
		SHA-256: 6e55c07a6478a2d9fb7aee3a02a71c715e0300ae8cc0ac3b48fdfda6adf29407
		Secure: true
	Object:
		Variable: $r20
		Type: java.security.KeyPair
		Statement: $r20 = virtualinvoke $r14.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.matrix.androidsdk.core.CompatUtil: org.matrix.androidsdk.core.model.SecretKeyAndVersion getAesGcmLocalProtectionKey(android.content.Context)>
		SHA-256: f88bb1d75dbda2e071e97d28f858a9aed295071023027d5d9c4cdc2b3c2b0f80
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer38298)
		Method: <im.vector.util.SecretStoringUtils: java.lang.Object loadSecureObjectK(java.lang.String,java.io.InputStream,android.content.Context)>
		SHA-256: 6437504aa27d4c29a54b0fe4bd4e833781e8ef9720138f90cab15c0edce717ad
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer21108)
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: java.lang.String decryptMegolmKeyFile(byte[],java.lang.String)>
		SHA-256: b4d123557ea1e9cb08571fbb158e2012c4204421c82e1359ef37546fc98c94be
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer46080)
		Method: <com.facebook.common.util.SecureHashUtil: java.lang.String makeSHA1HashBase64(byte[])>
		SHA-256: c6939bf28871c812daca0c7e5feba64eb393895a75b3f7f696dc6b0bdb70c41d
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r9.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r2, $r5)
		Method: <im.vector.util.SecretStoringUtils: byte[] rsaDecrypt(java.lang.String,java.io.InputStream,android.content.Context)>
		SHA-256: 594217b15972bacdb4d6f7503cae731351a45d6b20db520cbbefaa53a2717eae
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r8.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: java.lang.String decryptMegolmKeyFile(byte[],java.lang.String)>
		SHA-256: ed090628cbcecf2d43fecc86c7c2eaf9be6e49d26e96d1d06158c00cac92a330
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer38287)
		Method: <im.vector.util.SecretStoringUtils: java.lang.Object loadSecureObjectM(java.lang.String,java.io.InputStream)>
		SHA-256: dd3f485b52dead68adabeaa108a5b0dd004d6831931480bc423de4068ce24fc2
		Secure: false
	Object:
		Variable: $r30
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r30.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r2, $r13)
		Method: <im.vector.util.SecretStoringUtils: java.lang.Object loadSecureObjectOldNotGood(java.lang.String,java.io.InputStream)>
		SHA-256: beda8e744e04ab08d97f3894f97654ab9afaf85354736fbd72e08b2af74f3b01
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer21103)
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: java.lang.String decryptMegolmKeyFile(byte[],java.lang.String)>
		SHA-256: 12e284a980bc7e547453b3c2656d9d3e23431d28c66167e95c7432cc15394dd0
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer21210)
		Method: <org.matrix.androidsdk.crypto.MXEncryptedAttachments: java.io.InputStream decryptAttachment(java.io.InputStream,org.matrix.androidsdk.crypto.model.crypto.EncryptedFileInfo)>
		SHA-256: c0f5e941c866907830b3b31f3c5c3f7ab94e341124183c51005e03937443c8d4
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer45823)
		Method: <org.matrix.androidsdk.core.CompatUtil: java.io.InputStream createCipherInputStream(java.io.InputStream,android.content.Context)>
		SHA-256: db83c0c18664af5c517a722a12dccafc0356288be65da31509628add9cf03aa7
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.SecretKey
		Statement: $r10 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r9)
		Method: <im.vector.util.SecretStoringUtils: void saveSecureObjectOldNotGood(java.lang.String,java.io.OutputStream,java.lang.Object)>
		SHA-256: acddefaf9b964915354aa8b223737423fbd6661286e42c1c78cd7050318a3941
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <com.dropbox.core.http.SSLConfig: java.security.KeyStore loadKeyStore(java.lang.String)>
		SHA-256: fd8f957ba45ed77f29cb9c7a8db87636b6ee8f52809a0624c25d29a0335bb140
		Secure: false
	Object:
		Variable: varReplacer71417
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer71417)
		Method: <im.vector.util.SecretStoringUtils: void saveSecureObjectK(java.lang.String,java.io.OutputStream,java.lang.Object,android.content.Context)>
		SHA-256: f1293f5b19c752cee0280059456dfb1f88316aacb667d302ef98a4ce522a78fa
		Secure: false
	Object:
		Variable: $r24
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r24.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer38294)
		Method: <im.vector.util.SecretStoringUtils: java.lang.Object loadSecureObjectK(java.lang.String,java.io.InputStream,android.content.Context)>
		SHA-256: 6120257f316760906e71d54fc29a70795199252b3ca4bf1847ccfd56179f71a5
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: byte[] encryptMegolmKeyFile(java.lang.String,java.lang.String,int)>
		SHA-256: 80e11c9da66b1d3cb14b3a82d8a067fd6b226ac8b9bd178d0bb8ad5eebb59d9b
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r4)
		Method: <org.matrix.androidsdk.crypto.MXEncryptedAttachments: org.matrix.androidsdk.crypto.MXEncryptedAttachments$EncryptionResult encryptAttachment(java.io.InputStream,java.lang.String)>
		SHA-256: 33acaeb26541b6147f40016f613065db790dd3cb0ad6c7241784e6cdb24433c
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.SecretKey
		Statement: $r11 = virtualinvoke $r8.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r10)
		Method: <im.vector.util.SecretStoringUtils: java.lang.Object loadSecureObjectOldNotGood(java.lang.String,java.io.InputStream)>
		SHA-256: fc942502261bfa0e824d4c04fa85b3f34a4e18fc768b6565ea2859aee283807e
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.matrix.androidsdk.crypto.cryptostore.db.HelperKt: java.lang.String hash(java.lang.String)>
		SHA-256: 9231abc89b70370bcc7f6170a364ecd136265e13366bef067305d3fa18ea40aa
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer29286)
		Method: <im.vector.util.SecretStoringUtils$keyStore$2: java.security.KeyStore invoke()>
		SHA-256: 995765c383ca626013bee87b95509ad8f92ada9f791173d21a4fde9396299fb3
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r11.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r0, $r4)
		Method: <org.matrix.androidsdk.core.CompatUtil: java.io.OutputStream createCipherOutputStream(java.io.OutputStream,android.content.Context)>
		SHA-256: 1b22ae0d452cc422d01938af1df6ea6aac3d631eb57e443b3f0b512d9804090b
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: virtualinvoke $r6.<java.security.SecureRandom: void nextBytes(byte[])>($r5)
		Method: <org.matrix.androidsdk.core.CompatUtil: java.io.OutputStream createCipherOutputStream(java.io.OutputStream,android.content.Context)>
		SHA-256: 7e00252267d6e411ae8d61fa76160581e1a140a3661d333f5a2ebc59e3d76cbf
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: dea0af93b06734ae35228a014521e6e031131dd2b357359826afa61f9a6de1b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18909)
		Method: <org.matrix.androidsdk.db.MXMediaDownloadWorkerTask: java.lang.String uniqueId(java.lang.String)>
		SHA-256: 73e1ba833b0fac1218c3f3a3c0a659dd880a9df32fd64bae9ed0608ce685bc65
		Secure: false
	Object:
		Variable: $r23
		Type: java.security.SecureRandom
		Statement: specialinvoke $r23.<java.security.SecureRandom: void <init>()>()
		Method: <org.matrix.androidsdk.ssl.CertUtil: android.util.Pair newPinnedSSLSocketFactory(org.matrix.androidsdk.HomeServerConnectionConfig)>
		SHA-256: 55ca5b7cb889b8fbe3e2d338a5bbcb548c15a1fce87fd0735797a8f666f1480d
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.matrix.androidsdk.crypto.MXEncryptedAttachments: org.matrix.androidsdk.crypto.MXEncryptedAttachments$EncryptionResult encryptAttachment(java.io.InputStream,java.lang.String)>
		SHA-256: d30d90dd1dd58e499d2d67fd716bc88653695f7932ad9199eecb2af0be9a2cb7
		Secure: true
	Object:
		Variable: varReplacer21323
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer21323)
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: byte[] encryptMegolmKeyFile(java.lang.String,java.lang.String,int)>
		SHA-256: fd6ca31f62cb83b4b6f64989e926903ab4d74de73c66aeb9fbc2f7057975b226
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer71421)
		Method: <im.vector.util.SecretStoringUtils: void saveSecureObjectOldNotGood(java.lang.String,java.io.OutputStream,java.lang.Object)>
		SHA-256: eecd8c0fbb082c788ff454015d22a40bfeef41a7dfe715ca67f33c650db1ca8d
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.matrix.androidsdk.crypto.MXEncryptedAttachments: java.io.InputStream decryptAttachment(java.io.InputStream,org.matrix.androidsdk.crypto.model.crypto.EncryptedFileInfo)>
		SHA-256: 482ebf371079d232e9d99026f21c4a14ca04dfdab3fb3af39bcf5e69f996e80b
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: java.lang.String decryptMegolmKeyFile(byte[],java.lang.String)>
		SHA-256: 82f78de1bfd5d0eecda457824f65c0e59073b097ca339d60b82dd581479fa7b6
		Secure: false
	Object:
		Variable: varReplacer21103
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer21103)
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: java.lang.String decryptMegolmKeyFile(byte[],java.lang.String)>
		SHA-256: 2b4642112a54062c56105837cf9ce4c075b82dd94dd287e21ed9cffb3797045e
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer34777)
		Method: <org.matrix.androidsdk.core.CompatUtil: javax.crypto.SecretKey readKeyApiL(android.content.SharedPreferences,java.security.KeyStore)>
		SHA-256: aa2260999cb952323a6b86cc7459e11278d155b1350c3c8fe258de0829c543e4
		Secure: false
	Object:
		Variable: $r16
		Type: java.security.KeyPairGenerator
		Statement: $r16 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer56865, varReplacer56866)
		Method: <im.vector.util.SecretStoringUtils: java.security.KeyStore$PrivateKeyEntry getOrGenerateKeyPairForAlias(java.lang.String,android.content.Context)>
		SHA-256: bae9c94345cf88eea2b6541b62f3011eb45c8d2b708ad59e41696b66a41787d2
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer71409)
		Method: <im.vector.util.SecretStoringUtils: void saveSecureObjectK(java.lang.String,java.io.OutputStream,java.lang.Object,android.content.Context)>
		SHA-256: 7a65d2c4a49449a16a8f7964185d07cf4af53d626107fe39da8dbba435e06f2a
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer77391)
		Method: <com.dropbox.core.http.SSLConfig: javax.net.ssl.X509TrustManager createTrustManager(java.security.KeyStore)>
		SHA-256: d3cd0f8d9b3699cb9a6704a5ce9a8bd0891a470fbe4bfa4cda98211f76c10aa0
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer76891)
		Method: <im.vector.util.SecretStoringUtils: byte[] rsaEncrypt(java.lang.String,byte[],android.content.Context)>
		SHA-256: db5a327c087871141cce7fe9fb984b663d9a6b362d1d455177ee67d60c8139f4
		Secure: false
	Object:
		Variable: $r29
		Type: java.security.spec.RSAKeyGenParameterSpec
		Statement: specialinvoke $r29.<java.security.spec.RSAKeyGenParameterSpec: void <init>(int,java.math.BigInteger)>(varReplacer34760, $r0)
		Method: <org.matrix.androidsdk.core.CompatUtil: org.matrix.androidsdk.core.model.SecretKeyAndVersion getAesGcmLocalProtectionKey(android.content.Context)>
		SHA-256: 42320b4c75a91d62de4b5e541ec33b0a29d8289d979dcaec8f08878bbe4b7243
		Secure: true
	Object:
		Variable: varReplacer71430
		Type: int
		Statement: specialinvoke $r8.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r4, varReplacer71429, varReplacer71430)
		Method: <im.vector.util.SecretStoringUtils: void saveSecureObjectOldNotGood(java.lang.String,java.io.OutputStream,java.lang.Object)>
		SHA-256: eced078d99243bb753a9e7ae680c796930a38a459b0ca0690206863e778c68af
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <org.matrix.androidsdk.ssl.CertUtil: byte[] generateFingerprint(java.security.cert.X509Certificate,java.lang.String)>
		SHA-256: cf8d94ee0ece329cce46bb98b2d31743bfc5ee1b35708b4bcf1795102f207286
		Secure: false
	Object:
		Variable: $r24
		Type: javax.crypto.Cipher
		Statement: $r24 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer34744)
		Method: <org.matrix.androidsdk.core.CompatUtil: org.matrix.androidsdk.core.model.SecretKeyAndVersion getAesGcmLocalProtectionKey(android.content.Context)>
		SHA-256: f16fec5d38f8c27955a3d56d3de6e26fd1b9f0cd8e9b92a87719da053dc2eaa
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer21319)
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: byte[] encryptMegolmKeyFile(java.lang.String,java.lang.String,int)>
		SHA-256: 5fcdb5f430c62552b93a48c673634c9f6801c3b7d7c81a83d9e08ea2ec609985
		Secure: false
	Object:
		Variable: $r25
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r25.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r9, $r5, varReplacer38308, varReplacer38309)
		Method: <im.vector.util.SecretStoringUtils: java.lang.Object loadSecureObjectOldNotGood(java.lang.String,java.io.InputStream)>
		SHA-256: a222dad55f45cc29c7d5f6f4fe76be52cafc2687678c0f535db7b6d52a4e527
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r4)
		Method: <org.matrix.androidsdk.crypto.MXEncryptedAttachments: org.matrix.androidsdk.crypto.MXEncryptedAttachments$EncryptionResult encryptAttachment(java.io.InputStream,java.lang.String)>
		SHA-256: 33acaeb26541b6147f40016f613065db790dd3cb0ad6c7241784e6cdb24433c
		Secure: true
	Object:
		Variable: varReplacer34759
		Type: java.lang.String
		Statement: specialinvoke $r31.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r21, varReplacer34759)
		Method: <org.matrix.androidsdk.core.CompatUtil: org.matrix.androidsdk.core.model.SecretKeyAndVersion getAesGcmLocalProtectionKey(android.content.Context)>
		SHA-256: a2d367fc9151a15c1fd46b758f8711fd7806bc5f0c63ad97b35a0731bafd4761
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer21220)
		Method: <org.matrix.androidsdk.crypto.MXEncryptedAttachments: java.io.InputStream decryptAttachment(java.io.InputStream,org.matrix.androidsdk.crypto.model.crypto.EncryptedFileInfo)>
		SHA-256: a376a9639d83380e708e6fd0da9bdb5086dfac2f23f57ea4ddfcf3d0445f151b
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer21021)
		Method: <org.matrix.androidsdk.crypto.MXEncryptedAttachments: org.matrix.androidsdk.crypto.MXEncryptedAttachments$EncryptionResult encryptAttachment(java.io.InputStream,java.lang.String)>
		SHA-256: 73975f43e0210ae78d684a37972ba738e66788f2c5a673311fb748ff9677a50f
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer39257, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 3f024269b0789da6fd292cbe8ff08e271bbb49fea1a4346a91849828d87d0e4b
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.KeyGenerator
		Statement: $r7 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer48779, varReplacer48780)
		Method: <im.vector.util.SecretStoringUtils: javax.crypto.SecretKey getOrGenerateSymmetricKeyForAlias(java.lang.String)>
		SHA-256: 8945e0f31e123cb77e6c60edc9bb53bf0cdf44b33b997ef0c0af1b763b0f47e0
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.Key
		Statement: $r4 = virtualinvoke $r1.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer34780, varReplacer34781)
		Method: <org.matrix.androidsdk.core.CompatUtil: javax.crypto.SecretKey readKeyApiL(android.content.SharedPreferences,java.security.KeyStore)>
		SHA-256: f796cc14def5e28b1f972576faf60d848ff28b2d9b38bac793e7134b631a82ff
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <im.vector.util.SecretStoringUtils: javax.crypto.SecretKey getOrGenerateSymmetricKeyForAlias(java.lang.String)>
		SHA-256: b554ea942d1037224753529342410b118c7333a5df21e4189d744ad645377899
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer21116)
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: java.lang.String decryptMegolmKeyFile(byte[],java.lang.String)>
		SHA-256: 9965349572d7b8867fbb7e7dfae6b4e4d002df4650826b680b3ecc53f6a6eda2
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <org.matrix.androidsdk.core.CompatUtil: java.io.InputStream createCipherInputStream(java.io.InputStream,android.content.Context)>
		SHA-256: 37269f26f949d6c8003a553b2b80d45b930c25a65cd8207595ad2a8e149f898f
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer74814)
		Method: <org.matrix.androidsdk.ssl.CertUtil: android.util.Pair newPinnedSSLSocketFactory(org.matrix.androidsdk.HomeServerConnectionConfig)>
		SHA-256: 5490c906f1d92397b87f4769ac1f02060467e30434480156ffc2c0e247e8dabd
		Secure: false
	Object:
		Variable: varReplacer38294
		Type: java.lang.String
		Statement: specialinvoke $r24.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer38294)
		Method: <im.vector.util.SecretStoringUtils: java.lang.Object loadSecureObjectK(java.lang.String,java.io.InputStream,android.content.Context)>
		SHA-256: 6b5b37c7551fd21417f63bd215dd4cb1d5e85f49a1eaad7e2ae0c91504a4edd3
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer79169)
		Method: <com.facebook.stetho.websocket.WebSocketHandler: java.lang.String generateServerKey(java.lang.String)>
		SHA-256: 1791ab2157335a7266d03e3abf0661399bbfb64b8de7adb46d08768aeb6f5947
		Secure: false
	Object:
		Variable: $r31
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r31.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r21, varReplacer34759)
		Method: <org.matrix.androidsdk.core.CompatUtil: org.matrix.androidsdk.core.model.SecretKeyAndVersion getAesGcmLocalProtectionKey(android.content.Context)>
		SHA-256: 8717ac7ab609fe3c6b05faed3f902ae6cc34d553dc4f50c02eb0461ae51d141c
		Secure: false
	Object:
		Variable: $r23
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r23.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer38290, $r7)
		Method: <im.vector.util.SecretStoringUtils: java.lang.Object loadSecureObjectK(java.lang.String,java.io.InputStream,android.content.Context)>
		SHA-256: fca79acb8c8468efa286fc6ec7649ba067cfeff42cd70951a201e4d5d2357f5
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.SSLContext
		Statement: $r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer74817)
		Method: <org.matrix.androidsdk.ssl.CertUtil: android.util.Pair newPinnedSSLSocketFactory(org.matrix.androidsdk.HomeServerConnectionConfig)>
		SHA-256: b8873e9eeb59cffea24755acd965b483ae7d77fbe380041d2e977b178bbcfcce
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r6 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r3)
		Method: <org.matrix.androidsdk.ssl.CertUtil: android.util.Pair newPinnedSSLSocketFactory(org.matrix.androidsdk.HomeServerConnectionConfig)>
		SHA-256: 4d9c0f57941c8033c07a810d4e682acd0b41675008c7c411687d987446fe3801
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer21655)
		Method: <org.matrix.androidsdk.crypto.keysbackup.KeysBackupPasswordKt: byte[] deriveKey(java.lang.String,java.lang.String,int,org.matrix.androidsdk.core.listeners.ProgressListener)>
		SHA-256: c3352abdf0ce31e071dfde589e0b7e8d1ec3e29ca27b466c24e44c22fd0f98e3
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer77868)
		Method: <org.matrix.androidsdk.ssl.TLSSocketFactory: void <init>(javax.net.ssl.TrustManager[],java.util.List)>
		SHA-256: c611879146d687463166ae6ba5b826a64afd37557dea711c696cb29b25b64060
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: virtualinvoke $r3.<javax.crypto.Mac: void doFinal(byte[],int)>($r8, varReplacer21656)
		Method: <org.matrix.androidsdk.crypto.keysbackup.KeysBackupPasswordKt: byte[] deriveKey(java.lang.String,java.lang.String,int,org.matrix.androidsdk.core.listeners.ProgressListener)>
		SHA-256: 3b1f5fd0c1b5022357b7786d81fb6cea971748024d93e77f2551551c484dc26b
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r11.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r2, $r7)
		Method: <im.vector.util.SecretStoringUtils: java.lang.Object loadSecureObjectM(java.lang.String,java.io.InputStream)>
		SHA-256: 1dcdeca39944e655a40fca80f2217c48d49d1c621cbb3f01dfb707aa4402ef51
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.matrix.androidsdk.ssl.TLSSocketFactory: void <init>(javax.net.ssl.TrustManager[],java.util.List)>
		SHA-256: c5c961a5cce10d649c3ddb802daec8e77a0892b2d62a96f7d9a0ecd599c11d50
		Secure: true
	Object:
		Variable: $r12
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r12.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r13, $r8)
		Method: <im.vector.util.SecretStoringUtils: void saveSecureObjectK(java.lang.String,java.io.OutputStream,java.lang.Object,android.content.Context)>
		SHA-256: 90e21d652283bd580be5381541bffedb4a7db01aa47d99032cea72e4afbaee40
		Secure: false
	Object:
		Variable: varReplacer21655
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer21655)
		Method: <org.matrix.androidsdk.crypto.keysbackup.KeysBackupPasswordKt: byte[] deriveKey(java.lang.String,java.lang.String,int,org.matrix.androidsdk.core.listeners.ProgressListener)>
		SHA-256: 1413d69e321cb912cafced424be1dea02f719a256cedc0111d96763711c3b78c
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r5 = virtualinvoke $r12.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: byte[] encryptMegolmKeyFile(java.lang.String,java.lang.String,int)>
		SHA-256: c846e58662af45d3a68372ffce26de97e56828ad777621fda1034b263b3b504a
		Secure: false
	Object:
		Variable: varReplacer71421
		Type: java.lang.String
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer71421)
		Method: <im.vector.util.SecretStoringUtils: void saveSecureObjectOldNotGood(java.lang.String,java.io.OutputStream,java.lang.Object)>
		SHA-256: fdcf8eb27dc29132652b9a559ffd7d73dfe25bcc862984c0af9e27b94280bc0
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r11.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer45820, $r5)
		Method: <org.matrix.androidsdk.core.CompatUtil: java.io.InputStream createCipherInputStream(java.io.InputStream,android.content.Context)>
		SHA-256: 5991fe941d253331bc8942bbdeba014c93324be928a03f2fa637bc9b417c36e9
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r12.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: byte[] encryptMegolmKeyFile(java.lang.String,java.lang.String,int)>
		SHA-256: 150ca5796d69117bcbee7e38f51288a5aa81e1388640a933c5b8b1c114a24a06
		Secure: false
	Object:
		Variable: $r25
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r25.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r2, $r9)
		Method: <im.vector.util.SecretStoringUtils: java.lang.Object loadSecureObjectK(java.lang.String,java.io.InputStream,android.content.Context)>
		SHA-256: d58be576b1ca8cf555e51d4dc7615558719331590bd4bcc5f91caa7bc35fec41
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer21316)
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: byte[] encryptMegolmKeyFile(java.lang.String,java.lang.String,int)>
		SHA-256: 4c602b10289888c9760d51ef1c2ff0ef3b39a2036cc2a6b5ecd32e81e6b7ac9
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer21323)
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: byte[] encryptMegolmKeyFile(java.lang.String,java.lang.String,int)>
		SHA-256: cbbea85729d5276d0783e2f11e4fcaf242959bbd5d7b6e61f6e9cb2d78834044
		Secure: false
	Object:
		Variable: $r13
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r13.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r0, $r6)
		Method: <org.matrix.androidsdk.core.CompatUtil: java.io.InputStream createCipherInputStream(java.io.InputStream,android.content.Context)>
		SHA-256: 8927a69be15b9dde131d4ea1e362b88f2a528a70b9519624c4edaeb4671c18eb
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer75207)
		Method: <com.bumptech.glide.load.engine.cache.SafeKeyGenerator$1: com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer create()>
		SHA-256: d2051d6237f51dd9bf643491f0bf7abfa7bc46ca8e02ff12978e68f472d44139
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer21569)
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: byte[] deriveKeys(byte[],int,java.lang.String)>
		SHA-256: aa68f5fb1d922368b9f24624c8dd5994dedc3b48b8b541ac0fc9e3b13fddcfcc
		Secure: false
	Object:
		Variable: $r22
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r22.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <im.vector.util.SecretStoringUtils: java.lang.Object loadSecureObjectK(java.lang.String,java.io.InputStream,android.content.Context)>
		SHA-256: 562157126a53560d233b46919a88c5613948cda0b1da5be62ac788e4b5d7c911
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer39254)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 1d3560c9ac19517b46432be7d57f6eaee412981e7dc7d4eb22af25914e570daa
		Secure: false
	Object:
		Variable: $r28
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r28.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer38311, $r6)
		Method: <im.vector.util.SecretStoringUtils: java.lang.Object loadSecureObjectOldNotGood(java.lang.String,java.io.InputStream)>
		SHA-256: aed6d5eee1aea678a5d4487dfc235e1541612783c5748cd7277d85cc0f1f487e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer39259)
		Method: <okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: d42621ea7919f56001cf61f21f60049156bcc165dea066c92cb3705debafe02d
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer38284, $r6)
		Method: <im.vector.util.SecretStoringUtils: java.lang.Object loadSecureObjectM(java.lang.String,java.io.InputStream)>
		SHA-256: f40be54763c19d98bae6bc22a925f07f88b0c2d311bd2c86efda74909ce10027
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r10.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r11, $r5)
		Method: <im.vector.util.SecretStoringUtils: byte[] rsaEncrypt(java.lang.String,byte[],android.content.Context)>
		SHA-256: d18ef038d0b96c6e727af254f98902992ad601eb02fb230305c7a7d404ebc8db
		Secure: false
	Object:
		Variable: varReplacer38309
		Type: int
		Statement: specialinvoke $r25.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r9, $r5, varReplacer38308, varReplacer38309)
		Method: <im.vector.util.SecretStoringUtils: java.lang.Object loadSecureObjectOldNotGood(java.lang.String,java.io.InputStream)>
		SHA-256: ff91649d601e44fc943e0b027ede4eba5e9e7505acf4533d1ad98aba86868a2
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.MessageDigest
		Statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer21015)
		Method: <org.matrix.androidsdk.crypto.MXEncryptedAttachments: org.matrix.androidsdk.crypto.MXEncryptedAttachments$EncryptionResult encryptAttachment(java.io.InputStream,java.lang.String)>
		SHA-256: 6f413db3bf3b2bc0685b37d209466e744cae9024df26ebd20fedc02c671fc8b
		Secure: true
	Object:
		Variable: varReplacer21316
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer21316)
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: byte[] encryptMegolmKeyFile(java.lang.String,java.lang.String,int)>
		SHA-256: b9e20fa78af7981c68805fbbb32c71abde7081d791f291cc2ec99c453e9ee245
		Secure: false
	Object:
		Variable: varReplacer38301
		Type: java.lang.String
		Statement: specialinvoke $r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer38301)
		Method: <im.vector.util.SecretStoringUtils: java.lang.Object loadSecureObjectOldNotGood(java.lang.String,java.io.InputStream)>
		SHA-256: 4541ca169636f53db23e19f8a8911529c09e9a9cc29dabe1ee86c21c7b96b93d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.matrix.androidsdk.crypto.MXEncryptedAttachments: org.matrix.androidsdk.crypto.MXEncryptedAttachments$EncryptionResult encryptAttachment(java.io.InputStream,java.lang.String)>
		SHA-256: 69702f3e495717c17320a0f17b9c22cd435eac82f1d1a07422bf4e48cbc65133
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: a79a1700ae9d8d44f13ea218f751e7024f8f1222b1b2ae17cdbab7b56d352181
		Secure: false
	Object:
		Variable: $r27
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r27.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <im.vector.util.SecretStoringUtils: java.lang.Object loadSecureObjectOldNotGood(java.lang.String,java.io.InputStream)>
		SHA-256: 9bc49d4fa40f464f2286c301b2f04062678f37005a5089bc43d490cf21b13236
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.Mac
		Statement: $r12 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer21314)
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: byte[] encryptMegolmKeyFile(java.lang.String,java.lang.String,int)>
		SHA-256: a4a2aad40565d1eaa1f9160d62d14068805b4fe1373a2d4b403113465e04d1e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.common.util.SecureHashUtil: java.lang.String makeSHA1HashBase64(byte[])>
		SHA-256: c6bb4832d15267321b64294e36949b1fc4731b855443ce4eba77a8ad3eaece90
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.matrix.androidsdk.core.CompatUtil: java.security.SecureRandom getPrng()>
		SHA-256: 1d23afad63ce2eb2768c6cb3d1fc5c0408167474d0610bf5c994940684c3f282
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <org.matrix.androidsdk.db.MXMediaDownloadWorkerTask: java.lang.String uniqueId(java.lang.String)>
		SHA-256: 9517a269832e09245d4641ba6ff4a49a16f3d02754cf0dc915eccfc3e2ad8dc4
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer56279)
		Method: <com.facebook.soloader.SoLoader$1: java.lang.String getLibHash(java.lang.String)>
		SHA-256: 2ab58a1f39f8456095addb509f67f930405f5c1c6739673a5672a2f48ed6273c
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r4, varReplacer71429, varReplacer71430)
		Method: <im.vector.util.SecretStoringUtils: void saveSecureObjectOldNotGood(java.lang.String,java.io.OutputStream,java.lang.Object)>
		SHA-256: 25d1e259ecdd71c79811016ff64e3bfc170bb58cb13aa7efbade0b00a1787f7e
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <org.matrix.androidsdk.crypto.MXEncryptedAttachments: org.matrix.androidsdk.crypto.MXEncryptedAttachments$EncryptionResult encryptAttachment(java.io.InputStream,java.lang.String)>
		SHA-256: a0d598ca5ccd1ca69dd4bdd4e55536f8ab4c34e72ac9be742873dccbe8705784
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.Cipher
		Statement: $r13 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer71431)
		Method: <im.vector.util.SecretStoringUtils: void saveSecureObjectOldNotGood(java.lang.String,java.io.OutputStream,java.lang.Object)>
		SHA-256: eeac213d8b4a7d78f685e40c72bb7ef41257d625fe83286ab1b6a3a48b102934
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Mac
		Statement: $r8 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer21109)
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: java.lang.String decryptMegolmKeyFile(byte[],java.lang.String)>
		SHA-256: e605b79b9667f650b0faeb721b61e8ccf27d23ecf6ca9fb4d4d21046799649c8
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer34735)
		Method: <org.matrix.androidsdk.core.CompatUtil: java.io.OutputStream createCipherOutputStream(java.io.OutputStream,android.content.Context)>
		SHA-256: 30f8dcec4c725ed63b4492f16c2c35073f5794c46b1277d743225ffc4d7f4fcc
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: virtualinvoke $r3.<javax.crypto.Mac: void doFinal(byte[],int)>($r6, varReplacer21575)
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: byte[] deriveKeys(byte[],int,java.lang.String)>
		SHA-256: 3c2f7d292f63a24e6017a5be687b585a2b12cb027c3f006aadac5e64f28fd064
		Secure: false
	Object:
		Variable: varReplacer21569
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer21569)
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: byte[] deriveKeys(byte[],int,java.lang.String)>
		SHA-256: 58d83e262e58f305a33966985352b06661d841a5d83f153fb4e1b72321dfe0a6
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer48822)
		Method: <im.vector.util.SecretStoringUtils: byte[] rsaDecrypt(java.lang.String,java.io.InputStream,android.content.Context)>
		SHA-256: 14fdd87f8f04436c635d536d3014cfd031577f91988efbee6b4b29b3ae60298a
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)
		Method: <org.matrix.androidsdk.crypto.MXEncryptedAttachments: java.io.InputStream decryptAttachment(java.io.InputStream,org.matrix.androidsdk.crypto.model.crypto.EncryptedFileInfo)>
		SHA-256: 9dded1ab2bae5e952354e3fbabb40a003ad70f5d7b8fdffb22dff66f8100e4bf
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer39253)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: f98c52fcaf9d5458c59e160de7fc32e10f15bd72cbfd2ff486d344ebcbeb6c3b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer39258)
		Method: <okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: e584848e1263ee24f6a2e0a6d427f08f2661badee3b742ebfb419add74461c4a
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.soloader.SoLoader$1: java.lang.String getLibHash(java.lang.String)>
		SHA-256: 26d49b7832ffb1f396fefaaad1e0cc9b7179d3333b93d2d7f5e518586883a188
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.dropbox.core.http.SSLConfig: javax.net.ssl.X509TrustManager createTrustManager(java.security.KeyStore)>
		SHA-256: e6657104b26171136914be329f9fcb4d4d8e07d01fc8bd7632fbb62ba4e5e2cc
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.cert.CertificateFactory
		Statement: $r2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer77409)
		Method: <com.dropbox.core.http.SSLConfig: void loadKeyStore(java.security.KeyStore,java.io.InputStream)>
		SHA-256: 88aead8f5cfc327a14e71509320497380ef21653d600f86136f5a349a041af56
		Secure: false
	Object:
		Variable: varReplacer21021
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer21021)
		Method: <org.matrix.androidsdk.crypto.MXEncryptedAttachments: org.matrix.androidsdk.crypto.MXEncryptedAttachments$EncryptionResult encryptAttachment(java.io.InputStream,java.lang.String)>
		SHA-256: e8ce2a18edd670cc4389d2b4b34db043240a81e64673c0bd6b8dc728ad06401c
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.SecureRandom
		Statement: specialinvoke $r9.<java.security.SecureRandom: void <init>()>()
		Method: <im.vector.util.SecretStoringUtils: void <clinit>()>
		SHA-256: 8179dff99d9e19e7ca1075125b6adcba41dce36875394bdeb342f2b6baa421db
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer71404)
		Method: <im.vector.util.SecretStoringUtils: void saveSecureObjectM(java.lang.String,java.io.OutputStream,java.lang.Object)>
		SHA-256: 3d53c7cb5f1a305dca20d62086e7fe0591911c481205c451520451d74c51f896
		Secure: true
	Object:
		Variable: $r13
		Type: java.security.MessageDigest
		Statement: $r13 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer21233)
		Method: <org.matrix.androidsdk.crypto.MXEncryptedAttachments: java.io.InputStream decryptAttachment(java.io.InputStream,org.matrix.androidsdk.crypto.model.crypto.EncryptedFileInfo)>
		SHA-256: 2016035b9b1fc92bf209dadb0eb2248cb385b8360bc830468c1f92c727f97633
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer71417)
		Method: <im.vector.util.SecretStoringUtils: void saveSecureObjectK(java.lang.String,java.io.OutputStream,java.lang.Object,android.content.Context)>
		SHA-256: 83e8ba9e259138d923750426a669aa0b09315b4abeee6770b5cfe3a330d5919a
		Secure: false
	Object:
		Variable: $r13
		Type: javax.crypto.Cipher
		Statement: $r13 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer38307)
		Method: <im.vector.util.SecretStoringUtils: java.lang.Object loadSecureObjectOldNotGood(java.lang.String,java.io.InputStream)>
		SHA-256: 3f294b0c842e286fd473ed7db1d51e0b5f313acc420f178c4422af85cbd7f7ec
		Secure: false
	Object:
		Variable: varReplacer21108
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer21108)
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: java.lang.String decryptMegolmKeyFile(byte[],java.lang.String)>
		SHA-256: 6d0f55b4bb55176b55acca0fa0b9ae82f2add8bb2907f0f9553086f94dd12d5
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer58261)
		Method: <com.facebook.react.modules.network.TLSSocketFactory: void <init>()>
		SHA-256: 7abf3e17e76d0ac7dcbc0b5a6af3511da89348c6cb49462e9774ff8faa871f5b
		Secure: false
	Object:
		Variable: $r26
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer38301)
		Method: <im.vector.util.SecretStoringUtils: java.lang.Object loadSecureObjectOldNotGood(java.lang.String,java.io.InputStream)>
		SHA-256: ed5b3ae8220427a7a7bc1c3f72df5319d17e8fb454cc877b20c52a97bd9e0e9c
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer21576)
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: byte[] deriveKeys(byte[],int,java.lang.String)>
		SHA-256: 2e23972a3e02251961158ddb5a870e2e5c4d3aeb5ca84ece28764d2762417154
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: byte[] encryptMegolmKeyFile(java.lang.String,java.lang.String,int)>
		SHA-256: 4df5e789cdbce428707faffeed00d31c5849a397536482ef744ed17c2f47982c
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <org.matrix.androidsdk.core.CompatUtil: java.io.OutputStream createCipherOutputStream(java.io.OutputStream,android.content.Context)>
		SHA-256: b7230fe032c288543bc9cc31568b07585a7e35ff228e68ffd8bb9f259217c4b4
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer21022)
		Method: <org.matrix.androidsdk.crypto.MXEncryptedAttachments: org.matrix.androidsdk.crypto.MXEncryptedAttachments$EncryptionResult encryptAttachment(java.io.InputStream,java.lang.String)>
		SHA-256: 22c1c9438b7a41f1787e4f2c5e65a3c5d7c41d7c73e93b4e70a61deab65a9128
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.KeyGenerator
		Statement: $r9 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer34764, varReplacer34765)
		Method: <org.matrix.androidsdk.core.CompatUtil: org.matrix.androidsdk.core.model.SecretKeyAndVersion getAesGcmLocalProtectionKey(android.content.Context)>
		SHA-256: 30baf0ba5a55330c2ffe1b0b9de70a61069873f3ebd06f1921452f7c551d2722
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer71426)
		Method: <im.vector.util.SecretStoringUtils: void saveSecureObjectOldNotGood(java.lang.String,java.io.OutputStream,java.lang.Object)>
		SHA-256: 8997fe5407b1d9b3917146317a567d4603b39316539dc500024ceba28b4c905b
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.Key
		Statement: $r6 = virtualinvoke $r3.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer34757, varReplacer34758)
		Method: <org.matrix.androidsdk.core.CompatUtil: org.matrix.androidsdk.core.model.SecretKeyAndVersion getAesGcmLocalProtectionKey(android.content.Context)>
		SHA-256: 5f12aa9cb024526bc2e4e6ab4b723d180eb806ab1748fe96749edf226cad3f4d
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.stetho.websocket.WebSocketHandler: java.lang.String generateServerKey(java.lang.String)>
		SHA-256: 3a839c53a2e73deca07bbaf6104910cef5aa9fd6a0877ab2fecd0b969b6bc376
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.KeyPairGenerator
		Statement: $r14 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer34753, varReplacer34754)
		Method: <org.matrix.androidsdk.core.CompatUtil: org.matrix.androidsdk.core.model.SecretKeyAndVersion getAesGcmLocalProtectionKey(android.content.Context)>
		SHA-256: 13f1de5ac66be9dfaf2dea0948b1c03ced70b47f19860371ca02a2b5dc5a781f
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer77385)
		Method: <com.dropbox.core.http.SSLConfig: javax.net.ssl.SSLContext createSSLContext(javax.net.ssl.TrustManager[])>
		SHA-256: 54e830c86f43e6fd955f023359824b4c3ef6cbeca2f644daa254660fafae71c9
		Secure: false
	Object:
		Variable: $r8
		Type: javax.net.ssl.TrustManager[]
		Statement: $r8 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.matrix.androidsdk.ssl.CertUtil: android.util.Pair newPinnedSSLSocketFactory(org.matrix.androidsdk.HomeServerConnectionConfig)>
		SHA-256: 605b79517b19f5aa20452c97f9cc3156b2bb4269effe50f6e9701c2a4a1c036a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <org.matrix.androidsdk.ssl.CertUtil: byte[] generateFingerprint(java.security.cert.X509Certificate,java.lang.String)>
		SHA-256: 92f4ee16ee0202ce034c2857ad0e0020325618705ea4344def70d10cf862d32e
		Secure: false
	Object:
		Variable: $r7
		Type: java.lang.Object
		Statement: $r7 = virtualinvoke $r9.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.matrix.androidsdk.core.CompatUtil: org.matrix.androidsdk.core.model.SecretKeyAndVersion getAesGcmLocalProtectionKey(android.content.Context)>
		SHA-256: df1850e2af81d85f1564f0d9dcd3a3d74a169c88ba3ea9ce2611e44969879b98
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r4)
		Method: <org.matrix.androidsdk.crypto.MXMegolmExportEncryption: byte[] encryptMegolmKeyFile(java.lang.String,java.lang.String,int)>
		SHA-256: 107c46a6eb9bb818ac62299f3d7aac2fd8a956ac15df34ec2f891cf505c987a
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.cert.CertificateFactory
		Statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer84315)
		Method: <okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)>
		SHA-256: 4ccdaf9c3f82b792d0d3dd2bf8427bfa6d33c3844a39975fc343b7825d90a1f8
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r0)
		Method: <okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: a8764d384e0e6acd4407dba0e4c2025660362892494036c03c4b52a40e75c66b
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKeyFactory
		Statement: $r8 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer38306)
		Method: <im.vector.util.SecretStoringUtils: java.lang.Object loadSecureObjectOldNotGood(java.lang.String,java.io.InputStream)>
		SHA-256: 2dd38579520ad4b399e9ea76b84fee7775c74d7e4c970b358fbb7cd3fcfed52d
		Secure: false
	Object:
		Variable: varReplacer21210
		Type: java.lang.String
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer21210)
		Method: <org.matrix.androidsdk.crypto.MXEncryptedAttachments: java.io.InputStream decryptAttachment(java.io.InputStream,org.matrix.androidsdk.crypto.model.crypto.EncryptedFileInfo)>
		SHA-256: 7cdd3dcc83fb8ab926dd0e2d5100a9eab09953f99f679bcaf4fb41dcc70825c6
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer21659)
		Method: <org.matrix.androidsdk.crypto.keysbackup.KeysBackupPasswordKt: byte[] deriveKey(java.lang.String,java.lang.String,int,org.matrix.androidsdk.core.listeners.ProgressListener)>
		SHA-256: f1e62977a701bd19cdfa93979773518f17edd8dacbe67614cca1448d57d21648
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer34763)
		Method: <org.matrix.androidsdk.core.CompatUtil: org.matrix.androidsdk.core.model.SecretKeyAndVersion getAesGcmLocalProtectionKey(android.content.Context)>
		SHA-256: a1d737989fe1a78de96a3fd9775bafe329ede6706fec3145c2984b02e329d80d
		Secure: false

Findings in Java Class: org.matrix.androidsdk.db.MXMediaDownloadWorkerTask

	 in Method: java.lang.String uniqueId(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #73e1ba833b0fac1218c3f3a3c0a659dd880a9df32fd64bae9ed0608ce685bc65)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18909)


Findings in Java Class: org.matrix.androidsdk.crypto.MXEncryptedAttachments

	 in Method: org.matrix.androidsdk.crypto.MXEncryptedAttachments$EncryptionResult encryptAttachment(java.io.InputStream,java.lang.String)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #22c1c9438b7a41f1787e4f2c5e65a3c5d7c41d7c73e93b4e70a61deab65a9128)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r11 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r10, varReplacer21030, $i1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer21021)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #22c1c9438b7a41f1787e4f2c5e65a3c5d7c41d7c73e93b4e70a61deab65a9128)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r10 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal()>()

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer21006, $r7, $r8)


	 in Method: java.io.InputStream decryptAttachment(java.io.InputStream,org.matrix.androidsdk.crypto.model.crypto.EncryptedFileInfo)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer21210)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer21213, $r11, $r12)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #a376a9639d83380e708e6fd0da9bdb5086dfac2f23f57ea4ddfcf3d0445f151b)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r9 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] update(byte[],int,int)>($r6, varReplacer21218, $i0)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #a376a9639d83380e708e6fd0da9bdb5086dfac2f23f57ea4ddfcf3d0445f151b)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r6 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal()>()

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #2016035b9b1fc92bf209dadb0eb2248cb385b8360bc830468c1f92c727f97633)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r6 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.matrix.androidsdk.crypto.MXMegolmExportEncryption

	 in Method: java.lang.String decryptMegolmKeyFile(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Mac: void init(java.security.Key)>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer21108)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #9965349572d7b8867fbb7e7dfae6b4e4d002df4650826b680b3ecc53f6a6eda2)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r0 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] update(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer21112, $r6, $r10)


	 in Method: byte[] encryptMegolmKeyFile(java.lang.String,java.lang.String,int)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #5fcdb5f430c62552b93a48c673634c9f6801c3b7d7c81a83d9e08ea2ec609985)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r8 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] update(byte[])>($r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r12.<javax.crypto.Mac: void init(java.security.Key)>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer21316)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer21317, $r7, $r9)


	 in Method: byte[] deriveKeys(byte[],int,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>($r4)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #2e23972a3e02251961158ddb5a870e2e5c4d3aeb5ca84ece28764d2762417154)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r3.<javax.crypto.Mac: void update(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer21569)


Findings in Java Class: org.matrix.androidsdk.crypto.keysbackup.KeysBackupPasswordKt

	 in Method: byte[] deriveKey(java.lang.String,java.lang.String,int,org.matrix.androidsdk.core.listeners.ProgressListener)
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #c3352abdf0ce31e071dfde589e0b7e8d1ec3e29ca27b466c24e44c22fd0f98e3)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer21655)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer21655)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #f1e62977a701bd19cdfa93979773518f17edd8dacbe67614cca1448d57d21648)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r3.<javax.crypto.Mac: void update(byte[])>($r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #f1e62977a701bd19cdfa93979773518f17edd8dacbe67614cca1448d57d21648)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer21659)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #f1e62977a701bd19cdfa93979773518f17edd8dacbe67614cca1448d57d21648)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>($r7)


Findings in Java Class: org.matrix.androidsdk.crypto.cryptostore.db.HelperKt

	 in Method: java.lang.String hash(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fcc10e2c35f45d3b4499641a0e3e278fc69655262bf05b9dc4e62805d49220e3)
			First parameter (with value "md5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27206)


Findings in Java Class: im.vector.util.SecretStoringUtils$keyStore$2

	 in Method: java.security.KeyStore invoke()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #995765c383ca626013bee87b95509ad8f92ada9f791173d21a4fde9396299fb3)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer29286)


Findings in Java Class: org.matrix.androidsdk.data.store.MXFileStore

	 in Method: boolean writeObject(java.lang.String,java.io.File,java.lang.Object)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #1b22ae0d452cc422d01938af1df6ea6aac3d631eb57e443b3f0b512d9804090b)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: $r11 = staticinvoke <org.matrix.androidsdk.core.CompatUtil: java.util.zip.GZIPOutputStream createGzipOutputStream(java.io.OutputStream)>($r10)


	 in Method: java.lang.Object readObject(java.lang.String,java.io.File)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #8927a69be15b9dde131d4ea1e362b88f2a528a70b9519624c4edaeb4671c18eb)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r18.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r10)


Findings in Java Class: org.matrix.androidsdk.crypto.cryptostore.MXFileCryptoStore

	 in Method: boolean storeObject(java.lang.Object,java.io.File,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #1b22ae0d452cc422d01938af1df6ea6aac3d631eb57e443b3f0b512d9804090b)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: $r13 = staticinvoke <org.matrix.androidsdk.core.CompatUtil: java.util.zip.GZIPOutputStream createGzipOutputStream(java.io.OutputStream)>($r12)


	 in Method: java.lang.Object loadObject(java.io.File,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #8927a69be15b9dde131d4ea1e362b88f2a528a70b9519624c4edaeb4671c18eb)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r15.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r6)


Findings in Java Class: org.matrix.androidsdk.core.CompatUtil

	 in Method: org.matrix.androidsdk.core.model.SecretKeyAndVersion getAesGcmLocalProtectionKey(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r31.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r21, varReplacer34759)

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedRSA
			at statement: virtualinvoke $r14.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r19)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r24.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer34769, $r25)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f16fec5d38f8c27955a3d56d3de6e26fd1b9f0cd8e9b92a87719da053dc2eaa)
			First parameter (with value "RSA/NONE/PKCS1Padding") should be any of RSA/{Empty String, ECB}
			at statement: $r24 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer34744)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #a1d737989fe1a78de96a3fd9775bafe329ede6706fec3145c2984b02e329d80d)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer34763)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f16fec5d38f8c27955a3d56d3de6e26fd1b9f0cd8e9b92a87719da053dc2eaa)
			Unexpected call to method wrap on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r21 = virtualinvoke $r24.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>($r23)


	 in Method: javax.crypto.SecretKey readKeyApiL(android.content.SharedPreferences,java.security.KeyStore)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #aa2260999cb952323a6b86cc7459e11278d155b1350c3c8fe258de0829c543e4)
			First parameter (with value "RSA/NONE/PKCS1Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer34777)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer34772, $r5)


	 in Method: java.io.InputStream createCipherInputStream(java.io.InputStream,android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer45824, $r8, $r15)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #db83c0c18664af5c517a722a12dccafc0356288be65da31509628add9cf03aa7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer45823)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer45824, $r8, $r15)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r11.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer45820, $r5)


	 in Method: java.io.OutputStream createCipherOutputStream(java.io.OutputStream,android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer34736, $r3, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer34739, $r3)


Findings in Java Class: im.vector.notifications.NotificationDrawerManager

	 in Method: java.util.ArrayList loadEventInfo()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #1dcdeca39944e655a40fca80f2217c48d49d1c621cbb3f01dfb707aa4402ef51)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $r8 = virtualinvoke $r6.<im.vector.util.SecretStoringUtils: java.lang.Object loadSecureSecret(java.io.InputStream,java.lang.String,android.content.Context)>($r7, varReplacer5832, $r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #d58be576b1ca8cf555e51d4dc7615558719331590bd4bcc5f91caa7bc35fec41)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $r8 = virtualinvoke $r6.<im.vector.util.SecretStoringUtils: java.lang.Object loadSecureSecret(java.io.InputStream,java.lang.String,android.content.Context)>($r7, varReplacer5832, $r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #beda8e744e04ab08d97f3894f97654ab9afaf85354736fbd72e08b2af74f3b01)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $r8 = virtualinvoke $r6.<im.vector.util.SecretStoringUtils: java.lang.Object loadSecureSecret(java.io.InputStream,java.lang.String,android.content.Context)>($r7, varReplacer5832, $r2)


Findings in Java Class: im.vector.util.SecretStoringUtils

	 in Method: java.lang.Object loadSecureObjectK(java.lang.String,java.io.InputStream,android.content.Context)
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #6120257f316760906e71d54fc29a70795199252b3ca4bf1847ccfd56179f71a5)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r24.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer38294)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r22.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer38297, $r11, $r10)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer38297, $r11, $r10)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r24.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer38294)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r23.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer38290, $r7)


	 in Method: java.lang.Object loadSecureObjectOldNotGood(java.lang.String,java.io.InputStream)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r27.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r25.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r9, $r5, varReplacer38308, varReplacer38309)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r13.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer38303, $r15, $r14)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer38301)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r11 = virtualinvoke $r8.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r10)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a222dad55f45cc29c7d5f6f4fe76be52cafc2687678c0f535db7b6d52a4e527)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r25.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r9, $r5, varReplacer38308, varReplacer38309)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a222dad55f45cc29c7d5f6f4fe76be52cafc2687678c0f535db7b6d52a4e527)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r25.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r9, $r5, varReplacer38308, varReplacer38309)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a222dad55f45cc29c7d5f6f4fe76be52cafc2687678c0f535db7b6d52a4e527)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r11 = virtualinvoke $r8.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r10)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r13.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer38303, $r15, $r14)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r28.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer38311, $r6)


	 in Method: byte[] rsaDecrypt(java.lang.String,java.io.InputStream,android.content.Context)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #594217b15972bacdb4d6f7503cae731351a45d6b20db520cbbefaa53a2717eae)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>($r10, varReplacer48820)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #14fdd87f8f04436c635d536d3014cfd031577f91988efbee6b4b29b3ae60298a)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer48822)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer48821, $r7)


	 in Method: void saveSecureObjectM(java.lang.String,java.io.OutputStream,java.lang.Object)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #3d53c7cb5f1a305dca20d62086e7fe0591911c481205c451520451d74c51f896)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r13 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r13)


	 in Method: void saveSecureObjectK(java.lang.String,java.io.OutputStream,java.lang.Object,android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer71415, $r9)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #90e21d652283bd580be5381541bffedb4a7db01aa47d99032cea72e4afbaee40)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: specialinvoke $r14.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r13)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer71417)


	 in Method: void saveSecureObjectOldNotGood(java.lang.String,java.io.OutputStream,java.lang.Object)
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #25d1e259ecdd71c79811016ff64e3bfc170bb58cb13aa7efbade0b00a1787f7e)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r10 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r10 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r9)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #25d1e259ecdd71c79811016ff64e3bfc170bb58cb13aa7efbade0b00a1787f7e)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r8.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r4, varReplacer71429, varReplacer71430)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #25d1e259ecdd71c79811016ff64e3bfc170bb58cb13aa7efbade0b00a1787f7e)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r8.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r4, varReplacer71429, varReplacer71430)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #eeac213d8b4a7d78f685e40c72bb7ef41257d625fe83286ab1b6a3a48b102934)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r20 = virtualinvoke $r13.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r20)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r4, varReplacer71429, varReplacer71430)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer71421)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r13.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer71418, $r14)


	 in Method: byte[] rsaEncrypt(java.lang.String,byte[],android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer76894, $r8)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #db5a327c087871141cce7fe9fb984b663d9a6b362d1d455177ee67d60c8139f4)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer76891)

		RequiredPredicateError violating CrySL rule for javax.crypto.CipherOutputStream
			Second parameter was not properly generated as generatedCipher
			at statement: specialinvoke $r10.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r11, $r5)


	 in Method: java.lang.Object loadSecureObjectM(java.lang.String,java.io.InputStream)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer38284, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer38288, $r9, $r10)


	 in Method: java.security.KeyStore$PrivateKeyEntry getOrGenerateKeyPairForAlias(java.lang.String,android.content.Context)
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedRSA
			at statement: virtualinvoke $r16.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r17)


Findings in Java Class: okhttp3.internal.platform.Platform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #1d3560c9ac19517b46432be7d57f6eaee412981e7dc7d4eb22af25914e570daa)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer39254)


Findings in Java Class: okhttp3.internal.platform.ConscryptPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #b7b6856781a2948aee330e848f2559c13fca44b2c9097c42a952cb5241423f87)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer39255, $r2)


Findings in Java Class: okhttp3.internal.platform.AndroidPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #d42621ea7919f56001cf61f21f60049156bcc165dea066c92cb3705debafe02d)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer39259)


Findings in Java Class: com.facebook.common.util.SecureHashUtil

	 in Method: java.lang.String makeSHA1HashBase64(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c6939bf28871c812daca0c7e5feba64eb393895a75b3f7f696dc6b0bdb70c41d)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer46080)


Findings in Java Class: com.facebook.soloader.SoLoader$1

	 in Method: java.lang.String getLibHash(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #2ab58a1f39f8456095addb509f67f930405f5c1c6739673a5672a2f48ed6273c)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2ab58a1f39f8456095addb509f67f930405f5c1c6739673a5672a2f48ed6273c)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer56279)


Findings in Java Class: com.facebook.react.modules.network.TLSSocketFactory

	 in Method: void <init>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer58258, varReplacer58258, varReplacer58258)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #7abf3e17e76d0ac7dcbc0b5a6af3511da89348c6cb49462e9774ff8faa871f5b)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer58261)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer58258, varReplacer58258, varReplacer58258)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer58258, varReplacer58258, varReplacer58258)


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: org.matrix.androidsdk.ssl.CertUtil

	 in Method: android.util.Pair newPinnedSSLSocketFactory(org.matrix.androidsdk.HomeServerConnectionConfig)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #5490c906f1d92397b87f4769ac1f02060467e30434480156ffc2c0e247e8dabd)
			Operation on object of type javax.net.ssl.TrustManagerFactory object not completed. Expected call to init
			at statement: $r1 = null

		IncompleteOperationError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #5490c906f1d92397b87f4769ac1f02060467e30434480156ffc2c0e247e8dabd)
			Operation on object of type javax.net.ssl.TrustManagerFactory object not completed. Expected call to init
			at statement: $r1 = $r6

		IncompleteOperationError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #4d9c0f57941c8033c07a810d4e682acd0b41675008c7c411687d987446fe3801)
			Operation on object of type javax.net.ssl.TrustManagerFactory object not completed. Expected call to init
			at statement: $r1 = null

		IncompleteOperationError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #4d9c0f57941c8033c07a810d4e682acd0b41675008c7c411687d987446fe3801)
			Operation on object of type javax.net.ssl.TrustManagerFactory object not completed. Expected call to init
			at statement: $r1 = $r6

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer74815, $r8, $r17)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #b8873e9eeb59cffea24755acd965b483ae7d77fbe380041d2e977b178bbcfcce)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer74817)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #5490c906f1d92397b87f4769ac1f02060467e30434480156ffc2c0e247e8dabd)
			Operation on object of type javax.net.ssl.TrustManagerFactory object not completed. Expected call to init
			at statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer74814)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #4d9c0f57941c8033c07a810d4e682acd0b41675008c7c411687d987446fe3801)
			Operation on object of type javax.net.ssl.TrustManagerFactory object not completed. Expected call to init
			at statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer74814)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer74815, $r8, $r17)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer74816)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #5490c906f1d92397b87f4769ac1f02060467e30434480156ffc2c0e247e8dabd)
			Operation on object of type javax.net.ssl.TrustManagerFactory object not completed. Expected call to init
			at statement: $r8 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()

		IncompleteOperationError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #4d9c0f57941c8033c07a810d4e682acd0b41675008c7c411687d987446fe3801)
			Operation on object of type javax.net.ssl.TrustManagerFactory object not completed. Expected call to init
			at statement: $r8 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer74815, $r8, $r17)


	 in Method: byte[] generateFingerprint(java.security.cert.X509Certificate,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #92f4ee16ee0202ce034c2857ad0e0020325618705ea4344def70d10cf862d32e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: com.bumptech.glide.manager.RequestTracker

	 in Method: void restartRequests()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d2051d6237f51dd9bf643491f0bf7abfa7bc46ca8e02ff12978e68f472d44139)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r5.<com.bumptech.glide.request.Request: void begin()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d2051d6237f51dd9bf643491f0bf7abfa7bc46ca8e02ff12978e68f472d44139)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $z0 = interfaceinvoke $r5.<com.bumptech.glide.request.Request: boolean isCleared()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d2051d6237f51dd9bf643491f0bf7abfa7bc46ca8e02ff12978e68f472d44139)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r5)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d2051d6237f51dd9bf643491f0bf7abfa7bc46ca8e02ff12978e68f472d44139)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $z0 = interfaceinvoke $r5.<com.bumptech.glide.request.Request: boolean isComplete()>()


	 in Method: void resumeRequests()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d2051d6237f51dd9bf643491f0bf7abfa7bc46ca8e02ff12978e68f472d44139)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $z0 = interfaceinvoke $r5.<com.bumptech.glide.request.Request: boolean isComplete()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d2051d6237f51dd9bf643491f0bf7abfa7bc46ca8e02ff12978e68f472d44139)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $z0 = interfaceinvoke $r5.<com.bumptech.glide.request.Request: boolean isRunning()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d2051d6237f51dd9bf643491f0bf7abfa7bc46ca8e02ff12978e68f472d44139)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r5.<com.bumptech.glide.request.Request: void begin()>()


Findings in Java Class: com.bumptech.glide.RequestBuilder

	 in Method: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d2051d6237f51dd9bf643491f0bf7abfa7bc46ca8e02ff12978e68f472d44139)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r6.<com.bumptech.glide.request.Request: void begin()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d2051d6237f51dd9bf643491f0bf7abfa7bc46ca8e02ff12978e68f472d44139)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r8.<com.bumptech.glide.RequestManager: void track(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.Request)>($r1, $r5)


Findings in Java Class: com.bumptech.glide.request.ErrorRequestCoordinator

	 in Method: void begin()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d2051d6237f51dd9bf643491f0bf7abfa7bc46ca8e02ff12978e68f472d44139)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $z0 = interfaceinvoke $r1.<com.bumptech.glide.request.Request: boolean isRunning()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d2051d6237f51dd9bf643491f0bf7abfa7bc46ca8e02ff12978e68f472d44139)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r1.<com.bumptech.glide.request.Request: void begin()>()


Findings in Java Class: com.bumptech.glide.request.ThumbnailRequestCoordinator

	 in Method: void begin()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d2051d6237f51dd9bf643491f0bf7abfa7bc46ca8e02ff12978e68f472d44139)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r1.<com.bumptech.glide.request.Request: void begin()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d2051d6237f51dd9bf643491f0bf7abfa7bc46ca8e02ff12978e68f472d44139)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r1.<com.bumptech.glide.request.Request: void begin()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d2051d6237f51dd9bf643491f0bf7abfa7bc46ca8e02ff12978e68f472d44139)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $z0 = interfaceinvoke $r1.<com.bumptech.glide.request.Request: boolean isRunning()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d2051d6237f51dd9bf643491f0bf7abfa7bc46ca8e02ff12978e68f472d44139)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $z0 = interfaceinvoke $r1.<com.bumptech.glide.request.Request: boolean isRunning()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d2051d6237f51dd9bf643491f0bf7abfa7bc46ca8e02ff12978e68f472d44139)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $z0 = interfaceinvoke $r1.<com.bumptech.glide.request.Request: boolean isComplete()>()


Findings in Java Class: com.bumptech.glide.load.engine.EngineJob$CallLoadFailed

	 in Method: void run()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d2051d6237f51dd9bf643491f0bf7abfa7bc46ca8e02ff12978e68f472d44139)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r2.<com.bumptech.glide.load.engine.EngineJob: void callCallbackOnLoadFailed(com.bumptech.glide.request.ResourceCallback)>($r4)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d2051d6237f51dd9bf643491f0bf7abfa7bc46ca8e02ff12978e68f472d44139)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $z0 = virtualinvoke $r3.<com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors: boolean contains(com.bumptech.glide.request.ResourceCallback)>($r4)


Findings in Java Class: com.dropbox.core.http.SSLConfig

	 in Method: javax.net.ssl.SSLContext createSSLContext(javax.net.ssl.TrustManager[])
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer77386, $r0, varReplacer77386)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer77386, $r0, varReplacer77386)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer77386, $r0, varReplacer77386)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #54e830c86f43e6fd955f023359824b4c3ef6cbeca2f644daa254660fafae71c9)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer77385)


	 in Method: javax.net.ssl.X509TrustManager createTrustManager(java.security.KeyStore)
		ConstraintError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #d3cd0f8d9b3699cb9a6704a5ce9a8bd0891a470fbe4bfa4cda98211f76c10aa0)
			First parameter (with value "X509") should be any of {PKIX, SunX509}
			at statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer77391)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r1)


	 in Method: java.security.KeyStore loadKeyStore(java.lang.String)
		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #fd8f957ba45ed77f29cb9c7a8db87636b6ee8f52809a0624c25d29a0335bb140)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer77402, $r3)


	 in Method: java.util.List deserializeCertificates(java.security.cert.CertificateFactory,java.io.InputStream)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #88aead8f5cfc327a14e71509320497380ef21653d600f86136f5a349a041af56)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r7 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r2)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #88aead8f5cfc327a14e71509320497380ef21653d600f86136f5a349a041af56)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r7 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r2)


	 in Method: void loadKeyStore(java.security.KeyStore,java.io.InputStream)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #88aead8f5cfc327a14e71509320497380ef21653d600f86136f5a349a041af56)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r3 = staticinvoke <com.dropbox.core.http.SSLConfig: java.util.List deserializeCertificates(java.security.cert.CertificateFactory,java.io.InputStream)>($r2, $r1)


Findings in Java Class: org.matrix.androidsdk.ssl.TLSSocketFactory

	 in Method: void <init>(javax.net.ssl.TrustManager[],java.util.List)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer77869, $r1, $r4)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #c611879146d687463166ae6ba5b826a64afd37557dea711c696cb29b25b64060)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer77868)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer77869, $r1, $r4)


Findings in Java Class: com.facebook.stetho.websocket.WebSocketHandler

	 in Method: java.lang.String generateServerKey(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1791ab2157335a7266d03e3abf0661399bbfb64b8de7adb46d08768aeb6f5947)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer79169)


Findings in Java Class: okhttp3.Cache$Entry

	 in Method: java.util.List readCertificateList(okio.BufferedSource)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #4ccdaf9c3f82b792d0d3dd2bf8427bfa6d33c3844a39975fc343b7825d90a1f8)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer84315)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #4ccdaf9c3f82b792d0d3dd2bf8427bfa6d33c3844a39975fc343b7825d90a1f8)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #4ccdaf9c3f82b792d0d3dd2bf8427bfa6d33c3844a39975fc343b7825d90a1f8)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer27852, $r7, varReplacer27852)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer27852, $r7, varReplacer27852)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer27852, $r7, varReplacer27852)


Findings in Java Class: okhttp3.internal.Util

	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer27855)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 141

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 22
	IncompleteOperationError: 44
	RequiredPredicateError: 67
	TypestateError: 15
	HardCodedError: 3
	NeverTypeOfError: 4
=====================================================================
