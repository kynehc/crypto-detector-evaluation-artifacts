0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <n0.l1.k.o: javax.net.ssl.X509TrustManager n()>
		SHA-256: 7698f1637082f8bbf2cefcf351fc0819405acb987d52101f1cfe277688aa4bf1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer39048, $r2)
		Method: <n0.l1.k.i: javax.net.ssl.SSLSocketFactory m(javax.net.ssl.X509TrustManager)>
		SHA-256: 49d00a1b0641d29ae1336bb57190098b54e893f132ea9ef49545d91c919e2865
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <n0.l1.k.q: javax.net.ssl.X509TrustManager n()>
		SHA-256: cced37495665192227dca8a3fe5c204b2a648b59473eeca61bbb6ed40a6c72da
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <o0.m: o0.m b(java.lang.String)>
		SHA-256: 5a2f00d215496137a81706f878a765dbedeef9d1f6a9113bf193e768ead979df
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer39025, varReplacer39026)
		Method: <n0.l1.k.f: javax.net.ssl.X509TrustManager n()>
		SHA-256: 8ee9b35dbeb4ecacc520622d0f39ea7120b9ca03da1ff7714e2912321979e766
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <n0.l1.k.f: javax.net.ssl.X509TrustManager n()>
		SHA-256: f02688b061b5f41b076ec22d7557c3209eef3d48824721ed240b338736c5cf86
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer40723)
		Method: <n0.l1.k.q: javax.net.ssl.SSLContext l()>
		SHA-256: bee6444ed69db28b6856e5e982a29871d80ef13e72b47dbb0c9309d97e8239db
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <o0.m: o0.m b(java.lang.String)>
		SHA-256: e26d212840697d43eaee34113892e4cf6684c2ae22c40d7c16f8bf0df492dc02
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer36023)
		Method: <h0.b.a.x.w.d1.o: java.lang.Object a()>
		SHA-256: fdf248b942ac110060710c1ae972ef3cd9cc5608c101149d90a64fdd1cc2bf9d
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer40724, $r2)
		Method: <n0.l1.k.f: javax.net.ssl.SSLContext l()>
		SHA-256: eab17555362777e7fd74cc086d491baac822a4f9948056bcc373c285377af887
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer40729, $r2)
		Method: <n0.l1.k.o: javax.net.ssl.SSLContext l()>
		SHA-256: 124d0f90b4cfc6cfca0a05cc649c3e88c0c49cd4b77633a4f410800753d9a88e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <n0.l1.k.i: javax.net.ssl.X509TrustManager n()>
		SHA-256: ce87d770092ecc1568f480a28a99461c8a74e6cb3c1284ce9f8a952363f6682e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <n0.l1.k.o: javax.net.ssl.X509TrustManager n()>
		SHA-256: d67623eb95d8102d7592186f8ee8bf1acee4b58ad0397711702b737e36d4e7e7
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <n0.l1.k.q: javax.net.ssl.X509TrustManager n()>
		SHA-256: c52f69eeb483478c34af250336de6958820a8629e3da92160296778290802d05
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <n0.l1.k.i: javax.net.ssl.X509TrustManager n()>
		SHA-256: 17455c73fc830ebc41e99d58a1b9683175acbffa9b5c1990e0c046cc63793c37
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <o0.b0: o0.m b(java.lang.String)>
		SHA-256: 1bf0d3f925bbe26c36f6fd77f481cd886fc2efaa04326d721920f11a439f86ac
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <o0.b0: o0.m b(java.lang.String)>
		SHA-256: 793d6bc7eab313de746cad0e37ddb9466e60288b21ef2ea3e216560aa8551c7b
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer40727, $r2)
		Method: <n0.l1.k.i: javax.net.ssl.SSLContext l()>
		SHA-256: ba669b6c338d53f75a9049cc84b1515d8499596817f667225c7d7a69468ff
		Secure: false

Findings in Java Class: n0.l1.k.i

	 in Method: javax.net.ssl.SSLSocketFactory m(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer39046, $r6, varReplacer39046)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer39046, $r6, varReplacer39046)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer39046, $r6, varReplacer39046)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #49d00a1b0641d29ae1336bb57190098b54e893f132ea9ef49545d91c919e2865)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer39048, $r2)


	 in Method: javax.net.ssl.SSLContext l()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ba669b6c338d53f75a9049cc84b1515d8499596817f667225c7d7a69468ff)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer40727, $r2)


	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer39032)


Findings in Java Class: n0.l1.k.q

	 in Method: javax.net.ssl.SSLContext l()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #bee6444ed69db28b6856e5e982a29871d80ef13e72b47dbb0c9309d97e8239db)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer40723)


	 in Method: javax.net.ssl.SSLSocketFactory m(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer39042, $r10, varReplacer39042)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer39042, $r10, varReplacer39042)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer39042, $r10, varReplacer39042)


	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer39017)


Findings in Java Class: n0.l1.k.f

	 in Method: javax.net.ssl.SSLContext l()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #eab17555362777e7fd74cc086d491baac822a4f9948056bcc373c285377af887)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer40724, $r2)


	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer39022)


Findings in Java Class: o0.b0

	 in Method: o0.m b(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #1bf0d3f925bbe26c36f6fd77f481cd886fc2efaa04326d721920f11a439f86ac)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: n0.l1.k.o

	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer39034)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 18

	CryptoAnalysis found the following violations. For details see description above.
	TypestateError: 1
	ConstraintError: 4
	RequiredPredicateError: 10
=====================================================================
