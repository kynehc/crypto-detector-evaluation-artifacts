0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Alive 16071  5000
Alive 22659  5000
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <org.cweb.crypto.lib.ECAEAD: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: ab2c68bf9cf6e94a2ac2ea41e77072152da88088999c3134e2f3177dcd12829c
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <org.cweb.storage.remote.AWSV4HeaderSigner: byte[] sign(java.lang.String,byte[])>
		SHA-256: c7427904ffcf7f3148959bfc0cf768c93801e2dc35fe0233b48ec1457d9b06f0
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer54311)
		Method: <org.whispersystems.libsignal.SessionCipher: javax.crypto.Cipher getCipher(int,javax.crypto.spec.SecretKeySpec,javax.crypto.spec.IvParameterSpec)>
		SHA-256: cc051acc041c0a136ea51e959c94ab16aa16d2053aace7d742ac8572f654470e
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] expand(byte[],byte[],int)>
		SHA-256: 3e233786151d239434b197b383e2e2f3502c681ec99902a2eeadf3d8d687d1b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6896)
		Method: <org.cweb.crypto.lib.HashingUtils: byte[] SHA512_256(byte[])>
		SHA-256: c5ddbebe24f10c7d1af4d3c1d8e5028ed1fdaa0efa59c15f058241d96620fbef
		Secure: true
	Object:
		Variable: varReplacer36808
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer36808)
		Method: <org.cweb.crypto.lib.HKDF: byte[][] computeKdf(byte[],byte[],byte[],int,java.lang.String)>
		SHA-256: 802b815142c05265edfd915d87f00067c7dd5b6c96511bd8ad2f8067f060a8a3
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair genKeyPair()>()
		Method: <org.cweb.crypto.lib.RSAUtils: java.security.KeyPair generateKeyPair()>
		SHA-256: cfc718fedeea67a321c03d20d148c096fce228bb135826a07de00bacf7bf120f
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer46127)
		Method: <org.cweb.crypto.lib.RSAUtils: byte[] sign(java.security.PrivateKey,byte[])>
		SHA-256: 1a9b2c2697e46c00c47d22a2a46a2d50abb9ef182fa4d38a5bf08c6369552964
		Secure: false
	Object:
		Variable: varReplacer26982
		Type: java.lang.String
		Statement: specialinvoke $r24.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r16, varReplacer26982)
		Method: <eu.siacs.conversations.services.ExportBackupService: java.util.List export()>
		SHA-256: 3ba85aa08cdeb9ccbfa0b916349a5bf547424c4ba5431041c9a958670eebd828
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer59756)
		Method: <org.conscrypt.ct.CertificateEntry: org.conscrypt.ct.CertificateEntry createForPrecertificate(org.conscrypt.OpenSSLX509Certificate,org.conscrypt.OpenSSLX509Certificate)>
		SHA-256: 199338d5987d5eff7e567550be6b369a53bb4c36ea75fd951f2248691ddec480
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer42988)
		Method: <org.cweb.crypto.lib.DoubleRatchet: byte[] kdfChainKey(byte[],byte[])>
		SHA-256: 809349a96164e88db3568c31b8fa6ad99e6f1f3ddda29358153b6ac8debd7339
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer54313)
		Method: <org.whispersystems.libsignal.protocol.SignalMessage: byte[] getMac(org.whispersystems.libsignal.IdentityKey,org.whispersystems.libsignal.IdentityKey,javax.crypto.spec.SecretKeySpec,byte[])>
		SHA-256: 3febe50d992332ca9079aaf4fb8535f3b590e183708d0c4ee9697161b146938c
		Secure: false
	Object:
		Variable: varReplacer17255
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer17255)
		Method: <org.cweb.crypto.lib.AEAD: byte[] encrypt(byte[],byte[],byte[],byte[])>
		SHA-256: d8b458f17645697370dae0664849c9d712d1db06b252a7ecb2ddcdf52a136475
		Secure: false
	Object:
		Variable: $r26
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r26.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r21, $r23)
		Method: <eu.siacs.conversations.services.ExportBackupService: java.util.List export()>
		SHA-256: a58f2cd592c25f08337fda8caef0c986a3160c5e7197aec6d463c4baee86639a
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <eu.siacs.conversations.services.ExportBackupService: java.util.List export()>
		SHA-256: e5c26d41efd23403547848a87748a6c7cf4df90378d880661b9650e612067a68
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer40433)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 59313df9a840512ae0a6d288f7fa456a228288909233e13b11f9cc663fd83f38
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer60128)
		Method: <org.whispersystems.libsignal.state.SessionState: org.whispersystems.libsignal.ratchet.MessageKeys removeMessageKeys(org.whispersystems.libsignal.ecc.ECPublicKey,int)>
		SHA-256: f544c8ec04615c5a17908e67b583e8e03d997f415fc8e4c275d841af57b93677
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.DigestOutputStream
		Statement: specialinvoke $r2.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r13, $r14)
		Method: <eu.siacs.conversations.persistance.FileBackend: eu.siacs.conversations.xmpp.pep.Avatar getStoredPepAvatar(java.lang.String)>
		SHA-256: ccffdc56aeedf26373126522c29f3f81bc4d43fe45704cb92d71aa4d0ea63c8f
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: d02affd279e8743b6fd64cdf0e2dd47c30a5603be2e61d5718cf63d25b2d1a15
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer57761)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] expand(byte[],byte[],int)>
		SHA-256: e0e0f73c222b62097e3f9af451db861460d272819b5fe1021d83380c8896a20d
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyFactory
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r8)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 6635af12fb8498a7bf018ada279831a6e3024bb07fe12c7daed2b6fbc372e6bb
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer28423)
		Method: <org.cweb.storage.remote.AWSV4HeaderSigner: byte[] hash(byte[])>
		SHA-256: 8d593a1a374428f77a23a2aa5efb806cd48618cc29ec43886d0195e44ce551a1
		Secure: true
	Object:
		Variable: varReplacer52606
		Type: java.lang.String
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer52606)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage$XmppAxolotlPlaintextMessage decrypt(eu.siacs.conversations.crypto.axolotl.XmppAxolotlSession,java.lang.Integer)>
		SHA-256: f5e1d67dc69482ff7546f615fb3b06ad3749037baed21b64e7d422b7f88901db
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r4, varReplacer6855, varReplacer6856)
		Method: <org.cweb.crypto.lib.AEAD: byte[] decrypt(byte[],byte[],byte[],byte[])>
		SHA-256: e82a0a2b639cd6fcc29404a98d86f5c6c5a115940eb4ded325289c52ce0c779b
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6857)
		Method: <org.cweb.crypto.lib.AEAD: byte[] decrypt(byte[],byte[],byte[],byte[])>
		SHA-256: b211693cfece41c19118b44188a3c13c25e9826698dcef63ef4f61ae5c66d11a
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r2, varReplacer25968, varReplacer25969)
		Method: <eu.siacs.conversations.services.ExportBackupService: byte[] getKey(java.lang.String,byte[])>
		SHA-256: 9a687982409b282bfde6210403f71c7307f06805714261a38f096d55f6be0231
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r3, varReplacer19187, varReplacer19188)
		Method: <org.cweb.crypto.lib.ECAEAD: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 7eb6530a8e469d3afd061bacd63d38c703e90bbafb4e1873d816b81dd798347d
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r0)
		Method: <org.cweb.crypto.lib.RSAUtils: boolean verifySignature(java.security.PublicKey,byte[],byte[])>
		SHA-256: 51531f3a36ac2248139c5d8311dde3d6116ec340c3e17bf89e5bcc21954fa2c6
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.whispersystems.curve25519.JCESecureRandomProvider: void nextBytes(byte[])>
		SHA-256: 3e784b8048702cdde6d69e3c7b8665ffab00a8ef9ca96f418078ed6997701f20
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <eu.siacs.conversations.crypto.sasl.DigestMd5: java.lang.String getResponse(java.lang.String)>
		SHA-256: 2826da7562f2c1ee744517e4499fdf17272e8a80439f44a4573bde0ec542ccd4
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r0.<java.security.SecureRandom: int nextInt(int)>(varReplacer51629)
		Method: <org.whispersystems.libsignal.util.KeyHelper: int generateRegistrationId(boolean)>
		SHA-256: de38c968203f195e85df485f57145a274dcc5980272dab790151ba8fd2414229
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r2 = virtualinvoke $r8.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <org.cweb.crypto.lib.AEAD: byte[] encrypt(byte[],byte[],byte[],byte[])>
		SHA-256: 4914075c6ff968c3940116a26da9db4f7e44ccb620951c165b0e299bb4bbd10d
		Secure: false
	Object:
		Variable: varReplacer6851
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer6851)
		Method: <org.cweb.crypto.lib.AEAD: byte[] decrypt(byte[],byte[],byte[],byte[])>
		SHA-256: 7fb7a965d5152878f7552309b04cdd6c99faf5132371aec3f1c7dc4e3a04b6cd
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer56222)
		Method: <org.cweb.crypto.lib.ECAEAD: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 3a1004601ee9e5036ea7baa4a18c362db75186eec0afe595af5c290b85bae282
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <org.cweb.crypto.lib.DoubleRatchet: byte[] kdfChainKey(byte[],byte[])>
		SHA-256: 6bdfafa4ff2bf5a6deed18d2708c72ae788a6ef63b9158f30de7dd413cd0f4f5
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer40434, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 2cd931346e19987e8fd34bc52f279b7c27d73724757c6656cb4f740dff0788b6
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6868)
		Method: <org.cweb.crypto.lib.RSAUtils: void <clinit>()>
		SHA-256: 5cec4a4d7373e332161eb2dcab2bfa01ca139e7fe7ac08409b0e3692b74e5ea3
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer40430, $r2)
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 668844374e93bd5918f35b0b7e9098756c88728cc74499e62b641d73069dc2c6
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Mac
		Statement: $r8 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer17256)
		Method: <org.cweb.crypto.lib.AEAD: byte[] encrypt(byte[],byte[],byte[],byte[])>
		SHA-256: 6c18c98d82d9440485ffed7001dca8accfab648f1a0d915926c14e06ecfcefa2
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <org.whispersystems.libsignal.kdf.DerivedMessageSecrets: void <init>(byte[])>
		SHA-256: 266602d7632e3c738b2dbca5b04568563deadca842aad0961eeb5315d5cef995
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = interfaceinvoke $r1.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: byte[] generateKey()>
		SHA-256: fe5862cf7f528a728ac3600322c6a1ea3e90a208569b5acab1f65e9c0ec473e
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer54296)
		Method: <org.whispersystems.libsignal.ratchet.ChainKey: byte[] getBaseMaterial(byte[])>
		SHA-256: 49b90cd8df49ae32b33d7a5988012d46e8df4a833cde197b6ed73c33c1a1b2bc
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r3)
		Method: <de.measite.minidns.dnssec.algorithms.JavaSecSignatureVerifier: void <init>(java.lang.String,java.lang.String)>
		SHA-256: d6bb4b30cdbee7ff837ce1cc95136a9cd54ac9f5129c558d6320a140033e2fcc
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.SecureRandom
		Statement: specialinvoke $r8.<java.security.SecureRandom: void <init>()>()
		Method: <eu.siacs.conversations.services.XmppConnectionService: void onCreate()>
		SHA-256: 66b8785cce4ae61cb9f85f2e7b14eb9e7c0af40a6090314d2099ae50e6ff0242
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer36807)
		Method: <org.cweb.crypto.lib.HKDF: byte[][] computeKdf(byte[],byte[],byte[],int,java.lang.String)>
		SHA-256: 9404e40e9b40b4c4d74d3ef191b8255a7104f8faed9af33f559d9679cdaf254c
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <eu.siacs.conversations.services.MemorizingTrustManager: java.lang.String certHash(java.security.cert.X509Certificate,java.lang.String)>
		SHA-256: 8b7639901cba0fc0b09ad196bf67ee0f2b1e650fe9638857a5eb14884412141c
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r1.<java.security.SecureRandom: int nextInt(int)>(varReplacer28133)
		Method: <eu.siacs.conversations.xmpp.jingle.DirectConnectionUtils: java.util.List getLocalCandidates(eu.siacs.conversations.xmpp.Jid)>
		SHA-256: 80de6af2880e311054250552ac91a6cc06067f82832e9402b0a75e28af65818c
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r9)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 7ac05a324707752a8fcdd9787a5fcda4e6af85c295ea6bb9f2ffcf779c41a30d
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: void encrypt(java.lang.String)>
		SHA-256: 8fd86c5a53e96c35780b9e4ea6c837db7735a66644aa7d0c726414d88e675b6
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r0)
		Method: <org.cweb.crypto.lib.RSAUtils: boolean verifySignature(java.security.PublicKey,byte[],byte[])>
		SHA-256: 3c36370742da4718414ecde054caf4dff6ef70d24d0a07a0cae1e6eb16a160d6
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.DigestOutputStream
		Statement: specialinvoke $r8.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r6, $r7)
		Method: <eu.siacs.conversations.persistance.FileBackend: eu.siacs.conversations.xmpp.pep.Avatar getPepAvatar(android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat,int)>
		SHA-256: 12f4c30f4e2fa8f1370f65137a6288fe3ee8bd4402f6cd2f15dce8d3606233fa
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.PublicKey
		Statement: $r4 = virtualinvoke $r1.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <org.cweb.crypto.IdentityCryptoService: org.cweb.schemas.local.IdentityKeys createNewKey()>
		SHA-256: 93d9c00fcafab2a6087c44e8b6cc63e2b8542bdea05edbc79e75e265747bcf3d
		Secure: true
	Object:
		Variable: varReplacer57760
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer57760)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] expand(byte[],byte[],int)>
		SHA-256: a0eb121b047f46f94097438fc3442f1075dc86017459135eb898b04cfad0b1ac
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: byte[] generateIv()>
		SHA-256: fe0fead027707dbb9cb79541223d7eed971b9549c91abba553bacafb40bf0d8b
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cweb.crypto.lib.HashingUtils: byte[] SHA256(byte[])>
		SHA-256: e00fd73acfd69fcb29289f25977258897ef7b3d6bf1e26c9b308d8f834416197
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.cert.TrustAnchor
		Statement: specialinvoke $r3.<java.security.cert.TrustAnchor: void <init>(java.security.cert.X509Certificate,byte[])>($r1, varReplacer54745)
		Method: <org.conscrypt.TrustManagerImpl: java.security.cert.TrustAnchor findTrustAnchorBySubjectAndPublicKey(java.security.cert.X509Certificate)>
		SHA-256: f974b711d672ab0bea52876ca246406c074636014d67254b617aabf2514247aa
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <eu.siacs.conversations.xmpp.jingle.DirectConnectionUtils: java.util.List getLocalCandidates(eu.siacs.conversations.xmpp.Jid)>
		SHA-256: 8bd21b412b02ac222334f732a1de74a6757c6ea0f18b3fd26cd92f670779924
		Secure: true
	Object:
		Variable: varReplacer54297
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer54297)
		Method: <org.whispersystems.libsignal.kdf.DerivedMessageSecrets: void <init>(byte[])>
		SHA-256: 20d59a9606215d8af7653a346c83ceaca5dddbbb1d2b1111eaaf1bfea1c94dd4
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: f325059ee6f08c9776202e677308b0f19ca0767a6821e36b4f64a531d072fa45
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKeyFactory
		Statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer25970)
		Method: <eu.siacs.conversations.services.ExportBackupService: byte[] getKey(java.lang.String,byte[])>
		SHA-256: 5d834c6dcc5bd4683f5583ba456527320fdd5aa688363ebe7ef7083f7894a2be
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6863)
		Method: <org.cweb.crypto.lib.AEAD: byte[] decrypt(byte[],byte[],byte[],byte[])>
		SHA-256: 30c6a61cef8afe731be8e26b3fdce31438ef5318f14d0c1dee14f421dc2a0d85
		Secure: false
	Object:
		Variable: varReplacer42988
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer42988)
		Method: <org.cweb.crypto.lib.DoubleRatchet: byte[] kdfChainKey(byte[],byte[])>
		SHA-256: 1f9b9be0d6e9d4aabdd16cce683b13957d1b5efae67735f4d5744fd143d3dc2
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r4)
		Method: <org.cweb.crypto.lib.AEAD: byte[] decrypt(byte[],byte[],byte[],byte[])>
		SHA-256: dcf91d40aae89980cf1a9d87efc057034007e3aea503b764b75ecab61b75532c
		Secure: false
	Object:
		Variable: varReplacer56213
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer56213)
		Method: <org.cweb.crypto.lib.ECAEAD: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: a2dd7d47bbf90176963a2b5ea4547f727570ce3eca14f1005e9237c41e1366d8
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer18335)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: void encrypt(java.lang.String)>
		SHA-256: e290917336a121985fcfedfea06718f1c7530566544f428ab69c774e5f515561
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20138)
		Method: <eu.siacs.conversations.utils.XEP0392Helper: double angle(java.lang.String)>
		SHA-256: 6b08dc310c358c3d9a1907f195e9a03babfea2a1cb6ee1940ef977b099ae4e86
		Secure: false
	Object:
		Variable: varReplacer25969
		Type: int
		Statement: specialinvoke $r0.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r2, varReplacer25968, varReplacer25969)
		Method: <eu.siacs.conversations.services.ExportBackupService: byte[] getKey(java.lang.String,byte[])>
		SHA-256: 3edd0574a3847448a2883cc97c90c995e9a5184f9d485dfa98acb0eb7f5623f9
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer57760)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] expand(byte[],byte[],int)>
		SHA-256: 80b3cc6a17bc20f1d749121a84eb3c56bd3fe0ad574be7e5021f06df75f580b
		Secure: false
	Object:
		Variable: $r25
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r25.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r15)
		Method: <eu.siacs.conversations.services.ExportBackupService: java.util.List export()>
		SHA-256: 71c33a414159fa55b67da64120305f590c863659f38ee7fbcfc36e13ff97bdb1
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: a729cfd5669df603070b7ba7d05b524b10a048ab1da974a5ccb1df973521b7d3
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: e75571d33abb1b5e330ac5b78fcc009ac5fa3b4053acda20dad8234c0598d879
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer18336, varReplacer18337)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: void encrypt(java.lang.String)>
		SHA-256: 62810a9eec9fc3738513572f7e9f8d9e4e176fa7b3ea3653a78ca18aa722253f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer22272)
		Method: <eu.siacs.conversations.services.MemorizingTrustManager: javax.net.ssl.X509TrustManager getTrustManager(java.security.KeyStore)>
		SHA-256: 74a2a3d4a13e190cbec1236a38ecef82ee35c588c27ceb5470dd4571f3f44709
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PrivateKey
		Statement: $r7 = virtualinvoke $r1.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <org.cweb.crypto.IdentityCryptoService: org.cweb.schemas.local.IdentityKeys createNewKey()>
		SHA-256: 70f27ca32315906d6162fa0a0b90d1535199f1a9f5183d9785ef156192386e3e
		Secure: true
	Object:
		Variable: $r14
		Type: java.security.MessageDigest
		Statement: $r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer39833)
		Method: <eu.siacs.conversations.persistance.FileBackend: eu.siacs.conversations.xmpp.pep.Avatar getStoredPepAvatar(java.lang.String)>
		SHA-256: b9ecd872ed149b11c40931033afda94b514cfe3d0cadc20799bebe9e3d6c29d6
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer25097)
		Method: <eu.siacs.conversations.utils.SSLSocketHelper: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: ca2094c8b58aacfb81825709b44bae6dd439d875beb9a9dbfcdc561f06e9ad18
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r3, $r8, $r6, varReplacer54544)
		Method: <de.measite.minidns.dnssec.algorithms.ECDSASignatureVerifier: void <init>(java.math.BigInteger[],int,java.lang.String)>
		SHA-256: 179ae4db1777d37c33b7fa4e4731ebe077d00f04fd9b52db0215a2c4a6c52540
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.conscrypt.ct.CertificateEntry: org.conscrypt.ct.CertificateEntry createForPrecertificate(org.conscrypt.OpenSSLX509Certificate,org.conscrypt.OpenSSLX509Certificate)>
		SHA-256: fdac5cbc341df046ae5d42e6caf0c99f1cebf641f4ed79e4bb74dffd155ddf2c
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 15a76129680a3cd57380001c355c828c5afc3ba9ce32fff65b352ff3390bbd6
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.Signature
		Statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)
		Method: <de.measite.minidns.dnssec.algorithms.JavaSecSignatureVerifier: boolean verify(byte[],byte[],byte[])>
		SHA-256: 6e5a38081a611515d4b47f0556fd9fc4356c61c58cdada912e2d4ff1f24380f7
		Secure: false
	Object:
		Variable: $r15
		Type: byte[]
		Statement: virtualinvoke $r7.<java.security.SecureRandom: void nextBytes(byte[])>($r15)
		Method: <eu.siacs.conversations.services.ExportBackupService: java.util.List export()>
		SHA-256: a80073e8670a1b3572b89100e966def4b3c0fbede393b7eb3cf4ca562fb975dd
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r1 = virtualinvoke $r10.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <org.cweb.crypto.lib.ECAEAD: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: e87857fb8409a25a71d04ed3e01a6befc874049ff0ea6fec5c0728b67181c1c7
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r13.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r9, $r12, $r4, $i1)
		Method: <org.conscrypt.OpenSSLECGroupContext: java.security.spec.ECParameterSpec getECParameterSpec()>
		SHA-256: 7223ae8f08ed0dba3dafb06f8e07e30310aca7c9be856d88494b5d1bd531fdf8
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer40638)
		Method: <eu.siacs.conversations.generator.AbstractGenerator: java.lang.String getCapHash(eu.siacs.conversations.entities.Account)>
		SHA-256: d71b210a7b27eca310233d6fa1b4ce5c0e22eff4ba81d9e3565520bceef00302
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer17259)
		Method: <org.cweb.crypto.lib.AEAD: byte[] encrypt(byte[],byte[],byte[],byte[])>
		SHA-256: ced0e3a31d5da481239c19044095cb9ceca2dff0617f7b383b23b153a69a2b31
		Secure: false
	Object:
		Variable: $r14
		Type: byte[]
		Statement: $r14 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <eu.siacs.conversations.xmpp.jingle.JingleSocks5Transport: void lambda$send$3(eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged,eu.siacs.conversations.entities.DownloadableFile)>
		SHA-256: f4bf72ccdd2630d4d4d7fe43b6340e64cf1841eee0b524a4685b1e01b8a87741
		Secure: false
	Object:
		Variable: $r16
		Type: byte[]
		Statement: $z0 = virtualinvoke $r11.<java.security.Signature: boolean verify(byte[])>($r16)
		Method: <eu.siacs.conversations.crypto.axolotl.AxolotlService$6: void onIqPacketReceived(eu.siacs.conversations.entities.Account,eu.siacs.conversations.xmpp.stanzas.IqPacket)>
		SHA-256: 4514c7b8a8e0ae7d13b5d391cb96575fb4f5d821bcc42080220f3cd967762bf6
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer36808)
		Method: <org.cweb.crypto.lib.HKDF: byte[][] computeKdf(byte[],byte[],byte[],int,java.lang.String)>
		SHA-256: e183e8797fc8c2b7d3b1b0f832469d2163a4b58767aff9d632b87406c77d1142
		Secure: false
	Object:
		Variable: varReplacer60129
		Type: java.lang.String
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer60129)
		Method: <org.whispersystems.libsignal.state.SessionState: org.whispersystems.libsignal.ratchet.MessageKeys removeMessageKeys(org.whispersystems.libsignal.ecc.ECPublicKey,int)>
		SHA-256: 65cceec745f0387a52cb6a63473eb547c76eea066f42c0a995302e071837ac7f
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.Signature
		Statement: $r10 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r9)
		Method: <org.conscrypt.ct.CTLogInfo: org.conscrypt.ct.VerifiedSCT$Status verifySingleSCT(org.conscrypt.ct.SignedCertificateTimestamp,org.conscrypt.ct.CertificateEntry)>
		SHA-256: 4867510c33565cbf7503d38506e7d164c604c516c0e341aa908e97f733133e73
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer57758)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] extract(byte[],byte[])>
		SHA-256: c04bc95801e9a9a1824e4ce02a023a96adc32654ad44c9f17e8b28c39e1235c2
		Secure: false
	Object:
		Variable: varReplacer54301
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer54301)
		Method: <org.whispersystems.libsignal.kdf.DerivedMessageSecrets: void <init>(byte[])>
		SHA-256: 2b97ed18ee9b750f6bca3e825eab410046e257a10fc2213dfec1cb83f2956297
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r11.<java.security.Signature: boolean verify(byte[])>($r16)
		Method: <eu.siacs.conversations.crypto.axolotl.AxolotlService$6: void onIqPacketReceived(eu.siacs.conversations.entities.Account,eu.siacs.conversations.xmpp.stanzas.IqPacket)>
		SHA-256: b6a0515f10d5ef6cad95909fac00ecddfb7b6a9f66d39e30c0f21920cf43346a
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.KeyGenerator
		Statement: $r0 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer4286)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: byte[] generateKey()>
		SHA-256: a7c5965e5ec6981de67de923755075a0921438791a5d1292bc98e70228447fde
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.SegmentedByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: 6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.SecureRandom
		Statement: specialinvoke $r13.<java.security.SecureRandom: void <init>()>()
		Method: <eu.siacs.conversations.ui.MagicCreateActivity: void lambda$onCreate$0(android.view.View)>
		SHA-256: e541365786a13ceaaa1dc69f245199f83560daf55c98c177a0fb6b50db207f29
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <eu.siacs.conversations.services.MemorizingTrustManager: java.lang.String certHash(java.security.cert.X509Certificate,java.lang.String)>
		SHA-256: 3a04276bb0bb90e77a093c5e678664dc0a04b35c414095f1d090094fe6701393
		Secure: false
	Object:
		Variable: $r23
		Type: javax.crypto.Cipher
		Statement: $r23 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer26975, varReplacer26976)
		Method: <eu.siacs.conversations.services.ExportBackupService: java.util.List export()>
		SHA-256: d470138fa66d50d63dfaf06449a5cecb46e3111b7ae6a06ea9e2d777d798f296
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer29782)
		Method: <eu.siacs.conversations.utils.CryptoHelper: java.lang.String getFingerprintCert(byte[])>
		SHA-256: b36bafca4612f78135f2ccda902c037216e1d9b1a49a5f986a3ef6f4b746685e
		Secure: false
	Object:
		Variable: varReplacer56222
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer56222)
		Method: <org.cweb.crypto.lib.ECAEAD: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: f2b3074f2ffa1b72a3fb0f207d10cbc19daf803ec99831c1d9cda8bc401db841
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer23538)
		Method: <de.measite.minidns.AbstractDNSClient: void <init>(de.measite.minidns.DNSCache)>
		SHA-256: fbc9c914d176339265ed78786ea3e0f3b9e23db62df439d30e183024e3c4c2c
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.Signature
		Statement: $r11 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer29485)
		Method: <eu.siacs.conversations.crypto.axolotl.AxolotlService$6: void onIqPacketReceived(eu.siacs.conversations.entities.Account,eu.siacs.conversations.xmpp.stanzas.IqPacket)>
		SHA-256: c9fff2a5bb04a87acd0bc02ace1a5d2465600720fb6490aac3dae1db12def518
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r3, varReplacer44779)
		Method: <de.measite.minidns.dnssec.algorithms.ECGOSTSignatureVerifier: void <clinit>()>
		SHA-256: 2d1322b7b3732c169eb40d3c65556ea15e6bee6b25cb32d83abe7d0c4e1071c2
		Secure: true
	Object:
		Variable: $r14
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage$XmppAxolotlPlaintextMessage decrypt(eu.siacs.conversations.crypto.axolotl.XmppAxolotlSession,java.lang.Integer)>
		SHA-256: 6de0974fe372410495adff952b9a5f55927e8003f0f1ec04fc1d7989588ebd7e
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer56211)
		Method: <org.cweb.crypto.lib.ECAEAD: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 1546b23e0088015a2c953127f86f37dbabef7e4dcc5b21b9f48ab7cc54c8c889
		Secure: false
	Object:
		Variable: $r20
		Type: java.security.DigestOutputStream
		Statement: specialinvoke $r20.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r18, $r19)
		Method: <eu.siacs.conversations.persistance.FileBackend: boolean save(eu.siacs.conversations.xmpp.pep.Avatar)>
		SHA-256: a647cf94383c7ebdaf021e1f4fbad643535071a50e3356276138849e7c8f222d
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 316cbc86e080130334eaabd60025d96084375d0058312a103cd3255ba6f0aeb
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer810)
		Method: <eu.siacs.conversations.utils.CryptoHelper: java.lang.String getFingerprint(java.lang.String)>
		SHA-256: 2d2e3ade72bac8222ffde4edab42c6f639075f6610ea300fe18c4901ea578328
		Secure: false
	Object:
		Variable: varReplacer19185
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer19185)
		Method: <org.cweb.crypto.lib.ECAEAD: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: adff379f333433a75af661a3f382349b6f328a0dde1aa3e4edd34e7a10c82414
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r4, $r2)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: 4b73d9ea47b70e095beb17e2b4e8c62bcb1a3b70cdd913b654094befd6fbd016
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cweb.storage.remote.AWSV4HeaderSigner: byte[] hash(byte[])>
		SHA-256: a3e0fd26473eacef18e01d642dd6a15af067f80fa9bec7831a99ce75de9160c2
		Secure: true
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r0.<java.security.SecureRandom: int nextInt(int)>(varReplacer51627)
		Method: <org.whispersystems.libsignal.util.KeyHelper: int generateRegistrationId(boolean)>
		SHA-256: f859e306b8bdc75fa46e8775f46aaed9cb8304084c8bb5a0a558c5a718758ef7
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <eu.siacs.conversations.services.MemorizingTrustManager: java.lang.String getBase64Hash(java.security.cert.X509Certificate,java.lang.String)>
		SHA-256: 53fe1a84c777460e5f21e3b573cd421fe7d44ae16e8325bb8b476a1b2cf64f70
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <eu.siacs.conversations.services.MemorizingTrustManager: java.security.KeyStore loadAppKeyStore()>
		SHA-256: ea1b92c62f96aa3843af7ac4ab293ee98950902fb5e6847c9de5ad96211af3a0
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r2.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)
		Method: <org.cweb.crypto.lib.RSAUtils: java.security.PublicKey constructPublicKey(byte[])>
		SHA-256: 5b38d0ccd424dd2e617b1f39a87f69077697a841d96bba87b4db094956fd3a69
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <de.measite.minidns.dnssec.algorithms.JavaSecDigestCalculator: void <init>(java.lang.String)>
		SHA-256: 27f10d36f956bb46cbfe64756f259ad7962bc65acc218ac50caa3410dcd06af5
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <org.cweb.crypto.lib.ECAEAD: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: a50c1952ad3124e2e237b9d411d7a33260b872619e6b230347c9a482a905e32c
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <org.whispersystems.curve25519.JCESecureRandomProvider: void nextBytes(byte[])>
		SHA-256: b6eaee850f63d2344fe0da86f260a4056da7ba2afa079fe8669a882d349c88ae
		Secure: true
	Object:
		Variable: $r16
		Type: byte[]
		Statement: virtualinvoke $r7.<java.security.SecureRandom: void nextBytes(byte[])>($r16)
		Method: <eu.siacs.conversations.services.ExportBackupService: java.util.List export()>
		SHA-256: ada2ab22b5f69ab7fe80dee05ac3b58afbbe362a5878eb28a68e133edc5573ba
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer17253)
		Method: <org.cweb.crypto.lib.AEAD: byte[] encrypt(byte[],byte[],byte[],byte[])>
		SHA-256: 1c624e8c2d163afd51c9a2cc34eb81a5ddedf575ecdf39e2d0914e0cb0d679fe
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer3335)
		Method: <org.cweb.crypto.lib.SecureRandomUtils: void <clinit>()>
		SHA-256: 20d3349a22a2b1a14e32b890c32c62819ac168b774add7e4e1ecc5ab3ec9ef9c
		Secure: true
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r3)
		Method: <de.measite.minidns.dnssec.algorithms.JavaSecSignatureVerifier: void <init>(java.lang.String,java.lang.String)>
		SHA-256: 22e74f537b4fa4ebe6c0554ffcb237888613831bfc374c53ea2501d0e35bf0bb
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r7.<java.security.Signature: boolean verify(byte[])>($r2)
		Method: <de.measite.minidns.dnssec.algorithms.JavaSecSignatureVerifier: boolean verify(byte[],byte[],byte[])>
		SHA-256: fc135b08a70d678ef72fc96ee1a53136e76bd520f8ffb5d3883c91a74b3b0495
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer28158)
		Method: <eu.siacs.conversations.xmpp.jingle.JingleInBandTransport: void receive(eu.siacs.conversations.entities.DownloadableFile,eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged)>
		SHA-256: 64b4cf0ba433278550a1aca795984112b5080d89db17431d1ee88b04d44d7df
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $z0 = virtualinvoke $r7.<java.security.Signature: boolean verify(byte[])>($r2)
		Method: <de.measite.minidns.dnssec.algorithms.JavaSecSignatureVerifier: boolean verify(byte[],byte[],byte[])>
		SHA-256: f1e30a6faf65a4b834a38c62244e89293f91a21f1362b088a697b9e242472c7b
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r9)
		Method: <eu.siacs.conversations.generator.AbstractGenerator: java.lang.String getCapHash(eu.siacs.conversations.entities.Account)>
		SHA-256: 40e6ba7def175b601af0ebe658e12dbafe663826d23bcc0794776a9d5b369c8d
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer54295)
		Method: <org.whispersystems.libsignal.ratchet.ChainKey: byte[] getBaseMaterial(byte[])>
		SHA-256: 4654bf77a8ce6d664ec6ab9e1ecb9dee5ab93cd772e3793218d7eb381a89689f
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r12)
		Method: <eu.siacs.conversations.xmpp.jingle.JingleSocks5Transport: void <init>(eu.siacs.conversations.xmpp.jingle.JingleFileTransferConnection,eu.siacs.conversations.xmpp.jingle.JingleCandidate)>
		SHA-256: 6ca4bf58b569a60a649d1c8836774c6d417071217681fb765ee324d98dc005ca
		Secure: false
	Object:
		Variable: $r24
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r24.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r16, varReplacer26982)
		Method: <eu.siacs.conversations.services.ExportBackupService: java.util.List export()>
		SHA-256: 5ad22942e26be0bd3fd6381aebdf91c28125f08f5389108ffeb0816530673b88
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer38767)
		Method: <org.cweb.storage.remote.AWSV4HeaderSigner: byte[] sign(java.lang.String,byte[])>
		SHA-256: 96d698aef014f27a867b11a0cee2a7149004a9cff929f85c4fcad7d264c7a177
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.cert.CertificateFactory
		Statement: $r9 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer39630)
		Method: <eu.siacs.conversations.parser.IqParser: android.util.Pair verification(eu.siacs.conversations.xmpp.stanzas.IqPacket)>
		SHA-256: 238330f659e84cc74ef9a91e05df873bdc7705bdc01fb3625d2f6912bb4cbbbf
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer57757)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] extract(byte[],byte[])>
		SHA-256: 520d5bad7da8b2419289bedf46248db622954ddc5cdbbead69370450e21584ba
		Secure: false
	Object:
		Variable: $r16
		Type: byte[]
		Statement: $r16 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <eu.siacs.conversations.xmpp.jingle.JingleSocks5Transport: void lambda$receive$4(eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged,eu.siacs.conversations.entities.DownloadableFile)>
		SHA-256: ce0a6201bfb0e88c7354919aaf8277d26d8a6e74cbe4f9ad02e41ef6f6db9f07
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.MessageDigest
		Statement: $r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer45488)
		Method: <eu.siacs.conversations.entities.ServiceDiscoveryResult: byte[] mkCapHash()>
		SHA-256: 8ebf1f170711dc02e7ed2ae62d167ba3a3e2699229cec5495f0cdb3af1838c65
		Secure: false
	Object:
		Variable: $r28
		Type: java.security.cert.PKIXParameters
		Statement: specialinvoke $r28.<java.security.cert.PKIXParameters: void <init>(java.util.Set)>($r14)
		Method: <org.conscrypt.TrustManagerImpl: java.util.List verifyChain(java.util.List,java.util.List,java.lang.String,boolean,byte[],byte[])>
		SHA-256: 29e528ae7be0d7a995cb106994ad6f6666437ec8d286db5205a2265c45743387
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.whispersystems.curve25519.JCESha512Provider: void calculateDigest(byte[],byte[],long)>
		SHA-256: e672fc3788936ab7174dbb1b35b297edc3547513e55768aca9c3c93c8a3395d7
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] extract(byte[],byte[])>
		SHA-256: 361eed9cd14e6ff84c1daa2451338ec5c4dd793da69a1733393b9a61bdf2d763
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer30323, varReplacer30324)
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: dee55625cb55c0527817b5f688123b26717ce10ce6543efc4a40b42069c1d05d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer38804)
		Method: <org.whispersystems.curve25519.JCESha512Provider: void calculateDigest(byte[],byte[],long)>
		SHA-256: 554e6ea95b5af957d0a18f8667bbd9291e406fe8f5ea941dbb9298599023b97d
		Secure: true
	Object:
		Variable: varReplacer38767
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer38767)
		Method: <org.cweb.storage.remote.AWSV4HeaderSigner: byte[] sign(java.lang.String,byte[])>
		SHA-256: 8338299a094ef29d3b197d510b74611cac3f78e5e26635f1b4101980621eea74
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r10.<java.security.Signature: boolean verify(byte[])>($r6)
		Method: <org.conscrypt.ct.CTLogInfo: org.conscrypt.ct.VerifiedSCT$Status verifySingleSCT(org.conscrypt.ct.SignedCertificateTimestamp,org.conscrypt.ct.CertificateEntry)>
		SHA-256: aab90aed2436cb82f786fedcbd27d0760f98b44acc28f6538b68a70b6e4bf50c
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer19199)
		Method: <org.cweb.crypto.lib.ECAEAD: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 81d3326b1097760a8dd6adde4a34de76de69703478d720cf78137e0a6960a85e
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer25096)
		Method: <eu.siacs.conversations.utils.SSLSocketHelper: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: fd9ac5e33f6170ddd551d7be1e8e81b868b6ac9a983c284d903de5c598c1b501
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <de.measite.minidns.AbstractDNSClient: void <init>(de.measite.minidns.DNSCache)>
		SHA-256: e55ecf3493dde0cec51a717d23b0a62bf835fb741f3a71cdb824afda4d2f930
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 1027fce20723454b26980f38c5edb26bcec19bffa5b6443c75459b577c51d460
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer54297)
		Method: <org.whispersystems.libsignal.kdf.DerivedMessageSecrets: void <init>(byte[])>
		SHA-256: 72028330e0caaab835a886164ec991389e101d19997bb0b794dc8c6dcb51249f
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r8.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <org.cweb.crypto.lib.AEAD: byte[] encrypt(byte[],byte[],byte[],byte[])>
		SHA-256: c995d0e804b37a9533b812c2939d78c5f4e02b0f0bb484926157a4acd531ea4e
		Secure: false
	Object:
		Variable: varReplacer36809
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer36809)
		Method: <org.cweb.crypto.lib.HKDF: byte[][] computeKdf(byte[],byte[],byte[],int,java.lang.String)>
		SHA-256: b314d79cb6c63ea1dcad65d077b75aab65a2db49511fd2d30b31977a6a56fac7
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer6867)
		Method: <org.cweb.crypto.lib.RSAUtils: void <clinit>()>
		SHA-256: 8273a52bb86a8e96f9005c2fa59d92bd2a225e030b317cb34f64900aabd56a01
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <eu.siacs.conversations.utils.CryptoHelper: java.lang.String getFingerprint(java.lang.String)>
		SHA-256: 91fd492baa91bed7f615dee0756947cd79e657310577765349ccc25936c69ae2
		Secure: false
	Object:
		Variable: $r19
		Type: java.security.MessageDigest
		Statement: $r19 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer26910)
		Method: <eu.siacs.conversations.persistance.FileBackend: boolean save(eu.siacs.conversations.xmpp.pep.Avatar)>
		SHA-256: f5b454041c350f22e07f66155b28ebab2a5fd46d04aac338eaf8424bc5ca4e2e
		Secure: false
	Object:
		Variable: varReplacer18334
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer18334)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: void encrypt(java.lang.String)>
		SHA-256: bc7d4fe3907ed9ff191e077007c84b7a9f09a3324d97ffafd4b75d677418a838
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <eu.siacs.conversations.xmpp.jingle.JingleConnectionManager: java.lang.String nextRandomId()>
		SHA-256: 407d5d9442e95cccbf94da8ee1ba431ba42c1d3807e704042386fca547d465a4
		Secure: true
	Object:
		Variable: $r16
		Type: byte[]
		Statement: $r16 = virtualinvoke $r14.<java.security.MessageDigest: byte[] digest(byte[])>($r16)
		Method: <eu.siacs.conversations.entities.ServiceDiscoveryResult: byte[] mkCapHash()>
		SHA-256: 874151ed6e63a7629a419b061b2b718f86b7804c40ee0313735d5640cca0fe42
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.Signature: byte[] sign()>()
		Method: <org.cweb.crypto.lib.RSAUtils: byte[] sign(java.security.PrivateKey,byte[])>
		SHA-256: e2b51b83e45f66da5763ce43399fdc760bd9cfa18f99acbf8fb1408495796753
		Secure: false
	Object:
		Variable: varReplacer60128
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer60128)
		Method: <org.whispersystems.libsignal.state.SessionState: org.whispersystems.libsignal.ratchet.MessageKeys removeMessageKeys(org.whispersystems.libsignal.ecc.ECPublicKey,int)>
		SHA-256: 1142e12c9eb5b5193910b8e62fa8bd775a225306ab044c882e09717547282012
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <eu.siacs.conversations.crypto.sasl.DigestMd5: java.lang.String getResponse(java.lang.String)>
		SHA-256: 2826da7562f2c1ee744517e4499fdf17272e8a80439f44a4573bde0ec542ccd4
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <eu.siacs.conversations.xmpp.jingle.JingleConnectionManager: java.lang.String nextRandomId()>
		SHA-256: 1c8e17be092d492ae0c8dacfc0164f27f46f3e81795801e6534d2107dbe4098c
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer38770)
		Method: <org.cweb.storage.remote.AWSV4HeaderSigner: byte[] sign(java.lang.String,byte[])>
		SHA-256: 2c01412c59991ee29e9b8a370d18b7a69fd7819f17e4bc7d3cedb914e2e0d7bc
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: ae39b036c5eeeba58d380660f68e23806935f12d2f5c9cefe65440425aa34f4a
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer6851)
		Method: <org.cweb.crypto.lib.AEAD: byte[] decrypt(byte[],byte[],byte[],byte[])>
		SHA-256: 51eb044fab344ae6955b2de0cc08de6ea41b86e690bc5f15480c2bd314ef453c
		Secure: false
	Object:
		Variable: $i1
		Type: int
		Statement: $i1 = virtualinvoke $r1.<java.security.SecureRandom: int nextInt(int)>($i1)
		Method: <eu.siacs.conversations.utils.CryptoHelper: java.lang.String createPassword(java.security.SecureRandom)>
		SHA-256: 1cf14069a9d064319f779def772d986f3f94a7a3c2b0fb228ce6e99f41864d02
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <eu.siacs.conversations.services.MemorizingTrustManager: java.lang.String getBase64Hash(java.security.cert.X509Certificate,java.lang.String)>
		SHA-256: 36c39f4af1f1cdc83e395d4f253034e33dbd58301aff75fab96587c32224ea84
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <org.cweb.crypto.lib.AEAD: byte[] encrypt(byte[],byte[],byte[],byte[])>
		SHA-256: f5a83597f50eef534e22005f551c3f6c422cfd4bdcae2f78422b04c1b6502d43
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer52602)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage$XmppAxolotlPlaintextMessage decrypt(eu.siacs.conversations.crypto.axolotl.XmppAxolotlSession,java.lang.Integer)>
		SHA-256: 22a9ca1b29fe535a9a9b72432e383e9a22becd7bd909fc9d4c0de26d2126641a
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 84f17b7e3930c76e2b174d27b9668ee8d3209ae5512e2c539d541e6ef4265515
		Secure: false
	Object:
		Variable: varReplacer6857
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6857)
		Method: <org.cweb.crypto.lib.AEAD: byte[] decrypt(byte[],byte[],byte[],byte[])>
		SHA-256: 77c338632ae74999a8c1af2bcf7525eb155db6300be8d7d69d17674d16eead2d
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: byte[] generateIv()>
		SHA-256: 68c685a2f5dc2a1c14b34c4e5955a822fcef0ca661788bbfe7882e5b94ba74eb
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <org.cweb.storage.remote.AWSV4HeaderSigner: byte[] sign(java.lang.String,byte[])>
		SHA-256: 84f7627af2fcbf5916b1d63462624122a5ab7a205460b7e1f33b53f9ad1d5a97
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer13880)
		Method: <org.cweb.crypto.lib.RSAUtils: java.security.KeyPair generateKeyPair()>
		SHA-256: 77751f4b15e50e000d34ac1bd80ba167a8ce881a0c0facbe3c3bc1bf93796b9a
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer52597, varReplacer52598)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage$XmppAxolotlPlaintextMessage decrypt(eu.siacs.conversations.crypto.axolotl.XmppAxolotlSession,java.lang.Integer)>
		SHA-256: 9c0c17e0a4050802a4a4e63628a22c2117c0eca140efac104775cb60a29b4c6a
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Mac
		Statement: $r10 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer56220)
		Method: <org.cweb.crypto.lib.ECAEAD: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: daf748dba30fc6a56a69d7dad8a16067fd47aa4b5cbbfb247383b711e0cd13c7
		Secure: false
	Object:
		Variable: varReplacer19184
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer19184)
		Method: <org.cweb.crypto.lib.ECAEAD: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 833807be8e98b9e12a58f83221f931803db779b9e7c8cad6b15a67f7c9384688
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <eu.siacs.conversations.crypto.sasl.DigestMd5: java.lang.String getResponse(java.lang.String)>
		SHA-256: 2826da7562f2c1ee744517e4499fdf17272e8a80439f44a4573bde0ec542ccd4
		Secure: false
	Object:
		Variable: $r14
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)
		Method: <org.whispersystems.libsignal.state.SessionState: org.whispersystems.libsignal.ratchet.MessageKeys removeMessageKeys(org.whispersystems.libsignal.ecc.ECPublicKey,int)>
		SHA-256: 9eb8c1899b93ac2d0bf6cc25d1b2b35e39990f05cf39ad468e749dd3f9e4253f
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer36809)
		Method: <org.cweb.crypto.lib.HKDF: byte[][] computeKdf(byte[],byte[],byte[],int,java.lang.String)>
		SHA-256: 3283417b925e69af2aa0a8503cbee6b9ffcdf9adc517f9d5d362b7f19ab521b6
		Secure: false
	Object:
		Variable: $r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer52606)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage$XmppAxolotlPlaintextMessage decrypt(eu.siacs.conversations.crypto.axolotl.XmppAxolotlSession,java.lang.Integer)>
		SHA-256: 3fbb2fa65f35040f6297d2960eb8210e127b4c02043008bf31f13e51684cb3b2
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer18334)
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: void encrypt(java.lang.String)>
		SHA-256: f7f930ecafb649b3ba9eb1473b52108adbaa57472b8d73373b372cc01a27f56c
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cweb.crypto.lib.HashingUtils: byte[] SHA512(byte[])>
		SHA-256: 102babbdce08eac9faa5468f10a66e9ec6ab28f079df3eeb0f8284c8aad806d1
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6864)
		Method: <org.cweb.crypto.lib.HashingUtils: byte[] SHA256(byte[])>
		SHA-256: ecbf874508999391ddee65a9fc309bd2a1e24a6c82b4228252a433701c46096c
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer40437, $r2)
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 3a465431e4b9ef9d579d74e070c90e25c980ee487bd0889d552dc3a1ece2332a
		Secure: false
	Object:
		Variable: varReplacer6867
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer6867)
		Method: <org.cweb.crypto.lib.RSAUtils: void <clinit>()>
		SHA-256: 96d43427adede4f87f4bf7337734bb345d3b20788875d38e515db64a09634e51
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <org.cweb.crypto.lib.ECAEAD: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 40da8e7a208a1c10eb9e2e8022e0a658dfcf95c315aa77bf3ca47a7c575a960d
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <eu.siacs.conversations.utils.XEP0392Helper: double angle(java.lang.String)>
		SHA-256: 5aa9281045c2fcc5dda0fd5cd3ce90e84bbad0aac6bd0a1ee93dbcc1ce265ed
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <eu.siacs.conversations.utils.CryptoHelper: java.lang.String getFingerprintCert(byte[])>
		SHA-256: 30f2db8e38cb5c7dd01e2f6da37baa322f0e0f90e9ff398874d3725dbf7fef72
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <org.cweb.crypto.lib.HKDF: byte[][] computeKdf(byte[],byte[],byte[],int,java.lang.String)>
		SHA-256: 97288608e8a1b3624eeef9dff5dfb396b61696060ce22a580313844670c1e232
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cweb.crypto.lib.HashingUtils: byte[] SHA512_256(byte[])>
		SHA-256: 14f3ee57799525dba16f4a07bd5e5e3ceb53a36b53383c41213e266648ffc4d6
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLParameters
		Statement: specialinvoke $r1.<javax.net.ssl.SSLParameters: void <init>()>()
		Method: <eu.siacs.conversations.utils.SSLSocketHelper: void setHostnameNougat(javax.net.ssl.SSLSocket,java.lang.String)>
		SHA-256: 231bd2c35b97482b01fa5454a4d75f2bdd3dd36dd6babd29cd865958e145d299
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.SecretKey
		Statement: $r1 = virtualinvoke $r0.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage: byte[] generateKey()>
		SHA-256: f1baac84402a44fd10ac6acabbf8c0d9f4c76671def6c845ee93b9c32bd60c50
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)
		Method: <org.cweb.crypto.lib.RSAUtils: byte[] getPublicKeyX509Encoded(byte[])>
		SHA-256: ae78b85e99a5ca6ca97ac995386ea141c425a480e3ae6ae8b244ba37b885664a
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $z0 = virtualinvoke $r10.<java.security.Signature: boolean verify(byte[])>($r6)
		Method: <org.conscrypt.ct.CTLogInfo: org.conscrypt.ct.VerifiedSCT$Status verifySingleSCT(org.conscrypt.ct.SignedCertificateTimestamp,org.conscrypt.ct.CertificateEntry)>
		SHA-256: 364a0f9b2a164d6ed5f9fe3601603c1763c816cf1e8f96465873eaf08c0e8e11
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer6862)
		Method: <org.cweb.crypto.lib.AEAD: byte[] decrypt(byte[],byte[],byte[],byte[])>
		SHA-256: a96909ff3b7494eb990c31ca9f5692be1454b6ecf5ac939b5f0f0f6c311b6ebd
		Secure: false
	Object:
		Variable: $r8
		Type: java.lang.String
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r8)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: fb24971f565cb4681c3c1e192adc31a35b4a987353817f6def6d3d265ac75389
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <okio.ByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: d4bf5cc88c644b9a20ac4aef1746c1f0c9ae862102406e7436b8866c875859ff
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer38574)
		Method: <eu.siacs.conversations.xmpp.jingle.JingleSocks5Transport: void <init>(eu.siacs.conversations.xmpp.jingle.JingleFileTransferConnection,eu.siacs.conversations.xmpp.jingle.JingleCandidate)>
		SHA-256: 3305a0825e6ac9a2b7bec413b13482849e5dc5d583e2f74e1445281e991fdbd3
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)
		Method: <eu.siacs.conversations.services.ExportBackupService: byte[] getKey(java.lang.String,byte[])>
		SHA-256: c1388a4c3e329948c59ea8d0162d0a62ce25800028d5e710aeb499496fb1b1a2
		Secure: false
	Object:
		Variable: varReplacer57758
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer57758)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] extract(byte[],byte[])>
		SHA-256: a3bcaba8f5db50128bb5afb1bc902d29e4f6f4335b7851af114acb6e3eed376c
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer6881)
		Method: <org.cweb.crypto.lib.RSAUtils: boolean verifySignature(java.security.PublicKey,byte[],byte[])>
		SHA-256: 5d6c39e5bbf6b6d01b7777c473b4f4d2500c455a2018f324e000429093baa793
		Secure: false
	Object:
		Variable: $r23
		Type: javax.crypto.Cipher
		Statement: $r23 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer26973)
		Method: <eu.siacs.conversations.services.ExportBackupService: java.util.List export()>
		SHA-256: 96b32044107835fdcbb0782a1015ff2b352cca54cdfa4db28c1fdb4d14469c43
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPair
		Statement: specialinvoke $r0.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r4, $r5)
		Method: <org.cweb.crypto.IdentityCryptoService: java.security.KeyPair constructRSAKeyPair(org.cweb.schemas.local.IdentityKeys)>
		SHA-256: e53d83bb27ee291ae8d13a2b1cb431964eacfe886671500cfc3f0bba8629420e
		Secure: false
	Object:
		Variable: $r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer60129)
		Method: <org.whispersystems.libsignal.state.SessionState: org.whispersystems.libsignal.ratchet.MessageKeys removeMessageKeys(org.whispersystems.libsignal.ecc.ECPublicKey,int)>
		SHA-256: 47928461cdbc57e85a0dd8e29308e7ae90026951a73792f2b78bb62b64d01fc3
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <okio.SegmentedByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: 9d21c3f9e3f612ea7264d21dc14a8967f32993fff60292ad252f8676282c7571
		Secure: false
	Object:
		Variable: varReplacer17253
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer17253)
		Method: <org.cweb.crypto.lib.AEAD: byte[] encrypt(byte[],byte[],byte[],byte[])>
		SHA-256: d94e2fd4d7c640533f55ff1d6f116dbcbd4fb333bc377464d3563a4be1e365ec
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.cert.TrustAnchor
		Statement: specialinvoke $r2.<java.security.cert.TrustAnchor: void <init>(java.security.cert.X509Certificate,byte[])>($r1, varReplacer58006)
		Method: <org.conscrypt.TrustedCertificateIndex: java.security.cert.TrustAnchor index(java.security.cert.X509Certificate)>
		SHA-256: 9a3c6e6bf5d616ab1f6c3910c4def853d1c0c72b9bd91bc97d4847f62e85285c
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <eu.siacs.conversations.ui.CreatePublicChannelDialog: void <clinit>()>
		SHA-256: 7759a648e9eff22dd49d5ca3a4757919012052c3a7313f2feeb29894b6d7de3f
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer54301)
		Method: <org.whispersystems.libsignal.kdf.DerivedMessageSecrets: void <init>(byte[])>
		SHA-256: 168348b01fe0f2650125822f52b2749fdd2c5bd0bc7bd2b75bbced30c3ebb64e
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer37490)
		Method: <eu.siacs.conversations.persistance.FileBackend: eu.siacs.conversations.xmpp.pep.Avatar getPepAvatar(android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat,int)>
		SHA-256: 681021c5482706909809751af9d996e632299afd7dd080d6cacef25b608db762
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer56213)
		Method: <org.cweb.crypto.lib.ECAEAD: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 41f1387f00b7942fa19ce1773a3f140217726c08fdbdea785de98fa36f016d2f
		Secure: false
	Object:
		Variable: varReplacer54296
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer54296)
		Method: <org.whispersystems.libsignal.ratchet.ChainKey: byte[] getBaseMaterial(byte[])>
		SHA-256: d0620013a757efc204a270e17f7c03f346724573dc0bc3c5d87e2e341fec31d1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer42989)
		Method: <org.cweb.crypto.lib.DoubleRatchet: byte[] kdfChainKey(byte[],byte[])>
		SHA-256: 84efc122a4541606ab52c52bd886549012a2d270f3a7d3659e3be07c301df33b
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.cert.CertificateFactory
		Statement: $r0 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer47505)
		Method: <org.conscrypt.SSLUtils: java.security.cert.CertificateFactory getCertificateFactory()>
		SHA-256: 86ba6f9baa17e4bb7822a4e0dc738bd76726e51d4e4c1296e67439195f619139
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <org.cweb.crypto.lib.HKDF: byte[][] computeKdf(byte[],byte[],byte[],int,java.lang.String)>
		SHA-256: 94ba853b3423ede6b363bc2e57f5144fe18c4845cddc8b35dce194d4e41d9b1c
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: $r0 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer51628)
		Method: <org.whispersystems.libsignal.util.KeyHelper: int generateRegistrationId(boolean)>
		SHA-256: 6199444761bea831c9bb1ba96a2fe88f098890dbd11a3ba771f8bbf50bc0e595
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r10.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <org.cweb.crypto.lib.ECAEAD: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 19d56cf9dc83578968fdcf7c0fc9f608e5decb89d249bdc98061a0ed564c6e6b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: c3dcfb07eabeaead2afa7b41e33d56187e303e14a7184c21b7bac99836f2c278
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer17255)
		Method: <org.cweb.crypto.lib.AEAD: byte[] encrypt(byte[],byte[],byte[],byte[])>
		SHA-256: e965ec214084781eb5b22761ce40555fe8397198a211d7ef4f34f4c1a48862fe
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <eu.siacs.conversations.services.MemorizingTrustManager: javax.net.ssl.X509TrustManager getTrustManager(java.security.KeyStore)>
		SHA-256: 1ec4bbda4edfb989da327e5834a9a1c29d2c84382584c92e6b00d5eafbad12c7
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 5fb6984969c8c0f60ee84399ef18a49aa63648c889757c4080685ad119ecd903
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <eu.siacs.conversations.crypto.sasl.DigestMd5: java.lang.String getResponse(java.lang.String)>
		SHA-256: 2826da7562f2c1ee744517e4499fdf17272e8a80439f44a4573bde0ec542ccd4
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r4)
		Method: <org.cweb.crypto.lib.AEAD: byte[] decrypt(byte[],byte[],byte[],byte[])>
		SHA-256: 7217c36aadc07c892d0b505f4309cbb0ad05a52ff9348c85814bd0d8540034ab
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16449)
		Method: <eu.siacs.conversations.xmpp.jingle.JingleSocks5Transport: void lambda$send$3(eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged,eu.siacs.conversations.entities.DownloadableFile)>
		SHA-256: baead91893eeefe645e2166140bcf95403d8c9e57db0e1f8a0793d224c831f3d
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer19179)
		Method: <org.cweb.crypto.lib.ECAEAD: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: a5e0207458b04bc8e4527e362fa8d09738c02588ca6a8041091ef75450e3b697
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer19184)
		Method: <org.cweb.crypto.lib.ECAEAD: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 462960c297859bfd62f2898b8f1e07104f50bb33a42cd2c7510307a6fb179e77
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.MessageDigest
		Statement: $r13 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer25240)
		Method: <eu.siacs.conversations.crypto.sasl.DigestMd5: java.lang.String getResponse(java.lang.String)>
		SHA-256: 3f01371b1571c4065d4df25949fbafcd6e16433078cbf2e0b157bd756b7e576d
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <org.whispersystems.libsignal.protocol.SignalMessage: byte[] getMac(org.whispersystems.libsignal.IdentityKey,org.whispersystems.libsignal.IdentityKey,javax.crypto.spec.SecretKeySpec,byte[])>
		SHA-256: 5afcb2de494e113f2c3e8ca8d1193526f79296059cd74267f4045387b4e53bb1
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <org.whispersystems.libsignal.ratchet.ChainKey: byte[] getBaseMaterial(byte[])>
		SHA-256: 8fb4835c5bab5ec63a45e8872f59bf24a48f2f4c6d745dfc352aacb8be38f264
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer37647)
		Method: <eu.siacs.conversations.xmpp.jingle.JingleInBandTransport: void send(eu.siacs.conversations.entities.DownloadableFile,eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged)>
		SHA-256: 7f2af23c69f4a6780597e493ec1bd8eae01e1489740cf6c106ad134c46dde607
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <org.whispersystems.libsignal.kdf.HKDF: byte[] extract(byte[],byte[])>
		SHA-256: 77738c0a376bd1be5b6a41999e448cb2557ed8c2bb6bfe91df3f0e78b78e87b1
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18326)
		Method: <eu.siacs.conversations.xmpp.jingle.JingleSocks5Transport: void lambda$receive$4(eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged,eu.siacs.conversations.entities.DownloadableFile)>
		SHA-256: 81dae1955ff77f8c00fc243160f3e0ba0a826ff7b96982fc91899fa2cd3196a7
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer19185)
		Method: <org.cweb.crypto.lib.ECAEAD: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: dddc10dc60c306930e050bc00d57785127efd6f0a0bb1e71258872a3852c2591
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 9d110d3f3943f5f1538d33e3d18932b71ca7accf2f86c174ab417a2b10712fb0
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <org.cweb.crypto.lib.DoubleRatchet: byte[] kdfChainKey(byte[],byte[])>
		SHA-256: 804be2a0ee20eea7964932304244079e12f4e61d4304631bf6b09ae78c128138
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer19204)
		Method: <org.cweb.crypto.lib.HashingUtils: byte[] SHA512(byte[])>
		SHA-256: 2c676adfb371960a00d3997badd90863666b2499ac66cd4aaec41555aee674c1
		Secure: true

Findings in Java Class: eu.siacs.conversations.utils.CryptoHelper

	 in Method: java.lang.String getFingerprint(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2d2e3ade72bac8222ffde4edab42c6f639075f6610ea300fe18c4901ea578328)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer810)


	 in Method: java.lang.String getFingerprintCert(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b36bafca4612f78135f2ccda902c037216e1d9b1a49a5f986a3ef6f4b746685e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer29782)


Findings in Java Class: org.cweb.crypto.lib.AEAD

	 in Method: byte[] decrypt(byte[],byte[],byte[],byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #30c6a61cef8afe731be8e26b3fdce31438ef5318f14d0c1dee14f421dc2a0d85)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r0 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r4, varReplacer6854, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Mac: void init(java.security.Key)>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6858, $r6, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r4, varReplacer6855, varReplacer6856)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer6857)


	 in Method: byte[] encrypt(byte[],byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Mac: void init(java.security.Key)>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer17254, $r0, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer17254, $r0, $r7)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ced0e3a31d5da481239c19044095cb9ceca2dff0617f7b383b23b153a69a2b31)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer17253)


Findings in Java Class: org.cweb.crypto.lib.RSAUtils

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5cec4a4d7373e332161eb2dcab2bfa01ca139e7fe7ac08409b0e3692b74e5ea3)
			First parameter (with value "RSA/ECB/OAEPWithSHA1AndMGF1Padding") should be any of RSA/ECB/{NoPadding, PKCS1Padding, OAEPWithMD5AndMGF1Padding, OAEPWithSHA-224AndMGF1Padding, OAEPWithSHA-256AndMGF1Padding, OAEPWithSHA-384AndMGF1Padding, OAEPWithSHA-512AndMGF1Padding}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6868)


	 in Method: java.security.PublicKey constructPublicKey(byte[])
		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)


	 in Method: byte[] sign(java.security.PrivateKey,byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r2.<java.security.Signature: void initSign(java.security.PrivateKey)>($r0)


	 in Method: byte[] getPublicKeyX509Encoded(byte[])
		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)


	 in Method: boolean verifySignature(java.security.PublicKey,byte[],byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: eu.siacs.conversations.utils.SSLSocketHelper

	 in Method: void setHostnameNougat(javax.net.ssl.SSLSocket,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLParameters (on Object #231bd2c35b97482b01fa5454a4d75f2bdd3dd36dd6babd29cd865958e145d299)
			Operation on object of type javax.net.ssl.SSLParameters object not completed. Expected call to setProtocols, setCipherSuites
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLSocket: void setSSLParameters(javax.net.ssl.SSLParameters)>($r1)


Findings in Java Class: eu.siacs.conversations.xmpp.jingle.JingleSocks5Transport

	 in Method: void lambda$send$3(eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged,eu.siacs.conversations.entities.DownloadableFile)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #baead91893eeefe645e2166140bcf95403d8c9e57db0e1f8a0793d224c831f3d)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r10.<java.security.MessageDigest: void reset()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #baead91893eeefe645e2166140bcf95403d8c9e57db0e1f8a0793d224c831f3d)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer16449)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #baead91893eeefe645e2166140bcf95403d8c9e57db0e1f8a0793d224c831f3d)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r14 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()


	 in Method: void lambda$receive$4(eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged,eu.siacs.conversations.entities.DownloadableFile)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #81dae1955ff77f8c00fc243160f3e0ba0a826ff7b96982fc91899fa2cd3196a7)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18326)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #81dae1955ff77f8c00fc243160f3e0ba0a826ff7b96982fc91899fa2cd3196a7)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, java.security.MessageDigest: void update(byte[],int,int), java.security.MessageDigest: void update(java.nio.ByteBuffer), java.security.MessageDigest: void update(byte), java.security.MessageDigest: void update(byte[])
			at statement: virtualinvoke $r10.<java.security.MessageDigest: void update(byte[],int,int)>($r16, varReplacer18328, $i2)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #81dae1955ff77f8c00fc243160f3e0ba0a826ff7b96982fc91899fa2cd3196a7)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r10.<java.security.MessageDigest: void reset()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #81dae1955ff77f8c00fc243160f3e0ba0a826ff7b96982fc91899fa2cd3196a7)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r16 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()


	 in Method: void <init>(eu.siacs.conversations.xmpp.jingle.JingleFileTransferConnection,eu.siacs.conversations.xmpp.jingle.JingleCandidate)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3305a0825e6ac9a2b7bec413b13482849e5dc5d583e2f74e1445281e991fdbd3)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer38574)


Findings in Java Class: eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage

	 in Method: void encrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer18340, $r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer18340, $r3, $r5)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #62810a9eec9fc3738513572f7e9f8d9e4e176fa7b3ea3653a78ca18aa722253f)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #e290917336a121985fcfedfea06718f1c7530566544f428ab69c774e5f515561)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer18334)


	 in Method: eu.siacs.conversations.crypto.axolotl.XmppAxolotlMessage$XmppAxolotlPlaintextMessage decrypt(eu.siacs.conversations.crypto.axolotl.XmppAxolotlSession,java.lang.Integer)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer52608, $r8, $r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer52606)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #22a9ca1b29fe535a9a9b72432e383e9a22becd7bd909fc9d4c0de26d2126641a)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #9c0c17e0a4050802a4a4e63628a22c2117c0eca140efac104775cb60a29b4c6a)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer52608, $r8, $r9)


Findings in Java Class: org.cweb.crypto.lib.ECAEAD

	 in Method: byte[] decrypt(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r3, varReplacer19187, varReplacer19188)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer19194, $r6, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer19184)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #81d3326b1097760a8dd6adde4a34de76de69703478d720cf78137e0a6960a85e)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r0 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r3, varReplacer19192, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Mac: void init(java.security.Key)>($r6)


	 in Method: byte[] encrypt(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer56222)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer56215, $r0, $r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r10.<javax.crypto.Mac: void init(java.security.Key)>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer56215, $r0, $r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #1546b23e0088015a2c953127f86f37dbabef7e4dcc5b21b9f48ab7cc54c8c889)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)


Findings in Java Class: eu.siacs.conversations.utils.XEP0392Helper

	 in Method: double angle(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6b08dc310c358c3d9a1907f195e9a03babfea2a1cb6ee1940ef977b099ae4e86)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20138)


Findings in Java Class: eu.siacs.conversations.services.MemorizingTrustManager

	 in Method: javax.net.ssl.X509TrustManager getTrustManager(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r1)

		ConstraintError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #74a2a3d4a13e190cbec1236a38ecef82ee35c588c27ceb5470dd4571f3f44709)
			First parameter (with value "X509") should be any of {PKIX, SunX509}
			at statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer22272)


	 in Method: java.security.KeyStore loadAppKeyStore()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #ea1b92c62f96aa3843af7ac4ab293ee98950902fb5e6847c9de5ad96211af3a0)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r7, $r9)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #ea1b92c62f96aa3843af7ac4ab293ee98950902fb5e6847c9de5ad96211af3a0)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r7, $r9)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #ea1b92c62f96aa3843af7ac4ab293ee98950902fb5e6847c9de5ad96211af3a0)
			Unexpected call to method load on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r6.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r7, $r9)


	 in Method: java.lang.String certHash(java.security.cert.X509Certificate,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3a04276bb0bb90e77a093c5e678664dc0a04b35c414095f1d090094fe6701393)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: eu.siacs.conversations.crypto.sasl.DigestMd5

	 in Method: java.lang.String getResponse(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3f01371b1571c4065d4df25949fbafcd6e16433078cbf2e0b157bd756b7e576d)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r13 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer25240)


Findings in Java Class: eu.siacs.conversations.services.ExportBackupService

	 in Method: byte[] getKey(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #9a687982409b282bfde6210403f71c7307f06805714261a38f096d55f6be0231)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #5d834c6dcc5bd4683f5583ba456527320fdd5aa688363ebe7ef7083f7894a2be)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer25970)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #9a687982409b282bfde6210403f71c7307f06805714261a38f096d55f6be0231)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r2, varReplacer25968, varReplacer25969)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #9a687982409b282bfde6210403f71c7307f06805714261a38f096d55f6be0231)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r0.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r2, varReplacer25968, varReplacer25969)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #9a687982409b282bfde6210403f71c7307f06805714261a38f096d55f6be0231)
			Third parameter (with value 1024)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r0.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r2, varReplacer25968, varReplacer25969)


	 in Method: java.util.List export()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #a58f2cd592c25f08337fda8caef0c986a3160c5e7197aec6d463c4baee86639a)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: specialinvoke $r27.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>($r26)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r23.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer27000, $r24, $r25)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r23.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer27000, $r24, $r25)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r24.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r16, varReplacer26982)


Findings in Java Class: eu.siacs.conversations.persistance.FileBackend

	 in Method: boolean save(eu.siacs.conversations.xmpp.pep.Avatar)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f5b454041c350f22e07f66155b28ebab2a5fd46d04aac338eaf8424bc5ca4e2e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r19 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer26910)

		TypestateError violating CrySL rule for java.security.DigestOutputStream (on Object #a647cf94383c7ebdaf021e1f4fbad643535071a50e3356276138849e7c8f222d)
			Unexpected call to method close on object of type java.security.DigestOutputStream. Expect a call to one of the following methods write
			at statement: virtualinvoke $r20.<java.security.DigestOutputStream: void close()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #f5b454041c350f22e07f66155b28ebab2a5fd46d04aac338eaf8424bc5ca4e2e)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r22 = virtualinvoke $r19.<java.security.MessageDigest: byte[] digest()>()


	 in Method: eu.siacs.conversations.xmpp.pep.Avatar getPepAvatar(android.graphics.Bitmap,android.graphics.Bitmap$CompressFormat,int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #681021c5482706909809751af9d996e632299afd7dd080d6cacef25b608db762)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer37490)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #681021c5482706909809751af9d996e632299afd7dd080d6cacef25b608db762)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r13 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #681021c5482706909809751af9d996e632299afd7dd080d6cacef25b608db762)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r8.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r6, $r7)


	 in Method: eu.siacs.conversations.xmpp.pep.Avatar getStoredPepAvatar(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.DigestOutputStream
			Second parameter was not properly generated as generatedMessageDigest
			at statement: specialinvoke $r2.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r13, $r14)

		TypestateError violating CrySL rule for java.security.DigestOutputStream (on Object #ccffdc56aeedf26373126522c29f3f81bc4d43fe45704cb92d71aa4d0ea63c8f)
			Unexpected call to method close on object of type java.security.DigestOutputStream. Expect a call to one of the following methods write
			at statement: virtualinvoke $r2.<java.security.DigestOutputStream: void close()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b9ecd872ed149b11c40931033afda94b514cfe3d0cadc20799bebe9e3d6c29d6)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer39833)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #b9ecd872ed149b11c40931033afda94b514cfe3d0cadc20799bebe9e3d6c29d6)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r15 = virtualinvoke $r14.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: eu.siacs.conversations.xmpp.jingle.JingleInBandTransport

	 in Method: void receive(eu.siacs.conversations.entities.DownloadableFile,eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #64b4cf0ba433278550a1aca795984112b5080d89db17431d1ee88b04d44d7df)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer28158)


	 in Method: void send(eu.siacs.conversations.entities.DownloadableFile,eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7f2af23c69f4a6780597e493ec1bd8eae01e1489740cf6c106ad134c46dde607)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer37647)


	 in Method: void sendNextBlock()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #7f2af23c69f4a6780597e493ec1bd8eae01e1489740cf6c106ad134c46dde607)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #7f2af23c69f4a6780597e493ec1bd8eae01e1489740cf6c106ad134c46dde607)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: eu.siacs.conversations.xmpp.jingle.JingleFileTransferConnection

	 in Method: void sendAcceptIbb()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #64b4cf0ba433278550a1aca795984112b5080d89db17431d1ee88b04d44d7df)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r10.<eu.siacs.conversations.xmpp.jingle.JingleTransport: void receive(eu.siacs.conversations.entities.DownloadableFile,eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged)>($r11, $r12)


	 in Method: void receiveFallbackToIbb(eu.siacs.conversations.xmpp.jingle.stanzas.JinglePacket,eu.siacs.conversations.xmpp.jingle.stanzas.IbbTransportInfo)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #64b4cf0ba433278550a1aca795984112b5080d89db17431d1ee88b04d44d7df)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r15.<eu.siacs.conversations.xmpp.jingle.JingleTransport: void receive(eu.siacs.conversations.entities.DownloadableFile,eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged)>($r16, $r17)


Findings in Java Class: eu.siacs.conversations.xmpp.jingle.JingleFileTransferConnection$3

	 in Method: void success()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #64b4cf0ba433278550a1aca795984112b5080d89db17431d1ee88b04d44d7df)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r2.<eu.siacs.conversations.xmpp.jingle.JingleTransport: void receive(eu.siacs.conversations.entities.DownloadableFile,eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged)>($r3, $r4)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #7f2af23c69f4a6780597e493ec1bd8eae01e1489740cf6c106ad134c46dde607)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r2.<eu.siacs.conversations.xmpp.jingle.JingleTransport: void send(eu.siacs.conversations.entities.DownloadableFile,eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged)>($r3, $r4)


Findings in Java Class: org.cweb.crypto.lib.HKDF

	 in Method: byte[][] computeKdf(byte[],byte[],byte[],int,java.lang.String)
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #9404e40e9b40b4c4d74d3ef191b8255a7104f8faed9af33f559d9679cdaf254c)
			Unexpected call to method init on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer36809)


Findings in Java Class: eu.siacs.conversations.xmpp.jingle.JingleFileTransferConnection$2

	 in Method: void established()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #7f2af23c69f4a6780597e493ec1bd8eae01e1489740cf6c106ad134c46dde607)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r7.<eu.siacs.conversations.xmpp.jingle.JingleTransport: void send(eu.siacs.conversations.entities.DownloadableFile,eu.siacs.conversations.xmpp.jingle.OnFileTransmissionStatusChanged)>($r8, $r9)


Findings in Java Class: eu.siacs.conversations.parser.IqParser

	 in Method: android.util.Pair verification(eu.siacs.conversations.xmpp.stanzas.IqPacket)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #238330f659e84cc74ef9a91e05df873bdc7705bdc01fb3625d2f6912bb4cbbbf)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r15 = virtualinvoke $r9.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r1)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #238330f659e84cc74ef9a91e05df873bdc7705bdc01fb3625d2f6912bb4cbbbf)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r9 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer39630)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #238330f659e84cc74ef9a91e05df873bdc7705bdc01fb3625d2f6912bb4cbbbf)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r15 = virtualinvoke $r9.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r1)


Findings in Java Class: okhttp3.internal.platform.Platform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #59313df9a840512ae0a6d288f7fa456a228288909233e13b11f9cc663fd83f38)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer40433)


	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer30328, $r10, varReplacer30328)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer30328, $r10, varReplacer30328)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer30328, $r10, varReplacer30328)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer30313)


Findings in Java Class: okhttp3.internal.platform.ConscryptPlatform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2cd931346e19987e8fd34bc52f279b7c27d73724757c6656cb4f740dff0788b6)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer40434, $r2)


	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer30335, $r5, varReplacer30335)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer30316)


Findings in Java Class: okhttp3.internal.platform.BouncyCastlePlatform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #3a465431e4b9ef9d579d74e070c90e25c980ee487bd0889d552dc3a1ece2332a)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer40437, $r2)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer30321)


Findings in Java Class: eu.siacs.conversations.generator.AbstractGenerator

	 in Method: java.lang.String getCapHash(eu.siacs.conversations.entities.Account)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d71b210a7b27eca310233d6fa1b4ce5c0e22eff4ba81d9e3565520bceef00302)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer40638)


Findings in Java Class: eu.siacs.conversations.entities.ServiceDiscoveryResult

	 in Method: byte[] mkCapHash()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8ebf1f170711dc02e7ed2ae62d167ba3a3e2699229cec5495f0cdb3af1838c65)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer45488)


Findings in Java Class: org.conscrypt.SSLUtils

	 in Method: java.security.cert.X509Certificate decodeX509Certificate(java.security.cert.CertificateFactory,byte[])
		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #86ba6f9baa17e4bb7822a4e0dc738bd76726e51d4e4c1296e67439195f619139)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r3 = virtualinvoke $r2.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r1)


	 in Method: java.security.cert.X509Certificate[] decodeX509CertificateChain(byte[][])
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #86ba6f9baa17e4bb7822a4e0dc738bd76726e51d4e4c1296e67439195f619139)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r4 = staticinvoke <org.conscrypt.SSLUtils: java.security.cert.X509Certificate decodeX509Certificate(java.security.cert.CertificateFactory,byte[])>($r2, $r3)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #86ba6f9baa17e4bb7822a4e0dc738bd76726e51d4e4c1296e67439195f619139)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r2 = staticinvoke <org.conscrypt.SSLUtils: java.security.cert.CertificateFactory getCertificateFactory()>()


Findings in Java Class: de.measite.minidns.dnssec.algorithms.JavaSecDigestCalculator

	 in Method: void <init>(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #27f10d36f956bb46cbfe64756f259ad7962bc65acc218ac50caa3410dcd06af5)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


Findings in Java Class: de.measite.minidns.dnssec.algorithms.AlgorithmMap

	 in Method: void <init>()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #27f10d36f956bb46cbfe64756f259ad7962bc65acc218ac50caa3410dcd06af5)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8)


Findings in Java Class: org.whispersystems.libsignal.SessionCipher

	 in Method: byte[] getPlaintext(org.whispersystems.libsignal.ratchet.MessageKeys,byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #cc051acc041c0a136ea51e959c94ab16aa16d2053aace7d742ac8572f654470e)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)


	 in Method: byte[] getCiphertext(org.whispersystems.libsignal.ratchet.MessageKeys,byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #cc051acc041c0a136ea51e959c94ab16aa16d2053aace7d742ac8572f654470e)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)


	 in Method: javax.crypto.Cipher getCipher(int,javax.crypto.spec.SecretKeySpec,javax.crypto.spec.IvParameterSpec)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r3, $r1)


Findings in Java Class: de.measite.minidns.dnssec.algorithms.JavaSecSignatureVerifier

	 in Method: void <init>(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #d6bb4b30cdbee7ff837ce1cc95136a9cd54ac9f5129c558d6320a140033e2fcc)
			First parameter (with value "ECGOST3410") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r3)


	 in Method: boolean verify(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r7.<java.security.Signature: void initVerify(java.security.PublicKey)>($r5)


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest$okio(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ae39b036c5eeeba58d380660f68e23806935f12d2f5c9cefe65440425aa34f4a)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: okio.SegmentedByteString

	 in Method: okio.ByteString digest$okio(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: org.cweb.crypto.lib.DoubleRatchet

	 in Method: byte[] kdfChainKey(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer42988)


Findings in Java Class: org.whispersystems.libsignal.ratchet.ChainKey

	 in Method: byte[] getBaseMaterial(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer54296)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r1)


Findings in Java Class: org.whispersystems.libsignal.protocol.SignalMessage

	 in Method: byte[] getMac(org.whispersystems.libsignal.IdentityKey,org.whispersystems.libsignal.IdentityKey,javax.crypto.spec.SecretKeySpec,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Mac: void init(java.security.Key)>($r1)


Findings in Java Class: org.whispersystems.libsignal.state.SessionState

	 in Method: org.whispersystems.libsignal.ratchet.MessageKeys removeMessageKeys(org.whispersystems.libsignal.ecc.ECPublicKey,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer60128)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)


Findings in Java Class: org.whispersystems.libsignal.kdf.HKDF

	 in Method: byte[] expand(byte[],byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer57760)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Mac: void init(java.security.Key)>($r2)


	 in Method: byte[] extract(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer57758)


Findings in Java Class: org.cweb.storage.remote.AWSV4HeaderSigner

	 in Method: byte[] sign(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer38767)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r0)


Findings in Java Class: org.conscrypt.OpenSSLX509Certificate

	 in Method: java.security.PublicKey getPublicKey()
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r9)


	 in Method: void verifyInternal(java.security.PublicKey,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: eu.siacs.conversations.utils.TLSSocketFactory

	 in Method: void <init>(javax.net.ssl.X509TrustManager[],java.security.SecureRandom)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer37207, $r2, $r1)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer37207, $r2, $r1)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer37207, $r2, $r1)


Findings in Java Class: okhttp3.internal.platform.OpenJSSEPlatform

	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer30308)


Findings in Java Class: org.whispersystems.libsignal.kdf.DerivedMessageSecrets

	 in Method: void <init>(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer54297)


Findings in Java Class: org.conscrypt.ct.CTLogInfo

	 in Method: org.conscrypt.ct.VerifiedSCT$Status verifySingleSCT(org.conscrypt.ct.SignedCertificateTimestamp,org.conscrypt.ct.CertificateEntry)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r10.<java.security.Signature: void initVerify(java.security.PublicKey)>($r11)


Findings in Java Class: org.cweb.crypto.IdentityCryptoService

	 in Method: java.security.KeyPair constructRSAKeyPair(org.cweb.schemas.local.IdentityKeys)
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r0.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r4, $r5)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r0.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r4, $r5)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 233

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 26
	RequiredPredicateError: 72
	TypestateError: 24
	HardCodedError: 2
	IncompleteOperationError: 17
	NeverTypeOfError: 2
=====================================================================
