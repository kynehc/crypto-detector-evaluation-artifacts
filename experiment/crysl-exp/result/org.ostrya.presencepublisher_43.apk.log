0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer2681, $r1, $i1, $i0)
		Method: <q2.a: java.security.spec.AlgorithmParameterSpec d(byte[],int,int)>
		SHA-256: 327634e525f04f0de0accb12fe89631de28d78b9e286abf96f3aad4ace518874
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer16307)
		Method: <q2.a: void <init>(byte[])>
		SHA-256: 99c178e8a2e8f762239155f68228c3236c6a6fdf9cc2444a28345edabf5bc039
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5060)
		Method: <s2.b: byte[] c(byte[],byte[])>
		SHA-256: 596fa24063ab0bb8682d9d861a6feaf18dc479ba70909ac1a572e5e2e209d261
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer15255)
		Method: <z0.c: boolean d(java.lang.String)>
		SHA-256: 47be1f6de9f36731093fcc82a674b3fb2e91cff27cc43d1b53172f7e420b3f1
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r4.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer9444, $i0, $r3, varReplacer9445)
		Method: <s2.b: byte[] d(byte[],byte[])>
		SHA-256: b4748dfe250b7e5254075f56af6d0b2525c931897d9986e6083b171dec2df739
		Secure: false
	Object:
		Variable: varReplacer16307
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer16307)
		Method: <q2.a: void <init>(byte[])>
		SHA-256: b9eba6c2ccb7bb0eb0f08a6212174220977b8271a15eb87acb142746bedcfb0e
		Secure: false
	Object:
		Variable: varReplacer14204
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer14204)
		Method: <t2.b$a: o2.o c(v2.v)>
		SHA-256: 789d6985dad2dfb98e916232a591f1e6545a8acc07dae1eac9a707baf1e15dc
		Secure: false
	Object:
		Variable: varReplacer5024
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer5024)
		Method: <w2.d: byte[] a(byte[],byte[])>
		SHA-256: 5ba7b2ab7a471dca4dc5950da6f66f3b1c63b6fb63cffd8945c899254b0f3056
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, varReplacer5056, $i0)
		Method: <s2.b: byte[] c(byte[],byte[])>
		SHA-256: d54f96a712ad83d6a3327784e57ad3ea3d8b5bb5edbd09e32f3c97e3d671b198
		Secure: false
	Object:
		Variable: varReplacer9470
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer9470)
		Method: <w2.d: byte[] b(byte[],byte[])>
		SHA-256: 7fa64968ed833f7ffdc123f78c31396639227262350635cdbc84d0a29c6cd59a
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer16308)
		Method: <w2.a: void <init>(byte[],int)>
		SHA-256: 2aefe1b661e14ba3722b2f0bb9ccc291b64a1f72bfc5b21b1ae2a6419481837a
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.eclipse.paho.client.mqttv3.internal.websocket.a: byte[] e()>
		SHA-256: 7b4e08b196a3191d63836285ccf42cdbd5e17f9e5a393c9d90cfd33df209c354
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer17120)
		Method: <s2.c$b: void <init>()>
		SHA-256: 59b88fc807319ec7f2995fe145fe96c46967553e6259f9f4f7dbd75509a69fa9
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r4 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r3)
		Method: <y3.a: javax.net.ssl.SSLSocketFactory b(java.lang.String)>
		SHA-256: fee89f360dd5de3a337793db25fd4d19957a07f13f233eebbb271136a60514bd
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.lang.String)>($r11, $r12)
		Method: <m3.a: javax.net.ssl.SSLContext m(java.lang.String)>
		SHA-256: e0030e453eeb47e41e334c8edfbfe2d4ecfc8456e7a5af293a37168f6c0bdb7c
		Secure: false
	Object:
		Variable: $r25
		Type: javax.net.ssl.TrustManager[]
		Statement: $r25 = virtualinvoke $r24.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <m3.a: javax.net.ssl.SSLContext m(java.lang.String)>
		SHA-256: 7ec3bd5c6d83c46b5468d29eba41163972ec072d1f106d3ae30a3f336c7e0643
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <w2.d: byte[] b(byte[],byte[])>
		SHA-256: e6b736376d5c63a48c71b7f0cc70e54f269e5fe5ee81c5152995dd6ab948794c
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.KeyManager[]
		Statement: $r17 = virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <m3.a: javax.net.ssl.SSLContext m(java.lang.String)>
		SHA-256: d2fbda3b099924693eea37ab2b30517bdca2957108f3ea05371b6736c3802efa
		Secure: false
	Object:
		Variable: $r24
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r24 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r4)
		Method: <m3.a: javax.net.ssl.SSLContext m(java.lang.String)>
		SHA-256: 26dc9819b6ff1f56bc1aee1fe268e336536e684233a42cea9d394bc07b6e96d7
		Secure: false
	Object:
		Variable: varReplacer16308
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer16308)
		Method: <w2.a: void <init>(byte[],int)>
		SHA-256: 8bc5a40fa3df5f12b918e57a1301abc50467f8ffa6a0cfdf59e9af4cc46f74e1
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <w2.n$f: java.security.MessageDigest b(java.lang.String,java.security.Provider)>
		SHA-256: ca1d39862678201296c51a955260641b41154c498e78328991560b425c11fd3
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <w2.b: byte[] a(byte[],byte[])>
		SHA-256: ca733fbff339bede4703e56b81ed9174c168a0f859dae759148c367160322f13
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer15281, varReplacer15282)
		Method: <s2.c: void d(java.lang.String)>
		SHA-256: 261229bf7a6d212323670d0be15814a04a4e0928902e0717912f2c649898e015
		Secure: true
	Object:
		Variable: $r9
		Type: javax.net.ssl.KeyManager[]
		Statement: $r9 = virtualinvoke $r8.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <y3.a: javax.net.ssl.KeyManager[] a(java.lang.String)>
		SHA-256: b3fedeac24e41693914418a7f40d512938395225af19ea9526701c399b8ba54c
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLParameters
		Statement: specialinvoke $r6.<javax.net.ssl.SSLParameters: void <init>()>()
		Method: <org.eclipse.paho.client.mqttv3.internal.h: void start()>
		SHA-256: 138dee18e72ef537258ec9e3d7f0ec8dc58903255a986ade321cb1b1f2ef37a4
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer15252, varReplacer15253)
		Method: <z0.c: void b(android.security.keystore.KeyGenParameterSpec)>
		SHA-256: d471ce7b726595be66203c7d5eaf753bd87730ef7618505dde997718e7440a0b
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer16300)
		Method: <w2.r: void <init>(byte[])>
		SHA-256: cef3b355d64609027a1b794faf3017600a94e54fb7f3f2abb2b1113d988b9289
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Key
		Statement: $r4 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <w2.s: void <init>(java.lang.String,java.security.Key)>
		SHA-256: db778a469e2c07f24e236048c94cce0f49a830493d28131e489abad4295415b3
		Secure: true
	Object:
		Variable: $r14
		Type: java.security.KeyStore
		Statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <m3.a: javax.net.ssl.SSLContext m(java.lang.String)>
		SHA-256: dc56aad2a84fb525c8d92caa218da9bb103c90acf9e6406f90d7494ebe206c49
		Secure: false
	Object:
		Variable: varReplacer16289
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer16289)
		Method: <w2.b: void <init>(byte[],int)>
		SHA-256: 431b0300e600347cc5410f13a668546e21282d0ae0977e112aa1ef9fdb424c03
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.KeyStore
		Statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <m3.a: javax.net.ssl.SSLContext m(java.lang.String)>
		SHA-256: dc56aad2a84fb525c8d92caa218da9bb103c90acf9e6406f90d7494ebe206c49
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer8182)
		Method: <y3.a: javax.net.ssl.KeyManager[] a(java.lang.String)>
		SHA-256: 2862adf50ab882493311085f95bca7a8d06b1c37b2ddaea05a29f5a011fff6c7
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)
		Method: <w2.n$c: java.security.KeyFactory b(java.lang.String,java.security.Provider)>
		SHA-256: b4685fd106a1e31a899c5b655323b5e2ecd58d5370c856c31e356de5b560b666
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <w2.n$f: java.security.MessageDigest b(java.lang.String,java.security.Provider)>
		SHA-256: 39a65b2f31ec2206a49112d28b586f97fee8878a2d835f6d43a01b13d0081e98
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer9444, $i0, $r3, varReplacer9445)
		Method: <s2.b: byte[] d(byte[],byte[])>
		SHA-256: ef8e795eef6275691cc66c4bc11063746ff0109c42a7818642715842a4f50d36
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r0, $i0, $i1)
		Method: <w2.c: java.security.spec.AlgorithmParameterSpec d(byte[],int,int)>
		SHA-256: dde86f75aef0345ed98bcb32f28936ec5b48e7a3c6b53ea45fd621a3e82e18e0
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer6030)
		Method: <y3.a: javax.net.ssl.SSLSocketFactory b(java.lang.String)>
		SHA-256: f0927dd240e77ffc1e85879bcc5cb5853d077aa66c4b03413aa54ca53597da28
		Secure: false
	Object:
		Variable: $i1
		Type: int
		Statement: $i1 = virtualinvoke $r0.<java.security.SecureRandom: int nextInt(int)>(varReplacer7751)
		Method: <org.eclipse.paho.client.mqttv3.internal.websocket.a: byte[] e()>
		SHA-256: 820546ac9f7e5b50161c3c2ec68e4f7fc60bfe758beb2bbc801eadb48abfc755
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <o2.j: int g()>
		SHA-256: ddf4a6dff0b276e50599a734c4f6c11b6c050c209b1ee9d88d59f1c5d002d9b4
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <w2.n$e: javax.crypto.Mac b(java.lang.String,java.security.Provider)>
		SHA-256: 5e63281c2320d85f4de881e5b70505a7c19ee71fcd55f00acda0fce9b71931c2
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer16310)
		Method: <w2.c: void <init>(byte[])>
		SHA-256: b7d06530a2b8c39be5962dbe3975a7c31371f3a1408aeb4a8dffe12753bf56ac
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <w2.s: void <init>(java.lang.String,java.security.Key)>
		SHA-256: 1cb70da8115704aa4474389eb80f41505cf60bf238f39e4f0fc3d500568d5220
		Secure: true
	Object:
		Variable: varReplacer16310
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer16310)
		Method: <w2.c: void <init>(byte[])>
		SHA-256: 1ea22f00aa547cbd1d74f7a6bbab36ffb8cd98d2f0a93ec71ae47469cf68c8f4
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer2682, $r0, $i0, $i1)
		Method: <w2.c: java.security.spec.AlgorithmParameterSpec d(byte[],int,int)>
		SHA-256: dc098d2b61b5ec0d9b4d650ddab7b12d8539d7a8c6d8194afda7f92fdf82f1a9
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <w2.n$g: java.security.Signature b(java.lang.String,java.security.Provider)>
		SHA-256: 6e3e76d119214c85475f8e8cd4def38bac6ee2f9b6695f57455012fb4539c51f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6038)
		Method: <y3.a: javax.net.ssl.SSLSocketFactory b(java.lang.String)>
		SHA-256: 1feee2e2009f7887546b089d4ba5cce81f70051ff18219f2caa3233d69fb8bf8
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <w2.n$g: java.security.Signature b(java.lang.String,java.security.Provider)>
		SHA-256: c3c8b58bd0c06dd2822ac7f2777f67c30145b0ba3007c11c951ab9f7f681329f
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12474)
		Method: <n3.d: byte[] e(java.lang.String)>
		SHA-256: ef2e49395bf7a00ba616394c09d48cc4a3873c539dbceb560d70f9f0de3c3111
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Key
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r1, varReplacer17600)
		Method: <s2.b: void <init>(java.lang.String,java.security.KeyStore)>
		SHA-256: 72b66d7055b1ae59ab48ff55ba72338c996ee01db05cd263c9906a228ede1206
		Secure: false
	Object:
		Variable: $r8
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r8 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r1)
		Method: <y3.a: javax.net.ssl.KeyManager[] a(java.lang.String)>
		SHA-256: 31ea56f6153da2520f1b7c04eb91d54860278e303c15435ec645f338e7d3fa13
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyPairGenerator
		Statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r2)
		Method: <w2.n$d: java.security.KeyPairGenerator b(java.lang.String,java.security.Provider)>
		SHA-256: a872783c81ac110ccde3e9a7ac7046137ca4e2123dc86b9ff56f511ad16d448b
		Secure: false
	Object:
		Variable: $i2
		Type: int
		Statement: $i2 = virtualinvoke $r0.<java.security.SecureRandom: int nextInt(int)>(varReplacer7752)
		Method: <org.eclipse.paho.client.mqttv3.internal.websocket.a: byte[] e()>
		SHA-256: f4a1875afc5441af554589a5094fb037e0591ae9947b37566e4f262cffff937c
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.cert.CertificateFactory
		Statement: $r2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer18711)
		Method: <org.ostrya.presencepublisher.ui.preference.about.SignaturePreferenceDummy: java.lang.String V0(android.content.pm.Signature,java.lang.String)>
		SHA-256: 11bb8ad0b38dfa3d4332cf384bd15b092f4ad07a5bca7276303dead396eb56aa
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer5057, $r2, varReplacer5058, varReplacer5059)
		Method: <s2.b: byte[] c(byte[],byte[])>
		SHA-256: 548ac330a4d522bdeea37497a6a190f56642d811e051292980f663052464b908
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer4077)
		Method: <z0.b: boolean b()>
		SHA-256: cb3bce85a8818e95b1b07471dbf83db3c8256484b3bf9565e2da09dc0b49d0ff
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <n3.d: byte[] e(java.lang.String)>
		SHA-256: 8239f4221e78b744b0c7e4778ad0be3dab01b7df57b1c9bca79dce7e3cc07bc7
		Secure: false
	Object:
		Variable: $r24
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r24 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>($r4, $r11)
		Method: <m3.a: javax.net.ssl.SSLContext m(java.lang.String)>
		SHA-256: 9c62663f758b4b4fae96d45e4120ee931f7759c5f2db3cf0c0c6cdbba4169f21
		Secure: false
	Object:
		Variable: $i3
		Type: int
		Statement: $i3 = virtualinvoke $r0.<java.security.SecureRandom: int nextInt(int)>(varReplacer7753)
		Method: <org.eclipse.paho.client.mqttv3.internal.websocket.a: byte[] e()>
		SHA-256: e1861780bce2a4ce2de6db486e096ce06a9a06540dbcfbcf8dcc8ab8ae0ac2d5
		Secure: true
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLParameters
		Statement: specialinvoke $r6.<javax.net.ssl.SSLParameters: void <init>()>()
		Method: <org.eclipse.paho.client.mqttv3.internal.h: void start()>
		SHA-256: 138dee18e72ef537258ec9e3d7f0ec8dc58903255a986ade321cb1b1f2ef37a4
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r11)
		Method: <m3.a: javax.net.ssl.SSLContext m(java.lang.String)>
		SHA-256: c07438c0c726a06873c44277809cbe8ce2a9e61a8ab10acd8ed26b23bd7de27f
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r0.<java.security.SecureRandom: int nextInt(int)>(varReplacer7750)
		Method: <org.eclipse.paho.client.mqttv3.internal.websocket.a: byte[] e()>
		SHA-256: c9953f5320a8b0d318fc176832256f72901266b42526de5d23fd1cfcc1d5baee
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer17129)
		Method: <s2.c: boolean e(java.lang.String)>
		SHA-256: fced6d469287707c5a32213e72cad6a5ea904986aeedc0771ba8106db2a162c5
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer5024)
		Method: <w2.d: byte[] a(byte[],byte[])>
		SHA-256: ce2dd015a0de26e6ef14515c45373491ca8acd16ac6b7ef788fad4ad71f1b5b0
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.KeyAgreement
		Statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <w2.n$b: javax.crypto.KeyAgreement b(java.lang.String,java.security.Provider)>
		SHA-256: 42e085d167ce90a052fcb5d2560cb1d1984ff2bb176d53b44b943b36d51cdbb5
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.TrustManager[]
		Statement: $r7 = virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <y3.a: javax.net.ssl.SSLSocketFactory b(java.lang.String)>
		SHA-256: 85d3bc23195412149b18f528ee0837656a957314ea2b015613ba6fc75e9ecba4
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <w2.n$a: javax.crypto.Cipher b(java.lang.String,java.security.Provider)>
		SHA-256: 7881f0542993b41d3a7fd035a12aae6966d34b4f9cf034d5ce7781f59a9ac110
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyPairGenerator
		Statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <w2.n$d: java.security.KeyPairGenerator b(java.lang.String,java.security.Provider)>
		SHA-256: aa25eebd36e3e6f0848caf059013d7ed6065ac9ce796403822833c0c16220c2e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r1, $i1, $i0)
		Method: <q2.a: java.security.spec.AlgorithmParameterSpec d(byte[],int,int)>
		SHA-256: 346e937d838addea51e59f6ad9fa65bf80eafe964ad5b5841121109290142690
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer14204)
		Method: <t2.b$a: o2.o c(v2.v)>
		SHA-256: c6dd40a3a549b618a8eea00c8aef4050adde9d94bc7ae2cbb4c4f1cb8aa30646
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer16289)
		Method: <w2.b: void <init>(byte[],int)>
		SHA-256: f280bc4ba2a3430ce292a69ff79e22460e1ae0abc385ee6615df7f75290d53ef
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)
		Method: <w2.n$c: java.security.KeyFactory b(java.lang.String,java.security.Provider)>
		SHA-256: c0bddca5bf633d1f81e928df450e02ed20a090aeb1b25d14ef0004fdc8365091
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9443)
		Method: <s2.b: byte[] d(byte[],byte[])>
		SHA-256: 5c4d6bd50a2d7fed37ea1ace6bfad9f6440a90e46325a193ad7bd5cb56d8d537
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <w2.d: byte[] a(byte[],byte[])>
		SHA-256: 5aca104b39535034b02e52b11abf1507cff421e4fa35d104288b7ab261451c71
		Secure: false
	Object:
		Variable: varReplacer16300
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer16300)
		Method: <w2.r: void <init>(byte[])>
		SHA-256: a2968f41980c2097a0536882aa10dd0152c6439dda5f906a0fcc9f377b3aa062
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <o2.j: int g()>
		SHA-256: 59248ab5f6dd04da75bacfc0651146832f2fe46a60c83d775e50705183a6319
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.KeyAgreement
		Statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)
		Method: <w2.n$b: javax.crypto.KeyAgreement b(java.lang.String,java.security.Provider)>
		SHA-256: 6dfb691e1ec48df702b055b8aaf957e2c5d918a43eac1f508c23de630dae2a56
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)
		Method: <w2.n$e: javax.crypto.Mac b(java.lang.String,java.security.Provider)>
		SHA-256: bdc1258c94ac1b3e07b9a129a2775f81ea6f3c954d0ac5e1fe299eae6a1de589
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLContext
		Statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r4, $r3)
		Method: <m3.a: javax.net.ssl.SSLContext m(java.lang.String)>
		SHA-256: b86a0ea90f3547987ad1f567e1418fc46c5f408a3f43c8329195b1d9d8546d7
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <w2.n$c: java.security.KeyFactory b(java.lang.String,java.security.Provider)>
		SHA-256: c8e640420798ac6b5a636edae322de4e2b39171a839db3bd3f98c506ada70465
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <w2.b: byte[] b(byte[],byte[])>
		SHA-256: 54a406e68c5e5d26afa57cf55e2bd2381045257286f42e94150d14fa3b855852
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <w2.n$c: java.security.KeyFactory b(java.lang.String,java.security.Provider)>
		SHA-256: 6cc9b1a217b9b555d3271d578852f8b633345d10eeb2254b26cd971212b04502
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <w2.n$a: javax.crypto.Cipher b(java.lang.String,java.security.Provider)>
		SHA-256: ac24a291e724759b44b81ec8cd2a3b0b75f14780376e606b15b222f16e1a34a0
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <w2.a: void c(byte[],int,int,byte[],int,byte[],boolean)>
		SHA-256: 2e0d879cd6fa651bddf222dcd69161229ac1642012b9372a1361c3b7ad1efe60
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer9470)
		Method: <w2.d: byte[] b(byte[],byte[])>
		SHA-256: 5513f02ea67efdaa28c76b0f926d100f445771f855aa9398c1f4a8343092a3f1
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLContext
		Statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r4)
		Method: <m3.a: javax.net.ssl.SSLContext m(java.lang.String)>
		SHA-256: b0283d7078b3ce9de4b0e07b965441aed6eb87c9111c5171021d9b6c7a46e0e5
		Secure: false

Findings in Java Class: org.eclipse.paho.client.mqttv3.internal.h

	 in Method: void start()
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLParameters (on Object #138dee18e72ef537258ec9e3d7f0ec8dc58903255a986ade321cb1b1f2ef37a4)
			Operation on object of type javax.net.ssl.SSLParameters object not completed. Expected call to setProtocols, setCipherSuites
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLSocket: void setSSLParameters(javax.net.ssl.SSLParameters)>($r6)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLParameters (on Object #138dee18e72ef537258ec9e3d7f0ec8dc58903255a986ade321cb1b1f2ef37a4)
			Operation on object of type javax.net.ssl.SSLParameters object not completed. Expected call to setProtocols, setCipherSuites
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLSocket: void setSSLParameters(javax.net.ssl.SSLParameters)>($r6)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLParameters (on Object #138dee18e72ef537258ec9e3d7f0ec8dc58903255a986ade321cb1b1f2ef37a4)
			Operation on object of type javax.net.ssl.SSLParameters object not completed. Expected call to setProtocols, setCipherSuites
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLSocket: void setSSLParameters(javax.net.ssl.SSLParameters)>($r6)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLParameters (on Object #138dee18e72ef537258ec9e3d7f0ec8dc58903255a986ade321cb1b1f2ef37a4)
			Operation on object of type javax.net.ssl.SSLParameters object not completed. Expected call to setProtocols, setCipherSuites
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLSocket: void setSSLParameters(javax.net.ssl.SSLParameters)>($r6)


Findings in Java Class: z0.b

	 in Method: boolean b()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #cb3bce85a8818e95b1b07471dbf83db3c8256484b3bf9565e2da09dc0b49d0ff)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer4077)


Findings in Java Class: y3.a

	 in Method: javax.net.ssl.SSLSocketFactory b(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r6, $r7, varReplacer6034)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #fee89f360dd5de3a337793db25fd4d19957a07f13f233eebbb271136a60514bd)
			Operation on object of type javax.net.ssl.TrustManagerFactory object not completed. Expected call to init
			at statement: $r4 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r3)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #f0927dd240e77ffc1e85879bcc5cb5853d077aa66c4b03413aa54ca53597da28)
			First parameter (with value "AndroidCAStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer6030)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r5)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r6, $r7, varReplacer6034)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #1feee2e2009f7887546b089d4ba5cce81f70051ff18219f2caa3233d69fb8bf8)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6038)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #f0927dd240e77ffc1e85879bcc5cb5853d077aa66c4b03413aa54ca53597da28)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer6030)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r6, $r7, varReplacer6034)


	 in Method: javax.net.ssl.KeyManager[] a(java.lang.String)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #31ea56f6153da2520f1b7c04eb91d54860278e303c15435ec645f338e7d3fa13)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r8.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r5, $r7)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #31ea56f6153da2520f1b7c04eb91d54860278e303c15435ec645f338e7d3fa13)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r8.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r5, $r7)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r8.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r5, $r7)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #2862adf50ab882493311085f95bca7a8d06b1c37b2ddaea05a29f5a011fff6c7)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer8178, $r7)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #2862adf50ab882493311085f95bca7a8d06b1c37b2ddaea05a29f5a011fff6c7)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer8178, $r7)


Findings in Java Class: w2.n$c

	 in Method: java.security.KeyFactory b(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #b4685fd106a1e31a899c5b655323b5e2ecd58d5370c856c31e356de5b560b666)
			First parameter (with value "AES/CTR/NoPadding") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #b4685fd106a1e31a899c5b655323b5e2ecd58d5370c856c31e356de5b560b666)
			First parameter (with value "AES/ECB/NoPadding") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #6cc9b1a217b9b555d3271d578852f8b633345d10eeb2254b26cd971212b04502)
			First parameter (with value "AES/ECB/NoPadding") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #6cc9b1a217b9b555d3271d578852f8b633345d10eeb2254b26cd971212b04502)
			First parameter (with value "AES/CTR/NoPadding") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r2, $r1)


Findings in Java Class: w2.n$g

	 in Method: java.security.Signature b(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #c3c8b58bd0c06dd2822ac7f2777f67c30145b0ba3007c11c951ab9f7f681329f)
			First parameter (with value "AES/ECB/NoPadding") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #c3c8b58bd0c06dd2822ac7f2777f67c30145b0ba3007c11c951ab9f7f681329f)
			First parameter (with value "AES/CTR/NoPadding") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #6e3e76d119214c85475f8e8cd4def38bac6ee2f9b6695f57455012fb4539c51f)
			First parameter (with value "AES/CTR/NoPadding") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #6e3e76d119214c85475f8e8cd4def38bac6ee2f9b6695f57455012fb4539c51f)
			First parameter (with value "AES/ECB/NoPadding") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r2, $r1)


Findings in Java Class: w2.r

	 in Method: byte[] a(byte[],int)
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #42e085d167ce90a052fcb5d2560cb1d1984ff2bb176d53b44b943b36d51cdbb5)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #6dfb691e1ec48df702b055b8aaf957e2c5d918a43eac1f508c23de630dae2a56)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #39a65b2f31ec2206a49112d28b586f97fee8878a2d835f6d43a01b13d0081e98)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ca1d39862678201296c51a955260641b41154c498e78328991560b425c11fd3)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ac24a291e724759b44b81ec8cd2a3b0b75f14780376e606b15b222f16e1a34a0)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ac24a291e724759b44b81ec8cd2a3b0b75f14780376e606b15b222f16e1a34a0)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r5 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #7881f0542993b41d3a7fd035a12aae6966d34b4f9cf034d5ce7781f59a9ac110)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #7881f0542993b41d3a7fd035a12aae6966d34b4f9cf034d5ce7781f59a9ac110)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r5 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #6e3e76d119214c85475f8e8cd4def38bac6ee2f9b6695f57455012fb4539c51f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #c3c8b58bd0c06dd2822ac7f2777f67c30145b0ba3007c11c951ab9f7f681329f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #5e63281c2320d85f4de881e5b70505a7c19ee71fcd55f00acda0fce9b71931c2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #bdc1258c94ac1b3e07b9a129a2775f81ea6f3c954d0ac5e1fe299eae6a1de589)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #a872783c81ac110ccde3e9a7ac7046137ca4e2123dc86b9ff56f511ad16d448b)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #aa25eebd36e3e6f0848caf059013d7ed6065ac9ce796403822833c0c16220c2e)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


	 in Method: void b()
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #6e3e76d119214c85475f8e8cd4def38bac6ee2f9b6695f57455012fb4539c51f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #c3c8b58bd0c06dd2822ac7f2777f67c30145b0ba3007c11c951ab9f7f681329f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #39a65b2f31ec2206a49112d28b586f97fee8878a2d835f6d43a01b13d0081e98)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ca1d39862678201296c51a955260641b41154c498e78328991560b425c11fd3)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #42e085d167ce90a052fcb5d2560cb1d1984ff2bb176d53b44b943b36d51cdbb5)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #6dfb691e1ec48df702b055b8aaf957e2c5d918a43eac1f508c23de630dae2a56)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #a872783c81ac110ccde3e9a7ac7046137ca4e2123dc86b9ff56f511ad16d448b)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #aa25eebd36e3e6f0848caf059013d7ed6065ac9ce796403822833c0c16220c2e)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ac24a291e724759b44b81ec8cd2a3b0b75f14780376e606b15b222f16e1a34a0)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #7881f0542993b41d3a7fd035a12aae6966d34b4f9cf034d5ce7781f59a9ac110)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #5e63281c2320d85f4de881e5b70505a7c19ee71fcd55f00acda0fce9b71931c2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #bdc1258c94ac1b3e07b9a129a2775f81ea6f3c954d0ac5e1fe299eae6a1de589)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer17599, $r2)


	 in Method: void <init>(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer16300)


Findings in Java Class: w2.d

	 in Method: byte[] b(byte[],byte[])
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #a872783c81ac110ccde3e9a7ac7046137ca4e2123dc86b9ff56f511ad16d448b)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #aa25eebd36e3e6f0848caf059013d7ed6065ac9ce796403822833c0c16220c2e)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #6e3e76d119214c85475f8e8cd4def38bac6ee2f9b6695f57455012fb4539c51f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #c3c8b58bd0c06dd2822ac7f2777f67c30145b0ba3007c11c951ab9f7f681329f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer9470)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #39a65b2f31ec2206a49112d28b586f97fee8878a2d835f6d43a01b13d0081e98)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ca1d39862678201296c51a955260641b41154c498e78328991560b425c11fd3)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #42e085d167ce90a052fcb5d2560cb1d1984ff2bb176d53b44b943b36d51cdbb5)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #6dfb691e1ec48df702b055b8aaf957e2c5d918a43eac1f508c23de630dae2a56)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #5e63281c2320d85f4de881e5b70505a7c19ee71fcd55f00acda0fce9b71931c2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #bdc1258c94ac1b3e07b9a129a2775f81ea6f3c954d0ac5e1fe299eae6a1de589)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ac24a291e724759b44b81ec8cd2a3b0b75f14780376e606b15b222f16e1a34a0)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #7881f0542993b41d3a7fd035a12aae6966d34b4f9cf034d5ce7781f59a9ac110)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)


	 in Method: byte[] a(byte[],byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #ac24a291e724759b44b81ec8cd2a3b0b75f14780376e606b15b222f16e1a34a0)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #7881f0542993b41d3a7fd035a12aae6966d34b4f9cf034d5ce7781f59a9ac110)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #42e085d167ce90a052fcb5d2560cb1d1984ff2bb176d53b44b943b36d51cdbb5)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #6dfb691e1ec48df702b055b8aaf957e2c5d918a43eac1f508c23de630dae2a56)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #39a65b2f31ec2206a49112d28b586f97fee8878a2d835f6d43a01b13d0081e98)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ca1d39862678201296c51a955260641b41154c498e78328991560b425c11fd3)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #5e63281c2320d85f4de881e5b70505a7c19ee71fcd55f00acda0fce9b71931c2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #bdc1258c94ac1b3e07b9a129a2775f81ea6f3c954d0ac5e1fe299eae6a1de589)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #6e3e76d119214c85475f8e8cd4def38bac6ee2f9b6695f57455012fb4539c51f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #c3c8b58bd0c06dd2822ac7f2777f67c30145b0ba3007c11c951ab9f7f681329f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #a872783c81ac110ccde3e9a7ac7046137ca4e2123dc86b9ff56f511ad16d448b)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #aa25eebd36e3e6f0848caf059013d7ed6065ac9ce796403822833c0c16220c2e)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer5024)


Findings in Java Class: w2.n$b

	 in Method: javax.crypto.KeyAgreement b(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #42e085d167ce90a052fcb5d2560cb1d1984ff2bb176d53b44b943b36d51cdbb5)
			First parameter (with value "AES/CTR/NoPadding") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #6dfb691e1ec48df702b055b8aaf957e2c5d918a43eac1f508c23de630dae2a56)
			First parameter (with value "AES/CTR/NoPadding") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #42e085d167ce90a052fcb5d2560cb1d1984ff2bb176d53b44b943b36d51cdbb5)
			First parameter (with value "AES/ECB/NoPadding") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #6dfb691e1ec48df702b055b8aaf957e2c5d918a43eac1f508c23de630dae2a56)
			First parameter (with value "AES/ECB/NoPadding") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)


Findings in Java Class: w2.n$f

	 in Method: java.security.MessageDigest b(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ca1d39862678201296c51a955260641b41154c498e78328991560b425c11fd3)
			First parameter (with value "AES/CTR/NoPadding") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ca1d39862678201296c51a955260641b41154c498e78328991560b425c11fd3)
			First parameter (with value "AES/ECB/NoPadding") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #39a65b2f31ec2206a49112d28b586f97fee8878a2d835f6d43a01b13d0081e98)
			First parameter (with value "AES/CTR/NoPadding") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #39a65b2f31ec2206a49112d28b586f97fee8878a2d835f6d43a01b13d0081e98)
			First parameter (with value "AES/ECB/NoPadding") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r2, $r1)


Findings in Java Class: w2.n$e

	 in Method: javax.crypto.Mac b(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #bdc1258c94ac1b3e07b9a129a2775f81ea6f3c954d0ac5e1fe299eae6a1de589)
			First parameter (with value "AES/ECB/NoPadding") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #bdc1258c94ac1b3e07b9a129a2775f81ea6f3c954d0ac5e1fe299eae6a1de589)
			First parameter (with value "AES/CTR/NoPadding") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #5e63281c2320d85f4de881e5b70505a7c19ee71fcd55f00acda0fce9b71931c2)
			First parameter (with value "AES/ECB/NoPadding") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #5e63281c2320d85f4de881e5b70505a7c19ee71fcd55f00acda0fce9b71931c2)
			First parameter (with value "AES/CTR/NoPadding") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)>($r2, $r1)


Findings in Java Class: w2.n$a

	 in Method: javax.crypto.Cipher b(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ac24a291e724759b44b81ec8cd2a3b0b75f14780376e606b15b222f16e1a34a0)
			First parameter (with value "AES/ECB/NoPadding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7881f0542993b41d3a7fd035a12aae6966d34b4f9cf034d5ce7781f59a9ac110)
			First parameter (with value "AES/ECB/NoPadding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r2, $r1)


Findings in Java Class: w2.n$d

	 in Method: java.security.KeyPairGenerator b(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #aa25eebd36e3e6f0848caf059013d7ed6065ac9ce796403822833c0c16220c2e)
			First parameter (with value "AES/CTR/NoPadding") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #aa25eebd36e3e6f0848caf059013d7ed6065ac9ce796403822833c0c16220c2e)
			First parameter (with value "AES/ECB/NoPadding") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #a872783c81ac110ccde3e9a7ac7046137ca4e2123dc86b9ff56f511ad16d448b)
			First parameter (with value "AES/ECB/NoPadding") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #a872783c81ac110ccde3e9a7ac7046137ca4e2123dc86b9ff56f511ad16d448b)
			First parameter (with value "AES/CTR/NoPadding") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r2)


Findings in Java Class: n3.d

	 in Method: byte[] e(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ef2e49395bf7a00ba616394c09d48cc4a3873c539dbceb560d70f9f0de3c3111)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12474)


Findings in Java Class: t2.b$a

	 in Method: o2.o c(v2.v)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #c6dd40a3a549b618a8eea00c8aef4050adde9d94bc7ae2cbb4c4f1cb8aa30646)
			Second parameter (with value "HMAC") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer14204)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer14204)


Findings in Java Class: z0.c

	 in Method: boolean d(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #47be1f6de9f36731093fcc82a674b3fb2e91cff27cc43d1b53172f7e420b3f1)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer15255)


Findings in Java Class: s2.c$b

	 in Method: void <init>()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #59b88fc807319ec7f2995fe145fe96c46967553e6259f9f4f7dbd75509a69fa9)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer17120)


Findings in Java Class: s2.c

	 in Method: boolean e(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #fced6d469287707c5a32213e72cad6a5ea904986aeedc0771ba8106db2a162c5)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer17129)


Findings in Java Class: m3.a

	 in Method: javax.net.ssl.SSLContext m(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r24.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r14)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r25, varReplacer17203)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #dc56aad2a84fb525c8d92caa218da9bb103c90acf9e6406f90d7494ebe206c49)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #dc56aad2a84fb525c8d92caa218da9bb103c90acf9e6406f90d7494ebe206c49)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e0030e453eeb47e41e334c8edfbfe2d4ecfc8456e7a5af293a37168f6c0bdb7c)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e0030e453eeb47e41e334c8edfbfe2d4ecfc8456e7a5af293a37168f6c0bdb7c)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #dc56aad2a84fb525c8d92caa218da9bb103c90acf9e6406f90d7494ebe206c49)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #dc56aad2a84fb525c8d92caa218da9bb103c90acf9e6406f90d7494ebe206c49)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #b0283d7078b3ce9de4b0e07b965441aed6eb87c9111c5171021d9b6c7a46e0e5)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r25, varReplacer17203)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e0030e453eeb47e41e334c8edfbfe2d4ecfc8456e7a5af293a37168f6c0bdb7c)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e0030e453eeb47e41e334c8edfbfe2d4ecfc8456e7a5af293a37168f6c0bdb7c)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r25, varReplacer17203)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #b86a0ea90f3547987ad1f567e1418fc46c5f408a3f43c8329195b1d9d8546d7)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r4, $r3)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #dc56aad2a84fb525c8d92caa218da9bb103c90acf9e6406f90d7494ebe206c49)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #dc56aad2a84fb525c8d92caa218da9bb103c90acf9e6406f90d7494ebe206c49)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)


Findings in Java Class: org.ostrya.presencepublisher.ui.preference.about.SignaturePreferenceDummy

	 in Method: java.lang.String V0(android.content.pm.Signature,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #11bb8ad0b38dfa3d4332cf384bd15b092f4ad07a5bca7276303dead396eb56aa)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r5 = virtualinvoke $r2.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r3)


Findings in Java Class: q2.a

	 in Method: java.security.spec.AlgorithmParameterSpec d(byte[],int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r1, $i1, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer2681, $r1, $i1, $i0)


	 in Method: void <init>(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer16307)


Findings in Java Class: s2.b

	 in Method: byte[] c(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5055, $r1, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer5055, $r1, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer5057, $r2, varReplacer5058, varReplacer5059)


	 in Method: byte[] d(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer9446, $r5)


Findings in Java Class: w2.a

	 in Method: void <init>(byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer16308)


	 in Method: void c(byte[],int,int,byte[],int,byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


Findings in Java Class: w2.b

	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


	 in Method: void <init>(byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer16289)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


Findings in Java Class: w2.c

	 in Method: java.security.spec.AlgorithmParameterSpec d(byte[],int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer2682, $r0, $i0, $i1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r0, $i0, $i1)


	 in Method: void <init>(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer16310)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 85

	CryptoAnalysis found the following violations. For details see description above.
	TypestateError: 10
	IncompleteOperationError: 48
	ConstraintError: 35
	HardCodedError: 7
	RequiredPredicateError: 32
	NeverTypeOfError: 7
=====================================================================
