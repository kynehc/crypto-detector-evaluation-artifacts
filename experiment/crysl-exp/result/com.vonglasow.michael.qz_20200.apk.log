0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.hsqldb.persist.Crypto: byte[] getNewKey(java.lang.String,java.lang.String)>
		SHA-256: cc03228297620c7e8d15050d80998571f1d8449f024d9c82fc0232bf8378c684
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <org.hsqldb.persist.Crypto: void <init>(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 100c413b42632c216696796c4932f1156e0cd88eb533c55cd5e52c8451a15002
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.hsqldb.persist.Crypto: void <init>(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 10010ac1fa6197edfbcff775c19bc7bd39962a28b082730ddb86f56e3eded4fb
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <org.hsqldb.persist.Crypto: void <init>(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 100c413b42632c216696796c4932f1156e0cd88eb533c55cd5e52c8451a15002
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r5.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r3, $r4)
		Method: <org.hsqldb.persist.Crypto: java.io.InputStream getInputStream(java.io.InputStream)>
		SHA-256: 85a40927b42899c37314f9ac1696b9ba0edb4d574d9b46ce938864144d5b488b
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>($r1, $r0)
		Method: <org.hsqldb.persist.Crypto: byte[] getNewKey(java.lang.String,java.lang.String)>
		SHA-256: 6e001bc346934a459522bb5f5991f4ff85a21feec435422b14f7cfed3bc11876
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <org.hsqldb.persist.Crypto: void <init>(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 100c413b42632c216696796c4932f1156e0cd88eb533c55cd5e52c8451a15002
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = interfaceinvoke $r5.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <org.hsqldb.persist.Crypto: byte[] getNewKey(java.lang.String,java.lang.String)>
		SHA-256: 7dfabbaf88874a3ed217700734495b172503a7669ec92707f913d41461b5c661
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <org.hsqldb.rights.GranteeManager: java.security.MessageDigest getDigester()>
		SHA-256: f9a4eeba5421d3ce43919c733db42b6a606d361fe4b606ae4b595d16ed18bd2a
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r3)
		Method: <org.hsqldb.persist.Crypto: void <init>(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: bee3c62d428a0613f4cd76315f04c3b262700030071ae86b47fa839a73e7cbc9
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>($r1)
		Method: <org.hsqldb.persist.Crypto: byte[] getNewKey(java.lang.String,java.lang.String)>
		SHA-256: 50fb0b6a45da39010c3cae319da7fd375130e8011c674a08d446acf8c888164e
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.hsqldb.persist.Crypto: void <init>(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 10010ac1fa6197edfbcff775c19bc7bd39962a28b082730ddb86f56e3eded4fb
		Secure: false
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r3)
		Method: <org.hsqldb.persist.Crypto: void <init>(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 8fe7fae49c99c18fee0b0b8813163295fe1d30642b63d54b2c934a3acbc64aeb
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <org.hsqldb.persist.Crypto: void <init>(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 100c413b42632c216696796c4932f1156e0cd88eb533c55cd5e52c8451a15002
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.hsqldb.persist.Crypto: void <init>(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 10010ac1fa6197edfbcff775c19bc7bd39962a28b082730ddb86f56e3eded4fb
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r5.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r3, $r4)
		Method: <org.hsqldb.persist.Crypto: java.io.OutputStream getOutputStream(java.io.OutputStream)>
		SHA-256: 1ec41c07d9a7d309d82fe13e36f90cf074d3680895d766d52ca4eb70d7a955c4
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.hsqldb.persist.Crypto: void <init>(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 10010ac1fa6197edfbcff775c19bc7bd39962a28b082730ddb86f56e3eded4fb
		Secure: false

Findings in Java Class: org.hsqldb.persist.Crypto

	 in Method: void <init>(java.lang.String,java.lang.String,java.lang.String)
		ForbiddenMethodError violating CrySL rule for javax.crypto.Cipher
			Detected call to forbidden method void init(int,java.security.Key) of class javax.crypto.Cipher. Instead, call method <javax.crypto.Cipher: void init(int,java.security.Key)>.
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer22956, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer22955, $r5)


Findings in Java Class: org.hsqldb.scriptio.ScriptReaderDecode

	 in Method: void close()
		TypestateError violating CrySL rule for javax.crypto.CipherInputStream (on Object #85a40927b42899c37314f9ac1696b9ba0edb4d574d9b46ce938864144d5b488b)
			Unexpected call to method close on object of type javax.crypto.CipherInputStream. Expect a call to one of the following methods read
			at statement: virtualinvoke $r8.<java.io.InputStream: void close()>()


Findings in Java Class: org.hsqldb.persist.ScriptRunner

	 in Method: void runScript(org.hsqldb.Database,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #85a40927b42899c37314f9ac1696b9ba0edb4d574d9b46ce938864144d5b488b)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: staticinvoke <org.hsqldb.persist.ScriptRunner: void runScript(org.hsqldb.Database,org.hsqldb.scriptio.ScriptReaderBase)>($r1, $r4)


	 in Method: void runScript(org.hsqldb.Database,org.hsqldb.scriptio.ScriptReaderBase)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #85a40927b42899c37314f9ac1696b9ba0edb4d574d9b46ce938864144d5b488b)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $r17 = virtualinvoke $r1.<org.hsqldb.scriptio.ScriptReaderBase: java.lang.String getLoggedStatement()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #85a40927b42899c37314f9ac1696b9ba0edb4d574d9b46ce938864144d5b488b)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $i0 = virtualinvoke $r1.<org.hsqldb.scriptio.ScriptReaderBase: int getLineNumber()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #85a40927b42899c37314f9ac1696b9ba0edb4d574d9b46ce938864144d5b488b)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $i0 = virtualinvoke $r1.<org.hsqldb.scriptio.ScriptReaderBase: int getLineNumber()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #85a40927b42899c37314f9ac1696b9ba0edb4d574d9b46ce938864144d5b488b)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $i0 = virtualinvoke $r1.<org.hsqldb.scriptio.ScriptReaderBase: int getLineNumber()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #85a40927b42899c37314f9ac1696b9ba0edb4d574d9b46ce938864144d5b488b)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: virtualinvoke $r1.<org.hsqldb.scriptio.ScriptReaderBase: void close()>()


Findings in Java Class: org.hsqldb.jdbc.JDBCBlobFile$2

	 in Method: void close()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #85a40927b42899c37314f9ac1696b9ba0edb4d574d9b46ce938864144d5b488b)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r0)


Findings in Java Class: org.hsqldb.persist.Log

	 in Method: void processScript()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #85a40927b42899c37314f9ac1696b9ba0edb4d574d9b46ce938864144d5b488b)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r14.<org.hsqldb.scriptio.ScriptReaderDecode: void <init>(org.hsqldb.Database,java.lang.String,org.hsqldb.persist.Crypto,boolean)>($r2, $r6, $r4, varReplacer22982)


Findings in Java Class: org.hsqldb.jdbc.JDBCClobFile$1

	 in Method: void close()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #85a40927b42899c37314f9ac1696b9ba0edb4d574d9b46ce938864144d5b488b)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r0)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 17

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 9
	ForbiddenMethodError: 1
	TypestateError: 1
	RequiredPredicateError: 2
=====================================================================
