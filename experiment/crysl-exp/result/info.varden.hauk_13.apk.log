0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5970)
		Method: <info.varden.hauk.system.security.KeyStoreHelper: info.varden.hauk.system.security.EncryptedData encrypt(byte[])>
		SHA-256: c8cd68659acf28e73f9693c76fbc2819709b7c0f13231ff90868014467921fed
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: virtualinvoke $r6.<java.security.SecureRandom: void nextBytes(byte[])>($r7)
		Method: <info.varden.hauk.http.SessionInitiationPacket: void <init>(android.content.Context,info.varden.hauk.http.SessionInitiationPacket$InitParameters,info.varden.hauk.http.SessionInitiationPacket$ResponseHandler)>
		SHA-256: 69156cba17d9fc40a193642600e2145a7aca5b5884247e63a464f05302826c53
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.SecretKey
		Statement: $r9 = virtualinvoke $r5.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <info.varden.hauk.system.security.KeyStoreHelper: void <init>(info.varden.hauk.system.security.KeyStoreAlias)>
		SHA-256: 5f3f1e510c4009b08aa1820eaac1ce922dd8f847607c281d349752e5187ca796
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4202)
		Method: <info.varden.hauk.system.security.KeyStoreHelper: byte[] decrypt(info.varden.hauk.system.security.EncryptedData)>
		SHA-256: 6043d614fd9e21306e15681f03a52a5cb9c5c66d071e286f158552d95d604fa5
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer4200, $r5)
		Method: <info.varden.hauk.system.security.KeyStoreHelper: byte[] decrypt(info.varden.hauk.system.security.EncryptedData)>
		SHA-256: 37adb3eb63256ed11d5e015ea113e2ac8e5a245a7a9f7a8d2e490c1250cc65fd
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.KeyGenerator
		Statement: $r5 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer3024, varReplacer3025)
		Method: <info.varden.hauk.system.security.KeyStoreHelper: void <init>(info.varden.hauk.system.security.KeyStoreAlias)>
		SHA-256: 62577cd331a515f733710ebd529547190181aaefc92bf3744ddb4ea750de95b4
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <info.varden.hauk.http.SessionInitiationPacket: void <init>(android.content.Context,info.varden.hauk.http.SessionInitiationPacket$InitParameters,info.varden.hauk.http.SessionInitiationPacket$ResponseHandler)>
		SHA-256: 6e5a317e299e576e3c260024f9b9e8132b34ad8f7dd6b4e01d13513485d2dd85
		Secure: true
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3078)
		Method: <info.varden.hauk.http.security.InsecureTrustManager: javax.net.ssl.SSLSocketFactory getSocketFactory()>
		SHA-256: 5c1e19b76771795239ce5b80b990071531a792e0dfc422fff5ede5c84794582f
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyStore
		Statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3026)
		Method: <info.varden.hauk.system.security.KeyStoreHelper: void loadKeyStore()>
		SHA-256: 9e36f0a32e99f84b28766e269abfaa779aed49b4e180aa9c0f81b27d9d000521
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <info.varden.hauk.http.security.InsecureTrustManager: javax.net.ssl.SSLSocketFactory getSocketFactory()>
		SHA-256: 2eb1d6cd9f33d4441b2ddb6d41f3fa26a5b6dbc2d1269214df2f1f323411f4c6
		Secure: true

Findings in Java Class: info.varden.hauk.system.security.KeyStoreHelper

	 in Method: void loadKeyStore()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #9e36f0a32e99f84b28766e269abfaa779aed49b4e180aa9c0f81b27d9d000521)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3026)


	 in Method: byte[] decrypt(info.varden.hauk.system.security.EncryptedData)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4201, $r2, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer4200, $r5)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #6043d614fd9e21306e15681f03a52a5cb9c5c66d071e286f158552d95d604fa5)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r5 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)


	 in Method: info.varden.hauk.system.security.EncryptedData encrypt(byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #c8cd68659acf28e73f9693c76fbc2819709b7c0f13231ff90868014467921fed)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)


Findings in Java Class: info.varden.hauk.http.security.InsecureTrustManager

	 in Method: javax.net.ssl.SSLSocketFactory getSocketFactory()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #5c1e19b76771795239ce5b80b990071531a792e0dfc422fff5ede5c84794582f)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3078)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3077, $r5, $r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3077, $r5, $r4)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 10

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 4
	ConstraintError: 2
	TypestateError: 2
=====================================================================
