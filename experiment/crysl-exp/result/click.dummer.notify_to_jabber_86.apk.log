0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: javax.crypto.Mac
		Statement: $r1 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer8622)
		Method: <org.jivesoftware.smack.util.MAC: void <clinit>()>
		SHA-256: 57bae27f48c067b6b1fd7bbc828070b9613894c367cb56d03f23bd33a98cfc9c
		Secure: false
	Object:
		Variable: $r20
		Type: java.security.KeyStore
		Statement: $r20 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r8)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 3e36fff33a2de33894b20bb624e6c84f0f81735b86272175956a15c8c5d494e7
		Secure: false
	Object:
		Variable: $r23
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r23 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer4515)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: bde0b8abc7ca5343a646c54831ca768a0b711e40440a1dacf21ed5a2df9f759b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer6075)
		Method: <de.measite.minidns.Client: void <init>(de.measite.minidns.DNSCache)>
		SHA-256: 151031cce7804b7e3c6a2ade6eb7d85731c103a3d2d92568645879c7f75e2bc4
		Secure: true
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4506)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 1c216f797f00c86b921a3a8495b9d11a14cf5c688fc6030472fcd3a4473a9397
		Secure: false
	Object:
		Variable: $r37
		Type: java.security.SecureRandom
		Statement: specialinvoke $r37.<java.security.SecureRandom: void <init>()>()
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 44af9e6b57538e89a0ce7b4762286e374c942f364d3cd59f191405f9dacb170b
		Secure: true
	Object:
		Variable: varReplacer8623
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8623)
		Method: <org.jivesoftware.smack.util.MAC: byte[] hmacsha1(byte[],byte[])>
		SHA-256: 10d3a3f2a27ad63f8a969889cd98df9125e2745283382aeba00ac3426c10540
		Secure: false
	Object:
		Variable: $r20
		Type: java.security.KeyStore
		Statement: $r20 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(varReplacer4511, varReplacer4512)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: ee1533036469be9915b72559b17d5ceee97b142bd73e62147a15da2e98d9653e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <de.measite.minidns.Client: void <init>(de.measite.minidns.DNSCache)>
		SHA-256: d4c6e3746d56f41e213d8adfe97adb1998241eb838e47bbe42a6bfa04ae93a
		Secure: true
	Object:
		Variable: $r20
		Type: java.security.KeyStore
		Statement: $r20 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)>(varReplacer4520, $r19)
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: 4f144593d129c9a018759325a1fa701ee854a99c41f2fed2417b1eff71b9c67b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.cert.CertificateFactory
		Statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer11346)
		Method: <okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)>
		SHA-256: 10b90c9586759ce65cd8c8b72bf9aa4840606431d4fc7b7daf34b17c89f2c526
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8623)
		Method: <org.jivesoftware.smack.util.MAC: byte[] hmacsha1(byte[],byte[])>
		SHA-256: 6f93d4120e3da775871199680bfbbf1bc42584302b4533f36145faf275f0f197
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8621)
		Method: <org.jivesoftware.smack.util.SHA1: void <clinit>()>
		SHA-256: a3a44dea309471ddce22d79ecb71953e62cda89a570cbf50590d2f96ea4e5b00
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: a79a1700ae9d8d44f13ea218f751e7024f8f1222b1b2ae17cdbab7b56d352181
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.jivesoftware.smack.sasl.core.SCRAMSHA1Mechanism: void <clinit>()>
		SHA-256: 2ba42fa894bc4d058f45f9a3f6af58b2e3df3ca1519d901d30f9a8895df561b5
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8610)
		Method: <org.jivesoftware.smack.util.MD5: void <clinit>()>
		SHA-256: b0e1afbbcd648f351271e2938df4ad04ed030cf3a4c020ae234d8c02c823a08d
		Secure: false
	Object:
		Variable: $r24
		Type: javax.net.ssl.KeyManager[]
		Statement: $r24 = virtualinvoke $r23.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.jivesoftware.smack.tcp.XMPPTCPConnection: void proceedTLSReceived()>
		SHA-256: b15aa55dc0eed68f8c71fd5d43bdc836bf330a9058881d6b626584e395e5e535
		Secure: false

Findings in Java Class: org.jivesoftware.smack.tcp.XMPPTCPConnection

	 in Method: void proceedTLSReceived()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r23.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r9, varReplacer4517)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #ee1533036469be9915b72559b17d5ceee97b142bd73e62147a15da2e98d9653e)
			First parameter (with value "KeychainStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r20 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(varReplacer4511, varReplacer4512)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #bde0b8abc7ca5343a646c54831ca768a0b711e40440a1dacf21ed5a2df9f759b)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r23.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r9, $r21)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r24, varReplacer4516, $r37)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #1c216f797f00c86b921a3a8495b9d11a14cf5c688fc6030472fcd3a4473a9397)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4506)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #3e36fff33a2de33894b20bb624e6c84f0f81735b86272175956a15c8c5d494e7)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r20.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r22, $r21)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #4f144593d129c9a018759325a1fa701ee854a99c41f2fed2417b1eff71b9c67b)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r20.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer4519, $r21)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r24, varReplacer4516, $r37)


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: org.jivesoftware.smack.util.MD5

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b0e1afbbcd648f351271e2938df4ad04ed030cf3a4c020ae234d8c02c823a08d)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8610)


Findings in Java Class: dummyMainClass

	 in Method: void dummyMainMethod(java.lang.String[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #57bae27f48c067b6b1fd7bbc828070b9613894c367cb56d03f23bd33a98cfc9c)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: return

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b0e1afbbcd648f351271e2938df4ad04ed030cf3a4c020ae234d8c02c823a08d)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a3a44dea309471ddce22d79ecb71953e62cda89a570cbf50590d2f96ea4e5b00)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return


Findings in Java Class: org.jivesoftware.smack.util.SHA1

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a3a44dea309471ddce22d79ecb71953e62cda89a570cbf50590d2f96ea4e5b00)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8621)


Findings in Java Class: org.jivesoftware.smack.util.MAC

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #57bae27f48c067b6b1fd7bbc828070b9613894c367cb56d03f23bd33a98cfc9c)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r1 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer8622)


	 in Method: byte[] hmacsha1(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #6f93d4120e3da775871199680bfbbf1bc42584302b4533f36145faf275f0f197)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8623)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8623)


Findings in Java Class: okhttp3.Cache$Entry

	 in Method: java.util.List readCertificateList(okio.BufferedSource)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #10b90c9586759ce65cd8c8b72bf9aa4840606431d4fc7b7daf34b17c89f2c526)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer11346)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #10b90c9586759ce65cd8c8b72bf9aa4840606431d4fc7b7daf34b17c89f2c526)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #10b90c9586759ce65cd8c8b72bf9aa4840606431d4fc7b7daf34b17c89f2c526)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 18

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 5
	TypestateError: 1
	RequiredPredicateError: 4
	HardCodedError: 3
	ConstraintError: 8
=====================================================================
