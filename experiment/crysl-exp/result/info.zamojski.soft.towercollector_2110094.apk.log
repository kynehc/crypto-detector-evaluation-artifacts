0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer16406, $r2)
		Method: <okhttp3.internal.platform.b: javax.net.ssl.SSLContext l()>
		SHA-256: 981a3581907bc25e56621b23480f389a97f27b314b9630ec11c1429b730b37a5
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <okhttp3.internal.platform.c: javax.net.ssl.X509TrustManager n()>
		SHA-256: 8034fb313c91aa2a1104beb617f548d7d75c2deae0b27d67adffe1da172ca704
		Secure: false
	Object:
		Variable: $r18
		Type: javax.net.ssl.TrustManager[]
		Statement: $r18 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <b6.a: void a(javax.net.ssl.HttpsURLConnection)>
		SHA-256: 7081d133712c8914345d3c09e2346d0a7f12b730d9ff5e4c0107020e3489439d
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <n5.e: javax.net.ssl.X509TrustManager n()>
		SHA-256: 2e08acbbb578841bb23a04139d2ceac83bf3a6132a94837f1199753b0b28748f
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer16410, $r2)
		Method: <okhttp3.internal.platform.c: javax.net.ssl.SSLContext l()>
		SHA-256: 8b0088b19931e5370010ff637cab80a3e6406a734786ff8d9d26c424cbcac4e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.b: javax.net.ssl.X509TrustManager n()>
		SHA-256: ec0173d3519ed79f0c0e3280ff23597ebdacf7861eb514dcf9cb9be881fa3c8f
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer12817, varReplacer12818)
		Method: <okhttp3.internal.platform.a: javax.net.ssl.X509TrustManager n()>
		SHA-256: e35fb172bc21bdb7a29bdc94262da4c4fe0594529b71a04f964cbc8a57136e1d
		Secure: false
	Object:
		Variable: $r25
		Type: javax.net.ssl.SSLContext
		Statement: $r25 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8737)
		Method: <f4.a: f5.y$a a()>
		SHA-256: bf13b9677756e2a0a5a7f92e22ca13f45b866d3ded2abc5573c156091f314440
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer16405)
		Method: <n5.e: javax.net.ssl.SSLContext l()>
		SHA-256: 6a6b6df4e394686bd8ae2c4fdb1c03e0a57049a5a431f75af3fb437d923308a7
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <n5.e: javax.net.ssl.X509TrustManager n()>
		SHA-256: b3fbf300d747daba3df8e411e58988e42463b7a28d6677cdaf9ead73f012296a
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <r5.v: r5.h c(java.lang.String)>
		SHA-256: 5946f91d36e674cd13c6351084645f1ebe1464f74f00046c6709e4a7f520af6a
		Secure: true
	Object:
		Variable: $r21
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r21 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r20)
		Method: <f4.a: f5.y$a a()>
		SHA-256: 8aa5a20ecc84f2ea617ace7ef60be3fd4e19dba9104dc67e4307ed4e5b89ef2b
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r4)
		Method: <org.acra.security.BaseKeyStoreFactory: java.security.KeyStore create(android.content.Context)>
		SHA-256: 22a183d5116504e02ad96ba67561ecf0f83bf3a7f2bfba4ad5fe01efac8fa773
		Secure: true
	Object:
		Variable: $r17
		Type: javax.net.ssl.SSLContext
		Statement: $r17 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer27212)
		Method: <b6.a: void a(javax.net.ssl.HttpsURLConnection)>
		SHA-256: c39369e9c34104016d36af1e03703425e5f12550c43d26ba928b0fcb802943f1
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <r5.h: r5.h c(java.lang.String)>
		SHA-256: f514ef4e1fb7168e1dad25c68e0b436915c23167df5f67d89982220384a9ae28
		Secure: true
	Object:
		Variable: $r22
		Type: javax.net.ssl.TrustManager[]
		Statement: $r22 = virtualinvoke $r21.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <f4.a: f5.y$a a()>
		SHA-256: 6ba5c5dfcb8c10d414073ca46fd5e48634146db9fc9fc19bb6ddfd6906e57635
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <r5.h: r5.h c(java.lang.String)>
		SHA-256: 93574bc7d97eef92346036e20e75b2bf887360b0da421c990af7655902ec4be3
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer16408, $r2)
		Method: <okhttp3.internal.platform.a: javax.net.ssl.SSLContext l()>
		SHA-256: 950119807ddc1de5054c9ea3b8566dbb7f3d69f535c8b2eed325791cd0348ca2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <r5.v: r5.h c(java.lang.String)>
		SHA-256: e04baf1c8261e55911aa25b83840f82e4dd38052513ad5f02908278fdb25ac5f
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.c: javax.net.ssl.X509TrustManager n()>
		SHA-256: a255d7df04c13d2e2b36be047671824d49f5fcbf9e06a39411bc892d0d93a200
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.cert.CertificateFactory
		Statement: $r9 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>($r4)
		Method: <org.acra.security.BaseKeyStoreFactory: java.security.KeyStore create(android.content.Context)>
		SHA-256: 6354b454ea0efe5008579fe336bf54e0cb7951f0d65e24c27930d87a53ea0e7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r2)
		Method: <b6.a: void a(javax.net.ssl.HttpsURLConnection)>
		SHA-256: b658b0f4126f1dbd5bb8212c2600b52441d4d9c74c084ff29cbc60181bf78d6f
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2435)
		Method: <c2.b: java.lang.String H(java.lang.String)>
		SHA-256: 82f1f553b80c61958dba314f6d5a431cb027f6e8daa430aeb223e2063896c9df
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer12835, $r2)
		Method: <okhttp3.internal.platform.b: javax.net.ssl.SSLSocketFactory m(javax.net.ssl.X509TrustManager)>
		SHA-256: f9397fe3e8c61d3fd6bafabbaefae26460902ce4d9b1dfd50597ad2607874895
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.a: javax.net.ssl.X509TrustManager n()>
		SHA-256: 713e574666d0e0dadc531464eb212760336e5f43c47eb4ca3f9a159575c3b4d9
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <c2.b: java.lang.String H(java.lang.String)>
		SHA-256: 8c4118a437b42c1ed2158f7073b981abc5b2a29fcefa9e23790c58221b567a9f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.b: javax.net.ssl.X509TrustManager n()>
		SHA-256: 1e76560ad12795a6cc994675d16bf86f7f735a9dfec4e34b41beba33b3218444
		Secure: false

Findings in Java Class: c2.b

	 in Method: java.lang.String H(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #82f1f553b80c61958dba314f6d5a431cb027f6e8daa430aeb223e2063896c9df)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2435)


Findings in Java Class: okhttp3.internal.platform.b

	 in Method: javax.net.ssl.SSLSocketFactory m(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12832, $r6, varReplacer12832)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12832, $r6, varReplacer12832)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f9397fe3e8c61d3fd6bafabbaefae26460902ce4d9b1dfd50597ad2607874895)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer12835, $r2)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12832, $r6, varReplacer12832)


	 in Method: javax.net.ssl.SSLContext l()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #981a3581907bc25e56621b23480f389a97f27b314b9630ec11c1429b730b37a5)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer16406, $r2)


	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer12815)


Findings in Java Class: n5.e

	 in Method: javax.net.ssl.SSLContext l()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #6a6b6df4e394686bd8ae2c4fdb1c03e0a57049a5a431f75af3fb437d923308a7)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer16405)


	 in Method: javax.net.ssl.SSLSocketFactory m(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12827, $r10, varReplacer12827)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12827, $r10, varReplacer12827)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12827, $r10, varReplacer12827)


	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer12812)


Findings in Java Class: okhttp3.internal.platform.a

	 in Method: javax.net.ssl.SSLContext l()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #950119807ddc1de5054c9ea3b8566dbb7f3d69f535c8b2eed325791cd0348ca2)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer16408, $r2)


	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer12819)


Findings in Java Class: b6.a

	 in Method: void a(javax.net.ssl.HttpsURLConnection)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer27201, $r18, varReplacer27201)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer27201, $r18, varReplacer27201)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #22a183d5116504e02ad96ba67561ecf0f83bf3a7f2bfba4ad5fe01efac8fa773)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r13)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #c39369e9c34104016d36af1e03703425e5f12550c43d26ba928b0fcb802943f1)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r17 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer27212)


Findings in Java Class: org.acra.security.BaseKeyStoreFactory

	 in Method: java.security.KeyStore create(android.content.Context)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #6354b454ea0efe5008579fe336bf54e0cb7951f0d65e24c27930d87a53ea0e7)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r10 = virtualinvoke $r9.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r1)


Findings in Java Class: r5.v

	 in Method: r5.h c(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e04baf1c8261e55911aa25b83840f82e4dd38052513ad5f02908278fdb25ac5f)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: okhttp3.internal.platform.c

	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer12826)


Findings in Java Class: f4.a

	 in Method: f5.y$a a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r21.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer8732)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r25.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8738, $r22, varReplacer8738)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r25.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8738, $r22, varReplacer8738)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r25.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8738, $r22, varReplacer8738)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 27

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 6
	TypestateError: 1
	RequiredPredicateError: 16
	IncompleteOperationError: 2
=====================================================================
