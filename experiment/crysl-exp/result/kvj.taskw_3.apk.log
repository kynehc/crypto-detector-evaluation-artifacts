0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r4 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r3)
		Method: <kvj.taskw.sync.SSLHelper: javax.net.ssl.TrustManager[] trustManagerFactoryPEM(java.io.InputStream,kvj.taskw.sync.SSLHelper$TrustType)>
		SHA-256: 21533c457a2022760be90098d39c1591b3b10d9687fd1986d6b03bc0fc0e225
		Secure: true
	Object:
		Variable: $r16
		Type: java.security.KeyFactory
		Statement: $r16 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer4086)
		Method: <kvj.taskw.sync.SSLHelper: java.security.PrivateKey loadPrivateKey(java.io.InputStream)>
		SHA-256: ace279697325861cccc22ee435a8a198228f738cc8c359823cb5a8f583f71dfe
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r2)
		Method: <kvj.taskw.sync.SSLHelper: javax.net.ssl.KeyManager[] keyManagerFactoryPEM(java.io.InputStream,java.io.InputStream)>
		SHA-256: 203d0221d12a11f7289b819270ee02a7de7a7b3853b3d4dc1720675201c2e152
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.cert.CertificateFactory
		Statement: $r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer4085)
		Method: <kvj.taskw.sync.SSLHelper: java.security.cert.X509Certificate loadCertificate(java.io.InputStream)>
		SHA-256: 1c71b66f6211190b0a231e7aacea2ffed33dddc21f45e389d0947ece49611da5
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <kvj.taskw.sync.SSLHelper: javax.net.ssl.KeyManager[] keyManagerFactoryPEM(java.io.InputStream,java.io.InputStream)>
		SHA-256: d7e9319330162e8a8f028c4515a117cd9c4e2209c237b5456dbc07f7ce4ea825
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6300)
		Method: <kvj.taskw.sync.SSLHelper$2: javax.net.ssl.SSLContext produce()>
		SHA-256: ff4200aaa9cf09e5e0ad1f0d54cf7e820f6d400733d2841ac1a9fd9127786efa
		Secure: false
	Object:
		Variable: varReplacer4086
		Type: java.lang.String
		Statement: $r16 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer4086)
		Method: <kvj.taskw.sync.SSLHelper: java.security.PrivateKey loadPrivateKey(java.io.InputStream)>
		SHA-256: 39f15b1ff43a3c9b8c2f8511734618b85500200fb50e09264af23d28dd126836
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <kvj.taskw.sync.SSLHelper: javax.net.ssl.TrustManager[] trustManagerFactoryPEM(java.io.InputStream,kvj.taskw.sync.SSLHelper$TrustType)>
		SHA-256: 369e5e6d6c250777a90475a6e6c2b163b5318046d1926a1e13b3e435e2e051cc
		Secure: true
	Object:
		Variable: $r9
		Type: javax.net.ssl.KeyManager[]
		Statement: $r9 = virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <kvj.taskw.sync.SSLHelper: javax.net.ssl.KeyManager[] keyManagerFactoryPEM(java.io.InputStream,java.io.InputStream)>
		SHA-256: 1fca157a7012d641ad2343f7e4f61033ddf948d12226836dc034003ae2276ca6
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.PrivateKey
		Statement: $r17 = virtualinvoke $r16.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>(r1)
		Method: <kvj.taskw.sync.SSLHelper: java.security.PrivateKey loadPrivateKey(java.io.InputStream)>
		SHA-256: 7feded16201d0be0505f73a6fee7840943efef5833e40b9849c4fd95a166ae3f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6301)
		Method: <kvj.taskw.sync.SSLHelper$3: javax.net.ssl.SSLContext produce()>
		SHA-256: ce3f8d59734d603dfa5e1212025298da37473764fd95b2a081e1b2b64a3dd297
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.TrustManager[]
		Statement: $r9 = virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <kvj.taskw.sync.SSLHelper: javax.net.ssl.TrustManager[] trustManagerFactoryPEM(java.io.InputStream,kvj.taskw.sync.SSLHelper$TrustType)>
		SHA-256: ddbc0fac7939475fade0f2d4aaa7b16603fc8bd5334da55da0a665437680a40
		Secure: true

Findings in Java Class: kvj.taskw.sync.SSLHelper

	 in Method: javax.net.ssl.KeyManager[] keyManagerFactoryPEM(java.io.InputStream,java.io.InputStream)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #203d0221d12a11f7289b819270ee02a7de7a7b3853b3d4dc1720675201c2e152)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r4, $r7)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #203d0221d12a11f7289b819270ee02a7de7a7b3853b3d4dc1720675201c2e152)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r4, $r7)


	 in Method: java.security.cert.X509Certificate loadCertificate(java.io.InputStream)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #1c71b66f6211190b0a231e7aacea2ffed33dddc21f45e389d0947ece49611da5)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r2 = virtualinvoke $r1.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r0)


	 in Method: java.security.PrivateKey loadPrivateKey(java.io.InputStream)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r17 = virtualinvoke $r16.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>(r1)


	 in Method: javax.net.ssl.SSLSocketFactory tlsSocket(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[])
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r0, $r1, varReplacer4070)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r0, $r1, varReplacer4070)


Findings in Java Class: kvj.taskw.sync.SSLHelper$3

	 in Method: javax.net.ssl.SSLContext produce()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ce3f8d59734d603dfa5e1212025298da37473764fd95b2a081e1b2b64a3dd297)
			First parameter (with value "TLSv1") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer6301)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 12

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 1
	NeverTypeOfError: 1
	RequiredPredicateError: 3
	HardCodedError: 1
	ConstraintError: 1
=====================================================================
