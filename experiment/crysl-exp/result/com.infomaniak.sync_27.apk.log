0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: java.security.cert.CertificateFactory
		Statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer35913)
		Method: <okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)>
		SHA-256: 2348a87708202bac8b354e41b6592b1fbb3a64b641010e82d23895d62cf71b9
		Secure: false
	Object:
		Variable: $r22
		Type: javax.net.ssl.SSLContext
		Statement: $r22 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer11796)
		Method: <at.bitfire.davdroid.HttpClient$Builder: at.bitfire.davdroid.HttpClient build()>
		SHA-256: be8acbce4c0efe809b8ee1a1718589f2927592e0918ff020c9d6f5bb600f4556
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer19868)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 98d9ec069c390f356dd4b0e49f301358eb453a96defbd8db065e728774f4681c
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer19870)
		Method: <okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: d48465084161f596f9ce34014c2a78f03bd04e21123d55117b3c54b02e748f5a
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer34123)
		Method: <com.infomaniak.lib.login.InfomaniakLogin: java.lang.String generateCodeChallenge(java.lang.String)>
		SHA-256: cfa3d2578284b518c9d93979b4837cdae671275789858e309ac95e175c5f7cdb
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <at.bitfire.cert4android.CertUtils: javax.net.ssl.X509TrustManager getTrustManager(java.security.KeyStore)>
		SHA-256: b8799c5fe616a29e0811264c2ea6ecde97b33b69ea16d9490f7839ba9416f9ce
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <at.bitfire.davdroid.HttpClient$Builder$build$trustManager$1: javax.net.ssl.X509TrustManager invoke()>
		SHA-256: 34403b0c070b21215a9f044d9dc1828e3b54f82a6c8cc4431ee4b7ad1b408291
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r13.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r9, $r12, $r4, $i1)
		Method: <org.conscrypt.OpenSSLECGroupContext: java.security.spec.ECParameterSpec getECParameterSpec()>
		SHA-256: 7223ae8f08ed0dba3dafb06f8e07e30310aca7c9be856d88494b5d1bd531fdf8
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer19866)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: acf9827c94e78172f9c5eaefb0952ed499670d1f2fa787ecbfe6d38d0b889b13
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: d02affd279e8743b6fd64cdf0e2dd47c30a5603be2e61d5718cf63d25b2d1a15
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <okio.internal.HashFunctionKt$newHashFunction$1: byte[] digest()>
		SHA-256: abd36d23985861cecf525fa9e76c9fe1519f19d5da99874a7aa4b14909046fe9
		Secure: false
	Object:
		Variable: $r8
		Type: java.lang.String
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r8)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: fb24971f565cb4681c3c1e192adc31a35b4a987353817f6def6d3d265ac75389
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.cert.CertificateFactory
		Statement: $r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer368)
		Method: <at.bitfire.cert4android.CustomCertService: void <init>()>
		SHA-256: 767f9b36b7076cf4462a8027a832b1cb93f0b20eb4c6b868701ee040f8725c74
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r9)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 7ac05a324707752a8fcdd9787a5fcda4e6af85c295ea6bb9f2ffcf779c41a30d
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyFactory
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r8)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 6635af12fb8498a7bf018ada279831a6e3024bb07fe12c7daed2b6fbc372e6bb
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer19874, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 22150c98b48cbaf2845f20b8b21ae700d8e43689da2a1c759ca92f263c2d042b
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: dea0af93b06734ae35228a014521e6e031131dd2b357359826afa61f9a6de1b
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: f325059ee6f08c9776202e677308b0f19ca0767a6821e36b4f64a531d072fa45
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <at.bitfire.cert4android.TrustCertificateActivity$Model: java.lang.String fingerprint(java.security.cert.X509Certificate,java.lang.String)>
		SHA-256: 80bb5a6c11dc982374bd6b0c8e347d800ad129ee3193efbc42d7575f4101886
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.cert.CertificateFactory
		Statement: $r0 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer30628)
		Method: <org.conscrypt.SSLUtils: java.security.cert.CertificateFactory getCertificateFactory()>
		SHA-256: 1f0bce2c9bdc86e8c76711ddcb1db6499dee8e94ed6cf7c069d4ed492826f38
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r0)
		Method: <okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: a8764d384e0e6acd4407dba0e4c2025660362892494036c03c4b52a40e75c66b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.xbill.DNS.UDPClient: void <clinit>()>
		SHA-256: fcebb9e881f86bd38585606df0d0e993ca0aa8852fe9338092fa2df92cf72b68
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.infomaniak.lib.login.InfomaniakLogin: java.lang.String generateCodeChallenge(java.lang.String)>
		SHA-256: ac03f4c7a2c598efb20c2b75d714158612e06b1059eb9d4c049108cbc18c8919
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <at.bitfire.cert4android.CustomCertService: void <init>()>
		SHA-256: 199aaf1f6c3deb5a70c14b280afa3193f856ad663d9d5628721caa275a871152
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer19873, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 864369467e56b8083ab3ff2097a381a2dfbe878193abba3665c42812b25ac7ed
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <okio.internal.HashFunctionKt$newHashFunction$1: void <init>(java.lang.String)>
		SHA-256: fb20828268f9af11f84a173397314af78807c8f30fa598e3eb0515374b28cb82
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <at.bitfire.cert4android.TrustCertificateActivity$Model: java.lang.String fingerprint(java.security.cert.X509Certificate,java.lang.String)>
		SHA-256: 540ab05120f6c85f512df14b143e0370c35ef106da829c65b1a83bc338ae3434
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.cert.CertificateFactory
		Statement: $r0 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer6634)
		Method: <at.bitfire.cert4android.TrustCertificateActivity$Model: void <clinit>()>
		SHA-256: 98e0be092dc081ab8d764513c659ee754408f152990401a1fbc2d85140d37d2e
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <com.infomaniak.lib.login.InfomaniakLogin: java.lang.String generateCodeVerifier()>
		SHA-256: fc764571c644640db166c31b2d8f8409a523df930edbcb039e67f7d2e7469441
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer844)
		Method: <at.bitfire.cert4android.CertUtils: javax.net.ssl.X509TrustManager getTrustManager(java.security.KeyStore)>
		SHA-256: b087ed6842b8b56f1f834603603de38c9142bea3e98d16453ebe37ea20d5ce6b
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r4, $r2)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: 4b73d9ea47b70e095beb17e2b4e8c62bcb1a3b70cdd913b654094befd6fbd016
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 9d110d3f3943f5f1538d33e3d18932b71ca7accf2f86c174ab417a2b10712fb0
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <at.bitfire.davdroid.HttpClient$Builder$build$trustManager$1: javax.net.ssl.X509TrustManager invoke()>
		SHA-256: cf12965bc86ea3959bc51db56035bdaf75ed6f09f0f1c2d3e33675d16cfb4657
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer19872)
		Method: <okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: e86ebc10948f771eba098207054d3dc9b9871627db0f75a04c38b7e5bdbd4bd
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.KeyStore
		Statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer11791)
		Method: <at.bitfire.davdroid.HttpClient$Builder: at.bitfire.davdroid.HttpClient build()>
		SHA-256: 3167dfd227c4cc1ac3a4d095eeb56e70c9bd3e5527a815393e460a4a9d9976c0
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: e75571d33abb1b5e330ac5b78fcc009ac5fa3b4053acda20dad8234c0598d879
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.infomaniak.lib.login.InfomaniakLogin: java.lang.String generateCodeVerifier()>
		SHA-256: 9acfade65e83b0e43de0311fc27774c70e932e0d8b52561d8b85bc9107492f4c
		Secure: true

Findings in Java Class: at.bitfire.cert4android.CustomCertService

	 in Method: void <clinit>()
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>.
			at statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


	 in Method: void <init>()
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #767f9b36b7076cf4462a8027a832b1cb93f0b20eb4c6b868701ee040f8725c74)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath
			at statement: $r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer368)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #199aaf1f6c3deb5a70c14b280afa3193f856ad663d9d5628721caa275a871152)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)


Findings in Java Class: dummyMainClass

	 in Method: at.bitfire.cert4android.CustomCertService dummyMainMethod_at_bitfire_cert4android_CustomCertService(android.content.Intent)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #199aaf1f6c3deb5a70c14b280afa3193f856ad663d9d5628721caa275a871152)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: return $r0

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #767f9b36b7076cf4462a8027a832b1cb93f0b20eb4c6b868701ee040f8725c74)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath
			at statement: return $r0


Findings in Java Class: at.bitfire.cert4android.CertUtils

	 in Method: javax.net.ssl.X509TrustManager getTrustManager(java.security.KeyStore)
		ConstraintError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #b087ed6842b8b56f1f834603603de38c9142bea3e98d16453ebe37ea20d5ce6b)
			First parameter (with value "X509") should be any of {PKIX, SunX509}
			at statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer844)


Findings in Java Class: at.bitfire.davdroid.HttpClient$Builder

	 in Method: at.bitfire.davdroid.HttpClient build()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r22.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r31, $r32, varReplacer11800)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r22.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r31, $r32, varReplacer11800)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #be8acbce4c0efe809b8ee1a1718589f2927592e0918ff020c9d6f5bb600f4556)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r22 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer11796)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #3167dfd227c4cc1ac3a4d095eeb56e70c9bd3e5527a815393e460a4a9d9976c0)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer11791)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r22.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r31, $r32, varReplacer11800)


Findings in Java Class: okhttp3.internal.platform.Platform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #acf9827c94e78172f9c5eaefb0952ed499670d1f2fa787ecbfe6d38d0b889b13)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer19866)


Findings in Java Class: okhttp3.internal.platform.AndroidPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #e86ebc10948f771eba098207054d3dc9b9871627db0f75a04c38b7e5bdbd4bd)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer19872)


Findings in Java Class: okhttp3.internal.platform.ConscryptPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #864369467e56b8083ab3ff2097a381a2dfbe878193abba3665c42812b25ac7ed)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer19873, $r2)


Findings in Java Class: okio.internal.HashFunctionKt$newHashFunction$1

	 in Method: void <init>(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fb20828268f9af11f84a173397314af78807c8f30fa598e3eb0515374b28cb82)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fb20828268f9af11f84a173397314af78807c8f30fa598e3eb0515374b28cb82)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


	 in Method: byte[] digest()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #fb20828268f9af11f84a173397314af78807c8f30fa598e3eb0515374b28cb82)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.conscrypt.SSLUtils

	 in Method: java.security.cert.X509Certificate decodeX509Certificate(java.security.cert.CertificateFactory,byte[])
		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #1f0bce2c9bdc86e8c76711ddcb1db6499dee8e94ed6cf7c069d4ed492826f38)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r3 = virtualinvoke $r2.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r1)


	 in Method: java.security.cert.X509Certificate[] decodeX509CertificateChain(byte[][])
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #1f0bce2c9bdc86e8c76711ddcb1db6499dee8e94ed6cf7c069d4ed492826f38)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r4 = staticinvoke <org.conscrypt.SSLUtils: java.security.cert.X509Certificate decodeX509Certificate(java.security.cert.CertificateFactory,byte[])>($r2, $r3)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #1f0bce2c9bdc86e8c76711ddcb1db6499dee8e94ed6cf7c069d4ed492826f38)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r2 = staticinvoke <org.conscrypt.SSLUtils: java.security.cert.CertificateFactory getCertificateFactory()>()


Findings in Java Class: okhttp3.Cache$Entry

	 in Method: java.util.List readCertificateList(okio.BufferedSource)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #2348a87708202bac8b354e41b6592b1fbb3a64b641010e82d23895d62cf71b9)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer35913)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #2348a87708202bac8b354e41b6592b1fbb3a64b641010e82d23895d62cf71b9)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #2348a87708202bac8b354e41b6592b1fbb3a64b641010e82d23895d62cf71b9)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer15582, $r7, varReplacer15582)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer15582, $r7, varReplacer15582)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer15582, $r7, varReplacer15582)


Findings in Java Class: at.bitfire.davdroid.HttpClient$Builder$build$trustManager$1

	 in Method: javax.net.ssl.X509TrustManager invoke()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer6391)


Findings in Java Class: org.conscrypt.OpenSSLX509Certificate

	 in Method: java.security.PublicKey getPublicKey()
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r9)


	 in Method: void verifyInternal(java.security.PublicKey,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: okhttp3.internal.Util

	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer15587)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 37

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 8
	ForbiddenMethodError: 1
	RequiredPredicateError: 11
	TypestateError: 3
	IncompleteOperationError: 8
=====================================================================
