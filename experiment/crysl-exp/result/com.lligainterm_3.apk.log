0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: void <init>()>
		SHA-256: 94a72c58557b7499ae339ccaddc26783d4e8f2479f98c3b8aaa1a96b1bd4d44d
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = interfaceinvoke $r5.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: void <init>()>
		SHA-256: 5c4027fccf0850b161d93b65f1f920f18da22ac322d752c79ece6284995a0be
		Secure: true
	Object:
		Variable: $r36
		Type: java.security.MessageDigest
		Statement: $r36 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5203)
		Method: <com.itextpdf.text.pdf.PdfReader: void readDecryptedDocObj()>
		SHA-256: de623683825f64221a04f9a0e1a7f66c62bfc0751a85bf02feb3c6f89fe1e204
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5363)
		Method: <com.itextpdf.text.pdf.PdfEncryption: boolean readKey(com.itextpdf.text.pdf.PdfDictionary,byte[])>
		SHA-256: f1fed1fd895b15cfe387f8f808dcbf8b9331ea392adf66b07e0c76a214379b97
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.itextpdf.text.pdf.PdfEncryption: boolean readKey(com.itextpdf.text.pdf.PdfDictionary,byte[])>
		SHA-256: b3b91eab8239bbfcda01bcaea00fa23f9b73e4fabb8c0b23c951b8c48b428d39
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.itextpdf.text.pdf.PdfEncryption: boolean readKey(com.itextpdf.text.pdf.PdfDictionary,byte[])>
		SHA-256: a5e66ba229dd8d2b39b8d2011d17706bebc0f99bc44fa8bc8159ee04d404702d
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.itextpdf.text.pdf.PdfEncryption: boolean readKey(com.itextpdf.text.pdf.PdfDictionary,byte[])>
		SHA-256: a5e66ba229dd8d2b39b8d2011d17706bebc0f99bc44fa8bc8159ee04d404702d
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r3.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: void <init>()>
		SHA-256: dd6b1c4917e70c51ad4099a7151e602f2c5913dbb831d77fc5974257d09cf92f
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5338)
		Method: <com.itextpdf.text.pdf.PdfEncryption: void <init>()>
		SHA-256: f9a7d99f5e88b5d3722fd54f6d0598509f8293ac6eeb12d7347836619fd4fada
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.KeyGenerator
		Statement: $r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer5551)
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: void <init>()>
		SHA-256: a9e7b77008b74b9237523de0341de73bc20bd6dad892a483311d304292e9b887
		Secure: true
	Object:
		Variable: $r36
		Type: java.security.MessageDigest
		Statement: $r36 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5210)
		Method: <com.itextpdf.text.pdf.PdfReader: void readDecryptedDocObj()>
		SHA-256: 9e851c558ec49370ddca9a7ce109b7ec991a46261d21c9cdcb29c7c9f545922f
		Secure: false
	Object:
		Variable: r7
		Type: byte[]
		Statement: r7 = virtualinvoke $r36.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.itextpdf.text.pdf.PdfReader: void readDecryptedDocObj()>
		SHA-256: ba48bedd9070ab7640f9060274cc887961c0b462dd76cc73b7f87b189e7ccc4b
		Secure: true
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.itextpdf.text.pdf.PdfEncryption: boolean readKey(com.itextpdf.text.pdf.PdfDictionary,byte[])>
		SHA-256: 60975a21a684b2ba2d1b73e0c2f27e9b61f2fa7bf035dbf5b1d7b3b4e4f33eca
		Secure: true

Findings in Java Class: com.itextpdf.text.pdf.PdfReader

	 in Method: void readDecryptedDocObj()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9e851c558ec49370ddca9a7ce109b7ec991a46261d21c9cdcb29c7c9f545922f)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r36 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5210)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f9a7d99f5e88b5d3722fd54f6d0598509f8293ac6eeb12d7347836619fd4fada)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r20.<com.itextpdf.text.pdf.PdfEncryption: void setCryptoMode(int,int)>(i1, $i0)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f9a7d99f5e88b5d3722fd54f6d0598509f8293ac6eeb12d7347836619fd4fada)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r20 = r0.<com.itextpdf.text.pdf.PdfReader: com.itextpdf.text.pdf.PdfEncryption decrypt>

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f9a7d99f5e88b5d3722fd54f6d0598509f8293ac6eeb12d7347836619fd4fada)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r20 = r0.<com.itextpdf.text.pdf.PdfReader: com.itextpdf.text.pdf.PdfEncryption decrypt>

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f9a7d99f5e88b5d3722fd54f6d0598509f8293ac6eeb12d7347836619fd4fada)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r20.<com.itextpdf.text.pdf.PdfEncryption: void setupByEncryptionKey(byte[],int)>(r7, $i0)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f9a7d99f5e88b5d3722fd54f6d0598509f8293ac6eeb12d7347836619fd4fada)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i0 = virtualinvoke $r20.<com.itextpdf.text.pdf.PdfEncryption: int getPermissions()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f9a7d99f5e88b5d3722fd54f6d0598509f8293ac6eeb12d7347836619fd4fada)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r20.<com.itextpdf.text.pdf.PdfEncryption: void setKey(byte[])>(r7)


Findings in Java Class: com.itextpdf.text.pdf.PdfEncryption

	 in Method: void <init>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f9a7d99f5e88b5d3722fd54f6d0598509f8293ac6eeb12d7347836619fd4fada)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5338)


Findings in Java Class: com.itextpdf.text.pdf.PdfString

	 in Method: void decrypt(com.itextpdf.text.pdf.PdfReader)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f9a7d99f5e88b5d3722fd54f6d0598509f8293ac6eeb12d7347836619fd4fada)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r2 = virtualinvoke $r1.<com.itextpdf.text.pdf.PdfReader: com.itextpdf.text.pdf.PdfEncryption getDecrypt()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f9a7d99f5e88b5d3722fd54f6d0598509f8293ac6eeb12d7347836619fd4fada)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = virtualinvoke $r2.<com.itextpdf.text.pdf.PdfEncryption: byte[] decryptByteArray(byte[])>($r4)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 13

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 8
	ConstraintError: 2
=====================================================================
