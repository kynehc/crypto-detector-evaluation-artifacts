0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 1027fce20723454b26980f38c5edb26bcec19bffa5b6443c75459b577c51d460
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.KeyPairGenerator
		Statement: $r9 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer441, varReplacer442)
		Method: <de.adorsys.android.securestoragelibrary.KeystoreTool: void generateKeyPairUnderMarshmallow(android.content.Context)>
		SHA-256: baa6db37be72b27598a308bfce2d714174c3d215ea4cc95ba91b852ae8f8ecd7
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Key
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer416, varReplacer417)
		Method: <de.adorsys.android.securestoragelibrary.KeystoreTool: boolean keyPairExists()>
		SHA-256: 8cd1e253f21499fe564eb4802437a67f48847244bf9c7e520eeaf3c08add5685
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: a729cfd5669df603070b7ba7d05b524b10a048ab1da974a5ccb1df973521b7d3
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyPairGenerator
		Statement: $r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer444, varReplacer445)
		Method: <de.adorsys.android.securestoragelibrary.KeystoreTool: void generateKeyPairForMarshmallow(android.content.Context)>
		SHA-256: a26c114802578e06ef58306f9911527e22d0210e1a1e4fe407d27e1e55366f17
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer25351, varReplacer25352)
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 144a1f623a3320d1b94bc3f0df1ab4255ffc9b21eca2edc287b4faee8f85209c
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 84f17b7e3930c76e2b174d27b9668ee8d3209ae5512e2c539d541e6ef4265515
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.SegmentedByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: 6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 316cbc86e080130334eaabd60025d96084375d0058312a103cd3255ba6f0aeb
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer453)
		Method: <de.adorsys.android.securestoragelibrary.PRNGFixes: void installLinuxPRNGSecureRandom()>
		SHA-256: 2d908804728f4d8af2f9eeb1b94c962b4395865212ee7bb4ebbcfed2dc916d6a
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: c3dcfb07eabeaead2afa7b41e33d56187e303e14a7184c21b7bac99836f2c278
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer397, varReplacer398)
		Method: <de.adorsys.android.securestoragelibrary.KeystoreTool: java.lang.String decryptMessage(android.content.Context,java.lang.String)>
		SHA-256: 992a03c810e44c1b44e78a67f07d215bc8bef4e03c9b0d7e20bc6038807fc58d
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r4.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r5, $r2)
		Method: <de.adorsys.android.securestoragelibrary.KeystoreTool: java.lang.String decryptMessage(android.content.Context,java.lang.String)>
		SHA-256: 662fc67801304b47799dd04a2d460076f8062ca80f1b922ec63d5cfc07826b73
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer448)
		Method: <de.adorsys.android.securestoragelibrary.KeystoreTool: java.security.KeyStore getKeyStoreInstance()>
		SHA-256: e3536069fce15725a74b7f7e8b8151e7a4dcc1dfe10fa0c089fe9355d57f83c2
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <okio.ByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: d4bf5cc88c644b9a20ac4aef1746c1f0c9ae862102406e7436b8866c875859ff
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 15a76129680a3cd57380001c355c828c5afc3ba9ce32fff65b352ff3390bbd6
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer399, varReplacer400)
		Method: <de.adorsys.android.securestoragelibrary.KeystoreTool: java.lang.String decryptMessage(android.content.Context,java.lang.String)>
		SHA-256: f399d7226bdf11c245c05b119c9dfe4fc89390c0a7fc741fbfdaaa915544b0c
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer409, varReplacer410)
		Method: <de.adorsys.android.securestoragelibrary.KeystoreTool: java.lang.String encryptMessage(android.content.Context,java.lang.String)>
		SHA-256: 196a19c843bc60f5266509ba59d42da3b4bf6a72c6a9bdb4c6dcade1062ef2f2
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: ae39b036c5eeeba58d380660f68e23806935f12d2f5c9cefe65440425aa34f4a
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer28749, $r2)
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 85d14d56b434b92b72e1fe1ef5fdca8f9f40b2997453c4761bfb091703a4f977
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer413, varReplacer414)
		Method: <de.adorsys.android.securestoragelibrary.KeystoreTool: java.lang.String encryptMessage(android.content.Context,java.lang.String)>
		SHA-256: 47b6c2d478c9ebdc188bc2e66200d3a2f0b6b4ae7b91225201e400288df8db53
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r5.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r4, $r2)
		Method: <de.adorsys.android.securestoragelibrary.KeystoreTool: java.lang.String encryptMessage(android.content.Context,java.lang.String)>
		SHA-256: 7f5a52db717067136eccc0f3064c8003877dc2e065493713f8daf0915ec20c35
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 5fb6984969c8c0f60ee84399ef18a49aa63648c889757c4080685ad119ecd903
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.cert.CertificateFactory
		Statement: $r6 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer30980)
		Method: <okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)>
		SHA-256: 81e4920dc429451eba1b5829d9fbdbb6c0401acc1891942063f251a6161dd26
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer28744)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 9e8699db336f3df39f36b2c2007fe3b26469a5deb58bac1aa2149ea2cff7a7bb
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <okio.SegmentedByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: b189e83daa1cae39dacb5d56f8d20e560b21d5b6f8f0c6a35bc1a551d3d1c123
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Key
		Statement: $r2 = virtualinvoke $r1.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer430, varReplacer431)
		Method: <de.adorsys.android.securestoragelibrary.KeystoreTool: java.security.PrivateKey getPrivateKey(android.content.Context)>
		SHA-256: 7e3dc538deba1a9aba303f6ccb2f43f3cf248eb00858883ff1540236c5834774
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <de.adorsys.android.securestoragelibrary.PRNGFixes: void installLinuxPRNGSecureRandom()>
		SHA-256: fbec00fe93d15517143af9e354e3e3fbfd9140a2563664ef8b53a88162c8254b
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer28743, $r2)
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 6059afe902d01b891114d3dcff6960047ac544d150922b34d7fc1486907bc5b5
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer28746, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 322db73c07de27630910a1a6b01b80205e981ffb4dc9197e00df776a986e01dc
		Secure: false

Findings in Java Class: de.adorsys.android.securestoragelibrary.KeystoreTool

	 in Method: java.lang.String decryptMessage(android.content.Context,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #662fc67801304b47799dd04a2d460076f8062ca80f1b922ec63d5cfc07826b73)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to close
			at statement: $i0 = virtualinvoke $r4.<javax.crypto.CipherInputStream: int read()>()

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #992a03c810e44c1b44e78a67f07d215bc8bef4e03c9b0d7e20bc6038807fc58d)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer397, varReplacer398)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer401, $r3)


	 in Method: java.security.KeyStore getKeyStoreInstance()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #e3536069fce15725a74b7f7e8b8151e7a4dcc1dfe10fa0c089fe9355d57f83c2)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer448)


	 in Method: void generateKeyPairUnderMarshmallow(android.content.Context)
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedRSA
			at statement: virtualinvoke $r9.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r8)


	 in Method: void generateKeyPairForMarshmallow(android.content.Context)
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedRSA
			at statement: virtualinvoke $r2.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r5)


	 in Method: java.lang.String encryptMessage(android.content.Context,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer411, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.CipherOutputStream
			Second parameter was not properly generated as generatedCipher
			at statement: specialinvoke $r5.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r4, $r2)


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest$okio(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ae39b036c5eeeba58d380660f68e23806935f12d2f5c9cefe65440425aa34f4a)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ae39b036c5eeeba58d380660f68e23806935f12d2f5c9cefe65440425aa34f4a)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: okio.SegmentedByteString

	 in Method: okio.ByteString digest$okio(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r6 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: okhttp3.internal.platform.Platform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #9e8699db336f3df39f36b2c2007fe3b26469a5deb58bac1aa2149ea2cff7a7bb)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer28744)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer25341)


	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer25358, $r3, varReplacer25358)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer25358, $r3, varReplacer25358)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer25358, $r3, varReplacer25358)


Findings in Java Class: okhttp3.internal.platform.ConscryptPlatform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #322db73c07de27630910a1a6b01b80205e981ffb4dc9197e00df776a986e01dc)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer28746, $r2)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer25347)


	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer25362, $r3, varReplacer25362)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer25362, $r3, varReplacer25362)


Findings in Java Class: okhttp3.internal.platform.BouncyCastlePlatform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #85d14d56b434b92b72e1fe1ef5fdca8f9f40b2997453c4761bfb091703a4f977)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer28749, $r2)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer25350)


Findings in Java Class: okhttp3.Cache$Entry

	 in Method: java.util.List readCertificateList(okio.BufferedSource)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #81e4920dc429451eba1b5829d9fbdbb6c0401acc1891942063f251a6161dd26)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r6 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer30980)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #81e4920dc429451eba1b5829d9fbdbb6c0401acc1891942063f251a6161dd26)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r11 = virtualinvoke $r6.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r10)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #81e4920dc429451eba1b5829d9fbdbb6c0401acc1891942063f251a6161dd26)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r11 = virtualinvoke $r6.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r10)


Findings in Java Class: okhttp3.internal.platform.OpenJSSEPlatform

	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer25336)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 30

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 9
	RequiredPredicateError: 14
	IncompleteOperationError: 3
	TypestateError: 2
=====================================================================
