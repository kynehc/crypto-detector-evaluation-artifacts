0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.c: javax.net.ssl.X509TrustManager m()>
		SHA-256: 7275ab40e6bb7dcb348a1a7b49029ffa4a4c6d51226ee4551ea393b40baed08f
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer40562, $r2)
		Method: <okhttp3.internal.platform.b: javax.net.ssl.SSLContext k()>
		SHA-256: bef35045403c726282ae994ef5b0a60e80f7063c656ad4a5dc19dbd9a3c53b20
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.b: javax.net.ssl.X509TrustManager m()>
		SHA-256: a18fd0137eba5d97a5743bb3ae04d193a96f98abf1bf50e72a044537ef2b5138
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer40566, $r2)
		Method: <okhttp3.internal.platform.c: javax.net.ssl.SSLContext k()>
		SHA-256: 68f829bac9406e5ea3e90da93a2f290bde8ea48d728398a60cea6c331569ea56
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <k8.e: javax.net.ssl.X509TrustManager m()>
		SHA-256: d4f6811d15135b7443ffacdb98d0c685081efd098cdcbbe7749978ad88582ea5
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer40558)
		Method: <k8.d: javax.net.ssl.SSLContext k()>
		SHA-256: 99c9c3be362c45ec2faf2a0b43e276e6a26d94cd9f75bec6a33ba8c6c1383b8f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer40559)
		Method: <k8.d: javax.net.ssl.SSLContext k()>
		SHA-256: 2964e3b712a1624298d73905894eb2831e3938f99945770a13eafc1e0a7d6cd7
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <o8.v: o8.h f(java.lang.String)>
		SHA-256: cf93ee4833a082d1db398bfc0051adb1e0b3c146e27b9e560c0a824c399359b8
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer37197, varReplacer37198)
		Method: <okhttp3.internal.platform.a: javax.net.ssl.X509TrustManager m()>
		SHA-256: 505b68e02e11ec763cbaeb3d63c2d9986feeda57b840598b0e251da2e8d89354
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer40556)
		Method: <k8.e: javax.net.ssl.SSLContext k()>
		SHA-256: 673a898a19f1b6f394b644fc494e73bc863ed5e887a31b81f68e24547fc6f305
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer40560)
		Method: <k8.d: javax.net.ssl.SSLContext k()>
		SHA-256: 4a23ece12eb2f6179b5fc8d2f041b3c745e4c037e795d27439e636d37e155c78
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer40564, $r2)
		Method: <okhttp3.internal.platform.a: javax.net.ssl.SSLContext k()>
		SHA-256: 27d61d72c4618d200ce8f2d3d1b67e015320c6bf991eb3b7666a7326dc6e588a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <o8.h: o8.h f(java.lang.String)>
		SHA-256: 659a3fd45ae92803cec34256cfa9d2214749202d01fd576cccfc27fe48a2a66f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <okhttp3.internal.platform.c: javax.net.ssl.X509TrustManager m()>
		SHA-256: a75000a86fac24cfcfcd4c69c7cd24fa59aaba2eef2f88708b0b7f0998e7f572
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.b: javax.net.ssl.X509TrustManager m()>
		SHA-256: 9ff5a02e2d901698875c8b27c230b093b0a05597b03d46e27c1f4ecf75938a5d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <o8.v: o8.h f(java.lang.String)>
		SHA-256: e17981ea1a3fe1ebe622bff5cd9cb2a649bc0ae27e9cdbf59a95974b8c287012
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer37213, $r2)
		Method: <okhttp3.internal.platform.b: javax.net.ssl.SSLSocketFactory l(javax.net.ssl.X509TrustManager)>
		SHA-256: ddae0b782465d5082082063d6059970675858c786b10bc61372b6f924577c0d1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <k8.e: javax.net.ssl.X509TrustManager m()>
		SHA-256: f10e059f3f182a5f6ccb98b6c94a0b98e54a456a77d6ba46e8e91651911d1014
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.a: javax.net.ssl.X509TrustManager m()>
		SHA-256: 894210ae5b72b50464d01d0f860b633a79e2177e8fc1718952bbfcbfe5b2fc99
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <o8.h: o8.h f(java.lang.String)>
		SHA-256: abbc1ec93b8c65e9fcb3410630bd2b4dce628c11e3fa1a3b1f26aa5dd38360f8
		Secure: false

Findings in Java Class: okhttp3.internal.platform.b

	 in Method: javax.net.ssl.SSLSocketFactory l(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer37214, $r6, varReplacer37214)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer37214, $r6, varReplacer37214)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer37214, $r6, varReplacer37214)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ddae0b782465d5082082063d6059970675858c786b10bc61372b6f924577c0d1)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer37213, $r2)


	 in Method: javax.net.ssl.SSLContext k()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #bef35045403c726282ae994ef5b0a60e80f7063c656ad4a5dc19dbd9a3c53b20)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer40562, $r2)


	 in Method: javax.net.ssl.X509TrustManager m()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer37193)


Findings in Java Class: k8.e

	 in Method: javax.net.ssl.SSLContext k()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #673a898a19f1b6f394b644fc494e73bc863ed5e887a31b81f68e24547fc6f305)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer40556)


	 in Method: javax.net.ssl.SSLSocketFactory l(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer37208, $r8, varReplacer37208)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer37208, $r8, varReplacer37208)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer37208, $r8, varReplacer37208)


	 in Method: javax.net.ssl.X509TrustManager m()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer37192)


Findings in Java Class: k8.d

	 in Method: javax.net.ssl.SSLContext k()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2964e3b712a1624298d73905894eb2831e3938f99945770a13eafc1e0a7d6cd7)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer40559)


Findings in Java Class: okhttp3.internal.platform.a

	 in Method: javax.net.ssl.SSLContext k()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #27d61d72c4618d200ce8f2d3d1b67e015320c6bf991eb3b7666a7326dc6e588a)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer40564, $r2)


	 in Method: javax.net.ssl.X509TrustManager m()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer37199)


Findings in Java Class: o8.h

	 in Method: o8.h f(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #659a3fd45ae92803cec34256cfa9d2214749202d01fd576cccfc27fe48a2a66f)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: o8.v

	 in Method: o8.h f(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e17981ea1a3fe1ebe622bff5cd9cb2a649bc0ae27e9cdbf59a95974b8c287012)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e17981ea1a3fe1ebe622bff5cd9cb2a649bc0ae27e9cdbf59a95974b8c287012)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: okhttp3.internal.platform.c

	 in Method: javax.net.ssl.X509TrustManager m()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer37205)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 20

	CryptoAnalysis found the following violations. For details see description above.
	TypestateError: 1
	ConstraintError: 7
	RequiredPredicateError: 10
=====================================================================
