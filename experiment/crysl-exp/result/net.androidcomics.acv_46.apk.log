0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <net.robotmedia.billing.utils.AESObfuscator: void <init>(byte[],java.lang.String)>
		SHA-256: f16dfe7ab918fac0a7bda52c2af73b52cdc8e115a289e15e9c50f706cf7bce04
		Secure: false
	Object:
		Variable: varReplacer748
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer748)
		Method: <net.robotmedia.billing.security.DefaultSignatureValidator: java.security.PublicKey generatePublicKey(java.lang.String)>
		SHA-256: 4026cc78b3459a9c16ab9d8b878910a53b30f6f2d24e8e66a2a886a1c8acecc8
		Secure: false
	Object:
		Variable: varReplacer670
		Type: java.lang.String
		Statement: specialinvoke r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer670)
		Method: <net.robotmedia.billing.utils.AESObfuscator: void <init>(byte[],java.lang.String)>
		SHA-256: 53fdf9abd8bd2da118f8c9a21d39783fecb0831dbb18977ec3a60f76dc0b75e1
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)
		Method: <net.robotmedia.billing.security.DefaultSignatureValidator: java.security.PublicKey generatePublicKey(java.lang.String)>
		SHA-256: 8f7b14d6581807afc8bd80ad5b3a5e48e2dcb8b11b0c79d3a4a462bf69fd9868
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <net.robotmedia.billing.utils.AESObfuscator: void <init>(byte[],java.lang.String)>
		SHA-256: f16dfe7ab918fac0a7bda52c2af73b52cdc8e115a289e15e9c50f706cf7bce04
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)
		Method: <net.robotmedia.billing.security.DefaultSignatureValidator: java.security.PublicKey generatePublicKey(java.lang.String)>
		SHA-256: 209a1365184786aacb53364acd72ea0202d89c7a1d11a0fab387e4d3353b8774
		Secure: false
	Object:
		Variable: varReplacer673
		Type: int
		Statement: specialinvoke r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r1, varReplacer672, varReplacer673)
		Method: <net.robotmedia.billing.utils.AESObfuscator: void <init>(byte[],java.lang.String)>
		SHA-256: 6959789933dbc7c7d8c5f88b2c8271bef3592dac8761b4a2adfde53aa785310e
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer748)
		Method: <net.robotmedia.billing.security.DefaultSignatureValidator: java.security.PublicKey generatePublicKey(java.lang.String)>
		SHA-256: 100e015ec10d5f1069e70c6f025956a7a387c3c662e48ab7db0f3249dc7872df
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer665)
		Method: <net.robotmedia.billing.utils.AESObfuscator: void <init>(byte[],java.lang.String)>
		SHA-256: 2d573daa428dd0ad61e88cba4e7c928dcfff260f5d892a9b334524b584eeb4ea
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r1, varReplacer672, varReplacer673)
		Method: <net.robotmedia.billing.utils.AESObfuscator: void <init>(byte[],java.lang.String)>
		SHA-256: 324c36f49934d6e2ab36e5cbf293707cd0e5061cd26730f752a779a251853237
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer671)
		Method: <net.robotmedia.billing.utils.AESObfuscator: void <init>(byte[],java.lang.String)>
		SHA-256: 1c61d0d5d2b94f586bdb34de28ecaff46d0ef5dd8c19e83157abda73c66d41a6
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <net.robotmedia.billing.security.DefaultSignatureValidator: boolean validate(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: fcf425a61f9c00bd01192a1fa6df9d5fe06f04aecf9b5d78c9156fac372b6c1f
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer670)
		Method: <net.robotmedia.billing.utils.AESObfuscator: void <init>(byte[],java.lang.String)>
		SHA-256: 99c5fcc802d5bc911cba3b8dba173e73ff9b77e8ee0d869c61d0433f82bffb21
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r4)
		Method: <net.robotmedia.billing.utils.AESObfuscator: void <init>(byte[],java.lang.String)>
		SHA-256: 2d8f020bab6be215837be15eac03653fde3a0515930c9d1b185f99a1f28aa3a5
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer753)
		Method: <net.robotmedia.billing.security.DefaultSignatureValidator: boolean validate(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 23ba91c07db378998b90fcf24ef9c7a8b89b98ddc2fadfbdb2a7e2e086253243
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <net.robotmedia.billing.utils.Security: void <clinit>()>
		SHA-256: 8ddcf38a1e0bdef51068a323103a33b28120a3e433574b859d695e36dcfba0fd
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer666)
		Method: <net.robotmedia.billing.utils.AESObfuscator: void <init>(byte[],java.lang.String)>
		SHA-256: c9ea1ee19fabbc39626256828aff8c284e625e7e8bd3fca8daa02afb4ebcd111
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <net.robotmedia.billing.security.DefaultSignatureValidator: boolean validate(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: e89600ea0b4a244f00af087385394e559148036ece7167bbfd493c41aab25883
		Secure: false

Findings in Java Class: net.robotmedia.billing.utils.AESObfuscator

	 in Method: void <init>(byte[],java.lang.String)
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #324c36f49934d6e2ab36e5cbf293707cd0e5061cd26730f752a779a251853237)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r1, varReplacer672, varReplacer673)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #324c36f49934d6e2ab36e5cbf293707cd0e5061cd26730f752a779a251853237)
			First parameter should never be hardcoded.
			at statement: specialinvoke r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r1, varReplacer672, varReplacer673)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer667, r5, $r10)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #1c61d0d5d2b94f586bdb34de28ecaff46d0ef5dd8c19e83157abda73c66d41a6)
			First parameter (with value "PBEWITHSHAAND256BITAES-CBC-BC") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer671)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer667, r5, $r10)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r8 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #324c36f49934d6e2ab36e5cbf293707cd0e5061cd26730f752a779a251853237)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r8 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r1, varReplacer672, varReplacer673)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer670)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #324c36f49934d6e2ab36e5cbf293707cd0e5061cd26730f752a779a251853237)
			Third parameter (with value 1024)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r1, varReplacer672, varReplacer673)


	 in Method: java.lang.String obfuscate(java.lang.String)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #2d573daa428dd0ad61e88cba4e7c928dcfff260f5d892a9b334524b584eeb4ea)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r4 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)


Findings in Java Class: net.robotmedia.billing.security.DefaultSignatureValidator

	 in Method: boolean validate(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #23ba91c07db378998b90fcf24ef9c7a8b89b98ddc2fadfbdb2a7e2e086253243)
			First parameter (with value "SHA1withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer753)


	 in Method: java.security.PublicKey generatePublicKey(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 18

	CryptoAnalysis found the following violations. For details see description above.
	HardCodedError: 1
	IncompleteOperationError: 1
	RequiredPredicateError: 9
	TypestateError: 1
	ConstraintError: 3
	NeverTypeOfError: 1
=====================================================================
