0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.github.javiersantos.licensing.LibraryChecker: void <clinit>()>
		SHA-256: 6a17ef4eb436d6ee446c57e96b7175eca5fcf0b7a0fdf772d32ad7243bb234db
		Secure: true
	Object:
		Variable: varReplacer12565
		Type: int
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r1, varReplacer12564, varReplacer12565)
		Method: <com.github.javiersantos.licensing.AESObfuscator: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 3f6d5fe47575138b781930907ff7851f0ba6ee963b5f8242d5e0fc35e5862e76
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.PublicKey
		Statement: $r10 = virtualinvoke $r8.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r9)
		Method: <com.github.javiersantos.licensing.LibraryChecker: void <init>(android.content.Context,com.github.javiersantos.licensing.Policy,java.lang.String)>
		SHA-256: 10290eccaa7a879c07a4442f521ff7b7d008133f55a0198667fe2809da6fc0dc
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.github.javiersantos.licensing.AESObfuscator: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 538fcebcd734d4c42aeb237c298c0174d7fa8ed96113ca1e7e26ba8861e8224
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <jahirfiquitiva.libs.frames.helpers.remote.FramesSocketFactory: void <init>()>
		SHA-256: ba42a483b492adc34bbf6fa89889a1a5083dd0983b9561cf3573562e39ff177d
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)
		Method: <com.github.javiersantos.licensing.AESObfuscator: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 9c62225f558b10d27ea890b5c688698f0166a9bf7acb73c5fe5180f1b9f6c01b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18920)
		Method: <c.f.a.d.b.b.k: java.lang.Object a()>
		SHA-256: 69ea3a6b2168baeabfce989672495a7d079991f7d6d667cf774d104e72ac065f
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12563)
		Method: <com.github.javiersantos.licensing.AESObfuscator: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 74b0cce38dba909bfa3f74253ff7b00900656b63661f0780419bbac4453c78b0
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer12571)
		Method: <com.github.javiersantos.licensing.AESObfuscator: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: e847a5b31cdd0c9b84807a9e7a7fb8a2b311542b508377a096fe670ac61bbf58
		Secure: false
	Object:
		Variable: varReplacer12571
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer12571)
		Method: <com.github.javiersantos.licensing.AESObfuscator: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: c9969aefc01756a7e9969ff56a2df5193d6494754709e5c1fbbec0a929111617
		Secure: false
	Object:
		Variable: varReplacer12592
		Type: java.lang.String
		Statement: $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer12592)
		Method: <com.github.javiersantos.licensing.LibraryChecker: void <init>(android.content.Context,com.github.javiersantos.licensing.Policy,java.lang.String)>
		SHA-256: ed41fe991469fdeecc386afa7f8749a8880c3c9ce552cad9d37ffd9be54208f5
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r1, varReplacer12564, varReplacer12565)
		Method: <com.github.javiersantos.licensing.AESObfuscator: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 30018682892113ddf38854dcba6f843cb7e1903e80c3ea89a6c41bf00d6443e8
		Secure: false
	Object:
		Variable: $r15
		Type: byte[]
		Statement: $r15 = virtualinvoke $r14.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.github.javiersantos.piracychecker.PiracyChecker: void i()>
		SHA-256: 64084711e3b7081a3ef9bf024382b8e1c9b66bf8f683cb4761dd3249273650b2
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r4 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r3)
		Method: <c.h.a.a.b.D: java.lang.Object invoke()>
		SHA-256: cc479088c763c52f1c5ae7b02c01f011c48ebcd25fd4c7d92ec3130077400192
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer23001)
		Method: <jahirfiquitiva.libs.frames.helpers.remote.FramesSocketFactory: void <init>()>
		SHA-256: 7a14a21a57f867fb3183b25323102cc8bbbd69f2238b57286adbc4d0f0d8e15a
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.MessageDigest
		Statement: $r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8016)
		Method: <com.github.javiersantos.piracychecker.PiracyChecker: void i()>
		SHA-256: f4dfa62437c7dfde2303bca08c75e1531673b350d014385140869ace8faf35b8
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r9.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r7)
		Method: <com.github.javiersantos.licensing.LibraryChecker: void <init>(android.content.Context,com.github.javiersantos.licensing.Policy,java.lang.String)>
		SHA-256: ddc340462b1cb48055db59b0f52fe24126456db9b3601d29fadc3aabaef8db57
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.github.javiersantos.licensing.AESObfuscator: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 538fcebcd734d4c42aeb237c298c0174d7fa8ed96113ca1e7e26ba8861e8224
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r9.<java.security.Signature: boolean verify(byte[])>($r10)
		Method: <com.github.javiersantos.licensing.LibraryValidator: void a(java.security.PublicKey,int,java.lang.String,java.util.Calendar,java.lang.String)>
		SHA-256: 639c63b4810cf0de54fef3f50f6623566e2f9d9aaa7e50458907dd4cde88b696
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12566)
		Method: <com.github.javiersantos.licensing.AESObfuscator: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: a26106ebcb15dc4baf39f8d123085f1aa35121656503cf0fb9bb144c76dc349d
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.TrustManager[]
		Statement: $r6 = virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <c.h.a.a.b.D: java.lang.Object invoke()>
		SHA-256: 21fef77a09bdfdfc82fb27194554323a748c0402e8284e73a57efedffe0f35d7
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $z0 = virtualinvoke $r9.<java.security.Signature: boolean verify(byte[])>($r10)
		Method: <com.github.javiersantos.licensing.LibraryValidator: void a(java.security.PublicKey,int,java.lang.String,java.util.Calendar,java.lang.String)>
		SHA-256: f3659fe3b666e05b5240868ab844c9e9eb0bf68b01f87a2a2a8670cba706c892
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyFactory
		Statement: $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer12592)
		Method: <com.github.javiersantos.licensing.LibraryChecker: void <init>(android.content.Context,com.github.javiersantos.licensing.Policy,java.lang.String)>
		SHA-256: 74a5b96bb4fd882219f56e9609a5d0622a32d4fe4df0b80f49aa261df06dba77
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1189)
		Method: <c.h.a.a.b.D: java.lang.Object invoke()>
		SHA-256: d1b47e589146d801c87811cc2151989071e88e81ff87ef3dcb27f9639a31f700
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.Signature
		Statement: $r9 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer10573)
		Method: <com.github.javiersantos.licensing.LibraryValidator: void a(java.security.PublicKey,int,java.lang.String,java.util.Calendar,java.lang.String)>
		SHA-256: 3bf1bab6d6090eb3b0176afe9bfc7c7253ba8e7294602670701a4076efcd2386
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer12570)
		Method: <com.github.javiersantos.licensing.AESObfuscator: void <init>(byte[],java.lang.String,java.lang.String)>
		SHA-256: 42896e0055b74d86035bfa88631d8275841b631b8af1886b23d4c747228cddaf
		Secure: false

Findings in Java Class: c.h.a.a.b.D

	 in Method: java.lang.Object invoke()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r2)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #d1b47e589146d801c87811cc2151989071e88e81ff87ef3dcb27f9639a31f700)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1189)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1187, $r6, varReplacer1187)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1187, $r6, varReplacer1187)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1187, $r6, varReplacer1187)


Findings in Java Class: com.github.javiersantos.piracychecker.PiracyChecker

	 in Method: void i()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f4dfa62437c7dfde2303bca08c75e1531673b350d014385140869ace8faf35b8)
			First parameter (with value "SHA") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8016)


Findings in Java Class: com.github.javiersantos.licensing.LibraryValidator

	 in Method: void a(java.security.PublicKey,int,java.lang.String,java.util.Calendar,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r9.<java.security.Signature: void initVerify(java.security.PublicKey)>($r5)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #3bf1bab6d6090eb3b0176afe9bfc7c7253ba8e7294602670701a4076efcd2386)
			First parameter (with value "SHA1withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r9 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer10573)


Findings in Java Class: com.github.javiersantos.licensing.AESObfuscator

	 in Method: void <init>(byte[],java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #42896e0055b74d86035bfa88631d8275841b631b8af1886b23d4c747228cddaf)
			First parameter (with value "PBEWITHSHAAND256BITAES-CBC-BC") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer12570)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer12569, $r9, $r11)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer12571)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #30018682892113ddf38854dcba6f843cb7e1903e80c3ea89a6c41bf00d6443e8)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r1, varReplacer12564, varReplacer12565)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #30018682892113ddf38854dcba6f843cb7e1903e80c3ea89a6c41bf00d6443e8)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r1, varReplacer12564, varReplacer12565)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r8 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #30018682892113ddf38854dcba6f843cb7e1903e80c3ea89a6c41bf00d6443e8)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r8 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer12569, $r9, $r11)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #30018682892113ddf38854dcba6f843cb7e1903e80c3ea89a6c41bf00d6443e8)
			Third parameter (with value 1024)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r1, varReplacer12564, varReplacer12565)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r1, varReplacer12564, varReplacer12565)


Findings in Java Class: jahirfiquitiva.libs.frames.ui.activities.base.BaseFramesActivity

	 in Method: void startLicenseCheck(boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #a26106ebcb15dc4baf39f8d123085f1aa35121656503cf0fb9bb144c76dc349d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r4.<com.github.javiersantos.piracychecker.PiracyChecker: void i()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #74b0cce38dba909bfa3f74253ff7b00900656b63661f0780419bbac4453c78b0)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke $r4.<com.github.javiersantos.piracychecker.PiracyChecker: void i()>()


Findings in Java Class: c.f.a.d.b.l

	 in Method: c.f.a.d.b.G a(c.f.a.d.a.e,int,int,c.f.a.d.i,c.f.a.d.b.l$a)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #69ea3a6b2168baeabfce989672495a7d079991f7d6d667cf774d104e72ac065f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r4.<a.e.g.c: boolean a(java.lang.Object)>($r6)


	 in Method: c.f.a.d.b.G a(c.f.a.d.a.e,int,int,c.f.a.d.i,java.util.List)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #69ea3a6b2168baeabfce989672495a7d079991f7d6d667cf774d104e72ac065f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r13.<java.util.ArrayList: void <init>(java.util.Collection)>($r2)


Findings in Java Class: jahirfiquitiva.libs.frames.helpers.remote.FramesSocketFactory

	 in Method: void <init>()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #7a14a21a57f867fb3183b25323102cc8bbbd69f2238b57286adbc4d0f0d8e15a)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer23001)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer23002, $r7, $r6)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer23002, $r7, $r6)


Findings in Java Class: com.github.javiersantos.licensing.LibraryChecker

	 in Method: void <init>(android.content.Context,com.github.javiersantos.licensing.Policy,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r10 = virtualinvoke $r8.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r9)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r7)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 26

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 6
	IncompleteOperationError: 5
	HardCodedError: 1
	NeverTypeOfError: 1
	RequiredPredicateError: 15
=====================================================================
