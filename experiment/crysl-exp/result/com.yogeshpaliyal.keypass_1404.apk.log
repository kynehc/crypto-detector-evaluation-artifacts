0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Alive 15884  5000
Alive 19732  5000
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: varReplacer56309
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer56309)
		Method: <com.google.crypto.tink.subtle.AesSiv: byte[] decryptDeterministically(byte[],byte[])>
		SHA-256: a8e38c0444f3f40fb2c6e87cb2933bd021451502b08296b46762a26d1523f9ba
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.google.crypto.tink.subtle.AesSiv: byte[] encryptDeterministically(byte[],byte[])>
		SHA-256: 47afe7d8c5e21d73ab258690f6e85d2e213fa257f554cc8720ffb1fc2b8389ca
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.crypto.tink.subtle.EngineWrapper$TKeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>
		SHA-256: 95a7709424d7ff5043097deae52b9702f187f1e98d93e83e54df9a8f5cea5565
		Secure: false
	Object:
		Variable: varReplacer61146
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer61146)
		Method: <com.google.crypto.tink.subtle.AesEaxJce: void <init>(byte[],int)>
		SHA-256: 1374d901cc4bd208cdbdcbb259962e033e987f99be87104e6669f10403a08a91
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: $r10 = virtualinvoke $r6.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$2: com.google.crypto.tink.proto.RsaSsaPkcs1PrivateKey createKey(com.google.crypto.tink.proto.RsaSsaPkcs1KeyFormat)>
		SHA-256: 7338be3df1adc43b953a96eada97951be50caae631e625d0279336eb9691db5b
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <com.google.crypto.tink.subtle.RsaSsaPssVerifyJce: void emsaPssVerify(byte[],byte[],int)>
		SHA-256: f1937114014ac09dc14b22f89740a7eec5b16f7718025a2c88b1b0824d87174
		Secure: false
	Object:
		Variable: $r4
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, $r4)
		Method: <com.yogeshpaliyal.common.utils.TokenCalculator: byte[] generateHash(com.yogeshpaliyal.common.utils.TokenCalculator$HashAlgorithm,byte[],byte[])>
		SHA-256: b0967865c007b9c674b9436054a838a162f361cf3f588301b80495ee7a166efd
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Key
		Statement: $r4 = virtualinvoke $r0.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer11942, varReplacer11943)
		Method: <androidx.biometric.CryptoObjectUtils: androidx.biometric.BiometricPrompt$CryptoObject createFakeCryptoObject()>
		SHA-256: 359fc697d5728c6e6b6d4f32ab80f864874bb85c381d74f233ea93518baa5ab1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.yogeshpaliyal.common.utils.BackupUtilsKt: java.lang.String getRandomString(int)>
		SHA-256: c1b72d0f7999ce075f921581fe229aa50ea7b404e670b72815920bf68a4f5400
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.google.crypto.tink.subtle.AesCtrJceCipher: void doCtr(byte[],int,int,byte[],int,byte[],boolean)>
		SHA-256: 8b027ec037ed999e6ae523f4c678489ee05c12d6bf70ae191ea02e97b0c7a3f1
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer49292, $r0, $i0, $i1)
		Method: <com.google.crypto.tink.subtle.AesGcmJce: java.security.spec.AlgorithmParameterSpec getParams(byte[],int,int)>
		SHA-256: 452b162d74b9b39b7f6f3c8372e2734e029ae00c606ed2ebb483a10afcb18802
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Key
		Statement: $r4 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <com.google.crypto.tink.subtle.PrfHmacJce: void <init>(java.lang.String,java.security.Key)>
		SHA-256: e1eea5081cf0aadf8e508267fd22718dcf76be755dbf3e35faaf1e8f3674e96e
		Secure: true
	Object:
		Variable: $r4
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, $r4)
		Method: <com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$HkdfInputStream: void initialize()>
		SHA-256: 1e8cd0ec9e95d4849bd5915623759760b198358e6fb8fc24f983f878e23aed1a
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.google.crypto.tink.subtle.AesSiv: byte[] decryptDeterministically(byte[],byte[])>
		SHA-256: 903023b995f5882e5451d20b614f88efddf2f35ac40028665b154bcfd798e9cf
		Secure: false
	Object:
		Variable: varReplacer60343
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer60343)
		Method: <com.google.crypto.tink.prf.HmacPrfKeyManager$1: com.google.crypto.tink.prf.Prf getPrimitive(com.google.crypto.tink.proto.HmacPrfKey)>
		SHA-256: e9a9556cacf813d3dbe9c5c82de42b50d3348c41cd80afadbf562baf03a10f41
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, $r4)
		Method: <com.yogeshpaliyal.common.utils.TokenCalculator: byte[] generateHash(com.yogeshpaliyal.common.utils.TokenCalculator$HashAlgorithm,byte[],byte[])>
		SHA-256: cf9cefb11a7b929e2cc57771256826e6c75b23605bf2232b69b1cb939cf2c7ef
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r4)
		Method: <com.yogeshpaliyal.common.utils.TokenCalculator: byte[] generateHash(com.yogeshpaliyal.common.utils.TokenCalculator$HashAlgorithm,byte[],byte[])>
		SHA-256: 292a06a1cd44bb4a3d29aabd4cdb344126befb46cb3a3982765a3bba6aeb58f
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, varReplacer53239, $i0)
		Method: <com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm: byte[] decryptInternal(byte[],byte[])>
		SHA-256: d2e4db7ac766b8d5c90a6383ddeea05f3daff13b769fbccaa203c8fd0bb89b22
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, $r4)
		Method: <com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$HkdfInputStream: void initialize()>
		SHA-256: 41d7009d55f7207282427ed5771f45fcbb422a5ec753a98dee3c5dcb3b78f05c
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r1)
		Method: <com.google.crypto.tink.subtle.Hkdf: byte[] computeHkdf(java.lang.String,byte[],byte[],byte[],int)>
		SHA-256: 4ebd2a807c0ee458fcd2fe5d0addd5da5d795bd70c403990590bd440757d79fb
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer61184)
		Method: <com.google.crypto.tink.subtle.PrfAesCmac: void <init>(byte[])>
		SHA-256: 56b082e644c558c4ee7514092133a3584244b41087d9f19d47b0a2254e405265
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.crypto.tink.subtle.EngineWrapper$TCipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>
		SHA-256: f412a4b6b6af857b02da3ea5721d5fbd73b3618d315ce7a8cc29c14ad33abb42
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer59598, varReplacer59599)
		Method: <androidx.security.crypto.MasterKeys: void generateKey(android.security.keystore.KeyGenParameterSpec)>
		SHA-256: 9e7bc4b33f968bb79b9dfd17c0753d4a3ca8770b867a7b61404d0be6c0297025
		Secure: true
	Object:
		Variable: $i2
		Type: int
		Statement: $i2 = virtualinvoke $r2.<java.security.SecureRandom: int nextInt(int)>(varReplacer19361)
		Method: <com.yogeshpaliyal.common.utils.BackupUtilsKt: java.lang.String getRandomString(int)>
		SHA-256: 81f38298c4e0cf933157fb45dcabc212ad38fc71055d0ee68475edc17eb22576
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer49329)
		Method: <com.google.crypto.tink.subtle.AesSiv: byte[] encryptDeterministically(byte[],byte[])>
		SHA-256: 5acea815a2d48ffe48ef4020efe0eecdeac0af300e901257c715a81c684744ce
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer12022, $r1)
		Method: <com.google.crypto.tink.subtle.AesGcmHkdfStreaming: javax.crypto.spec.GCMParameterSpec paramsForSegment(byte[],long,boolean)>
		SHA-256: 465130aac561cc7918e5ed8802f1e9cb371f7dd35db21628337703ea3083c2fb
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)
		Method: <com.google.crypto.tink.subtle.EngineWrapper$TKeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>
		SHA-256: f1c2e63073ddcb24fe930029fe06df7c733e5105821a35c0b065c88337b1de11
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r6.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)
		Method: <com.google.crypto.tink.subtle.PemKeyType: java.security.Key getPublicKey(byte[])>
		SHA-256: 6bd1cad146ab1de1ef0381f39d77a0e24c79a43727275ccd65f1c54174f230ff
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer60382)
		Method: <com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient$Builder: void <init>()>
		SHA-256: b7c893c6ff022aa80a49ab4f2b3658a873dbdacafacef7b29c23235e53f684f9
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.KeyAgreement
		Statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)
		Method: <com.google.crypto.tink.subtle.EngineWrapper$TKeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>
		SHA-256: 4702644eb9a1c407255cb270b0ae349589b1ac4a4f813039e42194478eb42f5e
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.crypto.tink.KeysetManager: int randPositiveInt()>
		SHA-256: 4ebee29c3524c464d63774c6ad1b27675d82b46c620ac98fa8ab5f89a0bcc030
		Secure: true
	Object:
		Variable: varReplacer38634
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer38634)
		Method: <com.google.crypto.tink.subtle.AesGcmHkdfStreaming: javax.crypto.spec.SecretKeySpec deriveKeySpec(byte[],byte[])>
		SHA-256: d3a439afb8f6f14d6cdff263f281dd96eab437687705de2de2bb0c4596f22167
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer60343)
		Method: <com.google.crypto.tink.prf.HmacPrfKeyManager$1: com.google.crypto.tink.prf.Prf getPrimitive(com.google.crypto.tink.proto.HmacPrfKey)>
		SHA-256: 4c631bd8aadd8ecde9eed6867bd63bbd20eeb6c8318eeddfbd257110409e3f5a
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer60387)
		Method: <com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient: boolean hasKey(java.lang.String)>
		SHA-256: da09f35fbc26a6cc8a7232df1e9db637cf1e8e6f9e5650ed5e5e90cea969b45
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.KeyAgreement
		Statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.crypto.tink.subtle.EngineWrapper$TKeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>
		SHA-256: f6e57b42576a01cf779c496bf6795aa5e9337e888e93d4c22d5e827d44b31dfb
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r8)
		Method: <com.google.crypto.tink.subtle.RsaSsaPssVerifyJce: void emsaPssVerify(byte[],byte[],int)>
		SHA-256: ddbce0101d9e5e673e536cc3f630abbc1e72333b1267da8f42cd6dff73c0ecdd
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.crypto.tink.subtle.EngineWrapper$TSignature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>
		SHA-256: 672604f2929d39e6798d3d97eaf8020693a989b9b50c219eefc0b3064ee9878f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer11945, varReplacer11946)
		Method: <androidx.biometric.CryptoObjectUtils: androidx.biometric.BiometricPrompt$CryptoObject createFakeCryptoObject()>
		SHA-256: be1edd479441d2c3441dcaf294b29ba4e9fa9fad8cacf091ec12e350c6ebb025
		Secure: true
	Object:
		Variable: $r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.google.crypto.tink.subtle.AesCtrHmacStreaming$AesCtrHmacStreamDecrypter: void decryptSegment(java.nio.ByteBuffer,int,boolean,java.nio.ByteBuffer)>
		SHA-256: bf1019f8a8e87a260923403f25621f7fbcb21a6c30c38400e878fb1264d6015
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <com.yogeshpaliyal.common.utils.TokenCalculator: byte[] generateHash(com.yogeshpaliyal.common.utils.TokenCalculator$HashAlgorithm,byte[],byte[])>
		SHA-256: d924838522401ff0a56842198add320f7435a89b8cd3a0a473436c546ddb1aac
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r1)
		Method: <com.google.crypto.tink.subtle.Hkdf: byte[] computeHkdf(java.lang.String,byte[],byte[],byte[],int)>
		SHA-256: 4ebd2a807c0ee458fcd2fe5d0addd5da5d795bd70c403990590bd440757d79fb
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.google.crypto.tink.subtle.AesCtrHmacStreaming$AesCtrHmacStreamEncrypter: void encryptSegment(java.nio.ByteBuffer,boolean,java.nio.ByteBuffer)>
		SHA-256: 30e80c2f5f3e94e2e7c76fe6c7d0eb4d560e39b2dc405f76abd082b184811bc9
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <com.google.crypto.tink.KeysetManager: int randPositiveInt()>
		SHA-256: bbc9d8394c2dcb76e848cfab8276b3333598af437db700e2dbb7ef0521dd9a8e
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.google.crypto.tink.subtle.AesCtrHmacStreaming$AesCtrHmacStreamEncrypter: void encryptSegment(java.nio.ByteBuffer,java.nio.ByteBuffer,boolean,java.nio.ByteBuffer)>
		SHA-256: 2150aabb840eff2d8e9828f845ccd511183458e30e79a4486d93b170758f326d
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r1)
		Method: <com.google.crypto.tink.subtle.Hkdf: byte[] computeHkdf(java.lang.String,byte[],byte[],byte[],int)>
		SHA-256: 7c9e7b381ed2f4a8104c32e937bb6ac8513dd436aa989b6f0e210bca683f257
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.PublicKey
		Statement: $r10 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)
		Method: <com.google.crypto.tink.subtle.RsaSsaPssSignJce: void <init>(java.security.interfaces.RSAPrivateCrtKey,com.google.crypto.tink.subtle.Enums$HashType,com.google.crypto.tink.subtle.Enums$HashType,int)>
		SHA-256: 9a5ed84ac7f985256b3160509d1b5c8ab11090c1b94f693d6592850459d90910
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer61205)
		Method: <com.google.crypto.tink.aead.subtle.AesGcmSiv: void <init>(byte[])>
		SHA-256: 35858efab4ecb1e5a80506919fcc0b51cc21e7954a1c7f19226341660f62263d
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.spec.RSAKeyGenParameterSpec
		Statement: specialinvoke $r7.<java.security.spec.RSAKeyGenParameterSpec: void <init>(int,java.math.BigInteger)>($i0, $r1)
		Method: <com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$2: com.google.crypto.tink.proto.RsaSsaPkcs1PrivateKey createKey(com.google.crypto.tink.proto.RsaSsaPkcs1KeyFormat)>
		SHA-256: 8c8d0672415d01d4d7708606cc1b6ff8f100ae8791c3bfe706e7b5f0fda6d1ba
		Secure: true
	Object:
		Variable: varReplacer61205
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer61205)
		Method: <com.google.crypto.tink.aead.subtle.AesGcmSiv: void <init>(byte[])>
		SHA-256: e81ae5817c774fba4cf7413e1fb52f8665df69caf63a2674e6a8bd91c2295533
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Key
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r1, varReplacer61252)
		Method: <com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm: void <init>(java.lang.String,java.security.KeyStore)>
		SHA-256: e55e90bae68f2215db9ad2c4806fc0eb47d0065d5a32669c6ecba4dd72da8e01
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer32499)
		Method: <com.yogeshpaliyal.keypass.db_helper.EncryptionHelper: java.lang.String doCryptoDecrypt(java.lang.String,java.io.InputStream)>
		SHA-256: 96d3ec43c68e4c5c96d158301806546b507536b593e0c3c598dab40583e70b46
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer61144)
		Method: <com.google.crypto.tink.subtle.AesCtrJceCipher: void <init>(byte[],int)>
		SHA-256: 91cca6546894d5ff51290daead82ea5c45fd9f5682a5b909f0928f471e84b3f0
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)
		Method: <com.yogeshpaliyal.common.utils.TokenCalculator: byte[] generateHash(com.yogeshpaliyal.common.utils.TokenCalculator$HashAlgorithm,byte[],byte[])>
		SHA-256: 14147ceafb69a5c348d86ea43d6d84b21b9fdd408087b5d70cac6814b2c8a5cb
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <com.google.crypto.tink.subtle.RsaSsaPssVerifyJce: void emsaPssVerify(byte[],byte[],int)>
		SHA-256: 21aef4fea4f84b52e528f64642fdcee00bc5876280f4f281e56636cca7dfa45d
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r2 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r8)
		Method: <com.google.crypto.tink.subtle.RsaSsaPssVerifyJce: void emsaPssVerify(byte[],byte[],int)>
		SHA-256: b9d79a80eb51425d59691c703d9880b711ad3532a4de5c79aed8692b9fe8b52a
		Secure: false
	Object:
		Variable: varReplacer61184
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer61184)
		Method: <com.google.crypto.tink.subtle.PrfAesCmac: void <init>(byte[])>
		SHA-256: c15083efb3627dc70bf68db65f36c577bff1822159fd75d280d74f80bbf7044e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer53235, $r2, varReplacer53236, varReplacer53237)
		Method: <com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm: byte[] decryptInternal(byte[],byte[])>
		SHA-256: 41f4828669676345121d0c89ecc10367857cbd4d1d790ce1b141cb1b4508d340
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <com.google.crypto.tink.subtle.EngineWrapper$TCipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>
		SHA-256: 640b3ce10d955f2685c7b85ba7b9a21e5b3284c31a9fa033826b3693ed4c27e7
		Secure: false
	Object:
		Variable: varReplacer61196
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer61196)
		Method: <com.google.crypto.tink.subtle.AesGcmJce: void <init>(byte[])>
		SHA-256: e070654f9b667afd2826d6325a2f17a50f18342095103a42019a9aae60c3f30
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer56309)
		Method: <com.google.crypto.tink.subtle.AesSiv: byte[] decryptDeterministically(byte[],byte[])>
		SHA-256: 74f5843a403e3733bd59ce865be8569c8ffb79e2fe8548a7d0bfd543480fe4c5
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer32435)
		Method: <com.yogeshpaliyal.keypass.db_helper.EncryptionHelper: void doCryptoEncrypt(java.lang.String,java.lang.String,java.io.OutputStream)>
		SHA-256: 951179a14a85b790c789b05f4fbcc46c07cdc8ff5f00610303e2e2e02c7afa3e
		Secure: false
	Object:
		Variable: $r4
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, $r4)
		Method: <com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$HkdfInputStream: void initialize()>
		SHA-256: 1e8cd0ec9e95d4849bd5915623759760b198358e6fb8fc24f983f878e23aed1a
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r1)
		Method: <com.google.crypto.tink.subtle.Hkdf: byte[] computeHkdf(java.lang.String,byte[],byte[],byte[],int)>
		SHA-256: 7c9e7b381ed2f4a8104c32e937bb6ac8513dd436aa989b6f0e210bca683f257
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r11.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r3, $r7)
		Method: <com.yogeshpaliyal.keypass.db_helper.EncryptionHelper: java.lang.String doCryptoDecrypt(java.lang.String,java.io.InputStream)>
		SHA-256: 70182f751d64b42c589a1fe9ef1a131303124440c97682169e8c77e0586fd8e5
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer32502)
		Method: <com.yogeshpaliyal.keypass.db_helper.EncryptionHelper: java.lang.String doCryptoDecrypt(java.lang.String,java.io.InputStream)>
		SHA-256: 4162c3f363ae64e5c1eb1b10b1dcc71eebac9a11ff3257dad543d569d5c97b3e
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r0, $i0, $i1)
		Method: <com.google.crypto.tink.subtle.AesGcmJce: java.security.spec.AlgorithmParameterSpec getParams(byte[],int,int)>
		SHA-256: c67b29513468d79cc4ae5c4bee7d630860ff1973dbd20d94526c43cfd1f9e980
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer59601)
		Method: <androidx.security.crypto.MasterKeys: boolean keyExists(java.lang.String)>
		SHA-256: bfaa2d5bbeaae1454e0834186a7a06acc8c9449fedbb143742b511603f185298
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PrivateKey
		Statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r6)
		Method: <com.google.crypto.tink.subtle.PemKeyType: java.security.Key getPrivateKey(byte[])>
		SHA-256: 4ac27707a2b62c9be93521e420b7d34bd38b36409d1f9acb1578c2f36ee4adea
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer49295, $r1, $i1, $i0)
		Method: <com.google.crypto.tink.aead.subtle.AesGcmSiv: java.security.spec.AlgorithmParameterSpec getParams(byte[],int,int)>
		SHA-256: 71a3c1e087c6cb2819830f465bf7472ffcde10ccf04072c52b01c1b6d2daead3
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.spec.RSAKeyGenParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.RSAKeyGenParameterSpec: void <init>(int,java.math.BigInteger)>($i0, $r1)
		Method: <com.google.crypto.tink.signature.RsaSsaPssSignKeyManager$2: com.google.crypto.tink.proto.RsaSsaPssPrivateKey createKey(com.google.crypto.tink.proto.RsaSsaPssKeyFormat)>
		SHA-256: 6b882a55f9058fb94ad59ca52bb731c99c10ceae1d855c9f402a9f1c4b602726
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.yogeshpaliyal.keypass.db_helper.EncryptionHelper: void doCryptoEncrypt(java.lang.String,java.lang.String,java.io.OutputStream)>
		SHA-256: d1957f4ac4cc11fee7699714c9f47dfd0a600a84e2f5bcdfce94c3ce4ca9d1f9
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer56301)
		Method: <com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm: byte[] encryptInternal(byte[],byte[])>
		SHA-256: ac94a0112b3f3503c94b17f7390523782b763f86e39e3dee8b8ea4910037f194
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r1)
		Method: <com.google.crypto.tink.subtle.Hkdf: byte[] computeHkdf(java.lang.String,byte[],byte[],byte[],int)>
		SHA-256: 4ebd2a807c0ee458fcd2fe5d0addd5da5d795bd70c403990590bd440757d79fb
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.crypto.tink.subtle.EngineWrapper$TSignature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>
		SHA-256: cb105a5771bcd81cae436a986d3e03a8ad1f29a9eb56a4dcb4ca4659c5a58cda
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.yogeshpaliyal.keypass.db_helper.EncryptionHelper: java.lang.String doCryptoDecrypt(java.lang.String,java.io.InputStream)>
		SHA-256: be8de37027517a1a1c59d8b213becbbcdcb29f757b401786ae9d168e358e9b60
		Secure: false
	Object:
		Variable: varReplacer32499
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer32499)
		Method: <com.yogeshpaliyal.keypass.db_helper.EncryptionHelper: java.lang.String doCryptoDecrypt(java.lang.String,java.io.InputStream)>
		SHA-256: 302b96599ffafc7788f871b2f2bbe501d39e10152e00246d6d4bae273801f6dd
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer61196)
		Method: <com.google.crypto.tink.subtle.AesGcmJce: void <init>(byte[])>
		SHA-256: 5cb8ecb69df7132bbef89027d4f69a13b0d8fef191d23f4e60cff95dc075476e
		Secure: false
	Object:
		Variable: $r14
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r14.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r4, $r8)
		Method: <com.yogeshpaliyal.keypass.db_helper.EncryptionHelper: void doCryptoEncrypt(java.lang.String,java.lang.String,java.io.OutputStream)>
		SHA-256: b5027141762d58aeddebe23e239dbd530408cff55ab5f04369285c639a58e6d4
		Secure: false
	Object:
		Variable: $r6
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r6)
		Method: <com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$HkdfInputStream: void updateBuffer()>
		SHA-256: f5a82b221e588a6861f2e74f4f95c1e99b9a4891289ff8fd74bc655297c7527b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r6)
		Method: <com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$HkdfInputStream: void updateBuffer()>
		SHA-256: e26f41d0c1d6f386c85dfc6daf941522983ef95ea9473fd3ec88f4aa8bd63b5c
		Secure: false
	Object:
		Variable: varReplacer61144
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer61144)
		Method: <com.google.crypto.tink.subtle.AesCtrJceCipher: void <init>(byte[],int)>
		SHA-256: 56d954e0351c40b24bf6be945b97e0b159de8441d5ec14606908fa02f1229ed3
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer38634)
		Method: <com.google.crypto.tink.subtle.AesGcmHkdfStreaming: javax.crypto.spec.SecretKeySpec deriveKeySpec(byte[],byte[])>
		SHA-256: 7bd08c19141fb0528241c26958f5e813e02e1ee29ee84ac5541cae732147264b
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer53240)
		Method: <com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm: byte[] decryptInternal(byte[],byte[])>
		SHA-256: cba21c6fecdbe93effdee4af52a8309b1adf9eda0a5187e985213f2652551dee
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer32436)
		Method: <com.yogeshpaliyal.keypass.db_helper.EncryptionHelper: void doCryptoEncrypt(java.lang.String,java.lang.String,java.io.OutputStream)>
		SHA-256: bdbef21c56aea198b7b5f5086a8e2f212175fd82e2b701a9c637f5b0029d3e58
		Secure: false
	Object:
		Variable: varReplacer32435
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer32435)
		Method: <com.yogeshpaliyal.keypass.db_helper.EncryptionHelper: void doCryptoEncrypt(java.lang.String,java.lang.String,java.io.OutputStream)>
		SHA-256: e46873620427fce2656f6a20b14e655aa93e0750a4f80eef0d4a0cab87bd5058
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer13572)
		Method: <androidx.security.crypto.MasterKey: boolean isKeyStoreBacked()>
		SHA-256: 20ceffaf350aed78f29b92cfd597b615bc2e0d35cad8e7836b1f01aa6568db31
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11947)
		Method: <androidx.biometric.CryptoObjectUtils: androidx.biometric.BiometricPrompt$CryptoObject createFakeCryptoObject()>
		SHA-256: 4ee21ed5f2c77ba01d7855198e3b45caa354f3aae21855191b20ae2406067021
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, $r4)
		Method: <com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$HkdfInputStream: void initialize()>
		SHA-256: 41d7009d55f7207282427ed5771f45fcbb422a5ec753a98dee3c5dcb3b78f05c
		Secure: false
	Object:
		Variable: varReplacer38630
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer38629, $i0, varReplacer38630)
		Method: <com.google.crypto.tink.subtle.AesCtrHmacStreaming: javax.crypto.spec.SecretKeySpec deriveKeySpec(byte[])>
		SHA-256: 764842ed4e4ab184258c5709420439ce6d8e2934e2d168e55406f484fa1670e6
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r4.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer56303, $i0, $r3, varReplacer56304)
		Method: <com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm: byte[] encryptInternal(byte[],byte[])>
		SHA-256: 18a311ba492ffd42656eefd384cf3f3124ceda3bc8bbba49f760df40e0a92160
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.google.crypto.tink.subtle.AesEaxJce: byte[] encrypt(byte[],byte[])>
		SHA-256: fca0f7a4d4663820637fe4a8be8b66b9b3fcf19b04db0adee18d32afb3b24bd0
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer59627, varReplacer59628)
		Method: <com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient: void generateNewAeadKey(java.lang.String)>
		SHA-256: 3b2dd2e0de19b927776447e1a6c2091aff74bdb506b91b4cab62db29e1103e9b
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, $i0, varReplacer38628, $r3)
		Method: <com.google.crypto.tink.subtle.AesCtrHmacStreaming: javax.crypto.spec.SecretKeySpec deriveHmacKeySpec(byte[])>
		SHA-256: 81ac95cceae328db0a5dfe688975b283abdfacfb537ce7d29e35d08d2f1391a9
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r1, $i1, $i0)
		Method: <com.google.crypto.tink.aead.subtle.AesGcmSiv: java.security.spec.AlgorithmParameterSpec getParams(byte[],int,int)>
		SHA-256: eb539a033328f301387ad80c043bae0685ea4d61b8fdcf3fe687ca4a704f4e7a
		Secure: false
	Object:
		Variable: varReplacer60354
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer60354)
		Method: <com.google.crypto.tink.mac.HmacKeyManager$1: com.google.crypto.tink.Mac getPrimitive(com.google.crypto.tink.proto.HmacKey)>
		SHA-256: f2e12a43be6126c227780de6cc42dfc95b3808800e63c6fd398e5ca3234e104c
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer60354)
		Method: <com.google.crypto.tink.mac.HmacKeyManager$1: com.google.crypto.tink.Mac getPrimitive(com.google.crypto.tink.proto.HmacKey)>
		SHA-256: 915bc84fa4e495dd5a802279ce2604821003056613e8350b636f7386b2160ef8
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6)
		Method: <com.google.crypto.tink.subtle.PemKeyType: java.security.Key getPublicKey(byte[])>
		SHA-256: 32fcd73345e5cf615818fd0f02e30732dcb2fda106d26813c32605f872aca11b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)
		Method: <com.google.crypto.tink.subtle.EngineWrapper$TMac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)>
		SHA-256: e0ddadc13f7bb0fe2b209042e6fb1e08b684a4132db178ec9b403eb5eee11587
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyStore
		Statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer11941)
		Method: <androidx.biometric.CryptoObjectUtils: androidx.biometric.BiometricPrompt$CryptoObject createFakeCryptoObject()>
		SHA-256: b856ea1dbfa8599f8cabdcb07fda6e4966a3e14c659609fb88a17a5514b383c9
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.google.crypto.tink.subtle.AesEaxJce: byte[] decrypt(byte[],byte[])>
		SHA-256: debe6a91358516f13574bcf942d1c7a159aab945ff1938cfed1e10e6c805ed83
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer38629, $i0, varReplacer38630)
		Method: <com.google.crypto.tink.subtle.AesCtrHmacStreaming: javax.crypto.spec.SecretKeySpec deriveKeySpec(byte[])>
		SHA-256: 85a8c571fd3716e3aa90e98e534b5827de7258a41f8a3a2242eb8032ce48fa0d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyPairGenerator
		Statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.crypto.tink.subtle.EngineWrapper$TKeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)>
		SHA-256: 31579772aaec5a816143c7ef812cc1e25a25da0ce13eab8174637bf9e82c7fff
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r14.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r12, $r13, $r7, varReplacer59470)
		Method: <com.google.crypto.tink.subtle.EllipticCurves: java.security.spec.ECParameterSpec getNistCurveSpec(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 7596e8649f326d089830934e21110929ee2fc0275e22d2d79a4cb849061b8b1c
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyPairGenerator
		Statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r2)
		Method: <com.google.crypto.tink.subtle.EngineWrapper$TKeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)>
		SHA-256: 9d792201b769fe047e7a4ac888b6c8bf5e59b4c0df6aad68d04eb687e5998de5
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.crypto.tink.subtle.EngineWrapper$TKeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>
		SHA-256: 34ab4b1bd965bdb4093c51cc820e75355ac946cb1d7a4a73744794cbc42a6278
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.crypto.tink.subtle.RsaSsaPkcs1VerifyJce: byte[] emsaPkcs1(byte[],int,com.google.crypto.tink.subtle.Enums$HashType)>
		SHA-256: f3cafd9226911def6bd2a8d6511c1f5409aa76a3031f6ee066dda72035bc88d7
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)
		Method: <com.google.crypto.tink.subtle.EngineWrapper$TKeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>
		SHA-256: 83f13ea5bf4d88f582ce2812e4f31a103e62153876bf37453a067b44d78c80d4
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <com.google.crypto.tink.subtle.PrfHmacJce: void <init>(java.lang.String,java.security.Key)>
		SHA-256: 9504b3f716c7bcc89dfe690d24f15b0aa6bd18c44ad0477c83ca56afaa8a613d
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.crypto.tink.subtle.EngineWrapper$TMessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>
		SHA-256: 3a694b35ea04b2992debcb6b410b793f86e22988149fbcb69135acb0c3d6ba01
		Secure: false
	Object:
		Variable: varReplacer49329
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer49329)
		Method: <com.google.crypto.tink.subtle.AesSiv: byte[] encryptDeterministically(byte[],byte[])>
		SHA-256: 6a127a7cacb6048621dd0df34ba091bfd7d7213fb5cb9b1d117420533bad1645
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer61146)
		Method: <com.google.crypto.tink.subtle.AesEaxJce: void <init>(byte[],int)>
		SHA-256: db77f19b75eb33a01a06be253f85868e6df5b1733fa60d77f14493d8714cb443
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer56303, $i0, $r3, varReplacer56304)
		Method: <com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm: byte[] encryptInternal(byte[],byte[])>
		SHA-256: 8a6e8f1e84ccb1e70b85d7239712bba673661f5b9c7864643c9077d8b0d28dee
		Secure: false
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, $i0, varReplacer38628, $r3)
		Method: <com.google.crypto.tink.subtle.AesCtrHmacStreaming: javax.crypto.spec.SecretKeySpec deriveHmacKeySpec(byte[])>
		SHA-256: 949ec51b471768b02787c29047f426a9a852b132fc730c15cb553a7ab9558995
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyPair
		Statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.crypto.tink.subtle.EllipticCurves: java.security.KeyPair generateKeyPair(java.security.spec.ECParameterSpec)>
		SHA-256: 3062f213676ca5f0a9b1f77dacef0962398a70a32ce8b32f4462755a466fa40b
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.google.crypto.tink.subtle.EngineWrapper$TMessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>
		SHA-256: 4ee1e49996a5c971f7aeb5a26e801c7b076c9b0e65f51e70fc752cb4886a7701
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.crypto.tink.subtle.EngineWrapper$TMac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)>
		SHA-256: 6d763f9467be3d0d73fb479325f103273511edf0e140c0da470a5ccd80fd30b2
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r1)
		Method: <com.google.crypto.tink.subtle.Hkdf: byte[] computeHkdf(java.lang.String,byte[],byte[],byte[],int)>
		SHA-256: 7c9e7b381ed2f4a8104c32e937bb6ac8513dd436aa989b6f0e210bca683f257
		Secure: false

Findings in Java Class: androidx.biometric.CryptoObjectUtils

	 in Method: androidx.biometric.BiometricPrompt$CryptoObject createFakeCryptoObject()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #b856ea1dbfa8599f8cabdcb07fda6e4966a3e14c659609fb88a17a5514b383c9)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer11941)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer11944, $r5)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #4ee21ed5f2c77ba01d7855198e3b45caa354f3aae21855191b20ae2406067021)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11947)


Findings in Java Class: com.google.crypto.tink.subtle.prf.HkdfStreamingPrf$HkdfInputStream

	 in Method: void initialize()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, $r4)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #6d763f9467be3d0d73fb479325f103273511edf0e140c0da470a5ccd80fd30b2)
			Unexpected call to method update on object of type javax.crypto.Mac. Expect a call to one of the following methods init
			at statement: virtualinvoke $r6.<javax.crypto.Mac: void update(byte[])>($r7)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #e0ddadc13f7bb0fe2b209042e6fb1e08b684a4132db178ec9b403eb5eee11587)
			Unexpected call to method update on object of type javax.crypto.Mac. Expect a call to one of the following methods init
			at statement: virtualinvoke $r6.<javax.crypto.Mac: void update(byte[])>($r7)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #41d7009d55f7207282427ed5771f45fcbb422a5ec753a98dee3c5dcb3b78f05c)
			Second parameter (with value "HmacSha1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, $r4)


	 in Method: void updateBuffer()
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #e26f41d0c1d6f386c85dfc6daf941522983ef95ea9473fd3ec88f4aa8bd63b5c)
			Second parameter (with value "HmacSha1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r6)


Findings in Java Class: androidx.security.crypto.MasterKey

	 in Method: boolean isKeyStoreBacked()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #20ceffaf350aed78f29b92cfd597b615bc2e0d35cad8e7836b1f01aa6568db31)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer13572)


Findings in Java Class: com.yogeshpaliyal.keypass.db_helper.EncryptionHelper

	 in Method: void doCryptoEncrypt(java.lang.String,java.lang.String,java.io.OutputStream)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #b5027141762d58aeddebe23e239dbd530408cff55ab5f04369285c639a58e6d4)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: staticinvoke <kotlin.io.CloseableKt: void closeFinally(java.io.Closeable,java.lang.Throwable)>($r15, varReplacer32441)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer32439, $r7, $r10)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer32439, $r7, $r10)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #951179a14a85b790c789b05f4fbcc46c07cdc8ff5f00610303e2e2e02c7afa3e)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer32435)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer32435)


	 in Method: java.lang.String doCryptoDecrypt(java.lang.String,java.io.InputStream)
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #96d3ec43c68e4c5c96d158301806546b507536b593e0c3c598dab40583e70b46)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer32499)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer32501, $r6, $r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer32499)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: com.google.crypto.tink.subtle.EngineWrapper$TMessageDigest

	 in Method: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3a694b35ea04b2992debcb6b410b793f86e22988149fbcb69135acb0c3d6ba01)
			First parameter (with value "AES/CTR/NoPadding") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4ee1e49996a5c971f7aeb5a26e801c7b076c9b0e65f51e70fc752cb4886a7701)
			First parameter (with value "AES/CTR/NoPadding") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.crypto.tink.subtle.RsaSsaPssSignJce

	 in Method: void <init>(java.security.interfaces.RSAPrivateCrtKey,com.google.crypto.tink.subtle.Enums$HashType,com.google.crypto.tink.subtle.Enums$HashType,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #640b3ce10d955f2685c7b85ba7b9a21e5b3284c31a9fa033826b3693ed4c27e7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r10 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f412a4b6b6af857b02da3ea5721d5fbd73b3618d315ce7a8cc29c14ad33abb42)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r10 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3a694b35ea04b2992debcb6b410b793f86e22988149fbcb69135acb0c3d6ba01)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r10 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4ee1e49996a5c971f7aeb5a26e801c7b076c9b0e65f51e70fc752cb4886a7701)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r10 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #4702644eb9a1c407255cb270b0ae349589b1ac4a4f813039e42194478eb42f5e)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r10 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #f6e57b42576a01cf779c496bf6795aa5e9337e888e93d4c22d5e827d44b31dfb)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r10 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6d763f9467be3d0d73fb479325f103273511edf0e140c0da470a5ccd80fd30b2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r10 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e0ddadc13f7bb0fe2b209042e6fb1e08b684a4132db178ec9b403eb5eee11587)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r10 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #9d792201b769fe047e7a4ac888b6c8bf5e59b4c0df6aad68d04eb687e5998de5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r10 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #31579772aaec5a816143c7ef812cc1e25a25da0ce13eab8174637bf9e82c7fff)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r10 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #672604f2929d39e6798d3d97eaf8020693a989b9b50c219eefc0b3064ee9878f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r10 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #cb105a5771bcd81cae436a986d3e03a8ad1f29a9eb56a4dcb4ca4659c5a58cda)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r10 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)


Findings in Java Class: com.google.crypto.tink.subtle.EllipticCurves

	 in Method: java.security.KeyPair generateKeyPair(java.security.spec.ECParameterSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6d763f9467be3d0d73fb479325f103273511edf0e140c0da470a5ccd80fd30b2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e0ddadc13f7bb0fe2b209042e6fb1e08b684a4132db178ec9b403eb5eee11587)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #672604f2929d39e6798d3d97eaf8020693a989b9b50c219eefc0b3064ee9878f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #cb105a5771bcd81cae436a986d3e03a8ad1f29a9eb56a4dcb4ca4659c5a58cda)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #4702644eb9a1c407255cb270b0ae349589b1ac4a4f813039e42194478eb42f5e)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #f6e57b42576a01cf779c496bf6795aa5e9337e888e93d4c22d5e827d44b31dfb)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3a694b35ea04b2992debcb6b410b793f86e22988149fbcb69135acb0c3d6ba01)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4ee1e49996a5c971f7aeb5a26e801c7b076c9b0e65f51e70fc752cb4886a7701)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #640b3ce10d955f2685c7b85ba7b9a21e5b3284c31a9fa033826b3693ed4c27e7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f412a4b6b6af857b02da3ea5721d5fbd73b3618d315ce7a8cc29c14ad33abb42)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()


Findings in Java Class: com.google.crypto.tink.subtle.PrfAesCmac

	 in Method: byte[] compute(byte[],int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6d763f9467be3d0d73fb479325f103273511edf0e140c0da470a5ccd80fd30b2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e0ddadc13f7bb0fe2b209042e6fb1e08b684a4132db178ec9b403eb5eee11587)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer56286, $r3)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #672604f2929d39e6798d3d97eaf8020693a989b9b50c219eefc0b3064ee9878f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #cb105a5771bcd81cae436a986d3e03a8ad1f29a9eb56a4dcb4ca4659c5a58cda)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3a694b35ea04b2992debcb6b410b793f86e22988149fbcb69135acb0c3d6ba01)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4ee1e49996a5c971f7aeb5a26e801c7b076c9b0e65f51e70fc752cb4886a7701)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #9d792201b769fe047e7a4ac888b6c8bf5e59b4c0df6aad68d04eb687e5998de5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #31579772aaec5a816143c7ef812cc1e25a25da0ce13eab8174637bf9e82c7fff)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #640b3ce10d955f2685c7b85ba7b9a21e5b3284c31a9fa033826b3693ed4c27e7)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r5 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #640b3ce10d955f2685c7b85ba7b9a21e5b3284c31a9fa033826b3693ed4c27e7)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f412a4b6b6af857b02da3ea5721d5fbd73b3618d315ce7a8cc29c14ad33abb42)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r5 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f412a4b6b6af857b02da3ea5721d5fbd73b3618d315ce7a8cc29c14ad33abb42)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #4702644eb9a1c407255cb270b0ae349589b1ac4a4f813039e42194478eb42f5e)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #f6e57b42576a01cf779c496bf6795aa5e9337e888e93d4c22d5e827d44b31dfb)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


	 in Method: void generateSubKeys()
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #640b3ce10d955f2685c7b85ba7b9a21e5b3284c31a9fa033826b3693ed4c27e7)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f412a4b6b6af857b02da3ea5721d5fbd73b3618d315ce7a8cc29c14ad33abb42)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #9d792201b769fe047e7a4ac888b6c8bf5e59b4c0df6aad68d04eb687e5998de5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #31579772aaec5a816143c7ef812cc1e25a25da0ce13eab8174637bf9e82c7fff)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #672604f2929d39e6798d3d97eaf8020693a989b9b50c219eefc0b3064ee9878f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #cb105a5771bcd81cae436a986d3e03a8ad1f29a9eb56a4dcb4ca4659c5a58cda)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3a694b35ea04b2992debcb6b410b793f86e22988149fbcb69135acb0c3d6ba01)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4ee1e49996a5c971f7aeb5a26e801c7b076c9b0e65f51e70fc752cb4886a7701)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6d763f9467be3d0d73fb479325f103273511edf0e140c0da470a5ccd80fd30b2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e0ddadc13f7bb0fe2b209042e6fb1e08b684a4132db178ec9b403eb5eee11587)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #4702644eb9a1c407255cb270b0ae349589b1ac4a4f813039e42194478eb42f5e)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #f6e57b42576a01cf779c496bf6795aa5e9337e888e93d4c22d5e827d44b31dfb)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)


	 in Method: void <init>(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer61184)


Findings in Java Class: com.google.crypto.tink.subtle.PemKeyType

	 in Method: java.security.Key getPublicKey(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6d763f9467be3d0d73fb479325f103273511edf0e140c0da470a5ccd80fd30b2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e0ddadc13f7bb0fe2b209042e6fb1e08b684a4132db178ec9b403eb5eee11587)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #640b3ce10d955f2685c7b85ba7b9a21e5b3284c31a9fa033826b3693ed4c27e7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f412a4b6b6af857b02da3ea5721d5fbd73b3618d315ce7a8cc29c14ad33abb42)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #9d792201b769fe047e7a4ac888b6c8bf5e59b4c0df6aad68d04eb687e5998de5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #31579772aaec5a816143c7ef812cc1e25a25da0ce13eab8174637bf9e82c7fff)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #4702644eb9a1c407255cb270b0ae349589b1ac4a4f813039e42194478eb42f5e)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #f6e57b42576a01cf779c496bf6795aa5e9337e888e93d4c22d5e827d44b31dfb)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #672604f2929d39e6798d3d97eaf8020693a989b9b50c219eefc0b3064ee9878f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #cb105a5771bcd81cae436a986d3e03a8ad1f29a9eb56a4dcb4ca4659c5a58cda)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3a694b35ea04b2992debcb6b410b793f86e22988149fbcb69135acb0c3d6ba01)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4ee1e49996a5c971f7aeb5a26e801c7b076c9b0e65f51e70fc752cb4886a7701)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6)


	 in Method: java.security.Key getPrivateKey(byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3a694b35ea04b2992debcb6b410b793f86e22988149fbcb69135acb0c3d6ba01)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r6)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4ee1e49996a5c971f7aeb5a26e801c7b076c9b0e65f51e70fc752cb4886a7701)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r6)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #672604f2929d39e6798d3d97eaf8020693a989b9b50c219eefc0b3064ee9878f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r6)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #cb105a5771bcd81cae436a986d3e03a8ad1f29a9eb56a4dcb4ca4659c5a58cda)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r6)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6d763f9467be3d0d73fb479325f103273511edf0e140c0da470a5ccd80fd30b2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e0ddadc13f7bb0fe2b209042e6fb1e08b684a4132db178ec9b403eb5eee11587)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r6)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #9d792201b769fe047e7a4ac888b6c8bf5e59b4c0df6aad68d04eb687e5998de5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r6)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #31579772aaec5a816143c7ef812cc1e25a25da0ce13eab8174637bf9e82c7fff)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #640b3ce10d955f2685c7b85ba7b9a21e5b3284c31a9fa033826b3693ed4c27e7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f412a4b6b6af857b02da3ea5721d5fbd73b3618d315ce7a8cc29c14ad33abb42)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #4702644eb9a1c407255cb270b0ae349589b1ac4a4f813039e42194478eb42f5e)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #f6e57b42576a01cf779c496bf6795aa5e9337e888e93d4c22d5e827d44b31dfb)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r6)


Findings in Java Class: com.google.crypto.tink.signature.RsaSsaPkcs1SignKeyManager$2

	 in Method: com.google.crypto.tink.proto.RsaSsaPkcs1PrivateKey createKey(com.google.crypto.tink.proto.RsaSsaPkcs1KeyFormat)
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #4702644eb9a1c407255cb270b0ae349589b1ac4a4f813039e42194478eb42f5e)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r10 = virtualinvoke $r6.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #f6e57b42576a01cf779c496bf6795aa5e9337e888e93d4c22d5e827d44b31dfb)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r10 = virtualinvoke $r6.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6d763f9467be3d0d73fb479325f103273511edf0e140c0da470a5ccd80fd30b2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r10 = virtualinvoke $r6.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e0ddadc13f7bb0fe2b209042e6fb1e08b684a4132db178ec9b403eb5eee11587)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r10 = virtualinvoke $r6.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #672604f2929d39e6798d3d97eaf8020693a989b9b50c219eefc0b3064ee9878f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r10 = virtualinvoke $r6.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #cb105a5771bcd81cae436a986d3e03a8ad1f29a9eb56a4dcb4ca4659c5a58cda)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r10 = virtualinvoke $r6.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #640b3ce10d955f2685c7b85ba7b9a21e5b3284c31a9fa033826b3693ed4c27e7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r10 = virtualinvoke $r6.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f412a4b6b6af857b02da3ea5721d5fbd73b3618d315ce7a8cc29c14ad33abb42)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r10 = virtualinvoke $r6.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3a694b35ea04b2992debcb6b410b793f86e22988149fbcb69135acb0c3d6ba01)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r10 = virtualinvoke $r6.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4ee1e49996a5c971f7aeb5a26e801c7b076c9b0e65f51e70fc752cb4886a7701)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r10 = virtualinvoke $r6.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()


Findings in Java Class: com.google.crypto.tink.subtle.EngineWrapper$TMac

	 in Method: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #6d763f9467be3d0d73fb479325f103273511edf0e140c0da470a5ccd80fd30b2)
			First parameter (with value "AES/CTR/NoPadding") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #e0ddadc13f7bb0fe2b209042e6fb1e08b684a4132db178ec9b403eb5eee11587)
			First parameter (with value "AES/CTR/NoPadding") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.crypto.tink.subtle.RsaSsaPkcs1VerifyJce

	 in Method: byte[] emsaPkcs1(byte[],int,com.google.crypto.tink.subtle.Enums$HashType)
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #9d792201b769fe047e7a4ac888b6c8bf5e59b4c0df6aad68d04eb687e5998de5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r1 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #31579772aaec5a816143c7ef812cc1e25a25da0ce13eab8174637bf9e82c7fff)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r1 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6d763f9467be3d0d73fb479325f103273511edf0e140c0da470a5ccd80fd30b2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e0ddadc13f7bb0fe2b209042e6fb1e08b684a4132db178ec9b403eb5eee11587)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #4702644eb9a1c407255cb270b0ae349589b1ac4a4f813039e42194478eb42f5e)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #f6e57b42576a01cf779c496bf6795aa5e9337e888e93d4c22d5e827d44b31dfb)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #640b3ce10d955f2685c7b85ba7b9a21e5b3284c31a9fa033826b3693ed4c27e7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f412a4b6b6af857b02da3ea5721d5fbd73b3618d315ce7a8cc29c14ad33abb42)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #672604f2929d39e6798d3d97eaf8020693a989b9b50c219eefc0b3064ee9878f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r1 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #cb105a5771bcd81cae436a986d3e03a8ad1f29a9eb56a4dcb4ca4659c5a58cda)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r1 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.google.crypto.tink.subtle.RsaSsaPssVerifyJce

	 in Method: void emsaPssVerify(byte[],byte[],int)
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #672604f2929d39e6798d3d97eaf8020693a989b9b50c219eefc0b3064ee9878f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $i1 = virtualinvoke $r7.<java.security.MessageDigest: int getDigestLength()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #cb105a5771bcd81cae436a986d3e03a8ad1f29a9eb56a4dcb4ca4659c5a58cda)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $i1 = virtualinvoke $r7.<java.security.MessageDigest: int getDigestLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6d763f9467be3d0d73fb479325f103273511edf0e140c0da470a5ccd80fd30b2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r2 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e0ddadc13f7bb0fe2b209042e6fb1e08b684a4132db178ec9b403eb5eee11587)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r2 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r8)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #9d792201b769fe047e7a4ac888b6c8bf5e59b4c0df6aad68d04eb687e5998de5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r10 = $r7

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #31579772aaec5a816143c7ef812cc1e25a25da0ce13eab8174637bf9e82c7fff)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r10 = $r7

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #9d792201b769fe047e7a4ac888b6c8bf5e59b4c0df6aad68d04eb687e5998de5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $i1 = virtualinvoke $r7.<java.security.MessageDigest: int getDigestLength()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #31579772aaec5a816143c7ef812cc1e25a25da0ce13eab8174637bf9e82c7fff)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $i1 = virtualinvoke $r7.<java.security.MessageDigest: int getDigestLength()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #672604f2929d39e6798d3d97eaf8020693a989b9b50c219eefc0b3064ee9878f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r2 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r8)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #cb105a5771bcd81cae436a986d3e03a8ad1f29a9eb56a4dcb4ca4659c5a58cda)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r2 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r8)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #9d792201b769fe047e7a4ac888b6c8bf5e59b4c0df6aad68d04eb687e5998de5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r2 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r8)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #31579772aaec5a816143c7ef812cc1e25a25da0ce13eab8174637bf9e82c7fff)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r2 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #640b3ce10d955f2685c7b85ba7b9a21e5b3284c31a9fa033826b3693ed4c27e7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r10 = $r7

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f412a4b6b6af857b02da3ea5721d5fbd73b3618d315ce7a8cc29c14ad33abb42)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r10 = $r7

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #4702644eb9a1c407255cb270b0ae349589b1ac4a4f813039e42194478eb42f5e)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r2 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #f6e57b42576a01cf779c496bf6795aa5e9337e888e93d4c22d5e827d44b31dfb)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r2 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6d763f9467be3d0d73fb479325f103273511edf0e140c0da470a5ccd80fd30b2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $i1 = virtualinvoke $r7.<java.security.MessageDigest: int getDigestLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e0ddadc13f7bb0fe2b209042e6fb1e08b684a4132db178ec9b403eb5eee11587)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $i1 = virtualinvoke $r7.<java.security.MessageDigest: int getDigestLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #4702644eb9a1c407255cb270b0ae349589b1ac4a4f813039e42194478eb42f5e)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r10 = $r7

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #f6e57b42576a01cf779c496bf6795aa5e9337e888e93d4c22d5e827d44b31dfb)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r10 = $r7

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #640b3ce10d955f2685c7b85ba7b9a21e5b3284c31a9fa033826b3693ed4c27e7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r2 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f412a4b6b6af857b02da3ea5721d5fbd73b3618d315ce7a8cc29c14ad33abb42)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r2 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r8)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #672604f2929d39e6798d3d97eaf8020693a989b9b50c219eefc0b3064ee9878f)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r10 = $r7

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #cb105a5771bcd81cae436a986d3e03a8ad1f29a9eb56a4dcb4ca4659c5a58cda)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r10 = $r7

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #4702644eb9a1c407255cb270b0ae349589b1ac4a4f813039e42194478eb42f5e)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $i1 = virtualinvoke $r7.<java.security.MessageDigest: int getDigestLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #f6e57b42576a01cf779c496bf6795aa5e9337e888e93d4c22d5e827d44b31dfb)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $i1 = virtualinvoke $r7.<java.security.MessageDigest: int getDigestLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #640b3ce10d955f2685c7b85ba7b9a21e5b3284c31a9fa033826b3693ed4c27e7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $i1 = virtualinvoke $r7.<java.security.MessageDigest: int getDigestLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f412a4b6b6af857b02da3ea5721d5fbd73b3618d315ce7a8cc29c14ad33abb42)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $i1 = virtualinvoke $r7.<java.security.MessageDigest: int getDigestLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6d763f9467be3d0d73fb479325f103273511edf0e140c0da470a5ccd80fd30b2)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r10 = $r7

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e0ddadc13f7bb0fe2b209042e6fb1e08b684a4132db178ec9b403eb5eee11587)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r10 = $r7


Findings in Java Class: com.google.crypto.tink.subtle.EngineWrapper$TKeyFactory

	 in Method: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #34ab4b1bd965bdb4093c51cc820e75355ac946cb1d7a4a73744794cbc42a6278)
			First parameter (with value "AES/CTR/NoPadding") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #f1c2e63073ddcb24fe930029fe06df7c733e5105821a35c0b065c88337b1de11)
			First parameter (with value "AES/CTR/NoPadding") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.crypto.tink.subtle.EngineWrapper$TKeyPairGenerator

	 in Method: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #9d792201b769fe047e7a4ac888b6c8bf5e59b4c0df6aad68d04eb687e5998de5)
			First parameter (with value "AES/CTR/NoPadding") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #31579772aaec5a816143c7ef812cc1e25a25da0ce13eab8174637bf9e82c7fff)
			First parameter (with value "AES/CTR/NoPadding") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)>($r2, $r1)


Findings in Java Class: com.google.crypto.tink.subtle.EngineWrapper$TSignature

	 in Method: java.security.Signature getInstance(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #cb105a5771bcd81cae436a986d3e03a8ad1f29a9eb56a4dcb4ca4659c5a58cda)
			First parameter (with value "AES/CTR/NoPadding") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #672604f2929d39e6798d3d97eaf8020693a989b9b50c219eefc0b3064ee9878f)
			First parameter (with value "AES/CTR/NoPadding") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.crypto.tink.subtle.EngineWrapper$TKeyAgreement

	 in Method: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #f6e57b42576a01cf779c496bf6795aa5e9337e888e93d4c22d5e827d44b31dfb)
			First parameter (with value "AES/CTR/NoPadding") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #4702644eb9a1c407255cb270b0ae349589b1ac4a4f813039e42194478eb42f5e)
			First parameter (with value "AES/CTR/NoPadding") should be any of {DH, DiffieHellman, ECDH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)


Findings in Java Class: androidx.security.crypto.MasterKeys

	 in Method: boolean keyExists(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #bfaa2d5bbeaae1454e0834186a7a06acc8c9449fedbb143742b511603f185298)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer59601)


Findings in Java Class: com.google.crypto.tink.prf.HmacPrfKeyManager$1

	 in Method: com.google.crypto.tink.prf.Prf getPrimitive(com.google.crypto.tink.proto.HmacPrfKey)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #4c631bd8aadd8ecde9eed6867bd63bbd20eeb6c8318eeddfbd257110409e3f5a)
			Second parameter (with value "HMAC") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer60343)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer60343)


Findings in Java Class: com.google.crypto.tink.mac.HmacKeyManager$1

	 in Method: com.google.crypto.tink.Mac getPrimitive(com.google.crypto.tink.proto.HmacKey)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #915bc84fa4e495dd5a802279ce2604821003056613e8350b636f7386b2160ef8)
			Second parameter (with value "HMAC") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer60354)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer60354)


Findings in Java Class: com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient$Builder

	 in Method: void <init>()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #b7c893c6ff022aa80a49ab4f2b3658a873dbdacafacef7b29c23235e53f684f9)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer60382)


Findings in Java Class: com.google.crypto.tink.integration.android.AndroidKeystoreKmsClient

	 in Method: boolean hasKey(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #da09f35fbc26a6cc8a7232df1e9db637cf1e8e6f9e5650ed5e5e90cea969b45)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer60387)


Findings in Java Class: com.google.crypto.tink.subtle.AesSiv

	 in Method: byte[] encryptDeterministically(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer49329)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


	 in Method: byte[] decryptDeterministically(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer56309)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


Findings in Java Class: com.google.crypto.tink.subtle.AesGcmJce

	 in Method: java.security.spec.AlgorithmParameterSpec getParams(byte[],int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer49292, $r0, $i0, $i1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r0, $i0, $i1)


	 in Method: void <init>(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer61196)


Findings in Java Class: com.google.crypto.tink.subtle.AesCtrJceCipher

	 in Method: void doCtr(byte[],int,int,byte[],int,byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


	 in Method: void <init>(byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer61144)


Findings in Java Class: com.google.crypto.tink.aead.subtle.AesGcmSiv

	 in Method: java.security.spec.AlgorithmParameterSpec getParams(byte[],int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r1, $i1, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer49295, $r1, $i1, $i0)


	 in Method: void <init>(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer61205)


Findings in Java Class: com.yogeshpaliyal.common.utils.TokenCalculator

	 in Method: byte[] generateHash(com.yogeshpaliyal.common.utils.TokenCalculator$HashAlgorithm,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Mac: void init(java.security.Key)>($r6)


Findings in Java Class: com.google.crypto.tink.integration.android.AndroidKeystoreAesGcm

	 in Method: byte[] encryptInternal(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer56302, $r5)


	 in Method: byte[] decryptInternal(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer53235, $r2, varReplacer53236, varReplacer53237)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer53238, $r1, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer53238, $r1, $r4)


Findings in Java Class: com.google.crypto.tink.subtle.Hkdf

	 in Method: byte[] computeHkdf(java.lang.String,byte[],byte[],byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r1)


Findings in Java Class: com.google.crypto.tink.subtle.AesGcmHkdfStreaming

	 in Method: javax.crypto.spec.SecretKeySpec deriveKeySpec(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer38634)


	 in Method: javax.crypto.spec.GCMParameterSpec paramsForSegment(byte[],long,boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer12022, $r1)


Findings in Java Class: com.google.crypto.tink.subtle.AesEaxJce

	 in Method: byte[] encrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


	 in Method: byte[] decrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


	 in Method: void <init>(byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer61146)


Findings in Java Class: com.google.crypto.tink.subtle.AesCtrHmacStreaming

	 in Method: javax.crypto.spec.SecretKeySpec deriveHmacKeySpec(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, $i0, varReplacer38628, $r3)


	 in Method: javax.crypto.spec.SecretKeySpec deriveKeySpec(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>($r1, varReplacer38629, $i0, varReplacer38630)


Findings in Java Class: com.google.crypto.tink.subtle.AesCtrHmacStreaming$AesCtrHmacStreamDecrypter

	 in Method: void decryptSegment(java.nio.ByteBuffer,int,boolean,java.nio.ByteBuffer)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: com.google.crypto.tink.subtle.AesCtrHmacStreaming$AesCtrHmacStreamEncrypter

	 in Method: void encryptSegment(java.nio.ByteBuffer,boolean,java.nio.ByteBuffer)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)


	 in Method: void encryptSegment(java.nio.ByteBuffer,java.nio.ByteBuffer,boolean,java.nio.ByteBuffer)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 117

	CryptoAnalysis found the following violations. For details see description above.
	TypestateError: 8
	RequiredPredicateError: 45
	IncompleteOperationError: 117
	NeverTypeOfError: 2
	ConstraintError: 22
=====================================================================
