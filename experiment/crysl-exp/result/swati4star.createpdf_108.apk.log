0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer52502)
		Method: <com.itextpdf.text.pdf.PdfEncryption: void <init>()>
		SHA-256: e963fd2239d147d86caa2def2d3cb411effdced5e876440f90fe712188928968
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.KeyGenerator
		Statement: $r9 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer63375)
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.spongycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>
		SHA-256: e73a3d456bb813faedfef12ebd6302fad2bb2d99e44e71333a438fc10dcc458e
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r12.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.itextpdf.text.pdf.PdfEncryption: boolean readKey(com.itextpdf.text.pdf.PdfDictionary,byte[])>
		SHA-256: 57777c5c1b2cfa8b76fdd847f8fff83acb794d69520ca4ad2909353df3043004
		Secure: true
	Object:
		Variable: $r35
		Type: java.security.MessageDigest
		Statement: $r35 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer63679)
		Method: <com.itextpdf.text.pdf.PdfReader: void readDecryptedDocObj()>
		SHA-256: 8d32d42339ecd840a1a6c832c593fc20e6b3d0d1cbdfe2211e524b22878bdcbd
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.MessageDigest
		Statement: $r12 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer66041)
		Method: <com.itextpdf.text.pdf.PdfEncryption: boolean readKey(com.itextpdf.text.pdf.PdfDictionary,byte[])>
		SHA-256: 74ca83f5115491e80b2ffefdb5618b5a134a2ebb69ca0e3e4daa7c0552514be2
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.KeyGenerator
		Statement: $r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer56345)
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: void <init>()>
		SHA-256: 152dd3aeab4781c81ea851887efed92ac65c5dd3803aa0c4df930e805eada6be
		Secure: true
	Object:
		Variable: $r35
		Type: java.security.MessageDigest
		Statement: $r35 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer63692)
		Method: <com.itextpdf.text.pdf.PdfReader: void readDecryptedDocObj()>
		SHA-256: 2b017f94b6713b11b84ac84376f13833466a23c74ec810174c034696ff4864fb
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.GOST3410Signer: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 61b7887e2cfe6269c9dc5ed1565a2d9c81d2ae6237d2a5bf20c73d26a54cd85c
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <org.spongycastle.crypto.encodings.PKCS1Encoding: byte[] encodeBlock(byte[],int,int)>
		SHA-256: 85d332321dc5f8e0e93243185cceb3f361c013eda36223e03f5cc72d1a741bc7
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.DSASigner: java.math.BigInteger getRandomizer(java.math.BigInteger,java.security.SecureRandom)>
		SHA-256: 728067e6297e9cc689793764cefcc080705eefa266c05439d9c7a7cf503909b7
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.itextpdf.text.pdf.PdfEncryption: void setupAllKeys(byte[],byte[],int)>
		SHA-256: cb37670dcc58075cdd4961f25ca55c3fbd28f364a259521d6e449a4909197b18
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.itextpdf.text.pdf.PdfEncryption: byte[] createDocumentId()>
		SHA-256: 377e6493d8ccc0dfe66339f0855347d94e9218e473fd5d6f3f1c9965baad4049
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r8)
		Method: <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String hexsafe(java.lang.String)>
		SHA-256: b36ef732c657ffa47104a4f22c4f22f3b5fb00b31c3cf0feed407290ec509edc
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <org.apache.poi.poifs.crypt.AgileDecryptor$ChunkedCipherInputStream: byte[] nextChunk()>
		SHA-256: a326e3d7e77079675bd511a86a6808c0f212bdf19e2d71fd8bdfbbc2716b0a88
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.encodings.OAEPEncoding: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 2927d56a192959dc3453ff63fb3830152d4c89781cce727cc1398f859f78edbf
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.ntru.NTRUEngine: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 4bd6151add7d31cc4c6c1b467a5fcba26d1274b4e5b8f364b9492ad636053fa7
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer66723)
		Method: <com.itextpdf.text.pdf.PdfSmartCopy$ByteStore: void <init>(com.itextpdf.text.pdf.PRStream,java.util.HashMap)>
		SHA-256: 9f2d11906d5f260fef8303b073fcd1341253409e2e66890eb7a6b51d62648f92
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer24664)
		Method: <org.apache.poi.poifs.crypt.AgileDecryptor: byte[] generateIv(int,byte[],byte[])>
		SHA-256: f2e2775dc30678b37d9399a642198668cefb9be1a89adfcc4774e4647038f351
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.encodings.PKCS1Encoding: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.poi.hssf.record.crypto.Biff8EncryptionKey: org.apache.poi.hssf.record.crypto.RC4 createRC4(int)>
		SHA-256: b7392ecda6fdf5dbd755acae21adef783dd94d0bec8fa03efa75668e7363affc
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.engines.ElGamalEngine: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: cc0b332bb2ddc847ca308294e1c87841df1bdcc2359c6b4559abe498d8131c20
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.DigestInputStream
		Statement: specialinvoke $r11.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r12, $r6)
		Method: <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderBase: org.apache.xmlbeans.XmlObject parse(java.io.InputStream,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>
		SHA-256: ec91efa5aafee57d50f84427e4530b90b2cf0422784b4c83d2dcb10bb00250d1
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer52553)
		Method: <com.itextpdf.text.pdf.PdfEncryption: byte[] createDocumentId()>
		SHA-256: 9d96fa26317de57b635a57556fea768ed81c98da6a21ad438e11574cb1cf62b
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer56428)
		Method: <com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.PdfDictionary getEncryptionDictionary()>
		SHA-256: 5524a4a136285d72e8f33fe65f444c537602d6a147ff181e1607ea287701ec96
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator: org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator$FGBasis generateBasis()>
		SHA-256: bcb54d56dec785f765303fde3896b946639b8597c070f0bc991c1546f044b396
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.generators.ECKeyPairGenerator: void init(org.spongycastle.crypto.KeyGenerationParameters)>
		SHA-256: b9c970d7ca75c43cb7258988e82963e870aab49d0877fadda916613732dffc1d
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters: void <init>(int,int,int,int,int,double,double,double,boolean,boolean,int,org.spongycastle.crypto.Digest)>
		SHA-256: 7da588f6ba11daef0648e917469639d98b077179b329759419eb3ea4368bb37f
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer53967)
		Method: <com.itextpdf.text.ImgJBIG2: void <init>(int,int,byte[],byte[])>
		SHA-256: 862a12a695dd6f5683ace9bbb3f8bdcf004db2ac58581e827bdd0532d778d4ee
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer66355)
		Method: <org.apache.xmlbeans.impl.schema.SchemaTypeLoaderBase: org.apache.xmlbeans.XmlObject parse(java.io.InputStream,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)>
		SHA-256: 3546493c98c2c71ab40a238c77de233b1bcb2832c981b8e65a59a6e1169f340c
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r12.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.itextpdf.text.pdf.PdfEncryption: boolean readKey(com.itextpdf.text.pdf.PdfDictionary,byte[])>
		SHA-256: cd8643090a9a4d38c9fb2bac4b47ac347142ec9fd58f71b4f3bd51170bc40621
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.MessageDigest: int digest(byte[],int,int)>($r5, varReplacer52535, varReplacer52536)
		Method: <com.itextpdf.text.pdf.PdfEncryption: void setupAllKeys(byte[],byte[],int)>
		SHA-256: ec8f771712a421406e466bab96530350ef46fe00e046f1e31cc7eaf68f8a08e0
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.gmss.GMSSSigner: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 2dc8cd1c1fa7979cada7be8f8320f93342af2ff1963c7c499a3420b2b9545bfa
		Secure: true
	Object:
		Variable: $r13
		Type: byte[]
		Statement: $r13 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r13)
		Method: <com.itextpdf.text.pdf.PdfSmartCopy$ByteStore: void serObject(com.itextpdf.text.pdf.PdfObject,int,com.itextpdf.text.pdf.ByteBuffer,java.util.HashMap)>
		SHA-256: 876270d0267fc45c080cb3c7041ce6ea03b8f6771e4fe079dddc495705d2d1c4
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer52519)
		Method: <com.itextpdf.text.pdf.PdfEncryption: void setupAllKeys(byte[],byte[],int)>
		SHA-256: 977ac13a15e42721764c29d5b82eaeaf06f4fee0813b321425bc1e2dff942d29
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.SecretKey
		Statement: $r10 = virtualinvoke $r9.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.spongycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>
		SHA-256: ddc026e2b3a5c35ca3f88a60402da2fec2b04c907d4fb3e2a394a25c1cb46cdb
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer56437)
		Method: <com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.PdfDictionary getEncryptionDictionary()>
		SHA-256: f102d0cc5d86d6b0a3fbf3d13fb8eeb4c1752ac9071456c367fe4f50023c9837
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.ECNRSigner: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 9280f6752b6e6221628d06f9d60b4341d2a16061cd2ae2c26b66d065728b8af7
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5800)
		Method: <org.apache.xmlbeans.impl.values.JavaHexBinaryHolder: void <clinit>()>
		SHA-256: cb8423fc0300f06a0641cfcfd5edf164f548507ab988fda8225389ac06b6d628
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.ISO9796d2PSSSigner: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 6dae500fa4127477f702f7c8db5b65ac00e8420fed109375c053548083b8d090
		Secure: true
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke $r35.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.itextpdf.text.pdf.PdfReader: void readDecryptedDocObj()>
		SHA-256: 7083bc968edc0c01c7eed3b4a1ec379655491e18296dd62936bd59065272dc97
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.paddings.ISO10126d2Padding: void init(java.security.SecureRandom)>
		SHA-256: 6db9bf5a3d5f9fa28eccec9396984113bbdc903a69715bf2daefa2626b696569
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r12.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.itextpdf.text.pdf.PdfEncryption: boolean readKey(com.itextpdf.text.pdf.PdfDictionary,byte[])>
		SHA-256: cd8643090a9a4d38c9fb2bac4b47ac347142ec9fd58f71b4f3bd51170bc40621
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5802)
		Method: <org.apache.xmlbeans.impl.values.JavaBase64Holder: void <clinit>()>
		SHA-256: c752f6b05cd4d6294bd4f79f7fd699d82eac5e445490a14c6810d7ae6ccec578
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters: void <init>(int,int,int,int,int,int,int,double,double,double,boolean,boolean,int,org.spongycastle.crypto.Digest)>
		SHA-256: 7da588f6ba11daef0648e917469639d98b077179b329759419eb3ea4368bb37f
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer46311)
		Method: <org.apache.poi.hssf.record.crypto.Biff8EncryptionKey: org.apache.poi.hssf.record.crypto.RC4 createRC4(int)>
		SHA-256: dcc649ee0f5c4b5337800fcfcade3eb7fd9b4022ad1926d7a3a640fb0dffe7b1
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.MessageDigest: int digest(byte[],int,int)>($r6, varReplacer52551, varReplacer52552)
		Method: <com.itextpdf.text.pdf.PdfEncryption: void setupAllKeys(byte[],byte[],int)>
		SHA-256: f27f6e966361fcb25794d943dd5f93b62e4f5071ea410b51a411cc2b57998aa2
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r3.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: void <init>()>
		SHA-256: dd6b1c4917e70c51ad4099a7151e602f2c5913dbb831d77fc5974257d09cf92f
		Secure: true
	Object:
		Variable: $r13
		Type: byte[]
		Statement: $r13 = virtualinvoke $r12.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.itextpdf.text.pdf.PdfEncryption: boolean readKey(com.itextpdf.text.pdf.PdfDictionary,byte[])>
		SHA-256: 8705c2dc6baeaf48e6d9149187a353da41db3d4755305322912b47d488180a0
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.itextpdf.text.ImgJBIG2: void <init>(int,int,byte[],byte[])>
		SHA-256: 31b6e101b9f3333a119a2fb9e006de2c91549eb22f759226330fea33b2aa0dcd
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <org.apache.poi.poifs.crypt.AgileDecryptor: byte[] generateIv(int,byte[],byte[])>
		SHA-256: d4da42942366f46b0c5136546353267a7727511e30d53d86703f023a6aee94fa
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <org.apache.poi.poifs.crypt.AgileDecryptor: byte[] generateIv(int,byte[],byte[])>
		SHA-256: a2f68594410b29ed99d17a2d31d45665604d6b04e74c73d8830a7d2571677446
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.ntru.NTRUEncryptionKeyGenerationParameters: void <init>(int,int,int,int,int,int,int,int,int,int,boolean,byte[],boolean,boolean,org.spongycastle.crypto.Digest)>
		SHA-256: 8804dfbcedc43de8915d1844bd637bb3574c76388648172f6a7135bf1a8c7524
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <org.spongycastle.crypto.signers.PSSSigner: byte[] generateSignature()>
		SHA-256: 5971d6538d25f1e396808264bf05345b660a017c8af8ec968b717cf263b5ce6a
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.rainbow.RainbowSigner: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: b0d1ba3da8064ca082b6ab923adae7a1f903b06296e62e14fc3b962758995d3f
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.ntru.NTRUEncryptionKeyGenerationParameters: void <init>(int,int,int,int,int,int,int,int,boolean,byte[],boolean,boolean,org.spongycastle.crypto.Digest)>
		SHA-256: 8804dfbcedc43de8915d1844bd637bb3574c76388648172f6a7135bf1a8c7524
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.ECGOST3410_2012Signer: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 66b8fe936a6d7cfdc7cd8c06af33eb87c18c5d3767ce2ad49d621fb299693e95
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.engines.RSABlindedEngine: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.itextpdf.text.pdf.PdfEncryption: void setupAllKeys(byte[],byte[],int)>
		SHA-256: cb37670dcc58075cdd4961f25ca55c3fbd28f364a259521d6e449a4909197b18
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer63376)
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.spongycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>
		SHA-256: 5df0dd66c918ef814e3697a42475806aa6421ca79da5bc3da539e6fc9b4a32
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator: org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator$FGBasis generateBasis()>
		SHA-256: bcb54d56dec785f765303fde3896b946639b8597c070f0bc991c1546f044b396
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator: org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator$FGBasis generateBasis()>
		SHA-256: bcb54d56dec785f765303fde3896b946639b8597c070f0bc991c1546f044b396
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = interfaceinvoke $r5.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: void <init>()>
		SHA-256: 7ce2264834ca3b95cbe416e081422781f5046c1e1d9a6df061febc5e2919ee7
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: void <init>()>
		SHA-256: 94a72c58557b7499ae339ccaddc26783d4e8f2479f98c3b8aaa1a96b1bd4d44d
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.DSASigner: java.security.SecureRandom initSecureRandom(boolean,java.security.SecureRandom)>
		SHA-256: e8268e06cdec9b55dd4e3a8d37eef42c3e6d25c634d5bfaad5469f6fbc26035f
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer66727)
		Method: <com.itextpdf.text.pdf.PdfSmartCopy$ByteStore: void <init>(com.itextpdf.text.pdf.PdfDictionary,java.util.HashMap)>
		SHA-256: e8cd3cca9304ac84c5317c3784839cd641118b7064b4db58c615e1b96313e19
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer46434)
		Method: <org.apache.xmlbeans.impl.common.QNameHelper: java.lang.String hexsafe(java.lang.String)>
		SHA-256: c9cf2fdcce854996c9d6e6a8db12fe4c8e94bc26d09f24005cd47c9af4ad3f6
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.AlgorithmParameterGenerator
		Statement: $r3 = staticinvoke <java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameterGenerator getInstance(java.lang.String)>(varReplacer63369)
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.spongycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)>
		SHA-256: 60166f72ce717c4e24d242a5379680ddde6114462a8163ad04112c12c910847d
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.SecureRandom
		Statement: specialinvoke $r9.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.SM2Signer: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 4e9e555d81f3f96e91f9ad5699557c96f5b92c3b21e9204058181b260a3a9db5
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.ECDSASigner: java.security.SecureRandom initSecureRandom(boolean,java.security.SecureRandom)>
		SHA-256: f3053cf85ff0ce748590d7e6a4da3184d4158a2e3d38a0473e74cc66757dd76
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.DSTU4145Signer: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: bb98eee2eb82fb2c71e59ff99dcc6ac412ba5d86e67e379f475f490796e58a35
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <org.spongycastle.crypto.signers.ISO9796d2PSSSigner: byte[] generateSignature()>
		SHA-256: 153ecb1a57e7fd3a3f9212bf84d10102d6cb1bcca8396308797653bf2209f59c
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator: org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator$FGBasis generateBasis()>
		SHA-256: bcb54d56dec785f765303fde3896b946639b8597c070f0bc991c1546f044b396
		Secure: true
	Object:
		Variable: $r17
		Type: javax.crypto.Cipher
		Statement: $r17 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r16)
		Method: <com.itextpdf.text.pdf.PdfPublicKeySecurityHandler: org.spongycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])>
		SHA-256: 9787cc72442456e3505b466bc06f98b43856244ac3abe629c5becfc7b4b78f45
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>($r4)
		Method: <org.spongycastle.crypto.encodings.PKCS1Encoding: byte[] decodeBlockOrRandom(byte[],int,int)>
		SHA-256: f0d838aba1c9e27b028a361659061451d28753724f242b369ab4684652f24999
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.PSSSigner: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 7331639808f0d8733f5df0230ac3a48eecf3cff3ed703c4c0022f9cd7cd80756
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.ECGOST3410Signer: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: caabe0390e3d2386e10c04d6d72b0b44e335e1623efc6992e7ef060aaafe4388
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.itextpdf.text.pdf.PdfEncryption: com.itextpdf.text.pdf.PdfDictionary getEncryptionDictionary()>
		SHA-256: be6aa4f138a2a87448d62a524ca03a5f0d5a05b4cc78557434be62edbaf89f29
		Secure: true

Findings in Java Class: org.apache.xmlbeans.impl.values.JavaHexBinaryHolder

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #cb8423fc0300f06a0641cfcfd5edf164f548507ab988fda8225389ac06b6d628)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5800)


Findings in Java Class: org.apache.xmlbeans.impl.values.JavaBase64Holder

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c752f6b05cd4d6294bd4f79f7fd699d82eac5e445490a14c6810d7ae6ccec578)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5802)


Findings in Java Class: org.apache.poi.poifs.crypt.AgileDecryptor

	 in Method: byte[] generateIv(int,byte[],byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f2e2775dc30678b37d9399a642198668cefb9be1a89adfcc4774e4647038f351)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer24664)


Findings in Java Class: org.apache.poi.hssf.record.crypto.Biff8EncryptionKey

	 in Method: org.apache.poi.hssf.record.crypto.RC4 createRC4(int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #dcc649ee0f5c4b5337800fcfcade3eb7fd9b4022ad1926d7a3a640fb0dffe7b1)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer46311)


Findings in Java Class: org.apache.xmlbeans.impl.common.QNameHelper

	 in Method: java.lang.String hexsafe(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c9cf2fdcce854996c9d6e6a8db12fe4c8e94bc26d09f24005cd47c9af4ad3f6)
			First parameter (with value "SHA") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer46434)


Findings in Java Class: com.itextpdf.text.pdf.PdfEncryption

	 in Method: void <init>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e963fd2239d147d86caa2def2d3cb411effdced5e876440f90fe712188928968)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer52502)


	 in Method: byte[] createDocumentId()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9d96fa26317de57b635a57556fea768ed81c98da6a21ad438e11574cb1cf62b)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer52553)


	 in Method: com.itextpdf.text.pdf.PdfDictionary getEncryptionDictionary()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f102d0cc5d86d6b0a3fbf3d13fb8eeb4c1752ac9071456c367fe4f50023c9837)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer56437)


Findings in Java Class: com.itextpdf.text.ImgJBIG2

	 in Method: void <init>(int,int,byte[],byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #862a12a695dd6f5683ace9bbb3f8bdcf004db2ac58581e827bdd0532d778d4ee)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer53967)


Findings in Java Class: org.spongycastle.crypto.encodings.PKCS1Encoding

	 in Method: byte[] decodeBlockOrRandom(byte[],int,int)
		TypestateError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Unexpected call to method nextBytes on object of type java.security.SecureRandom. Expect a call to one of the following methods init,getInstanceStrong,getInstance
			at statement: virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>($r4)


	 in Method: byte[] encodeBlock(byte[],int,int)
		TypestateError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Unexpected call to method nextBytes on object of type java.security.SecureRandom. Expect a call to one of the following methods init,getInstanceStrong,getInstance
			at statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r3)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.spongycastle.crypto.encodings.PKCS1Encoding: int getInputBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.spongycastle.crypto.encodings.PKCS1Encoding: int getInputBlockSize()>()


	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r3 = r0.<org.spongycastle.crypto.encodings.PKCS1Encoding: java.security.SecureRandom random>

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i0 = interfaceinvoke $r6.<org.spongycastle.crypto.AsymmetricBlockCipher: int getOutputBlockSize()>()


	 in Method: byte[] decodeBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i0 = specialinvoke r0.<org.spongycastle.crypto.encodings.PKCS1Encoding: int findStart(byte,byte[])>($b3, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i0 = specialinvoke r0.<org.spongycastle.crypto.encodings.PKCS1Encoding: int findStart(byte,byte[])>($b3, $r1)


Findings in Java Class: org.spongycastle.crypto.encodings.ISO9796d1Encoding

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r1.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r2)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r1.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r2)


Findings in Java Class: org.spongycastle.crypto.signers.X931Signer

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r3.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r3.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)


Findings in Java Class: org.spongycastle.crypto.tls.TlsRSAUtils

	 in Method: byte[] generateEncryptedPreMasterSecret(org.spongycastle.crypto.tls.TlsContext,org.spongycastle.crypto.params.RSAKeyParameters,java.io.OutputStream)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r9 = virtualinvoke $r6.<org.spongycastle.crypto.encodings.PKCS1Encoding: byte[] processBlock(byte[],int,int)>($r3, varReplacer56019, $i0)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r9 = virtualinvoke $r6.<org.spongycastle.crypto.encodings.PKCS1Encoding: byte[] processBlock(byte[],int,int)>($r3, varReplacer56019, $i0)


	 in Method: byte[] safeDecryptPreMasterSecret(org.spongycastle.crypto.tls.TlsContext,org.spongycastle.crypto.params.RSAKeyParameters,byte[])
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r5 = virtualinvoke $r1.<org.spongycastle.crypto.encodings.PKCS1Encoding: byte[] processBlock(byte[],int,int)>($r5, varReplacer58962, $i1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r5 = virtualinvoke $r1.<org.spongycastle.crypto.encodings.PKCS1Encoding: byte[] processBlock(byte[],int,int)>($r5, varReplacer58962, $i1)


Findings in Java Class: org.spongycastle.crypto.signers.ISO9796d2Signer

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r1.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r3)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r1.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r3)


Findings in Java Class: org.spongycastle.crypto.signers.PSSSigner

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r7.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r3)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r7.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r7.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r3)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r7.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)


Findings in Java Class: org.spongycastle.crypto.signers.RSADigestSigner

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r6.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r6.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)


Findings in Java Class: org.spongycastle.crypto.encodings.OAEPEncoding

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r4.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r4.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)


	 in Method: byte[] encodeBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.spongycastle.crypto.encodings.OAEPEncoding: int getInputBlockSize()>()


	 in Method: byte[] decodeBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r3 = specialinvoke r0.<org.spongycastle.crypto.encodings.OAEPEncoding: byte[] maskGeneratorFunction1(byte[],int,int,int)>($r1, varReplacer62746, $i0, $i1)


Findings in Java Class: org.spongycastle.crypto.signers.GenericSigner

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r6.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r6.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)


Findings in Java Class: org.spongycastle.crypto.signers.ISO9796d2PSSSigner

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r8.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r3)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r8.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r3)


Findings in Java Class: org.spongycastle.pqc.crypto.ntru.NTRUEngine

	 in Method: byte[] decrypt(byte[],org.spongycastle.pqc.crypto.ntru.NTRUEncryptionPrivateKeyParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r4 = specialinvoke r0.<org.spongycastle.pqc.crypto.ntru.NTRUEngine: org.spongycastle.pqc.math.ntru.polynomial.Polynomial generateBlindingPoly(byte[],byte[])>($r7, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r5 = virtualinvoke r0.<org.spongycastle.pqc.crypto.ntru.NTRUEngine: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial decrypt(org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial,org.spongycastle.pqc.math.ntru.polynomial.Polynomial,org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial)>($r8, $r4, $r5)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r10 = specialinvoke r0.<org.spongycastle.pqc.crypto.ntru.NTRUEngine: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial MGF(byte[],int,int,boolean)>($r1, $i1, $i6, $z0)


Findings in Java Class: org.spongycastle.crypto.engines.NaccacheSternEngine

	 in Method: byte[] processBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.spongycastle.crypto.engines.NaccacheSternEngine: int getInputBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.spongycastle.crypto.engines.NaccacheSternEngine: int getInputBlockSize()>()


Findings in Java Class: org.spongycastle.crypto.engines.ElGamalEngine

	 in Method: byte[] processBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.spongycastle.crypto.engines.ElGamalEngine: int getInputBlockSize()>()


Findings in Java Class: org.spongycastle.crypto.engines.RSABlindedEngine

	 in Method: byte[] processBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r8 = staticinvoke <org.spongycastle.util.BigIntegers: java.math.BigInteger createRandomInRange(java.math.BigInteger,java.math.BigInteger,java.security.SecureRandom)>($r8, $r9, $r10)


Findings in Java Class: com.itextpdf.text.pdf.PdfPublicKeySecurityHandler

	 in Method: org.spongycastle.asn1.ASN1Primitive createDERForRecipient(byte[],java.security.cert.X509Certificate)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedAlg
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(varReplacer63372, $r10, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.AlgorithmParameters)>(varReplacer63372, $r10, $r4)

		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #e73a3d456bb813faedfef12ebd6302fad2bb2d99e44e71333a438fc10dcc458e)
			First parameter (with value "1.2.840.113549.3.2") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: $r9 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer63375)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5df0dd66c918ef814e3697a42475806aa6421ca79da5bc3da539e6fc9b4a32)
			First parameter (with value "1.2.840.113549.3.2") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer63376)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #5df0dd66c918ef814e3697a42475806aa6421ca79da5bc3da539e6fc9b4a32)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		ConstraintError violating CrySL rule for java.security.AlgorithmParameterGenerator (on Object #60166f72ce717c4e24d242a5379680ddde6114462a8163ad04112c12c910847d)
			First parameter (with value "1.2.840.113549.3.2") should be any of {DH, DiffieHellman, DSA}
			at statement: $r3 = staticinvoke <java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameterGenerator getInstance(java.lang.String)>(varReplacer63369)

		TypestateError violating CrySL rule for java.security.AlgorithmParameterGenerator (on Object #60166f72ce717c4e24d242a5379680ddde6114462a8163ad04112c12c910847d)
			Unexpected call to method generateParameters on object of type java.security.AlgorithmParameterGenerator. Expect a call to one of the following methods init
			at statement: $r4 = virtualinvoke $r3.<java.security.AlgorithmParameterGenerator: java.security.AlgorithmParameters generateParameters()>()


	 in Method: org.spongycastle.asn1.cms.KeyTransRecipientInfo computeRecipientInfo(java.security.cert.X509Certificate,byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #9787cc72442456e3505b466bc06f98b43856244ac3abe629c5becfc7b4b78f45)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r17.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)


Findings in Java Class: com.itextpdf.text.pdf.PdfReader

	 in Method: void readDecryptedDocObj()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8d32d42339ecd840a1a6c832c593fc20e6b3d0d1cbdfe2211e524b22878bdcbd)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r35 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer63679)


Findings in Java Class: org.apache.xmlbeans.impl.schema.SchemaTypeLoaderBase

	 in Method: org.apache.xmlbeans.XmlObject parse(java.io.InputStream,org.apache.xmlbeans.SchemaType,org.apache.xmlbeans.XmlOptions)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3546493c98c2c71ab40a238c77de233b1bcb2832c981b8e65a59a6e1169f340c)
			First parameter (with value "SHA") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer66355)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3546493c98c2c71ab40a238c77de233b1bcb2832c981b8e65a59a6e1169f340c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r11.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r12, $r6)

		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #ec91efa5aafee57d50f84427e4530b90b2cf0422784b4c83d2dcb10bb00250d1)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: specialinvoke $r11.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r12, $r6)


Findings in Java Class: com.itextpdf.text.pdf.PdfSmartCopy$ByteStore

	 in Method: void <init>(com.itextpdf.text.pdf.PRStream,java.util.HashMap)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9f2d11906d5f260fef8303b073fcd1341253409e2e66890eb7a6b51d62648f92)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer66723)


	 in Method: void <init>(com.itextpdf.text.pdf.PdfDictionary,java.util.HashMap)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e8cd3cca9304ac84c5317c3784839cd641118b7064b4db58c615e1b96313e19)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer66727)


Findings in Java Class: com.itextpdf.text.pdf.PdfSmartCopy

	 in Method: com.itextpdf.text.pdf.PdfIndirectReference copyIndirect(com.itextpdf.text.pdf.PRIndirectReference)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #9f2d11906d5f260fef8303b073fcd1341253409e2e66890eb7a6b51d62648f92)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = null

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e8cd3cca9304ac84c5317c3784839cd641118b7064b4db58c615e1b96313e19)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = null

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #9f2d11906d5f260fef8303b073fcd1341253409e2e66890eb7a6b51d62648f92)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #9f2d11906d5f260fef8303b073fcd1341253409e2e66890eb7a6b51d62648f92)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e8cd3cca9304ac84c5317c3784839cd641118b7064b4db58c615e1b96313e19)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e8cd3cca9304ac84c5317c3784839cd641118b7064b4db58c615e1b96313e19)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #9f2d11906d5f260fef8303b073fcd1341253409e2e66890eb7a6b51d62648f92)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r7)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e8cd3cca9304ac84c5317c3784839cd641118b7064b4db58c615e1b96313e19)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r7)


Findings in Java Class: org.apache.poi.poifs.crypt.AgileDecryptor$ChunkedCipherInputStream

	 in Method: byte[] nextChunk()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 77

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 3
	ConstraintError: 16
	TypestateError: 5
	IncompleteOperationError: 47
=====================================================================
