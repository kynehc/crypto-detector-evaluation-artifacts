0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Alive 18289  5000
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: varReplacer6918
		Type: java.lang.String
		Statement: $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer6918)
		Method: <com.trilead.ssh2.crypto.dh.DhExchange: void h(byte[])>
		SHA-256: d44ddbfc83788b25b859d616559b6da59b66b51f988e8d00c555151747926b2d
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r4, $r5)
		Method: <com.trilead.ssh2.crypto.dh.DhExchange: void g(java.lang.String)>
		SHA-256: a8e6981def72d08d61bbf64a5f2c537a7ee6adf16fd352925410bf769991b46
		Secure: true
	Object:
		Variable: $r15
		Type: java.security.SecureRandom
		Statement: specialinvoke $r15.<java.security.SecureRandom: void <init>()>()
		Method: <e.d.a.o.a: void e(e.d.a.q.d0)>
		SHA-256: 16d9bf7d06e909c662c09e0cbc6c42347362e0fc4b13461dd69b4e00e86583c0
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer27820, $r1)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 635b5bcc6e07fba01f8f52de8288ad4bc830aaad4607959b30b65c3f4a83a6c8
		Secure: false
	Object:
		Variable: varReplacer7334
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer7334)
		Method: <com.trilead.ssh2.crypto.cipher.AES: void c(boolean,byte[],byte[])>
		SHA-256: 464d3db3a80d17edc8255b0398c807a03362e5e784e1bd21a083a6f9bd6dcc1c
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyFactory
		Statement: $r6 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer7049)
		Method: <e.d.a.r.d: java.security.interfaces.RSAPublicKey a(byte[])>
		SHA-256: 3395073b69f512abac67d60e6997eda0506e87a12e62531ea3cb14b326a5c1c5
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<java.security.Signature: byte[] sign()>()
		Method: <e.d.a.r.b: byte[] g(byte[],java.security.interfaces.ECPrivateKey)>
		SHA-256: 97ef411fe3957f7605badafce51f75df1366ce76332c50485dc94d1e2de7e08c
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.PublicKey
		Statement: $r9 = virtualinvoke $r8.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)
		Method: <e.d.a.r.a: java.security.interfaces.DSAPublicKey a(byte[])>
		SHA-256: 4b408d56909c88c63e2d662a2190c1f05b753dbb39f81f8516fdd115c6b1d737
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.parse.ParseDigestUtils: java.lang.String md5(java.lang.String)>
		SHA-256: 254b8038a8702223bc771da0eae611502561a961fe15185aa0ffd84e10b36670
		Secure: false
	Object:
		Variable: $r31
		Type: java.security.PrivateKey
		Statement: $r31 = virtualinvoke $r29.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r42)
		Method: <e.d.a.o.a: void b(e.d.a.q.d0,boolean)>
		SHA-256: 2b09953365a8e0e8337576806e033f4175be0ecae2a3e47d5e7309367696d395
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r2)
		Method: <e.d.a.r.f: boolean d(byte[],byte[],java.security.interfaces.RSAPublicKey)>
		SHA-256: 4100cc94c16a945a673fb1d6a114911f446922500de988bb2e61f29fec0f41fd
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <e.d.a.b: java.security.SecureRandom l()>
		SHA-256: 75374ff8b5b0e4b76f1695659d8f1fc40ae4679c9f824a4325acff6aaab01e62
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.PrivateKey
		Statement: $r6 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r5)
		Method: <io.treehouses.remote.j.e: java.security.Key b(byte[],java.lang.String,java.lang.String)>
		SHA-256: c44305b67e6371c4555a25929d7d7b48de25e05a38c2d604ae6a4853c5ebd703
		Secure: false
	Object:
		Variable: $r29
		Type: java.security.KeyFactory
		Statement: $r29 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r8)
		Method: <e.d.a.o.a: void b(e.d.a.q.d0,boolean)>
		SHA-256: 9e13a2f6327ad4b921602ba7f65774302982692ed8b495c410565de7c2159036
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer30732)
		Method: <e.d.a.j: byte[] e(byte[],java.lang.String)>
		SHA-256: 517f6182bc0d4d2086d5d2244bb4851239827019fb8877398197672303bff1dd
		Secure: false
	Object:
		Variable: varReplacer7033
		Type: java.lang.String
		Statement: $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer7033)
		Method: <e.d.a.r.a: java.security.interfaces.DSAPublicKey a(byte[])>
		SHA-256: 82df9d4324313b28a39c6b50d968b4d86fae20d23c50d9034aa89708597fb941
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyFactory
		Statement: $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer6918)
		Method: <com.trilead.ssh2.crypto.dh.DhExchange: void h(byte[])>
		SHA-256: 800e391a4db408dcef336bb6cc77e7be37890686828a18d3bf239d43bf354f6c
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r4, $r5)
		Method: <com.trilead.ssh2.crypto.dh.DhExchange: void g(java.lang.String)>
		SHA-256: a8e6981def72d08d61bbf64a5f2c537a7ee6adf16fd352925410bf769991b46
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer32081)
		Method: <io.treehouses.remote.j.c: byte[] b(byte[],int,java.lang.String,byte[])>
		SHA-256: b1fb6149f43291131f830f59639b2ef6765cb10a5a2add90574031aba9bb50d4
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyFactory
		Statement: $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer7033)
		Method: <e.d.a.r.a: java.security.interfaces.DSAPublicKey a(byte[])>
		SHA-256: c77195571cc256e2de5e0baa0372ea457946588c46f90094c4727063c93ab537
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r4, $r5)
		Method: <com.trilead.ssh2.crypto.dh.DhExchange: void g(java.lang.String)>
		SHA-256: a8e6981def72d08d61bbf64a5f2c537a7ee6adf16fd352925410bf769991b46
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer35194)
		Method: <e.d.a.r.c: byte[] e(byte[],i.a.a.a.c)>
		SHA-256: 1729d9f952166563ed236af87da589ff28819209ce4317dbebcc7b3e8a80f8f4
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r10.<javax.crypto.KeyAgreement: byte[] generateSecret()>()
		Method: <com.trilead.ssh2.crypto.dh.DhExchange: void h(byte[])>
		SHA-256: be96d2cf9df1812bc8924af4f09144648babf378aa1a7af93c764682a51b0baf
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <e.d.a.r.a: boolean f(byte[],byte[],java.security.interfaces.DSAPublicKey)>
		SHA-256: 585a8a0aeb157ceba9cef1c1f96f63034f38ddb01d7783314ff10dd1cb2eb498
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyPairGenerator
		Statement: $r7 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r5)
		Method: <io.treehouses.remote.e.h: java.lang.Object w(java.lang.String,java.lang.String,java.lang.String,int,g.p.d)>
		SHA-256: 374b0f2bc388aa8641f68a93ab813724374a982092a055375cd9b696e57b6bb6
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r6)
		Method: <i.a.a.a.i.d: void <init>(i.a.a.a.h.b,java.lang.String,i.a.a.a.h.g,i.a.a.a.h.f)>
		SHA-256: de05ec23dd88732dd010c4395547f7553be21144135d7e3ef3cbf0b5d9b37602
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.KeyAgreement
		Statement: $r9 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>(varReplacer6909)
		Method: <com.trilead.ssh2.crypto.dh.EcDhExchange: void h(byte[])>
		SHA-256: 1c05428d4377fb79cff6fefd494012bd1507f87bcd389439b62ec9b8300bb98c
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r3, varReplacer3849)
		Method: <e.d.a.r.b$a: void <clinit>()>
		SHA-256: a525fcaef65c87f7e5b4cf2720907bfef7c11b9d9f0a402fb06f1b71f7258035
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r11.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r8)
		Method: <io.treehouses.remote.j.c: byte[] c(byte[],int,java.lang.String,byte[])>
		SHA-256: c1c5dca30d2dee81fcaca3be03a5d04e424c6a9ea0291ecc34b732cbafc74c79
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyPair
		Statement: $r7 = virtualinvoke $r6.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.trilead.ssh2.crypto.dh.DhExchange: void g(java.lang.String)>
		SHA-256: 9e1826f71bfd11b786ab8de775976f6fd9e01f1a1c200f3ae35457cc4acb22
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.PrivateKey
		Statement: $r11 = virtualinvoke $r8.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <io.treehouses.remote.e.h: java.lang.Object w(java.lang.String,java.lang.String,java.lang.String,int,g.p.d)>
		SHA-256: ff78ecebf3cd80fb09b3dccb919455172c929c116289308f2f8fb2642311693a
		Secure: true
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r2)
		Method: <e.d.a.r.e: boolean d(byte[],byte[],java.security.interfaces.RSAPublicKey)>
		SHA-256: 9d81f6806fb844178dabe89b7122df46e500bd032562928fcfc9d537872e4652
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r7.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)
		Method: <io.treehouses.remote.j.e: java.security.Key b(byte[],java.lang.String,java.lang.String)>
		SHA-256: c44718dd7799b790dc8eb43eb7efab590f7493f5dc7967d15d9753e21a21f9f6
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer6938)
		Method: <com.trilead.ssh2.crypto.digest.HMAC: void <init>(java.lang.String,byte[])>
		SHA-256: 1c57cb9ecc8230f48f424825a0460144b477510b8aa43c8e824d5fffe97dfa59
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyFactory
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)
		Method: <io.treehouses.remote.j.e: java.security.Key b(byte[],java.lang.String,java.lang.String)>
		SHA-256: d55fd3b28b013801089f929af6d8ba91444b58171700489332e5613ddacabac1
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.Signature: byte[] sign()>()
		Method: <e.d.a.r.e: byte[] c(byte[],java.security.interfaces.RSAPrivateKey)>
		SHA-256: 9018977d8173f75c6adff57d0aa8b5e1064cad5bd3a56b83eb543edf686e13fd
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r6.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r5)
		Method: <e.d.a.r.d: java.security.interfaces.RSAPublicKey a(byte[])>
		SHA-256: 4918b7617fd2ff8ef8cbab02dbe00ca6720dfa028d966fb5aef48932303ffc3d
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.cert.CertificateFactory
		Statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer38844)
		Method: <okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)>
		SHA-256: 883cfafd242d32ac5724f559b3cd316802cbbc222715a49e8ccaaf805c5aacfa
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <e.d.a.r.a: boolean f(byte[],byte[],java.security.interfaces.DSAPublicKey)>
		SHA-256: 5a47288c9c9dc4bdc3fde9ec596ab11902ffefe5d613458499ecae9d23c7fb10
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)
		Method: <io.treehouses.remote.j.e: java.security.Key b(byte[],java.lang.String,java.lang.String)>
		SHA-256: 29c6af7d57fc8bb9ef914324b4bed18d06e77b6c9182dd5a65e52801abbd7006
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>($r6)
		Method: <com.trilead.ssh2.crypto.dh.Curve25519Exchange: void g(java.lang.String)>
		SHA-256: f4a48303bfdf307b27f6c3325262ecf617d95603974374c74f7b997a7d46f257
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r3, varReplacer3856)
		Method: <e.d.a.r.b$a: void <clinit>()>
		SHA-256: dc81df60fe4cc1fabb628f432deb9c83bc0eb7b2a08f08ff5c92ab68c301a360
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer6941)
		Method: <com.trilead.ssh2.crypto.digest.HMAC: void <init>(java.lang.String,byte[])>
		SHA-256: 45a4f9e60395581cbd8592a66ad29732f933ac7759dbace271686bde092c73d1
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.PublicKey
		Statement: $r9 = virtualinvoke $r5.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <io.treehouses.remote.utils.d: io.treehouses.remote.ssh.beans.PubKeyBean d(java.lang.String,java.lang.String,java.lang.String,int)>
		SHA-256: 65d20e94f37cc5c972351736e8344b7537ccdc1041321503ba908e743bf7dc1e
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.KeyPair
		Statement: $r5 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.trilead.ssh2.crypto.dh.EcDhExchange: void g(java.lang.String)>
		SHA-256: 1d10711c71957da461b49b3fcc012c270e432433c7a4b2a3b380daba3e50ca
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.trilead.ssh2.crypto.dh.Curve25519Exchange: void g(java.lang.String)>
		SHA-256: 4d56c3363d8fb8aca0347cb604319bc198e6603aa559f29d0c1ce44d8adcab38
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r3)
		Method: <e.d.a.r.b: byte[] g(byte[],java.security.interfaces.ECPrivateKey)>
		SHA-256: 65c524cf49bb83d35a24b087bc217df5082b4469df591761990859ad0b58da2b
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer7059)
		Method: <e.d.a.r.e: boolean d(byte[],byte[],java.security.interfaces.RSAPublicKey)>
		SHA-256: 8dd8258f54660401e8cc4d844ce35e8a1c80c583245bdf046642e7d6677054bc
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer27817)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 235004c42072bcd63e603adc61d1e89d47d0753eb700bc7aa641026a66fb5548
		Secure: false
	Object:
		Variable: varReplacer30732
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer30732)
		Method: <e.d.a.j: byte[] e(byte[],java.lang.String)>
		SHA-256: 95d840ca311282a1e527047857792157d0506bd195412eded2e09c0bb6ebac8c
		Secure: false
	Object:
		Variable: varReplacer7087
		Type: java.lang.String
		Statement: $r12 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer7087)
		Method: <e.d.a.r.b: java.security.interfaces.ECPublicKey b(byte[])>
		SHA-256: 9f716cd9b907106aefb295105f71ef01fa1e95dcb453db58526218466e04ba60
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: $r4 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer27746)
		Method: <io.treehouses.remote.j.c: byte[] c(byte[],int,java.lang.String,byte[])>
		SHA-256: 294d453f00c373d1ecacfc57622f7bf31c84be3db2f32eb55bf8688eff997023
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer27819)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: e14d04f32296e0e1c447bf526b798e30c2c97281756f66c74de94387e203ac5b
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyPairGenerator
		Statement: $r4 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer6891)
		Method: <com.trilead.ssh2.crypto.dh.EcDhExchange: void g(java.lang.String)>
		SHA-256: 28b4b4811fa97fe162b650beeb1ab1e94b2ef684087e7219d82a1276b7773886
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer6945)
		Method: <com.trilead.ssh2.crypto.digest.HMAC: void <init>(java.lang.String,byte[])>
		SHA-256: e8788c37359f24f6157e80f46b7394bc2ffd38f15673feac6eeccbab55a0df31
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)
		Method: <com.trilead.ssh2.crypto.digest.HMAC: void <init>(java.lang.String,byte[])>
		SHA-256: 3473ca532d502a23c96fc7ad65fab930812097a5b58c7a2011e191f89e3961b6
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer6936)
		Method: <com.trilead.ssh2.crypto.digest.HMAC: void <init>(java.lang.String,byte[])>
		SHA-256: 2bc12b05aee8230837936bd1e7c587d593c6c5069bb62c587b03370007f3a052
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7098)
		Method: <e.d.a.r.c: boolean f(byte[],byte[],i.a.a.a.d)>
		SHA-256: bc032eaaab2671083cf81d3c75fd3ae0349ef329dffde360b9092cf66af12f9
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.Signature: byte[] sign()>()
		Method: <e.d.a.r.f: byte[] c(byte[],java.security.interfaces.RSAPrivateKey)>
		SHA-256: 6de03fa4d7d0db6853615a3ac8572c8520b9bf7699c18bf799c60557b00897b2
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7160)
		Method: <e.d.a.j: byte[] i(java.lang.String,java.lang.String,byte[])>
		SHA-256: 1952c337ab6989edef73ee2efa6ae6b4541abef94161c6a5ecdd5d89f8bc7e21
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r9.<javax.crypto.KeyAgreement: byte[] generateSecret()>()
		Method: <com.trilead.ssh2.crypto.dh.EcDhExchange: void h(byte[])>
		SHA-256: 7818d3c8b26c454ac1a085a43bba624573ec9e14ba751518eb9f4f8e6a2db050
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer7030)
		Method: <e.d.a.r.a: boolean f(byte[],byte[],java.security.interfaces.DSAPublicKey)>
		SHA-256: f77356a2e5328cc806ee8b761f04eaa9bf248f4b04db9daf8a46af0342aebb3f
		Secure: false
	Object:
		Variable: $r30
		Type: java.security.PublicKey
		Statement: $r30 = virtualinvoke $r29.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r42)
		Method: <e.d.a.o.a: void b(e.d.a.q.d0,boolean)>
		SHA-256: 6d51aa632aac841125e79cd81f78cec6329cac6b210a926016e0e0c05a57a01e
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r2)
		Method: <e.d.a.r.d: boolean f(byte[],byte[],java.security.interfaces.RSAPublicKey)>
		SHA-256: 39ded4bf7752c9269355492625569415ec0e0e309e046e05931af998ef729e27
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer6948)
		Method: <com.trilead.ssh2.crypto.digest.HMAC: void <init>(java.lang.String,byte[])>
		SHA-256: a23cc0b51b067bce866359accf188000e426db24920c16da26cb678668a9b3ab
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer7334)
		Method: <com.trilead.ssh2.crypto.cipher.AES: void c(boolean,byte[],byte[])>
		SHA-256: 514ad96c45cdedf30ea1e593d92f5ffdda3fc0c3851fd8d6c2f66ba91d5cafcc
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <e.d.a.j: byte[] e(byte[],java.lang.String)>
		SHA-256: 66250cc39289120e4b12baf2c4c9747860882028086d32eb071f226c1d88a160
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyPairGenerator
		Statement: $r4 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r2)
		Method: <io.treehouses.remote.utils.d: io.treehouses.remote.ssh.beans.PubKeyBean d(java.lang.String,java.lang.String,java.lang.String,int)>
		SHA-256: 8f4f91fa62ea1e0802eb61ca01814f9b652c66f309e6ffaf4dcfc892d451b1d3
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <io.treehouses.remote.j.c: byte[] a(int,byte[],byte[],java.security.MessageDigest)>
		SHA-256: a9fe94ef33ae534d42a7717cda57e6b52dee44576f3cd003330a73df0bd0d03d
		Secure: true
	Object:
		Variable: $r41
		Type: java.security.KeyPair
		Statement: specialinvoke $r41.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r30, $r31)
		Method: <e.d.a.o.a: void b(e.d.a.q.d0,boolean)>
		SHA-256: a81e36242f26099a3a2685677efc66a20724f4f0e4c7e7a5b1c69d2e396ef403
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <io.treehouses.remote.utils.q: java.lang.String h(java.lang.String)>
		SHA-256: dbd720ffc38e1038462dd361b30d9693cc5ce1c69ae5ff8012cc2ca4ff6136c3
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer7025)
		Method: <e.d.a.s.b: void <clinit>()>
		SHA-256: 5a709c5e31f614a65741ffc85862bb53251d23623db36ddfdef7f664533c5ed8
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: a79a1700ae9d8d44f13ea218f751e7024f8f1222b1b2ae17cdbab7b56d352181
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer27741)
		Method: <io.treehouses.remote.j.c: byte[] c(byte[],int,java.lang.String,byte[])>
		SHA-256: ac591c06fca63c125dc803f87d14fed9ba23948e37fb9fa58abde9fae3c75dca
		Secure: false
	Object:
		Variable: $r8
		Type: java.lang.String
		Statement: $r29 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r8)
		Method: <e.d.a.o.a: void b(e.d.a.q.d0,boolean)>
		SHA-256: 9db4db03059b2fe37b628e35d5452790df66ab06ff6a7f9c3b915891cd480084
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer7045)
		Method: <e.d.a.r.d: boolean f(byte[],byte[],java.security.interfaces.RSAPublicKey)>
		SHA-256: 4b34a5a3bf4271d46692507a8c0ac1413d24f7bbe3bd14b9a1b1c2c2f85cc800
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r4)
		Method: <e.d.a.r.b: boolean n(byte[],byte[],java.security.interfaces.ECPublicKey)>
		SHA-256: b9fa2c67fde808095fee8fb9fa70cc6ac931e1992a95b0c07d15ce2dcf615735
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer40229)
		Method: <io.treehouses.remote.utils.q: java.lang.String h(java.lang.String)>
		SHA-256: 88af31adcfca8531ca55fc8acf6dbed4b11d0cd6a8cc5a9e1431939f7e15cc94
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: dea0af93b06734ae35228a014521e6e031131dd2b357359826afa61f9a6de1b
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.PublicKey
		Statement: $r13 = virtualinvoke $r12.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r11)
		Method: <e.d.a.r.b: java.security.interfaces.ECPublicKey b(byte[])>
		SHA-256: d903a37104475d01e3ea9ed7f404819210dd72a7607efcd47d0b618c08f85428
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)
		Method: <com.trilead.ssh2.crypto.digest.HMAC: void <init>(java.lang.String,byte[])>
		SHA-256: 8b019343a51f6a81e77147770c9970a003bfdfe405dda31d87d5708d6a9e5cd1
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <io.treehouses.remote.j.c: byte[] a(int,byte[],byte[],java.security.MessageDigest)>
		SHA-256: c70d3c473d023f91ccbf064aac8d895ef0f126666f67c0fc81975279d4a737d4
		Secure: true
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r2)
		Method: <e.d.a.r.f: boolean d(byte[],byte[],java.security.interfaces.RSAPublicKey)>
		SHA-256: 9af43ae8f798dd669508b29bece8011a41bdf6b8d5737d25a81631fc852cf6ef
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r5.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <e.d.a.r.b: boolean n(byte[],byte[],java.security.interfaces.ECPublicKey)>
		SHA-256: 4d07421956b62942501bdfaa6877968732ee4e5052185add6fcaa3434fba0f8e
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <io.treehouses.remote.j.c: byte[] b(byte[],int,java.lang.String,byte[])>
		SHA-256: 8771d3f3ec63291692f8a33fecf07ef20d982f361cb4ad20b82ab2c2dad8e00a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyPair
		Statement: specialinvoke $r2.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r3, $r4)
		Method: <io.treehouses.remote.j.g: java.security.KeyPair Q(java.security.PublicKey,java.security.PrivateKey,io.treehouses.remote.ssh.beans.PubKeyBean)>
		SHA-256: aea5e91a9ee0b3c7452ceda07c1c685a389f1b4514b3a80b5ec06541d9e4babb
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer3896)
		Method: <e.d.a.r.f: byte[] c(byte[],java.security.interfaces.RSAPrivateKey)>
		SHA-256: d551480148a67624a91b7b1dd39dff086ce3d9244873e4f4ebb501f9dc5bfed9
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyFactory
		Statement: $r12 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer7087)
		Method: <e.d.a.r.b: java.security.interfaces.ECPublicKey b(byte[])>
		SHA-256: fa52a8b73d64159d49ce4405440f6f1b68e4f4702070a122c98acf52cad2144f
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r7.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.trilead.ssh2.crypto.dh.DhExchange: void g(java.lang.String)>
		SHA-256: 39314a464fdc3498e510c25ce8bd2eb43c12ae6b24fdd38ddac6eb0a5f690a2a
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyPair
		Statement: $r7 = virtualinvoke $r6.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.trilead.ssh2.crypto.dh.DhExchange: void g(java.lang.String)>
		SHA-256: 23059817806ebc1353486a51e219801586df50e8abaa1b129baf89b36c333fd4
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <e.d.a.q.m: void <init>(com.trilead.ssh2.crypto.CryptoWishList)>
		SHA-256: b95ab3f44e71efdea0ee8ee6eb407c9a34a4ed777880083f97f5874542551118
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.PrivateKey
		Statement: $r7 = virtualinvoke $r5.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <io.treehouses.remote.utils.d: io.treehouses.remote.ssh.beans.PubKeyBean d(java.lang.String,java.lang.String,java.lang.String,int)>
		SHA-256: eac6a4d7b7da4dfaf6333314ed3b17f6302677543ab45b91621c2af02d01e4b4
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <io.treehouses.remote.j.e: java.lang.String g(java.security.Key)>
		SHA-256: 9af64ff29bbad89337ee5f0129330cdcd8d374a9fa2eb978f2793883d49c3928
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27744)
		Method: <io.treehouses.remote.j.c: byte[] c(byte[],int,java.lang.String,byte[])>
		SHA-256: c7e759b0970021b203b5cb903568675ad9a0fc2f7cb61c6068b1bb73e526bc41
		Secure: true
	Object:
		Variable: varReplacer6913
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer6913)
		Method: <com.trilead.ssh2.crypto.dh.EcDhExchange: void h(byte[])>
		SHA-256: 56fe84d94930374c384c1339fc0da70b2f182d494a530c972806367368beaebd
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer30710)
		Method: <e.d.a.j: boolean b(java.lang.String,java.lang.String)>
		SHA-256: 5b93713b81dce4949ce8024c5b8c52151b875a12dd6843ada75d21e173211a94
		Secure: false
	Object:
		Variable: varReplacer7049
		Type: java.lang.String
		Statement: $r6 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer7049)
		Method: <e.d.a.r.d: java.security.interfaces.RSAPublicKey a(byte[])>
		SHA-256: c04b0dd7eb2c646d265f8e1e0d5b1c71a57fe66c53734d26b7851521ed2db7a5
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyPair
		Statement: $r5 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <io.treehouses.remote.utils.d: io.treehouses.remote.ssh.beans.PubKeyBean d(java.lang.String,java.lang.String,java.lang.String,int)>
		SHA-256: d2b21e31e5685a1d46f4c3017f57c4adb9a76be7229721d08d420acc2a13b12d
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.MessageDigest: int digest(byte[],int,int)>($r1, $i0, $i1)
		Method: <com.trilead.ssh2.crypto.digest.HashForSSH2Types: void b(byte[],int)>
		SHA-256: 43884cad1c6c87a33f79d05ace27a29b6c5e7408eb3a4cf2a13de6bdf0ff1f00
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer27823)
		Method: <okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 30f7bf695ee27637c63cf95880f582b88f5e93bda1152596e9fa02a05309a0a7
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.KeyAgreement
		Statement: $r10 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>(varReplacer6920)
		Method: <com.trilead.ssh2.crypto.dh.DhExchange: void h(byte[])>
		SHA-256: e6ae97b02e45473a234a39751942f696fe9d644f471e40b9fa3d3b286e37dcb6
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyPair
		Statement: $r8 = virtualinvoke $r7.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <io.treehouses.remote.e.h: java.lang.Object w(java.lang.String,java.lang.String,java.lang.String,int,g.p.d)>
		SHA-256: 7149778d976d2ea8486e7a99d79f9bfc22b652bcf7acb91dacbe5d5a2dbc88fb
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer3884)
		Method: <e.d.a.r.a: byte[] e(byte[],java.security.interfaces.DSAPrivateKey,java.security.SecureRandom)>
		SHA-256: 7681465cf5dcb7284eb14f5d325c0bce9b96697f70f0c38826fd5f137a695678
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PublicKey
		Statement: $r8 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r7)
		Method: <com.trilead.ssh2.crypto.dh.EcDhExchange: void h(byte[])>
		SHA-256: e3686914c394f3106c436c12f11635b0d020eb2ddb623f4f3d879c1bd63b46e2
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.Signature: byte[] sign()>()
		Method: <e.d.a.r.a: byte[] e(byte[],java.security.interfaces.DSAPrivateKey,java.security.SecureRandom)>
		SHA-256: db583130d7ee285ac573c263e9bb30f31cbd7e0506a6e80881616ac8fd104e25
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r0)
		Method: <okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: a8764d384e0e6acd4407dba0e4c2025660362892494036c03c4b52a40e75c66b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10155)
		Method: <com.parse.ParseDigestUtils: java.lang.String md5(java.lang.String)>
		SHA-256: 4d7dfa5a49ef4bf79b6fddd69890e60c747552a4111b398e19671608e62feb7f
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r3, varReplacer3875)
		Method: <e.d.a.r.b$a: void <clinit>()>
		SHA-256: c05de7a00e1745d1c11b8e10b17930708156b5eccc58d16f8a0c8de3117ba859
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.PublicKey
		Statement: $r8 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r7)
		Method: <io.treehouses.remote.j.e: java.security.Key b(byte[],java.lang.String,java.lang.String)>
		SHA-256: cc265af0a62dea05ce9110483b8ccb31d1780d0897a2a40863010c6776965370
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.PublicKey
		Statement: $r13 = virtualinvoke $r8.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <io.treehouses.remote.e.h: java.lang.Object w(java.lang.String,java.lang.String,java.lang.String,int,g.p.d)>
		SHA-256: 184b97aa9fa4f718086fffeb1907ada61c4db9a1d029c43cd6fc1112b9ec754c
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $z0 = virtualinvoke $r5.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <e.d.a.r.b: boolean n(byte[],byte[],java.security.interfaces.ECPublicKey)>
		SHA-256: b1ad1afb53153506e1a93bb4141b7259ef2800785188af94744e39c244fb142b
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.PublicKey
		Statement: $r10 = virtualinvoke $r7.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.trilead.ssh2.crypto.dh.DhExchange: void g(java.lang.String)>
		SHA-256: 4c31442b9dad359f82f875446399f9534a5578e3e5ccc883c3480955d0492945
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer6944)
		Method: <com.trilead.ssh2.crypto.digest.HMAC: void <init>(java.lang.String,byte[])>
		SHA-256: 8b9dfd134303892199c17dd07ec203c6873f44ed7bae20c320f95ef641fc329
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Key
		Statement: $r5 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <io.treehouses.remote.j.e: java.lang.String g(java.security.Key)>
		SHA-256: 83a0f93ba6bee739f821171a7ff01bf51de0a5a2a861df4d5447a7761f468aad
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r4, $r5)
		Method: <com.trilead.ssh2.crypto.dh.DhExchange: void g(java.lang.String)>
		SHA-256: a8e6981def72d08d61bbf64a5f2c537a7ee6adf16fd352925410bf769991b46
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer32072)
		Method: <io.treehouses.remote.j.c: byte[] b(byte[],int,java.lang.String,byte[])>
		SHA-256: 672815e8038e550812f7110d5d87ebeffbccc5ed7aa09991451e931220be0f3e
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyPairGenerator
		Statement: $r6 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer6893)
		Method: <com.trilead.ssh2.crypto.dh.DhExchange: void g(java.lang.String)>
		SHA-256: e5af0b09c2e6dc338c1f3288e6a9769a16b2086fa0b2e16d9490c541a264796f
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer27747)
		Method: <io.treehouses.remote.j.c: byte[] c(byte[],int,java.lang.String,byte[])>
		SHA-256: f06396445848d5541671dbc4cb9a132e71ca716e6e531a81f661b8a8c7550db8
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.PublicKey
		Statement: $r9 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)
		Method: <com.trilead.ssh2.crypto.dh.DhExchange: void h(byte[])>
		SHA-256: 9a2b0abf36831597e481cbf98483c922f56a6b4b48e1cc930a62eca084c48ea8
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer7068)
		Method: <e.d.a.r.f: boolean d(byte[],byte[],java.security.interfaces.RSAPublicKey)>
		SHA-256: b30ea0c4d867b980b1bd9062fc1e89508583c3bdbb65537b81c4f3e72b8a8605
		Secure: false
	Object:
		Variable: varReplacer7025
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer7025)
		Method: <e.d.a.s.b: void <clinit>()>
		SHA-256: 88b59a32329a7d0205d058431300174df29635c90a72a282b44c4b82db6d3a55
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer6913)
		Method: <com.trilead.ssh2.crypto.dh.EcDhExchange: void h(byte[])>
		SHA-256: 4373c962bc767df73492516e52a8dece43f0a829159dba10195c6f03657e95ac
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <io.treehouses.remote.j.c: byte[] c(byte[],int,java.lang.String,byte[])>
		SHA-256: 5075c3a04f5bb81359863695333a691b96253209b8df3d602abd84fd89be085b
		Secure: true
	Object:
		Variable: varReplacer32077
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer32077)
		Method: <io.treehouses.remote.j.c: byte[] b(byte[],int,java.lang.String,byte[])>
		SHA-256: 8d515eea07a1ab564bdf16fa54501e4f24729ccfff856eb584e92c45bcbc28ca
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.trilead.ssh2.crypto.cipher.AES: void c(boolean,byte[],byte[])>
		SHA-256: 426c8f5b1d6c37a99dc5cc7616b6816c231e6f526a8829f66efc63cbfbe589c6
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r2)
		Method: <e.d.a.r.d: boolean f(byte[],byte[],java.security.interfaces.RSAPublicKey)>
		SHA-256: f0d5e5a50f9bc3188b0680a83830fb995f31e0cb207396372e5595eb9ee722a0
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer3888)
		Method: <e.d.a.r.d: byte[] e(byte[],java.security.interfaces.RSAPrivateKey)>
		SHA-256: 7cf53f04ff5076b995e2f013795240429350dc28e985946783534fb5042bd78e
		Secure: false
	Object:
		Variable: varReplacer27741
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer27741)
		Method: <io.treehouses.remote.j.c: byte[] c(byte[],int,java.lang.String,byte[])>
		SHA-256: 1188229045b998e3fb1c5f84458f9de4ae0bd317bc3791f0df5e6702ad46a9a8
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r2)
		Method: <e.d.a.r.e: boolean d(byte[],byte[],java.security.interfaces.RSAPublicKey)>
		SHA-256: a19c560a3d32b944a96e2d42cfd23f9c2f9d1488c9ffc53b2fc268fda27d7abb
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7159)
		Method: <e.d.a.j: byte[] i(java.lang.String,java.lang.String,byte[])>
		SHA-256: 9720ae0a9b86e2efbd437092f9a1e778a44c62088de14ea15670d0dfee6ac510
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer27822)
		Method: <okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 41ecc76317ab89f6c1e6ff818a6c36241bf2ff8732262afa77fa1d31a2f3fce3
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <com.trilead.ssh2.crypto.digest.HashForSSH2Types: void <init>(java.lang.String)>
		SHA-256: b055e3a4962de44ee2aea63c2b6dc5f9b500d296a83975c1f3b983870e8afcad
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer30728)
		Method: <e.d.a.j: byte[] e(byte[],java.lang.String)>
		SHA-256: 68a1b2b66ff43f6314e697013840c08f64da34ad21855411cdcf8c1fd9d852e3
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer6951)
		Method: <com.trilead.ssh2.crypto.digest.HMAC: void <init>(java.lang.String,byte[])>
		SHA-256: 86592df13f51ba7635fb74b6a7b3a9987ebed3219a0f9b0b9ae33d3a782c4d09
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <e.d.a.j: byte[] i(java.lang.String,java.lang.String,byte[])>
		SHA-256: 1ab964debbf926f212f8b19ff84534e404421f484d9c07e90ef42c08df9f4a8
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <e.d.a.q.m: void <init>(com.trilead.ssh2.crypto.CryptoWishList)>
		SHA-256: af8ae150c990e0327c6baf4e451a8d66e42252e6393ab35203d168f26894a6e
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r4, $r5)
		Method: <com.trilead.ssh2.crypto.dh.DhExchange: void g(java.lang.String)>
		SHA-256: a8e6981def72d08d61bbf64a5f2c537a7ee6adf16fd352925410bf769991b46
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer32077)
		Method: <io.treehouses.remote.j.c: byte[] b(byte[],int,java.lang.String,byte[])>
		SHA-256: 8701b69364b12f0683a69da1d48bba36e15c1086eb1cb8fc963e1e7454e44fd8
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.Signature: byte[] sign()>()
		Method: <e.d.a.r.d: byte[] e(byte[],java.security.interfaces.RSAPrivateKey)>
		SHA-256: 470da5a52076643223c98d420c1634a2a78bf81d02c568415caca0bfda8ed2c4
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer3892)
		Method: <e.d.a.r.e: byte[] c(byte[],java.security.interfaces.RSAPrivateKey)>
		SHA-256: f8b8e4e2a5aecd24001a75ff7593572aace9bdaa7dc1dd860239f3c083b81d8a
		Secure: false

Findings in Java Class: e.d.a.r.a

	 in Method: byte[] e(byte[],java.security.interfaces.DSAPrivateKey,java.security.SecureRandom)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #7681465cf5dcb7284eb14f5d325c0bce9b96697f70f0c38826fd5f137a695678)
			First parameter (with value "SHA1withDSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer3884)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initSign(java.security.PrivateKey)>($r1)


	 in Method: boolean f(byte[],byte[],java.security.interfaces.DSAPublicKey)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r2)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #f77356a2e5328cc806ee8b761f04eaa9bf248f4b04db9daf8a46af0342aebb3f)
			First parameter (with value "SHA1withDSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer7030)


	 in Method: java.security.interfaces.DSAPublicKey a(byte[])
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r9 = virtualinvoke $r8.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)


Findings in Java Class: e.d.a.r.d

	 in Method: byte[] e(byte[],java.security.interfaces.RSAPrivateKey)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r2.<java.security.Signature: void initSign(java.security.PrivateKey)>($r1)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #7cf53f04ff5076b995e2f013795240429350dc28e985946783534fb5042bd78e)
			First parameter (with value "SHA1withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer3888)


	 in Method: boolean f(byte[],byte[],java.security.interfaces.RSAPublicKey)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #4b34a5a3bf4271d46692507a8c0ac1413d24f7bbe3bd14b9a1b1c2c2f85cc800)
			First parameter (with value "SHA1withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer7045)


	 in Method: java.security.interfaces.RSAPublicKey a(byte[])
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r6.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r5)


Findings in Java Class: com.trilead.ssh2.crypto.digest.HMAC

	 in Method: void <init>(java.lang.String,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #45a4f9e60395581cbd8592a66ad29732f933ac7759dbace271686bde092c73d1)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer6941)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #e8788c37359f24f6157e80f46b7394bc2ffd38f15673feac6eeccbab55a0df31)
			First parameter (with value "HmacMD5") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer6945)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)


Findings in Java Class: e.d.a.s.b

	 in Method: void i(byte[],int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #45a4f9e60395581cbd8592a66ad29732f933ac7759dbace271686bde092c73d1)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: specialinvoke $r50.<com.trilead.ssh2.crypto.digest.HMAC: void <init>(java.lang.String,byte[])>($r8, $r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e8788c37359f24f6157e80f46b7394bc2ffd38f15673feac6eeccbab55a0df31)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: specialinvoke $r50.<com.trilead.ssh2.crypto.digest.HMAC: void <init>(java.lang.String,byte[])>($r8, $r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #1c57cb9ecc8230f48f424825a0460144b477510b8aa43c8e824d5fffe97dfa59)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: specialinvoke $r50.<com.trilead.ssh2.crypto.digest.HMAC: void <init>(java.lang.String,byte[])>($r8, $r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2bc12b05aee8230837936bd1e7c587d593c6c5069bb62c587b03370007f3a052)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: specialinvoke $r50.<com.trilead.ssh2.crypto.digest.HMAC: void <init>(java.lang.String,byte[])>($r8, $r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #8b9dfd134303892199c17dd07ec203c6873f44ed7bae20c320f95ef641fc329)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: specialinvoke $r50.<com.trilead.ssh2.crypto.digest.HMAC: void <init>(java.lang.String,byte[])>($r8, $r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #86592df13f51ba7635fb74b6a7b3a9987ebed3219a0f9b0b9ae33d3a782c4d09)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: specialinvoke $r50.<com.trilead.ssh2.crypto.digest.HMAC: void <init>(java.lang.String,byte[])>($r8, $r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #a23cc0b51b067bce866359accf188000e426db24920c16da26cb678668a9b3ab)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: specialinvoke $r50.<com.trilead.ssh2.crypto.digest.HMAC: void <init>(java.lang.String,byte[])>($r8, $r2)


	 in Method: void d()
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #45a4f9e60395581cbd8592a66ad29732f933ac7759dbace271686bde092c73d1)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: virtualinvoke $r5.<e.d.a.s.i: void f(com.trilead.ssh2.crypto.cipher.BlockCipher,com.trilead.ssh2.crypto.digest.MAC)>($r10, $r11)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e8788c37359f24f6157e80f46b7394bc2ffd38f15673feac6eeccbab55a0df31)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: virtualinvoke $r5.<e.d.a.s.i: void f(com.trilead.ssh2.crypto.cipher.BlockCipher,com.trilead.ssh2.crypto.digest.MAC)>($r10, $r11)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #1c57cb9ecc8230f48f424825a0460144b477510b8aa43c8e824d5fffe97dfa59)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: virtualinvoke $r5.<e.d.a.s.i: void f(com.trilead.ssh2.crypto.cipher.BlockCipher,com.trilead.ssh2.crypto.digest.MAC)>($r10, $r11)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2bc12b05aee8230837936bd1e7c587d593c6c5069bb62c587b03370007f3a052)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: virtualinvoke $r5.<e.d.a.s.i: void f(com.trilead.ssh2.crypto.cipher.BlockCipher,com.trilead.ssh2.crypto.digest.MAC)>($r10, $r11)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #8b9dfd134303892199c17dd07ec203c6873f44ed7bae20c320f95ef641fc329)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: virtualinvoke $r5.<e.d.a.s.i: void f(com.trilead.ssh2.crypto.cipher.BlockCipher,com.trilead.ssh2.crypto.digest.MAC)>($r10, $r11)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #86592df13f51ba7635fb74b6a7b3a9987ebed3219a0f9b0b9ae33d3a782c4d09)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: virtualinvoke $r5.<e.d.a.s.i: void f(com.trilead.ssh2.crypto.cipher.BlockCipher,com.trilead.ssh2.crypto.digest.MAC)>($r10, $r11)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #a23cc0b51b067bce866359accf188000e426db24920c16da26cb678668a9b3ab)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: virtualinvoke $r5.<e.d.a.s.i: void f(com.trilead.ssh2.crypto.cipher.BlockCipher,com.trilead.ssh2.crypto.digest.MAC)>($r10, $r11)


Findings in Java Class: e.d.a.r.c

	 in Method: boolean f(byte[],byte[],i.a.a.a.d)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #bc032eaaab2671083cf81d3c75fd3ae0349ef329dffde360b9092cf66af12f9)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $z0 = virtualinvoke $r0.<java.security.Signature: boolean verify(byte[])>($r2)


	 in Method: byte[] e(byte[],i.a.a.a.c)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #1729d9f952166563ed236af87da589ff28819209ce4317dbebcc7b3e8a80f8f4)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r0.<java.security.Signature: byte[] sign()>()


Findings in Java Class: e.d.a.j

	 in Method: byte[] i(java.lang.String,java.lang.String,byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #9720ae0a9b86e2efbd437092f9a1e778a44c62088de14ea15670d0dfee6ac510)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7160)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #9720ae0a9b86e2efbd437092f9a1e778a44c62088de14ea15670d0dfee6ac510)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7159)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1952c337ab6989edef73ee2efa6ae6b4541abef94161c6a5ecdd5d89f8bc7e21)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7160)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #1952c337ab6989edef73ee2efa6ae6b4541abef94161c6a5ecdd5d89f8bc7e21)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7160)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #1952c337ab6989edef73ee2efa6ae6b4541abef94161c6a5ecdd5d89f8bc7e21)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7159)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9720ae0a9b86e2efbd437092f9a1e778a44c62088de14ea15670d0dfee6ac510)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7159)


	 in Method: boolean b(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5b93713b81dce4949ce8024c5b8c52151b875a12dd6843ada75d21e173211a94)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer30710)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #5b93713b81dce4949ce8024c5b8c52151b875a12dd6843ada75d21e173211a94)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i1 = virtualinvoke $r8.<java.security.MessageDigest: int getDigestLength()>()


	 in Method: byte[] e(byte[],java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #68a1b2b66ff43f6314e697013840c08f64da34ad21855411cdcf8c1fd9d852e3)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $i1 = virtualinvoke $r3.<javax.crypto.Mac: int getMacLength()>()

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #517f6182bc0d4d2086d5d2244bb4851239827019fb8877398197672303bff1dd)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer30732)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>($r4)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #68a1b2b66ff43f6314e697013840c08f64da34ad21855411cdcf8c1fd9d852e3)
			First parameter (with value "HmacSHA1") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer30728)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer30732)


Findings in Java Class: com.parse.ParseDigestUtils

	 in Method: java.lang.String md5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4d7dfa5a49ef4bf79b6fddd69890e60c747552a4111b398e19671608e62feb7f)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10155)


Findings in Java Class: i.a.a.a.i.d

	 in Method: void <init>(i.a.a.a.h.b,java.lang.String,i.a.a.a.h.g,i.a.a.a.h.f)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #de05ec23dd88732dd010c4395547f7553be21144135d7e3ef3cbf0b5d9b37602)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i1 = virtualinvoke $r7.<java.security.MessageDigest: int getDigestLength()>()


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: io.treehouses.remote.j.c

	 in Method: byte[] c(byte[],int,java.lang.String,byte[])
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #ac591c06fca63c125dc803f87d14fed9ba23948e37fb9fa58abde9fae3c75dca)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer27741)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer27742, $r10, $r11)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f06396445848d5541671dbc4cb9a132e71ca716e6e531a81f661b8a8c7550db8)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #ac591c06fca63c125dc803f87d14fed9ba23948e37fb9fa58abde9fae3c75dca)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer27741)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c7e759b0970021b203b5cb903568675ad9a0fc2f7cb61c6068b1bb73e526bc41)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r2 = specialinvoke r0.<io.treehouses.remote.j.c: byte[] a(int,byte[],byte[],java.security.MessageDigest)>($i0, $r7, $r2, $r5)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #ac591c06fca63c125dc803f87d14fed9ba23948e37fb9fa58abde9fae3c75dca)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer27741)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer27741)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #ac591c06fca63c125dc803f87d14fed9ba23948e37fb9fa58abde9fae3c75dca)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer27741)


	 in Method: byte[] b(byte[],int,java.lang.String,byte[])
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #8701b69364b12f0683a69da1d48bba36e15c1086eb1cb8fc963e1e7454e44fd8)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer32077)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer32077)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #b1fb6149f43291131f830f59639b2ef6765cb10a5a2add90574031aba9bb50d4)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #8701b69364b12f0683a69da1d48bba36e15c1086eb1cb8fc963e1e7454e44fd8)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer32077)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #672815e8038e550812f7110d5d87ebeffbccc5ed7aa09991451e931220be0f3e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = specialinvoke $r6.<io.treehouses.remote.j.c: byte[] a(int,byte[],byte[],java.security.MessageDigest)>($i0, $r5, $r1, $r3)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #8701b69364b12f0683a69da1d48bba36e15c1086eb1cb8fc963e1e7454e44fd8)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer32077)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #8701b69364b12f0683a69da1d48bba36e15c1086eb1cb8fc963e1e7454e44fd8)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer32077)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer32076, $r9, $r10)


Findings in Java Class: okhttp3.internal.platform.Platform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #e14d04f32296e0e1c447bf526b798e30c2c97281756f66c74de94387e203ac5b)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer27819)


Findings in Java Class: okhttp3.internal.platform.ConscryptPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #635b5bcc6e07fba01f8f52de8288ad4bc830aaad4607959b30b65c3f4a83a6c8)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer27820, $r1)


Findings in Java Class: okhttp3.internal.platform.AndroidPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #41ecc76317ab89f6c1e6ff818a6c36241bf2ff8732262afa77fa1d31a2f3fce3)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer27822)


Findings in Java Class: okhttp3.Cache$Entry

	 in Method: java.util.List readCertificateList(okio.BufferedSource)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #883cfafd242d32ac5724f559b3cd316802cbbc222715a49e8ccaaf805c5aacfa)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer38844)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #883cfafd242d32ac5724f559b3cd316802cbbc222715a49e8ccaaf805c5aacfa)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #883cfafd242d32ac5724f559b3cd316802cbbc222715a49e8ccaaf805c5aacfa)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)


Findings in Java Class: com.trilead.ssh2.crypto.cipher.AES

	 in Method: void c(boolean,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer7334)


Findings in Java Class: e.d.a.o.a

	 in Method: void b(e.d.a.q.d0,boolean)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r31 = virtualinvoke $r29.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r42)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r41.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r30, $r31)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r41.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r30, $r31)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer23540, $r7, varReplacer23540)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer23540, $r7, varReplacer23540)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer23540, $r7, varReplacer23540)


Findings in Java Class: e.d.a.r.b

	 in Method: boolean n(byte[],byte[],java.security.interfaces.ECPublicKey)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initVerify(java.security.PublicKey)>($r2)


	 in Method: java.security.interfaces.ECPublicKey b(byte[])
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r13 = virtualinvoke $r12.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r11)


	 in Method: byte[] g(byte[],java.security.interfaces.ECPrivateKey)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initSign(java.security.PrivateKey)>($r1)


Findings in Java Class: com.trilead.ssh2.crypto.dh.DhExchange

	 in Method: void h(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyAgreement
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r10.<javax.crypto.KeyAgreement: void init(java.security.Key)>($r11)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r9 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.KeyAgreement
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r10.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>($r4, varReplacer6919)


Findings in Java Class: io.treehouses.remote.j.g

	 in Method: java.security.KeyPair Q(java.security.PublicKey,java.security.PrivateKey,io.treehouses.remote.ssh.beans.PubKeyBean)
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r2.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r3, $r4)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r2.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r3, $r4)


Findings in Java Class: e.d.a.r.f

	 in Method: byte[] c(byte[],java.security.interfaces.RSAPrivateKey)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r2.<java.security.Signature: void initSign(java.security.PrivateKey)>($r1)


	 in Method: boolean d(byte[],byte[],java.security.interfaces.RSAPublicKey)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


Findings in Java Class: com.trilead.ssh2.crypto.dh.EcDhExchange

	 in Method: void h(byte[])
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r8 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.KeyAgreement
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r9.<javax.crypto.KeyAgreement: java.security.Key doPhase(java.security.Key,boolean)>($r2, varReplacer6915)

		RequiredPredicateError violating CrySL rule for javax.crypto.KeyAgreement
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r9.<javax.crypto.KeyAgreement: void init(java.security.Key)>($r10)


	 in Method: void g(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedEC
			at statement: virtualinvoke $r4.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r3)


Findings in Java Class: io.treehouses.remote.j.e

	 in Method: java.security.Key b(byte[],java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r8 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r7)


Findings in Java Class: okhttp3.internal.Util

	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer23543)


Findings in Java Class: e.d.a.r.e

	 in Method: boolean d(byte[],byte[],java.security.interfaces.RSAPublicKey)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


	 in Method: byte[] c(byte[],java.security.interfaces.RSAPrivateKey)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r2.<java.security.Signature: void initSign(java.security.PrivateKey)>($r1)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 141

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 27
	ConstraintError: 17
	RequiredPredicateError: 41
	NeverTypeOfError: 8
	TypestateError: 3
=====================================================================
