0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Alive 17221  5000
Alive 15138  5000
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <org.spongycastle.jcajce.util.DefaultJcaJceHelper: java.security.MessageDigest createDigest(java.lang.String)>
		SHA-256: e485ecd53ecca8cba6ed010ffc115ca04172eb9152ffd532b50b45741978f36
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.ntru.NTRUEncryptionKeyGenerationParameters: void <init>(int,int,int,int,int,int,int,int,int,int,boolean,byte[],boolean,boolean,org.spongycastle.crypto.Digest)>
		SHA-256: 8804dfbcedc43de8915d1844bd637bb3574c76388648172f6a7135bf1a8c7524
		Secure: true
	Object:
		Variable: $r33
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r33.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r24, $r31, $r1, $i0)
		Method: <org.spongycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey: void populateFromPubKeyInfo(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 6f936542f3b3dc5a75dd722d30c991549bb9e7a28966e874c705e8229e9203b
		Secure: true
	Object:
		Variable: $r8
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r8 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r5)
		Method: <org.monora.uprotocol.core.persistence.PersistenceProvider$-CC: javax.net.ssl.SSLContext $default$getSSLContextFor(org.monora.uprotocol.core.persistence.PersistenceProvider,org.monora.uprotocol.core.protocol.Client)>
		SHA-256: f02a7fc9a2486f8b56add41bc51d9a8ad0bf2992d98ea5f42691c2b1c520fc80
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>($r4)
		Method: <org.spongycastle.crypto.encodings.PKCS1Encoding: byte[] decodeBlockOrRandom(byte[],int,int)>
		SHA-256: f0d838aba1c9e27b028a361659061451d28753724f242b369ab4684652f24999
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters: void <init>(int,int,int,int,int,double,double,double,boolean,boolean,int,org.spongycastle.crypto.Digest)>
		SHA-256: 7da588f6ba11daef0648e917469639d98b077179b329759419eb3ea4368bb37f
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.gmss.GMSSSigner: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 2dc8cd1c1fa7979cada7be8f8320f93342af2ff1963c7c499a3420b2b9545bfa
		Secure: true
	Object:
		Variable: $r6
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r6)
		Method: <org.spongycastle.cert.crmf.jcajce.JcePKMACValuesCalculator: byte[] calculateMac(byte[],byte[])>
		SHA-256: 4285b0b336ff13a2ca84a5fdd03ee2fb749bcf650a7075e378932054b1c6d205
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r5, varReplacer71248)
		Method: <org.spongycastle.jce.provider.X509CertificateObject: void verify(java.security.PublicKey)>
		SHA-256: b1f7379522e9ede17a294e68725ef76c1c4295568c72285b23d548ad14421787
		Secure: false
	Object:
		Variable: $r16
		Type: byte[]
		Statement: $r16 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.spongycastle.x509.AttributeCertificateHolder: boolean match(java.security.cert.Certificate)>
		SHA-256: 733e42bbdc4639c4f728ddf34e9b407d27b5d8c13567d81937f01e426dc09e8e
		Secure: true
	Object:
		Variable: $r13
		Type: javax.net.ssl.KeyManager[]
		Statement: $r13 = virtualinvoke $r8.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.monora.uprotocol.core.persistence.PersistenceProvider$-CC: javax.net.ssl.SSLContext $default$getSSLContextFor(org.monora.uprotocol.core.persistence.PersistenceProvider,org.monora.uprotocol.core.protocol.Client)>
		SHA-256: e055292726ad7da8a8949f848ff4d9ab4c230b449d69cfdec5fb22d525f3837a
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.KeyPairGenerator
		Statement: $r13 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer11514)
		Method: <org.monora.uprotocol.client.android.data.UserDataRepository$keyPair$2: java.security.KeyPair invoke()>
		SHA-256: 858114584bd63d62aebe802bc349735d50aaa4b41f1583a7d5449383e568ff52
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.spongycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: a9c19b12994234db6ec00ed5b541d5738b556e23d3870b731ea4245dbf932de7
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.cert.CertificateFactory
		Statement: $r2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <org.spongycastle.cert.jcajce.ProviderCertHelper: java.security.cert.CertificateFactory createCertificateFactory(java.lang.String)>
		SHA-256: 6d3ec0a71779c0e723ed502888987ff1a41ed16ed17219921981d9d289d341c2
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.generators.ECKeyPairGenerator: void init(org.spongycastle.crypto.KeyGenerationParameters)>
		SHA-256: b9c970d7ca75c43cb7258988e82963e870aab49d0877fadda916613732dffc1d
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyStore
		Statement: $r6 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <org.monora.uprotocol.core.persistence.PersistenceProvider$-CC: javax.net.ssl.SSLContext $default$getSSLContextFor(org.monora.uprotocol.core.persistence.PersistenceProvider,org.monora.uprotocol.core.protocol.Client)>
		SHA-256: 1b8aae3f172c08c4fec408bbe68f66f1de0a44bc5f8b1f476509cc6ac88ab0ba
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.spongycastle.jce.provider.JCEElGamalPublicKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: 2f96be90287037dd5aa521a81412c6567fe97ad3bdc0a3e0dd37cb2855cfb876
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <org.spongycastle.jcajce.util.ProviderJcaJceHelper: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 14ead5b41e52dcc0971ab3bbf6947b9738bc0cfa14d4e782ddd7a129f6301c26
		Secure: false
	Object:
		Variable: r0
		Type: org.spongycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r2, $r3, $r4, $i0)
		Method: <org.spongycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>
		SHA-256: b36d50207c12d926e435b859cb9848007d52f50b2e62c847e597de1f84f657c6
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer48272)
		Method: <okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>
		SHA-256: c1ed08b8f33304c12b57cd768b273687af21cbc8f8ac1dcf9445e9a4e01a5709
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.monora.uprotocol.core.persistence.PersistenceProvider$-CC: java.security.SecureRandom $default$getSecureRandom(org.monora.uprotocol.core.persistence.PersistenceProvider)>
		SHA-256: 6f086565c42b6975f565027d12c2a03f59ba2ca1970d0e522ad27a2e04373436
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.ISO9796d2PSSSigner: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 6dae500fa4127477f702f7c8db5b65ac00e8420fed109375c053548083b8d090
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r7.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r8)
		Method: <org.monora.uprotocol.client.android.data.UserDataRepository$keyPair$2: java.security.KeyPair invoke()>
		SHA-256: 43cfa27821133bf2b4381e5321646414ee3781b1d4cedfe1e73d285f1f12602b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.ECDSASigner: java.security.SecureRandom initSecureRandom(boolean,java.security.SecureRandom)>
		SHA-256: f3053cf85ff0ce748590d7e6a4da3184d4158a2e3d38a0473e74cc66757dd76
		Secure: true
	Object:
		Variable: $r12
		Type: java.security.PrivateKey
		Statement: $r12 = virtualinvoke $r5.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <org.monora.uprotocol.client.android.data.UserDataRepository$keyPair$2: java.security.KeyPair invoke()>
		SHA-256: 9c2eebbbbf9195be64612f721959c3d3c83220d0da44505219bbaaf84a713a3e
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <org.spongycastle.jcajce.provider.asymmetric.x509.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>
		SHA-256: cebe45f59ca6821eb5e75723e2592c61a7970e6687e96537a7fa5d2712864b7
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.AlgorithmParameters
		Statement: $r1 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>($r2)
		Method: <org.spongycastle.jcajce.util.DefaultJcaJceHelper: java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String)>
		SHA-256: 8d123772629184fc0669650c061426f57f5203aa49ca1fae65ed6e679e158734
		Secure: false
	Object:
		Variable: r0
		Type: org.spongycastle.x509.ExtendedPKIXParameters
		Statement: specialinvoke r0.<java.security.cert.PKIXParameters: void <init>(java.util.Set)>($r1)
		Method: <org.spongycastle.x509.ExtendedPKIXParameters: void <init>(java.util.Set)>
		SHA-256: bc4db4edf85d5095c872f763083d4cdd57eaf413157a98ff957c0439448eaca6
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.DSTU4145Signer: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: bb98eee2eb82fb2c71e59ff99dcc6ac412ba5d86e67e379f475f490796e58a35
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.Signature
		Statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)
		Method: <org.spongycastle.jcajce.provider.asymmetric.x509.X509CertificateObject: void verify(java.security.PublicKey)>
		SHA-256: 12ceb637520f44953be41c6cc4cf0d880ddfab3b0759a27bcd8537de2150d294
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.ECGOST3410_2012Signer: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 66b8fe936a6d7cfdc7cd8c06af33eb87c18c5d3767ce2ad49d621fb299693e95
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <org.spongycastle.crypto.signers.PSSSigner: byte[] generateSignature()>
		SHA-256: 5971d6538d25f1e396808264bf05345b660a017c8af8ec968b717cf263b5ce6a
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <org.spongycastle.jcajce.util.ProviderJcaJceHelper: java.security.MessageDigest createDigest(java.lang.String)>
		SHA-256: 73f93d39bce4abc7febcf31ac561db4038d2baae13c0462688d95e5dc7a0ac02
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.spongycastle.jcajce.util.NamedJcaJceHelper: java.security.Signature createSignature(java.lang.String)>
		SHA-256: cb6dbedb66709ff933343a7a19443259032632b9744c262530a2bb4dc73beae9
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.yanzhenjie.andserver.http.session.StandardIdGenerator: java.security.SecureRandom createSecureRandom()>
		SHA-256: 6e6f9bd085c90dfa4252fe8388e642ed5b4eb77aa3ce9c0b785a2ca95a16bc42
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters: void <init>(int,int,int,int,int,int,int,double,double,double,boolean,boolean,int,org.spongycastle.crypto.Digest)>
		SHA-256: 7da588f6ba11daef0648e917469639d98b077179b329759419eb3ea4368bb37f
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.AlgorithmParameters
		Statement: $r2 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.spongycastle.jcajce.util.NamedJcaJceHelper: java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String)>
		SHA-256: 56833da8ae3d4d36272676cbcfa817da382e9d7b4afee7b28b5bc0913a1acaac
		Secure: false
	Object:
		Variable: $r15
		Type: java.security.MessageDigest
		Statement: $r15 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r14, varReplacer23186)
		Method: <org.spongycastle.x509.AttributeCertificateHolder: boolean match(java.security.cert.Certificate)>
		SHA-256: f7a2b049b1630407580507b97c49268f66d6e2404e71d3388d26bb26b2199de0
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.SecureRandom
		Statement: specialinvoke $r9.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.SM2Signer: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 4e9e555d81f3f96e91f9ad5699557c96f5b92c3b21e9204058181b260a3a9db5
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.engines.RSABlindedEngine: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a
		Secure: true
	Object:
		Variable: varReplacer39109
		Type: java.lang.String
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer39109)
		Method: <org.monora.uprotocol.client.android.data.UserDataRepository: void <init>(android.content.Context)>
		SHA-256: 5dd445dab3c0b86ed3dec0064b53f5e7a4df409d3968d0877e191c829b278465
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <org.spongycastle.jce.provider.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>
		SHA-256: cebe45f59ca6821eb5e75723e2592c61a7970e6687e96537a7fa5d2712864b7
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.PublicKey
		Statement: $r10 = virtualinvoke $r5.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <org.monora.uprotocol.client.android.data.UserDataRepository$keyPair$2: java.security.KeyPair invoke()>
		SHA-256: 3f47641cfdac36ebacac99e101936a53daa5cf644df1075975f0dc42ddb8b844
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.spongycastle.jcajce.util.NamedJcaJceHelper: java.security.MessageDigest createDigest(java.lang.String)>
		SHA-256: e8a87e246a6c009eb3e7a31f13191dde4223e81c9a0be79ef2d398a0ab6930dc
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.PSSSigner: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 7331639808f0d8733f5df0230ac3a48eecf3cff3ed703c4c0022f9cd7cd80756
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: a79a1700ae9d8d44f13ea218f751e7024f8f1222b1b2ae17cdbab7b56d352181
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.AlgorithmParameters
		Statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r4)
		Method: <org.spongycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil: void setSignatureParameters(java.security.Signature,org.spongycastle.asn1.ASN1Encodable)>
		SHA-256: 5542b69dc5336cc3d00547288fa7f3d8d3237d121f2ce57576e26391c36e1a8d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.GOST3410Signer: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 61b7887e2cfe6269c9dc5ed1565a2d9c81d2ae6237d2a5bf20c73d26a54cd85c
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer52058)
		Method: <com.yanzhenjie.andserver.http.session.StandardIdGenerator: java.security.SecureRandom createSecureRandom()>
		SHA-256: 8411316157f839e06cfb2d95c6fbacb192e81a0b9371fcb7a137c1e8cd002cc7
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.ntru.NTRUEncryptionKeyGenerationParameters: void <init>(int,int,int,int,int,int,int,int,boolean,byte[],boolean,boolean,org.spongycastle.crypto.Digest)>
		SHA-256: 8804dfbcedc43de8915d1844bd637bb3574c76388648172f6a7135bf1a8c7524
		Secure: true
	Object:
		Variable: $r10
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r10 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r5)
		Method: <org.monora.uprotocol.core.persistence.PersistenceProvider$-CC: javax.net.ssl.SSLContext $default$getSSLContextFor(org.monora.uprotocol.core.persistence.PersistenceProvider,org.monora.uprotocol.core.protocol.Client)>
		SHA-256: e4c0d4b1b74484fa54af50297a29f6b5146ddeb40011a7c3ee45e6acf7ca33ec
		Secure: true
	Object:
		Variable: $r18
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r18.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r11, $r0, $r16, $i0)
		Method: <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(org.spongycastle.asn1.x9.X962Parameters,org.spongycastle.math.ec.ECCurve)>
		SHA-256: 3d674d7c8d93c70d10aec94fa2cbc4149966083ce3988ace552a9b39ec865719
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.AlgorithmParameters
		Statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r4)
		Method: <org.spongycastle.jce.provider.X509SignatureUtil: void setSignatureParameters(java.security.Signature,org.spongycastle.asn1.ASN1Encodable)>
		SHA-256: 5542b69dc5336cc3d00547288fa7f3d8d3237d121f2ce57576e26391c36e1a8d
		Secure: false
	Object:
		Variable: $r12
		Type: javax.net.ssl.SSLContext
		Statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer31543)
		Method: <org.monora.uprotocol.core.persistence.PersistenceProvider$-CC: javax.net.ssl.SSLContext $default$getSSLContextFor(org.monora.uprotocol.core.persistence.PersistenceProvider,org.monora.uprotocol.core.protocol.Client)>
		SHA-256: 672d4ff893afbcad173e8c1802b8155472737fc17f672a0461da83c901f2395e
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <org.spongycastle.jce.provider.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>
		SHA-256: 55c0ef59d2e8f2d9e7c3b9d886f8a0561a8e9e82e242551a90594b801b63073c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator: org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator$FGBasis generateBasis()>
		SHA-256: bcb54d56dec785f765303fde3896b946639b8597c070f0bc991c1546f044b396
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.spongycastle.jce.provider.JCEElGamalPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: 6b8822e70d4604e23c0ea07692bf2c9c1daaa36d64fb48b6df14aae465189041
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r13.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r6, $r14, $i0)
		Method: <org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 9b0b38d08756ee57f2e1cc5afa33b90eb4de6e532c351db39bbc17a82a1ffc13
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r10, $r11)
		Method: <org.spongycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey: void <init>(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: ca8c57f00e636666523b3803cf2d449c7668aea2653306a5d436a81914fd7df0
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>
		SHA-256: 4704c3ea9d50e304ebaa64f80abc0358b23fd9e2c75b25360e6595ec058a5c98
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.engines.ElGamalEngine: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: cc0b332bb2ddc847ca308294e1c87841df1bdcc2359c6b4559abe498d8131c20
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.KeyPair
		Statement: $r5 = virtualinvoke $r13.<java.security.KeyPairGenerator: java.security.KeyPair genKeyPair()>()
		Method: <org.monora.uprotocol.client.android.data.UserDataRepository$keyPair$2: java.security.KeyPair invoke()>
		SHA-256: dba079a7e55305d45e37d711a4ec781a0d45b001040aba3288c17b7e55b60d4f
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.ntru.NTRUEngine: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 4bd6151add7d31cc4c6c1b467a5fcba26d1274b4e5b8f364b9492ad636053fa7
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.yanzhenjie.andserver.util.DigestUtils: byte[] digest(java.lang.String,byte[])>
		SHA-256: 3faa19b0fdfd19f49b07910633d0d1c925681f0358664bfa33796fc2018add86
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.DSASigner: java.math.BigInteger getRandomizer(java.math.BigInteger,java.security.SecureRandom)>
		SHA-256: 728067e6297e9cc689793764cefcc080705eefa266c05439d9c7a7cf503909b7
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <com.yanzhenjie.andserver.util.DigestUtils: java.security.MessageDigest getDigest(java.lang.String)>
		SHA-256: bee58bf3ebc8ea2760bb2a1085c2ff0d63539013e78ebbffcc425895c13d417b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer54994)
		Method: <com.bumptech.glide.load.engine.cache.SafeKeyGenerator$1: com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer create()>
		SHA-256: 9827388e3f12ea06926c80dc4f090cd5c458715952cd7c28c7d5dd81a211e332
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.encodings.OAEPEncoding: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 2927d56a192959dc3453ff63fb3830152d4c89781cce727cc1398f859f78edbf
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r13.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r6, $r14)
		Method: <org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 3451edf3dccf50176e144b7254eeb29d3cdc8d30009e3ba3c4cad7a8e560fa46
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.cert.CertificateFactory
		Statement: $r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>($r2)
		Method: <org.spongycastle.cert.jcajce.DefaultCertHelper: java.security.cert.CertificateFactory createCertificateFactory(java.lang.String)>
		SHA-256: f8fbf85b40c81fe63a566f3acad5c05c9b245103f283f549e11ae2fb09219e7b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.DSASigner: java.security.SecureRandom initSecureRandom(boolean,java.security.SecureRandom)>
		SHA-256: e8268e06cdec9b55dd4e3a8d37eef42c3e6d25c634d5bfaad5469f6fbc26035f
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator: org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator$FGBasis generateBasis()>
		SHA-256: bcb54d56dec785f765303fde3896b946639b8597c070f0bc991c1546f044b396
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.yanzhenjie.andserver.util.DigestUtils: byte[] digest(java.lang.String,java.io.InputStream)>
		SHA-256: 6a74c7a23efe31554dd0f6d4a4f9c4af9b76b2cc2cf92458311947525aea785e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator: org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator$FGBasis generateBasis()>
		SHA-256: bcb54d56dec785f765303fde3896b946639b8597c070f0bc991c1546f044b396
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.encodings.PKCS1Encoding: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.Signature
		Statement: $r1 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.spongycastle.jcajce.util.DefaultJcaJceHelper: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 66f26381b2b186fbed59de5f1091ee81e1ff14794fdb45154aac9feab8965356
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <org.spongycastle.jcajce.provider.asymmetric.x509.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>
		SHA-256: 55c0ef59d2e8f2d9e7c3b9d886f8a0561a8e9e82e242551a90594b801b63073c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator: org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator$FGBasis generateBasis()>
		SHA-256: bcb54d56dec785f765303fde3896b946639b8597c070f0bc991c1546f044b396
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r13.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r6, $r14)
		Method: <org.spongycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.spongycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 3451edf3dccf50176e144b7254eeb29d3cdc8d30009e3ba3c4cad7a8e560fa46
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r5)
		Method: <org.spongycastle.jce.provider.X509CertificateObject: void verify(java.security.PublicKey)>
		SHA-256: 112e0b98b9789074d4ec3ee999f422c7c115607a7d5cddcfc5fefe2723a7aec7
		Secure: false
	Object:
		Variable: $r11
		Type: javax.net.ssl.TrustManager[]
		Statement: $r11 = virtualinvoke $r10.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.monora.uprotocol.core.persistence.PersistenceProvider$-CC: javax.net.ssl.SSLContext $default$getSSLContextFor(org.monora.uprotocol.core.persistence.PersistenceProvider,org.monora.uprotocol.core.protocol.Client)>
		SHA-256: 34ccea158e9837b910c7bccadc2c28ad5ffd70f13dc1e250da16f5ebf80ed061
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.pqc.crypto.rainbow.RainbowSigner: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: b0d1ba3da8064ca082b6ab923adae7a1f903b06296e62e14fc3b962758995d3f
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.KeyPair
		Statement: specialinvoke $r5.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r10, $r12)
		Method: <org.monora.uprotocol.client.android.data.UserDataRepository$keyPair$2: java.security.KeyPair invoke()>
		SHA-256: 6daaa743466460a3e9d7daee1b234908864aac1e20e217d11153f0d61b82a500
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.monora.uprotocol.client.android.protocol.MainPersistenceProvider: int getNetworkPin()>
		SHA-256: 1abea9cf5f7cfa4896de3eceedba315325f2757a9a3d6a82af9cbec135341ad6
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.AlgorithmParameters
		Statement: $r2 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <org.spongycastle.jcajce.util.ProviderJcaJceHelper: java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String)>
		SHA-256: c8b20f17b82de52ab097a55145288f3a16a7d8b203dd25e179f63dac5e41d4d7
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r6)
		Method: <org.spongycastle.cert.crmf.jcajce.JcePKMACValuesCalculator: byte[] calculateMac(byte[],byte[])>
		SHA-256: 55eb535ec698f1bdaa9b9339c4f90a63f5a7b71223f9954d433aa3fd06fab83
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyFactory
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer39109)
		Method: <org.monora.uprotocol.client.android.data.UserDataRepository: void <init>(android.content.Context)>
		SHA-256: f5f62dda519e601c3c21c7ca12bd10568281106f9e3f10a5e76fd65f7ac45eea
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.paddings.ISO10126d2Padding: void init(java.security.SecureRandom)>
		SHA-256: 6db9bf5a3d5f9fa28eccec9396984113bbdc903a69715bf2daefa2626b696569
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <org.spongycastle.crypto.signers.ISO9796d2PSSSigner: byte[] generateSignature()>
		SHA-256: 153ecb1a57e7fd3a3f9212bf84d10102d6cb1bcca8396308797653bf2209f59c
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <org.spongycastle.crypto.encodings.PKCS1Encoding: byte[] encodeBlock(byte[],int,int)>
		SHA-256: eacef851ce54f73496b5b532959f537500639a3690f0ee1369bef27820eadfb
		Secure: true
	Object:
		Variable: $r18
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r18.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r11, $r0, $r16, varReplacer35681)
		Method: <org.spongycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(org.spongycastle.asn1.x9.X962Parameters,org.spongycastle.math.ec.ECCurve)>
		SHA-256: 927ff298186497751c095185d4301fbdbf3fe6cef9220ad7470740d98584492a
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.spongycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: c908257ebef1e44e27421c3dc6127a4c79990e1515e273132ea2c2cb020fcdee
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.cert.CertificateFactory
		Statement: $r2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <org.spongycastle.cert.jcajce.NamedCertHelper: java.security.cert.CertificateFactory createCertificateFactory(java.lang.String)>
		SHA-256: 7af7af102744f29108e79384d9ad966c7cdb212255b7ad669bab054a7fd5a599
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.ECNRSigner: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: 9280f6752b6e6221628d06f9d60b4341d2a16061cd2ae2c26b66d065728b8af7
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>
		SHA-256: 61965954da2703450175e336d331a8bc311810e943eebaeca9d739b64a0fdc1
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.Signature: byte[] sign()>()
		Method: <org.spongycastle.operator.jcajce.JcaContentSignerBuilder$SignatureOutputStream: byte[] getSignature()>
		SHA-256: 1835ed343ab1972a694f4eb62de0154393522abd9b290b353ef06ecbf5428b12
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.spongycastle.crypto.signers.ECGOST3410Signer: void init(boolean,org.spongycastle.crypto.CipherParameters)>
		SHA-256: caabe0390e3d2386e10c04d6d72b0b44e335e1623efc6992e7ef060aaafe4388
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.cert.CertificateFactory
		Statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer67177)
		Method: <okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)>
		SHA-256: 941d63e41f489c24c528e040f90307bce981b0d83d01837278403ca49b2931d6
		Secure: false

Findings in Java Class: org.spongycastle.x509.AttributeCertificateHolder

	 in Method: boolean match(java.security.cert.Certificate)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #f7a2b049b1630407580507b97c49268f66d6e2404e71d3388d26bb26b2199de0)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r16 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.monora.uprotocol.core.persistence.PersistenceProvider$-CC

	 in Method: javax.net.ssl.SSLContext $default$getSSLContextFor(org.monora.uprotocol.core.persistence.PersistenceProvider,org.monora.uprotocol.core.protocol.Client)
		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #f02a7fc9a2486f8b56add41bc51d9a8ad0bf2992d98ea5f42691c2b1c520fc80)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r8.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r6, $r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, $r11, $r14)


Findings in Java Class: org.spongycastle.cert.jcajce.JcaX509CertificateConverter

	 in Method: java.security.cert.X509Certificate getCertificate(org.spongycastle.cert.X509CertificateHolder)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #f8fbf85b40c81fe63a566f3acad5c05c9b245103f283f549e11ae2fb09219e7b)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r6 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r4)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #7af7af102744f29108e79384d9ad966c7cdb212255b7ad669bab054a7fd5a599)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r6 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r4)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #6d3ec0a71779c0e723ed502888987ff1a41ed16ed17219921981d9d289d341c2)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r6 = virtualinvoke $r3.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r4)


Findings in Java Class: org.spongycastle.operator.jcajce.JcaContentSignerBuilder$SignatureOutputStream

	 in Method: byte[] getSignature()
		TypestateError violating CrySL rule for java.security.Signature (on Object #66f26381b2b186fbed59de5f1091ee81e1ff14794fdb45154aac9feab8965356)
			Unexpected call to method sign on object of type java.security.Signature. Expect a call to one of the following methods initSign,update
			at statement: $r1 = virtualinvoke $r2.<java.security.Signature: byte[] sign()>()

		TypestateError violating CrySL rule for java.security.Signature (on Object #cb6dbedb66709ff933343a7a19443259032632b9744c262530a2bb4dc73beae9)
			Unexpected call to method sign on object of type java.security.Signature. Expect a call to one of the following methods initSign,update
			at statement: $r1 = virtualinvoke $r2.<java.security.Signature: byte[] sign()>()

		TypestateError violating CrySL rule for java.security.Signature (on Object #14ead5b41e52dcc0971ab3bbf6947b9738bc0cfa14d4e782ddd7a129f6301c26)
			Unexpected call to method sign on object of type java.security.Signature. Expect a call to one of the following methods initSign,update
			at statement: $r1 = virtualinvoke $r2.<java.security.Signature: byte[] sign()>()


Findings in Java Class: org.spongycastle.asn1.BERTaggedObject

	 in Method: void encode(org.spongycastle.asn1.ASN1OutputStream)
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #66f26381b2b186fbed59de5f1091ee81e1ff14794fdb45154aac9feab8965356)
			Operation on object of type java.security.Signature object not completed. Expected call to sign, update
			at statement: virtualinvoke $r1.<org.spongycastle.asn1.ASN1OutputStream: void write(int)>(varReplacer28155)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #cb6dbedb66709ff933343a7a19443259032632b9744c262530a2bb4dc73beae9)
			Operation on object of type java.security.Signature object not completed. Expected call to sign, update
			at statement: virtualinvoke $r1.<org.spongycastle.asn1.ASN1OutputStream: void write(int)>(varReplacer28155)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #14ead5b41e52dcc0971ab3bbf6947b9738bc0cfa14d4e782ddd7a129f6301c26)
			Operation on object of type java.security.Signature object not completed. Expected call to sign, update
			at statement: virtualinvoke $r1.<org.spongycastle.asn1.ASN1OutputStream: void write(int)>(varReplacer28155)


Findings in Java Class: org.monora.uprotocol.client.android.data.UserDataRepository$certificate$2

	 in Method: java.security.cert.X509Certificate invoke()
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #66f26381b2b186fbed59de5f1091ee81e1ff14794fdb45154aac9feab8965356)
			Operation on object of type java.security.Signature object not completed. Expected call to sign, update
			at statement: $r6 = virtualinvoke $r36.<org.spongycastle.cert.X509v3CertificateBuilder: org.spongycastle.cert.X509CertificateHolder build(org.spongycastle.operator.ContentSigner)>($r39)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #cb6dbedb66709ff933343a7a19443259032632b9744c262530a2bb4dc73beae9)
			Operation on object of type java.security.Signature object not completed. Expected call to sign, update
			at statement: $r6 = virtualinvoke $r36.<org.spongycastle.cert.X509v3CertificateBuilder: org.spongycastle.cert.X509CertificateHolder build(org.spongycastle.operator.ContentSigner)>($r39)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #14ead5b41e52dcc0971ab3bbf6947b9738bc0cfa14d4e782ddd7a129f6301c26)
			Operation on object of type java.security.Signature object not completed. Expected call to sign, update
			at statement: $r6 = virtualinvoke $r36.<org.spongycastle.cert.X509v3CertificateBuilder: org.spongycastle.cert.X509CertificateHolder build(org.spongycastle.operator.ContentSigner)>($r39)


Findings in Java Class: org.spongycastle.jcajce.io.CipherOutputStream

	 in Method: void close()
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #66f26381b2b186fbed59de5f1091ee81e1ff14794fdb45154aac9feab8965356)
			Operation on object of type java.security.Signature object not completed. Expected call to sign, update
			at statement: virtualinvoke r0.<org.spongycastle.jcajce.io.CipherOutputStream: void flush()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #cb6dbedb66709ff933343a7a19443259032632b9744c262530a2bb4dc73beae9)
			Operation on object of type java.security.Signature object not completed. Expected call to sign, update
			at statement: virtualinvoke r0.<org.spongycastle.jcajce.io.CipherOutputStream: void flush()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #14ead5b41e52dcc0971ab3bbf6947b9738bc0cfa14d4e782ddd7a129f6301c26)
			Operation on object of type java.security.Signature object not completed. Expected call to sign, update
			at statement: virtualinvoke r0.<org.spongycastle.jcajce.io.CipherOutputStream: void flush()>()


Findings in Java Class: org.apache.commons.io.output.WriterOutputStream

	 in Method: void processInput(boolean)
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #66f26381b2b186fbed59de5f1091ee81e1ff14794fdb45154aac9feab8965356)
			Operation on object of type java.security.Signature object not completed. Expected call to sign, update
			at statement: specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void flushOutput()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #cb6dbedb66709ff933343a7a19443259032632b9744c262530a2bb4dc73beae9)
			Operation on object of type java.security.Signature object not completed. Expected call to sign, update
			at statement: specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void flushOutput()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #14ead5b41e52dcc0971ab3bbf6947b9738bc0cfa14d4e782ddd7a129f6301c26)
			Operation on object of type java.security.Signature object not completed. Expected call to sign, update
			at statement: specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void flushOutput()>()


Findings in Java Class: org.spongycastle.crypto.io.CipherOutputStream

	 in Method: void close()
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #66f26381b2b186fbed59de5f1091ee81e1ff14794fdb45154aac9feab8965356)
			Operation on object of type java.security.Signature object not completed. Expected call to sign, update
			at statement: virtualinvoke r0.<org.spongycastle.crypto.io.CipherOutputStream: void flush()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #cb6dbedb66709ff933343a7a19443259032632b9744c262530a2bb4dc73beae9)
			Operation on object of type java.security.Signature object not completed. Expected call to sign, update
			at statement: virtualinvoke r0.<org.spongycastle.crypto.io.CipherOutputStream: void flush()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #14ead5b41e52dcc0971ab3bbf6947b9738bc0cfa14d4e782ddd7a129f6301c26)
			Operation on object of type java.security.Signature object not completed. Expected call to sign, update
			at statement: virtualinvoke r0.<org.spongycastle.crypto.io.CipherOutputStream: void flush()>()


Findings in Java Class: org.spongycastle.jcajce.util.NamedJcaJceHelper

	 in Method: java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String)
		ConstraintError violating CrySL rule for java.security.AlgorithmParameters (on Object #56833da8ae3d4d36272676cbcfa817da382e9d7b4afee7b28b5bc0913a1acaac)
			First parameter (with value "PSS") should be any of {AES, DiffieHellman, DH, OAEP, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>($r3, $r1)


Findings in Java Class: org.spongycastle.jcajce.util.ProviderJcaJceHelper

	 in Method: java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String)
		ConstraintError violating CrySL rule for java.security.AlgorithmParameters (on Object #c8b20f17b82de52ab097a55145288f3a16a7d8b203dd25e179f63dac5e41d4d7)
			First parameter (with value "PSS") should be any of {AES, DiffieHellman, DH, OAEP, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r1)


Findings in Java Class: org.spongycastle.jcajce.util.DefaultJcaJceHelper

	 in Method: java.security.AlgorithmParameters createAlgorithmParameters(java.lang.String)
		ConstraintError violating CrySL rule for java.security.AlgorithmParameters (on Object #8d123772629184fc0669650c061426f57f5203aa49ca1fae65ed6e679e158734)
			First parameter (with value "PSS") should be any of {AES, DiffieHellman, DH, OAEP, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r1 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>($r2)


Findings in Java Class: org.spongycastle.operator.jcajce.OperatorHelper

	 in Method: boolean notDefaultPSSParams(org.spongycastle.asn1.ASN1Sequence)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e8a87e246a6c009eb3e7a31f13191dde4223e81c9a0be79ef2d398a0ab6930dc)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i1 = virtualinvoke $r8.<java.security.MessageDigest: int getDigestLength()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #73f93d39bce4abc7febcf31ac561db4038d2baae13c0462688d95e5dc7a0ac02)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i1 = virtualinvoke $r8.<java.security.MessageDigest: int getDigestLength()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e485ecd53ecca8cba6ed010ffc115ca04172eb9152ffd532b50b45741978f36)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i1 = virtualinvoke $r8.<java.security.MessageDigest: int getDigestLength()>()


	 in Method: java.security.Signature createSignature(org.spongycastle.asn1.x509.AlgorithmIdentifier)
		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: virtualinvoke $r12.<java.security.AlgorithmParameters: void init(byte[])>($r13)


Findings in Java Class: org.spongycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1

	 in Method: org.spongycastle.operator.DigestCalculator get(org.spongycastle.asn1.x509.AlgorithmIdentifier)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e8a87e246a6c009eb3e7a31f13191dde4223e81c9a0be79ef2d398a0ab6930dc)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r6.<org.spongycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1$1: void <init>(org.spongycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1,org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$DigestOutputStream)>(r0, $r1, $r5)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #73f93d39bce4abc7febcf31ac561db4038d2baae13c0462688d95e5dc7a0ac02)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r6.<org.spongycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1$1: void <init>(org.spongycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1,org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$DigestOutputStream)>(r0, $r1, $r5)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e485ecd53ecca8cba6ed010ffc115ca04172eb9152ffd532b50b45741978f36)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r6.<org.spongycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1$1: void <init>(org.spongycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$1,org.spongycastle.asn1.x509.AlgorithmIdentifier,org.spongycastle.operator.jcajce.JcaDigestCalculatorProviderBuilder$DigestOutputStream)>(r0, $r1, $r5)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #c1ed08b8f33304c12b57cd768b273687af21cbc8f8ac1dcf9445e9a4e01a5709)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer48272)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer48273, $r7, varReplacer48273)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer48273, $r7, varReplacer48273)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer48273, $r7, varReplacer48273)


	 in Method: javax.net.ssl.X509TrustManager systemDefaultTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer48269)


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: com.bumptech.glide.load.engine.DataCacheGenerator

	 in Method: boolean startNext()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #9827388e3f12ea06926c80dc4f090cd5c458715952cd7c28c7d5dd81a211e332)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r8.<com.bumptech.glide.load.data.DataFetcher: void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback)>($r10, r0)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #9827388e3f12ea06926c80dc4f090cd5c458715952cd7c28c7d5dd81a211e332)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r9 = interfaceinvoke $r8.<com.bumptech.glide.load.data.DataFetcher: java.lang.Class getDataClass()>()


Findings in Java Class: com.bumptech.glide.load.engine.SourceGenerator

	 in Method: void startNextLoad(com.bumptech.glide.load.model.ModelLoader$LoadData)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #9827388e3f12ea06926c80dc4f090cd5c458715952cd7c28c7d5dd81a211e332)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r5.<com.bumptech.glide.load.data.DataFetcher: void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback)>($r3, $r2)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #9827388e3f12ea06926c80dc4f090cd5c458715952cd7c28c7d5dd81a211e332)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r5.<com.bumptech.glide.load.data.DataFetcher: void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback)>($r3, $r2)


Findings in Java Class: com.bumptech.glide.load.engine.ResourceCacheGenerator

	 in Method: boolean startNext()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #9827388e3f12ea06926c80dc4f090cd5c458715952cd7c28c7d5dd81a211e332)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r5 = interfaceinvoke $r16.<com.bumptech.glide.load.data.DataFetcher: java.lang.Class getDataClass()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #9827388e3f12ea06926c80dc4f090cd5c458715952cd7c28c7d5dd81a211e332)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r16.<com.bumptech.glide.load.data.DataFetcher: void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback)>($r17, r0)


Findings in Java Class: kotlin.collections.builders.ListBuilder

	 in Method: void checkIsMutable()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #9827388e3f12ea06926c80dc4f090cd5c458715952cd7c28c7d5dd81a211e332)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: r0 = r0.<kotlin.collections.builders.ListBuilder: kotlin.collections.builders.ListBuilder root>


Findings in Java Class: com.yanzhenjie.andserver.util.DigestUtils

	 in Method: java.security.MessageDigest getDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bee58bf3ebc8ea2760bb2a1085c2ff0d63539013e78ebbffcc425895c13d417b)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)


	 in Method: byte[] digest(java.lang.String,java.io.InputStream)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #bee58bf3ebc8ea2760bb2a1085c2ff0d63539013e78ebbffcc425895c13d417b)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: okhttp3.Cache$Entry

	 in Method: java.util.List readCertificateList(okio.BufferedSource)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #941d63e41f489c24c528e040f90307bce981b0d83d01837278403ca49b2931d6)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer67177)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #941d63e41f489c24c528e040f90307bce981b0d83d01837278403ca49b2931d6)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #941d63e41f489c24c528e040f90307bce981b0d83d01837278403ca49b2931d6)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)


Findings in Java Class: org.spongycastle.crypto.encodings.PKCS1Encoding

	 in Method: byte[] decodeBlockOrRandom(byte[],int,int)
		TypestateError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Unexpected call to method nextBytes on object of type java.security.SecureRandom. Expect a call to one of the following methods init,getInstanceStrong,getInstance
			at statement: virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>($r4)


	 in Method: byte[] encodeBlock(byte[],int,int)
		TypestateError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Unexpected call to method nextBytes on object of type java.security.SecureRandom. Expect a call to one of the following methods init,getInstanceStrong,getInstance
			at statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.spongycastle.crypto.encodings.PKCS1Encoding: int getInputBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.spongycastle.crypto.encodings.PKCS1Encoding: int getInputBlockSize()>()


	 in Method: byte[] decodeBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i0 = specialinvoke r0.<org.spongycastle.crypto.encodings.PKCS1Encoding: int findStart(byte,byte[])>($b3, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i0 = specialinvoke r0.<org.spongycastle.crypto.encodings.PKCS1Encoding: int findStart(byte,byte[])>($b3, $r1)


	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i0 = interfaceinvoke $r6.<org.spongycastle.crypto.AsymmetricBlockCipher: int getOutputBlockSize()>()


Findings in Java Class: org.spongycastle.crypto.signers.RSADigestSigner

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r6.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r6.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)


Findings in Java Class: org.spongycastle.crypto.encodings.ISO9796d1Encoding

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r1.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r2)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r1.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r2)


Findings in Java Class: org.spongycastle.crypto.signers.ISO9796d2PSSSigner

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r8.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r3)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r8.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r3)


Findings in Java Class: org.spongycastle.crypto.signers.PSSSigner

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r7.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r3)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r7.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r7.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r3)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r7.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)


Findings in Java Class: org.spongycastle.crypto.signers.GenericSigner

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r6.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r6.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)


Findings in Java Class: org.spongycastle.crypto.signers.X931Signer

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r1.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r3)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r1.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r3)


Findings in Java Class: org.spongycastle.crypto.signers.ISO9796d2Signer

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r3.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r2)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r3.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r2)


Findings in Java Class: org.spongycastle.crypto.tls.TlsRSAUtils

	 in Method: byte[] safeDecryptPreMasterSecret(org.spongycastle.crypto.tls.TlsContext,org.spongycastle.crypto.params.RSAKeyParameters,byte[])
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r5 = virtualinvoke $r1.<org.spongycastle.crypto.encodings.PKCS1Encoding: byte[] processBlock(byte[],int,int)>($r5, varReplacer67710, $i1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r5 = virtualinvoke $r1.<org.spongycastle.crypto.encodings.PKCS1Encoding: byte[] processBlock(byte[],int,int)>($r5, varReplacer67710, $i1)


	 in Method: byte[] generateEncryptedPreMasterSecret(org.spongycastle.crypto.tls.TlsContext,org.spongycastle.crypto.params.RSAKeyParameters,java.io.OutputStream)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r9 = virtualinvoke $r6.<org.spongycastle.crypto.encodings.PKCS1Encoding: byte[] processBlock(byte[],int,int)>($r0, varReplacer66114, varReplacer66115)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r9 = virtualinvoke $r6.<org.spongycastle.crypto.encodings.PKCS1Encoding: byte[] processBlock(byte[],int,int)>($r0, varReplacer66114, varReplacer66115)


Findings in Java Class: org.spongycastle.crypto.encodings.OAEPEncoding

	 in Method: void init(boolean,org.spongycastle.crypto.CipherParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r4.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: interfaceinvoke $r4.<org.spongycastle.crypto.AsymmetricBlockCipher: void init(boolean,org.spongycastle.crypto.CipherParameters)>($z0, $r1)


	 in Method: byte[] decodeBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r3 = specialinvoke r0.<org.spongycastle.crypto.encodings.OAEPEncoding: byte[] maskGeneratorFunction1(byte[],int,int,int)>($r1, varReplacer53050, $i1, $i2)


	 in Method: byte[] encodeBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.spongycastle.crypto.encodings.OAEPEncoding: int getInputBlockSize()>()


Findings in Java Class: org.spongycastle.crypto.engines.NaccacheSternEngine

	 in Method: byte[] processBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.spongycastle.crypto.engines.NaccacheSternEngine: int getInputBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.spongycastle.crypto.engines.NaccacheSternEngine: int getInputBlockSize()>()


Findings in Java Class: org.spongycastle.pqc.crypto.ntru.NTRUEngine

	 in Method: byte[] decrypt(byte[],org.spongycastle.pqc.crypto.ntru.NTRUEncryptionPrivateKeyParameters)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r4 = specialinvoke r0.<org.spongycastle.pqc.crypto.ntru.NTRUEngine: org.spongycastle.pqc.math.ntru.polynomial.Polynomial generateBlindingPoly(byte[],byte[])>($r7, $r1)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r5 = virtualinvoke r0.<org.spongycastle.pqc.crypto.ntru.NTRUEngine: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial decrypt(org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial,org.spongycastle.pqc.math.ntru.polynomial.Polynomial,org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial)>($r8, $r4, $r5)

		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r10 = specialinvoke r0.<org.spongycastle.pqc.crypto.ntru.NTRUEngine: org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial MGF(byte[],int,int,boolean)>($r1, $i1, $i6, $z0)


Findings in Java Class: org.spongycastle.crypto.engines.ElGamalEngine

	 in Method: byte[] processBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $i2 = virtualinvoke r0.<org.spongycastle.crypto.engines.ElGamalEngine: int getInputBlockSize()>()


Findings in Java Class: org.spongycastle.crypto.engines.RSABlindedEngine

	 in Method: byte[] processBlock(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.SecureRandom (on Object #94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a)
			Operation on object of type java.security.SecureRandom object not completed. Expected call to init, getInstanceStrong, getInstance
			at statement: $r8 = staticinvoke <org.spongycastle.util.BigIntegers: java.math.BigInteger createRandomInRange(java.math.BigInteger,java.math.BigInteger,java.security.SecureRandom)>($r8, $r9, $r10)


Findings in Java Class: org.spongycastle.jce.provider.X509CertificateObject

	 in Method: void checkSignature(java.security.PublicKey,java.security.Signature)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r2.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: org.spongycastle.jcajce.provider.asymmetric.x509.X509CertificateObject

	 in Method: void checkSignature(java.security.PublicKey,java.security.Signature)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r2.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: org.spongycastle.operator.jcajce.JcaContentSignerBuilder

	 in Method: org.spongycastle.operator.ContentSigner build(java.security.PrivateKey)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initSign(java.security.PrivateKey)>($r1)


Findings in Java Class: org.monora.uprotocol.client.android.data.UserDataRepository$keyPair$2

	 in Method: java.security.KeyPair invoke()
		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r5.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r10, $r12)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r5.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r10, $r12)


Findings in Java Class: org.spongycastle.cert.crmf.jcajce.JcePKMACValuesCalculator

	 in Method: byte[] calculateMac(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r6)


Findings in Java Class: org.spongycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil

	 in Method: void setSignatureParameters(java.security.Signature,org.spongycastle.asn1.ASN1Encodable)
		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: virtualinvoke $r5.<java.security.AlgorithmParameters: void init(byte[])>($r7)


Findings in Java Class: org.spongycastle.jce.provider.X509SignatureUtil

	 in Method: void setSignatureParameters(java.security.Signature,org.spongycastle.asn1.ASN1Encodable)
		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r4)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 99

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 15
	IncompleteOperationError: 69
	HardCodedError: 1
	ConstraintError: 7
	TypestateError: 8
=====================================================================
