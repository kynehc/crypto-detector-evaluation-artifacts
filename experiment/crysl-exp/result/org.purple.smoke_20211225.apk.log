0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Alive 23579  5000
Alive 24852  5000
Alive 28969  5000
Alive 26294  5000
Alive 25345  5000
Alive 22827  5000
Alive 26909  5000
Alive 28653  5000
Alive 23780  5000
Alive 28211  5000
Alive 25612  5000
Alive 22881  5000
Alive 34813  5000
Alive 33838  5000
Alive 29549  5000
Alive 26195  5000
Alive 24587  5000
Alive 24164  5000
Alive 26195  5000
Alive 29127  5000
Alive 25493  5000
Alive 24327  5000
Alive 17160  5000
Alive 24407  5000
Alive 16890  5000
Alive 24706  5000
Alive 23623  5000
Alive 24611  5000
Alive 25110  5000
Alive 35808  5000
Alive 30069  5000
Alive 36211  5000
Alive 24635  5000
Alive 40526  5000
Alive 31162  5000
Alive 41921  5000
Alive 40812  5000
Alive 39716  5000
Alive 40957  5000
Alive 40082  5000
Alive 42907  5000
Alive 40057  5000
Alive 45265  5000
Alive 42350  5000
Alive 37391  5000
Alive 27467  5000
Alive 41034  5000
Alive 29476  5000
Alive 18181  5000
Alive 18422  5000
Alive 22652  5000
Alive 22059  5000
Alive 27173  5000
Alive 21669  5000
Alive 22088  5000
Alive 22383  5000
Alive 25272  5000
Alive 26457  5000
Alive 26016  5000
Alive 22467  5000
Alive 29317  5000
Alive 44449  5000
Alive 35656  5000
Alive 47814  5000
Alive 44122  5000
Alive 38338  5000
Alive 46672  5000
Alive 41803  5000
Alive 53362  5000
Alive 50262  5000
Alive 39623  5000
Alive 34665  5000
Alive 36860  5000
Alive 32320  5000
Alive 35507  5000
Alive 30430  5000
Alive 39720  5000
Alive 34394  5000
Alive 30463  5000
Alive 43476  5000
Alive 41189  5000
Alive 39455  5000
Alive 41363  5000
Alive 46576  5000
Alive 25907  5000
Alive 22748  5000
Alive 33316  5000
Alive 24648  5000
Alive 25570  5000
Alive 56789  5000
Alive 39504  5000
Alive 49768  5000
Alive 27115  5000
Alive 31066  5000
Alive 29777  5000
Alive 25029  5000
Alive 24274  5000
Alive 29960  5000
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer9468)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 3386df308db0fb1bec79913b69059fb67d6c9ffeb5bb93ba887db7bf9b09f309
		Secure: false
	Object:
		Variable: $r29
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r29.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r26, $r27, $r1, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey: void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 69d36116f62acb406343ba2a4bd3c5dfb318c67056454f8adafd51a6e6f7e175
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>($r4, $r5)
		Method: <org.purple.smoke.Cryptography: java.security.PrivateKey privateKeyFromBytes(byte[])>
		SHA-256: f762643ab70c432f22ac5d4568383ed4fa389ad725973cd55a62b0f07960e57e
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: c1ecd521dcaf2505981179fdd5fa39062442849a79a9ac76895fced0a974bed
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r3)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: 547dbabed7ee7cd4d312d624e632561a63ccc6114119e7a3a527bfa34125a90d
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyFactory
		Statement: $r7 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer3810, $r0)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: 44c7d5206095e50ee6b276bec76f61c734bedbb7fc1d7737c06e24b8dfa653a3
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r6.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)
		Method: <org.purple.smoke.Cryptography: java.security.PublicKey publicMcElieceKeyFromBytes(byte[])>
		SHA-256: 68c45792cf298fa053fe42a1266a0f0e9c31e3bd1031acd964187e19bd3ca695
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r5.<java.security.Signature: boolean verify(byte[])>($r0)
		Method: <org.purple.smoke.Cryptography: boolean verifySignature(java.security.PublicKey,byte[],byte[])>
		SHA-256: 70401c5ff27d099b0633d9f3a63e017a01e3dc76c016a0065e33c7d1879cd5f0
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer9475)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 63e6a5eb5b25b89b6ecc49369fe20c9170d0aab30732096fdcd5c71d433ae636
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer7055)
		Method: <org.purple.smoke.Cryptography: boolean verifySignature(java.security.PublicKey,byte[],byte[])>
		SHA-256: b176769168bcc18e3ba250f45c4141088fba71cef31dba7895f18202318bd806
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.KeyPair
		Statement: specialinvoke $r9.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r10, $r12)
		Method: <org.bouncycastle.pqc.jcajce.provider.sphincs.Sphincs256KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 754f2c5762d55be498e5162b98780867e124a08b4b680aee07b2fa547e5cc083
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <org.purple.smoke.Cryptography: byte[] decrypt(byte[],byte[])>
		SHA-256: 65f6958bd1b56cca7e78d3eb94aab9ae1e53163c16e8babdd0951479598f45b2
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: c9e1ff5450f21aae65af053d6ed29f81c5a7b267991078defbfa3059af0e266a
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.KeyPair
		Statement: specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r15, $r16)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: aadd026eb861686e693690e72b434ddb064fe8bbbf9e5c4e4de2a60a071d8baf
		Secure: false
	Object:
		Variable: varReplacer9600
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer9600)
		Method: <org.purple.smoke.Cryptography: java.security.PrivateKey privateKeyFromBytes(byte[])>
		SHA-256: a19c7f6a6d52272a533bd287fd5dfcd15699077ade5d6451cbccd77298ba33ed
		Secure: false
	Object:
		Variable: varReplacer5414
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5414)
		Method: <org.purple.smoke.Cryptography: javax.crypto.SecretKey encryptionKey()>
		SHA-256: 121af8bf174ab4944a487063dc2d93d8c69e2f076d73611f63b4674a81c36d16
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <org.purple.smoke.Cryptography: byte[] encryptFire(byte[],byte[])>
		SHA-256: 583e3fc71555f8d88f4001b4ef7483257362ceb7fab0991e765a0527d0b619ef
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPublicKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: a9c19b12994234db6ec00ed5b541d5738b556e23d3870b731ea4245dbf932de7
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: c1ecd521dcaf2505981179fdd5fa39062442849a79a9ac76895fced0a974bed
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyFactory
		Statement: $r11 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer14526, $r8)
		Method: <org.purple.smoke.Database: java.security.PublicKey signatureKeyForDigest(org.purple.smoke.Cryptography,byte[])>
		SHA-256: d118169335eef1c0cac9c38b26f7fb644a65c4754adbf6e16dc647aeb06bed15
		Secure: false
	Object:
		Variable: $r15
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r15.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r4)
		Method: <org.purple.smoke.Database: java.security.PublicKey signatureKeyForDigest(org.purple.smoke.Cryptography,byte[])>
		SHA-256: 9a74b5dff43e64f707158700120a706ea7affeaff96c4ea61baa781e2c333f45
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.pqc.math.linearalgebra.GF2Matrix: void <init>(int,char)>
		SHA-256: f6029f09e7eaad0a79299673ca4a747029813212ccf99c394d2770a03fc5295a
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.Signature
		Statement: $r9 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>(varReplacer9060, $r8)
		Method: <org.purple.smoke.Cryptography: byte[] signViaChatEncryption(byte[])>
		SHA-256: b4225775028324fd1cbbb15d6e042917d4415f141c89dfaabfec3b663c38629
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r8)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: 4346bed38e68c71a47dc2cf29cd7df03bcc3634081a9138e9749955f058d94c1
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: varReplacer4102
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4102)
		Method: <org.purple.smoke.Cryptography: byte[] encryptFire(byte[],byte[])>
		SHA-256: 6f17f4ded52ef08fb2ad571df0722ba0b22c601fba62d2c11d49a55d69171da0
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.Signature
		Statement: $r9 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>(varReplacer9058, $r8)
		Method: <org.purple.smoke.Cryptography: byte[] signViaChatEncryption(byte[])>
		SHA-256: a2f3e7a797d9dcc4d02ac98795cbb5fdf8dc91ea3b1946ac923aecea7cdd29a
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8772)
		Method: <org.purple.smoke.TcpTlsNeighbor: void connect()>
		SHA-256: 8bd61c554b525eb9bfc1c1ade556bd49a473dbfb17787250211de3989b24647
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r6.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)
		Method: <org.purple.smoke.Cryptography: java.security.PublicKey publicKeyFromBytes(byte[])>
		SHA-256: 7bb7252892bd5ec97fbdc48b4ecb4a197259733aa03d816278137eb87de28582
		Secure: false
	Object:
		Variable: varReplacer8623
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer8623, $r3)
		Method: <org.purple.smoke.Cryptography: java.security.PublicKey publicKeyFromBytes(byte[])>
		SHA-256: d73099c25dbcc0399c012e6ac558a7da4b5603acfaa1afe9631073a1527a07a0
		Secure: false
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>($r3, $r5)
		Method: <org.purple.smoke.Cryptography: java.security.PublicKey publicKeyFromBytes(byte[])>
		SHA-256: fa26ff30e339f69da1251c17f24da0dbd841b874fd4c1b3615172c74a5e5f3c7
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)
		Method: <org.purple.smoke.Cryptography: java.security.PublicKey publicRSAKeyFromBytes(byte[])>
		SHA-256: abc302d313692e437acdc937a34e479bc87a2c9948a72184b763e9fa377b48b6
		Secure: false
	Object:
		Variable: varReplacer3822
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer3822)
		Method: <org.purple.smoke.Cryptography: javax.crypto.SecretKey generateEncryptionKey(byte[],char[],int,int)>
		SHA-256: 7ee5b06595ca79a0d97d49471356a79b5e0d95d87510dbbc2558536c54e4d4a0
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r9.<java.security.Signature: byte[] sign()>()
		Method: <org.purple.smoke.Cryptography: byte[] signViaChatEncryption(byte[])>
		SHA-256: 5aa80e918e0176b50eb3d428d7facd207db4f42acf1bbe47d6af7e10c5577ab9
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.SecretKeyFactory
		Statement: $r11 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3816)
		Method: <org.purple.smoke.Cryptography: javax.crypto.SecretKey generateMacKey(byte[],char[],int,int)>
		SHA-256: dd569d21b5d5b1030644d99f055c829cfba581913ea44cf2f22b689f444085e0
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)
		Method: <org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: c6bb43f893190c388a16172ecf23e0b3f08b68f394f78a97ebfe490a5b717770
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r3)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: 547dbabed7ee7cd4d312d624e632561a63ccc6114119e7a3a527bfa34125a90d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r9)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 21a56a7c597c5942e2b69eefce9c2dc9f00b1a8f1a883f5e5c66586ef6dfe110
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyPair
		Statement: specialinvoke $r8.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r10)
		Method: <org.bouncycastle.pqc.jcajce.provider.newhope.NHKeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: cba3f930fac70fcda0f15dcac6eba393ef4b6e4521aecbae2c2f176779ad6790
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey: java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve,org.bouncycastle.crypto.params.ECDomainParameters)>
		SHA-256: 1ed34635d886298f1ac65535003eb919395a61c4e94f473f6395f42d219d6f5f
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer4084)
		Method: <org.purple.smoke.Cryptography: byte[] aes256KeyBytes()>
		SHA-256: 5d96cd60dffab364e6b89dfe1194107a14e4108bff8a486fb37c81f6197533b
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <org.purple.smoke.Cryptography: byte[] decryptFire(byte[],byte[])>
		SHA-256: cff8a970fdcf1081b9840da2d4a54534d3620ff7263de110baf040d7550d0c87
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.KeyPair
		Statement: specialinvoke $r9.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r1, $r10)
		Method: <org.bouncycastle.pqc.jcajce.provider.qtesla.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: cf588b1500b5c69c9d3f0cc4edd459cfc6e8c872f610644704d13f5210c80ee5
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14627)
		Method: <org.purple.smoke.Cryptography: byte[] pkiDecrypt(byte[])>
		SHA-256: f23715e9bfcb82a475cf5e4f2f405dde5720b83287750fa85711bfd6f2330697
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r2, $r5, $r6)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey: void <init>(org.bouncycastle.crypto.params.DSAPublicKeyParameters)>
		SHA-256: eeb4bae6abf0e1333b7c50852458a94b0f9a572eea8d2a82293b65530c35d0f6
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer9600)
		Method: <org.purple.smoke.Cryptography: java.security.PrivateKey privateKeyFromBytes(byte[])>
		SHA-256: 74376055f22fab06ebea9163b9d776eb2fc1658aa97d1ceca3b0623b02c5b27
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8768)
		Method: <org.purple.smoke.TcpTlsNeighbor: void connect()>
		SHA-256: faf9468c75f055c91f617230e69fc70b86dc05b4d2c7d1fedc9b5f3d87d019cd
		Secure: false
	Object:
		Variable: r0
		Type: org.bouncycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r7, $r8, $r2, $i0)
		Method: <org.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>
		SHA-256: bcf570b34f8a17ec2bf4d52452528fe052d0e6bfbcbc0e9448c15568d3730cec
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer4057)
		Method: <org.purple.smoke.Cryptography: byte[] hmac(byte[],byte[])>
		SHA-256: 5a42527f3b489b404faf7e46d0102d506a3726c30de7a392c2ec3c05b4d8d166
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r0, $r3, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertSpec(java.security.spec.EllipticCurve,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: d870d280483a2664c58e06c9542abbdec00b481f8724a400848a80df0b6e4f5f
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1)
		Method: <org.purple.smoke.Cryptography: byte[] pbkdf2(byte[],char[],int,int)>
		SHA-256: dca79e38efaf3400a09130509f4d47231a8ad47a131b2d0b6045b84791414e4
		Secure: false
	Object:
		Variable: varReplacer14524
		Type: java.lang.String
		Statement: $r11 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer14524)
		Method: <org.purple.smoke.Database: java.security.PublicKey signatureKeyForDigest(org.purple.smoke.Cryptography,byte[])>
		SHA-256: 9df0a4b21a3ef2ae7a0423bb29129b31088739fca59f065f6ca4129375afa80b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)
		Method: <org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 17334494b52ec35b1326cfe9e6dde617617d7542d35ee9062a8472ea15417839
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r13.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r12, $r15, $r8, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,org.bouncycastle.jce.spec.ECParameterSpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration)>
		SHA-256: 86df246b8c1578d3501a486e27f08db6d1aa41db6923499c742aa2e3fe110297
		Secure: true
	Object:
		Variable: varReplacer8624
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer8624)
		Method: <org.purple.smoke.Cryptography: java.security.PublicKey publicKeyFromBytes(byte[])>
		SHA-256: ec40561d5ec1e1cec91ee2d3ddbbac1a25e969bc6ab280517fc0762de2adb408
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <org.purple.smoke.Cryptography: byte[] hmac(byte[])>
		SHA-256: 794d3c48e098e48075fe3885c8bc3422946d75c21dd83d21648f7a9726aed51
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <org.purple.smoke.Cryptography: byte[] sha512KeyBytes()>
		SHA-256: 63deb73bff28c13f2ae1e0ca7a234d0f2f8ba331ad354c3f9db100c1c8546df2
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey: java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve,org.bouncycastle.crypto.params.ECDomainParameters)>
		SHA-256: 4bf68a34c81d1edf795aedd92ddee186f149b3050b72dd9d67beac9a5963e08a
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer3812)
		Method: <org.purple.smoke.Cryptography: javax.crypto.SecretKey generateMacKey(byte[],char[],int,int)>
		SHA-256: 97ec82290e9a11cc8012af5b8f9362d0e6608dc04ac76a4b78fa3f4cdf73b8
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer7028)
		Method: <org.purple.smoke.Cryptography: byte[] decrypt(byte[],byte[])>
		SHA-256: c827b059fb73d580cb41f3d7cdeb6d8839ce3a3d6541faa187a0d6e98c3d546f
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7096)
		Method: <org.purple.smoke.Cryptography: byte[] decryptFire(byte[],byte[])>
		SHA-256: 210e1d5fa4373713630998331ed0c00c268aad551ce7ac281445d95f3b1a105f
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.PublicKey
		Statement: $r13 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r12)
		Method: <org.purple.smoke.Database: java.security.PublicKey signatureKeyForDigest(org.purple.smoke.Cryptography,byte[])>
		SHA-256: fdd4980afad66aeebcf5da06e7de217117f6c50baee6ff71af5c35e9e05e23ab
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r8)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: 4346bed38e68c71a47dc2cf29cd7df03bcc3634081a9138e9749955f058d94c1
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.PublicKey
		Statement: $r9 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: 5e19dfba5bb4dcfda5db99de0dd6f655ccbcd8c51365ae5d941ed9c8a210c398
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer9467)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: d6fa2de9437d898f3e0a5bcf3937d7e1d4a678df42316a771b9d3d075ce18674
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer8624)
		Method: <org.purple.smoke.Cryptography: java.security.PublicKey publicKeyFromBytes(byte[])>
		SHA-256: fd932b51939e8eb007cccbccac7bae5e13f17bddfd6e8ce453caf4dd79ebe3c6
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyPair
		Statement: $r7 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,int,int)>
		SHA-256: 17c6b31c2e3195e5bad2f8fa8de3672ffdfd70c708c803d7b4917f5894219383
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: c1ecd521dcaf2505981179fdd5fa39062442849a79a9ac76895fced0a974bed
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.Signature
		Statement: $r9 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>(varReplacer9065, $r8)
		Method: <org.purple.smoke.Cryptography: byte[] signViaChatSignature(byte[])>
		SHA-256: 58da796d9450dee0bbb07fa8341faa4b34306a81f541e20a547eef4124c099c3
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer8626, $r3)
		Method: <org.purple.smoke.Cryptography: java.security.PublicKey publicKeyFromBytes(byte[])>
		SHA-256: 4279fc70951b4d09a495c657870b1d3c02a022bbd988e792c161f0608edf4702
		Secure: false
	Object:
		Variable: varReplacer4070
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4070)
		Method: <org.purple.smoke.Cryptography: byte[] encrypt(byte[],byte[])>
		SHA-256: 2abd8f69da043756e3790526b90feb3c8222daa176e2922fef7164ab300f890e
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.PublicKey
		Statement: $r13 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r12)
		Method: <org.purple.smoke.Database: java.security.PublicKey signatureKeyForDigest(org.purple.smoke.Cryptography,byte[])>
		SHA-256: fdd4980afad66aeebcf5da06e7de217117f6c50baee6ff71af5c35e9e05e23ab
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer4083)
		Method: <org.purple.smoke.Cryptography: byte[] sha512KeyBytes()>
		SHA-256: caf7d994fad4ab62ca48a7be09c977f92544a63721700351161b553e92138b43
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r10.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <org.purple.smoke.Cryptography: byte[] etm(byte[])>
		SHA-256: 8c5dfbcb01e0d56928af58fe74a211d1168ddf06d9b50f1d4fee4bcb23f63b5f
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: varReplacer4094
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer4094)
		Method: <org.purple.smoke.Cryptography: byte[] hmacFire(byte[],byte[])>
		SHA-256: 3b9f042f5fc2fc48757b4bb4a3180dab3a71e3637704bcee8bf10a7345531b04
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer9476)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: bd0dd14ba4d658946bc19a0150e2f0bd0aaabaa63761aeff8812d6e3e28df7d
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7030)
		Method: <org.purple.smoke.Cryptography: byte[] decrypt(byte[],byte[])>
		SHA-256: aaa9787bc08db73142fc1fb769a6bd4197c1f7657bff17f2572706bf0b5b2bd2
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7037)
		Method: <org.purple.smoke.Cryptography: byte[] pkiDecrypt(java.security.PrivateKey,byte[])>
		SHA-256: e56db186909dbf20fb338a9efa0c02a0626463ecbc3040f666961503222dccfe
		Secure: false
	Object:
		Variable: varReplacer14528
		Type: java.lang.String
		Statement: $r11 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer14528)
		Method: <org.purple.smoke.Database: java.security.PublicKey signatureKeyForDigest(org.purple.smoke.Cryptography,byte[])>
		SHA-256: 9bc4f4b4370d2c3eae29391c18e75db91e075e9a6b2e4736e38ca1aa340259e1
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $z0 = virtualinvoke $r5.<java.security.Signature: boolean verify(byte[])>($r0)
		Method: <org.purple.smoke.Cryptography: boolean verifySignature(java.security.PublicKey,byte[],byte[])>
		SHA-256: 857ae042e166a9cc46738635dd0685628fe2c0664bd1f278a056c72dd49e5ad9
		Secure: false
	Object:
		Variable: $r27
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r27.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r6, $r15)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 17ea506228f5dc57471137e0b695352a3774e9c7e597031eeeb9157ef0e2b937
		Secure: true
	Object:
		Variable: $r21
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r21.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r14, $r15, varReplacer28836)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(org.bouncycastle.asn1.x9.X962Parameters,org.bouncycastle.math.ec.ECCurve)>
		SHA-256: d1367a63c6a147dfa52fa78517bfcacbc6464c7542e8bb9e50c5230d59932a8a
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5414)
		Method: <org.purple.smoke.Cryptography: javax.crypto.SecretKey encryptionKey()>
		SHA-256: 9499573dd8ca63ff8d8329874d3b0b6c59963c96b9555a0c457200466e7ffc89
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyFactory
		Statement: $r7 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer3808, $r0)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: db6b23343de9bb456744f6ccdb9feee0a77d20628ecc38895dbca78d112a48c5
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4068)
		Method: <org.purple.smoke.Cryptography: byte[] encrypt(byte[],byte[])>
		SHA-256: 4fcb408eb06d74faf730f69620b2da507ed06f40c9fd4b3936afc99bfd0cf1d
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.Signature
		Statement: $r9 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer9054)
		Method: <org.purple.smoke.Cryptography: byte[] signViaChatEncryption(byte[])>
		SHA-256: 497fe4df7e166045748011851613b90ceb7b67ca773c6fffc9a15af91df94a7
		Secure: false
	Object:
		Variable: r0
		Type: org.bouncycastle.x509.ExtendedPKIXParameters
		Statement: specialinvoke r0.<java.security.cert.PKIXParameters: void <init>(java.util.Set)>($r1)
		Method: <org.bouncycastle.x509.ExtendedPKIXParameters: void <init>(java.util.Set)>
		SHA-256: bc4db4edf85d5095c872f763083d4cdd57eaf413157a98ff957c0439448eaca6
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <org.purple.smoke.Cryptography: byte[] etm(byte[])>
		SHA-256: f1a24b9a7e3812725f207e723b6730c56fe6018dff87b767c0edbb3ef1f49a99
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r9.<java.security.Signature: byte[] sign()>()
		Method: <org.purple.smoke.Cryptography: byte[] signViaChatSignature(byte[])>
		SHA-256: 163d682b43b7438f1b049912893a465711ed796a88b39f3d7a992ae1540b112a
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.MessageDigest
		Statement: $r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9673)
		Method: <org.purple.smoke.Cryptography: byte[] sha256FileDigest(java.lang.String)>
		SHA-256: 3a060effbd5cc992ec3bcc6e00b3a92f1c47da7687340033f95d272ef8ca85fa
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r12, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey,java.security.spec.ECParameterSpec)>
		SHA-256: 3ba938937705aba5e3c3d277dfcc715f8b43a8b6ac333db58c7d4cf1d9df1f2a
		Secure: true
	Object:
		Variable: varReplacer4055
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer4055)
		Method: <org.purple.smoke.Cryptography: byte[] hmac(byte[],byte[])>
		SHA-256: 8d92b3f119a341d75c914b2eefc19cacc9b9d6cc8023431a1e3acee05219eb19
		Secure: false
	Object:
		Variable: varReplacer8626
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer8626, $r3)
		Method: <org.purple.smoke.Cryptography: java.security.PublicKey publicKeyFromBytes(byte[])>
		SHA-256: bd33626c16dc92458f2ba273adfab41da740b0ac3e8e2148986732b715923d1f
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyFactory
		Statement: $r11 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer14524)
		Method: <org.purple.smoke.Database: java.security.PublicKey signatureKeyForDigest(org.purple.smoke.Cryptography,byte[])>
		SHA-256: 60c9b8673c9f5a39524763208817057bd66fa8f61b32962689c3a94116eec722
		Secure: false
	Object:
		Variable: varReplacer14621
		Type: java.lang.String
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, varReplacer14621)
		Method: <org.purple.smoke.Cryptography: byte[] decryptWithSipHashKey(byte[])>
		SHA-256: 8d2bf687597eca36de6840a26577e18c25943ec558fa9c1d2090794f5658a978
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4077)
		Method: <org.purple.smoke.Cryptography: byte[] pkiEncrypt(java.security.PublicKey,java.lang.String,byte[])>
		SHA-256: 9b1c8fca325892be861a5a61e7498afd164a49b8c70efd5c6a16e932f88f7fe
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>($r3, $r5)
		Method: <org.purple.smoke.Cryptography: java.security.PublicKey publicKeyFromBytes(byte[])>
		SHA-256: 8c001a82245cc13fb44e79e02624f0322bfc3cd5008ac87777e435465a95fdbe
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r13)
		Method: <org.bouncycastle.pqc.jcajce.provider.xmss.XMSSMTKeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 642b20980867fde35e949495a6570c7235d943d9503f4075de34752290065e8d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r12)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.gost.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 6c7ef9fa4e7bff262cf03d9de0acc4ec162191195a2243ed7af7fe97a2eb9e56
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r6, $r7)
		Method: <org.bouncycastle.jce.provider.BouncyCastleProviderConfiguration: java.security.spec.DSAParameterSpec getDSADefaultParameters(int)>
		SHA-256: c0311729b44e3e14fdb793fd7ff00de0f073212cba5f630574c506d437fe4071
		Secure: true
	Object:
		Variable: $r15
		Type: java.security.PublicKey
		Statement: $r15 = virtualinvoke $r12.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <org.purple.smoke.SteamKeyExchange$2: void run()>
		SHA-256: 4ec9ac74a2120429c5f61e0a90e8aa10870ba433c3cfebee8525a425cd57c852
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r8.<javax.crypto.Mac: byte[] doFinal(byte[])>($r10)
		Method: <org.purple.smoke.Cryptography: byte[] mtd(byte[])>
		SHA-256: 3fbfd5160764d7b6abeb1bfbe56b2ddba25c12a2af35eae459c9bca2021f2875
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.SecretKey
		Statement: $r12 = virtualinvoke $r11.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r10)
		Method: <org.purple.smoke.Cryptography: javax.crypto.SecretKey generateMacKey(byte[],char[],int,int)>
		SHA-256: 38979c9e0f87bb4f76f866b042878071dac465dbc6c11a698127fa4d7ffb67dc
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6)
		Method: <org.purple.smoke.Cryptography: java.security.PublicKey publicMcElieceKeyFromBytes(byte[])>
		SHA-256: df0b87c45464bdcbbfec71a88251c92ea3b19b64cb99779fa5489dceeb8b0ebf
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r2, $i0, varReplacer3828)
		Method: <org.purple.smoke.Cryptography: javax.crypto.SecretKey generateEncryptionKey(byte[],char[],int,int)>
		SHA-256: 82f2c27ec3acacb2b44e3ca336bf1dc72df5f65669d05623f07762f9edb92a87
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.PublicKey
		Statement: $r9 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: 5e19dfba5bb4dcfda5db99de0dd6f655ccbcd8c51365ae5d941ed9c8a210c398
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 967c4f01112b22279695bcf89b6dc1c0b602dca9315f91b4be9227fd5d047c2a
		Secure: true
	Object:
		Variable: $i1
		Type: int
		Statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)
		Method: <org.purple.smoke.Cryptography: byte[] pbkdf2(byte[],char[],int,int)>
		SHA-256: e6e76c80726a454c5090a6fae309682985e99334a41d9b9a36faf69a00a54271
		Secure: false
	Object:
		Variable: varReplacer3812
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer3812)
		Method: <org.purple.smoke.Cryptography: javax.crypto.SecretKey generateMacKey(byte[],char[],int,int)>
		SHA-256: 247e51f77c01793490de6de8254a61a9996c52512da9e331dea8f4c135a6c688
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer842)
		Method: <org.purple.smoke.Cryptography: byte[] sha512(byte[][])>
		SHA-256: cd6c526e2a0582af5415a9dae4d28c334ab1ff6110d4343986e7283c586227e4
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r3, $r6, $r7)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey: void <init>(org.bouncycastle.crypto.params.DSAPrivateKeyParameters)>
		SHA-256: 2d5d5ac1c460f68032e60a336ee4552b59000b4adb566ea09230715136a1ffd8
		Secure: true
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>($r3, $r5)
		Method: <org.purple.smoke.Cryptography: java.security.PublicKey publicKeyFromBytes(byte[])>
		SHA-256: fa26ff30e339f69da1251c17f24da0dbd841b874fd4c1b3615172c74a5e5f3c7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4102)
		Method: <org.purple.smoke.Cryptography: byte[] encryptFire(byte[],byte[])>
		SHA-256: 4f29b918e84579076236042c70f899fe350271971d45eb2fee916281e0cf1b01
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>(varReplacer7049, $r4)
		Method: <org.purple.smoke.Cryptography: boolean verifySignature(java.security.PublicKey,byte[],byte[])>
		SHA-256: 9cd5219c662094fbfe3165a3304b0d57e8818f49fe808f0cad5d55371fb3b025
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyPair
		Statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13)
		Method: <org.bouncycastle.pqc.jcajce.provider.lms.LMSKeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 9b17ba9431c8d9f9785438794cfcb1737e28924f956dfb41c65965889e6c317d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer33380)
		Method: <org.purple.smoke.Cryptography: byte[] sha256(byte[][])>
		SHA-256: 5581e9d1de2b51a1a29eb40c48fbd8b375cbd7789a7a8af7bd4b5f5b7f62c3ae
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: 52666556eb0b9e0106968c3639d610cef0bbf743129b6a2f13e952dd3c4ccbd6
		Secure: true
	Object:
		Variable: $r4
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>($r4, $r5)
		Method: <org.purple.smoke.Cryptography: java.security.PrivateKey privateKeyFromBytes(byte[])>
		SHA-256: c1827835d8346363ae459d7a35c0e664a0f0c95fc80644a1bdf908bfdf3e7fde
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.PublicKey
		Statement: $r9 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: 5e19dfba5bb4dcfda5db99de0dd6f655ccbcd8c51365ae5d941ed9c8a210c398
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyFactory
		Statement: $r7 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r0)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: d42119d763cdfb1cf932d82a3546343e69b2bbbdbbe0b23bde4e2eba2569dc75
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>($r3, $r5)
		Method: <org.purple.smoke.Cryptography: java.security.PublicKey publicKeyFromBytes(byte[])>
		SHA-256: 8c001a82245cc13fb44e79e02624f0322bfc3cd5008ac87777e435465a95fdbe
		Secure: false
	Object:
		Variable: varReplacer14526
		Type: java.lang.String
		Statement: $r11 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer14526, $r8)
		Method: <org.purple.smoke.Database: java.security.PublicKey signatureKeyForDigest(org.purple.smoke.Cryptography,byte[])>
		SHA-256: fdf66d5fbe6caa8b36ee093d5c96359a3b0d9d0519a7fc75c7839d84211e0b16
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyPairGenerator
		Statement: $r4 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer3793)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,int,int)>
		SHA-256: 5c42d765698c92dbf7e0e0dd62eafcd0dd114a0fd8848faa10eccda072ca0214
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r3, $r5, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(org.bouncycastle.asn1.x9.X9ECParameters)>
		SHA-256: a4b7a5874d7ddc91e3fe1c6f80927286981244105f50c9286ac1b1cb27893d7d
		Secure: true
	Object:
		Variable: $r15
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r15.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r4)
		Method: <org.purple.smoke.Database: java.security.PublicKey signatureKeyForDigest(org.purple.smoke.Cryptography,byte[])>
		SHA-256: 9a74b5dff43e64f707158700120a706ea7affeaff96c4ea61baa781e2c333f45
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer8622)
		Method: <org.purple.smoke.Cryptography: java.security.PublicKey publicKeyFromBytes(byte[])>
		SHA-256: d86918e593bffc6ed8561e5019c34c8a97a96e0ee25d1740b842c0f1dcece170
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.Cipher
		Statement: $r12 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14614)
		Method: <org.purple.smoke.Cryptography: byte[] decryptWithSipHashKey(byte[])>
		SHA-256: 620dc025246ad30feb2706ca143679d109ac56e8bcc0c99462026ba8d76a50b7
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1507)
		Method: <org.purple.smoke.Cryptography: byte[] mtd(byte[])>
		SHA-256: f9e13ce8bcc731dac7e42320553f79bfc5d584a776482500f9a93bc84ba01469
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer4055)
		Method: <org.purple.smoke.Cryptography: byte[] hmac(byte[],byte[])>
		SHA-256: 655e261413edec4a34e18e10db199e35d0e9ba03c248518d61a66476b1cf7841
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.KeyPair
		Statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: b9c461d81d3bc41eecc0783441f280f41b2f629e19018ff708aa15ce8ab9d299
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.Signature
		Statement: $r9 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer9055)
		Method: <org.purple.smoke.Cryptography: byte[] signViaChatEncryption(byte[])>
		SHA-256: f4463f3633c4dc200b998cdbf411c6962c2d5b1f0738a076ec17a023b5e76cc
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: c9e1ff5450f21aae65af053d6ed29f81c5a7b267991078defbfa3059af0e266a
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: c1ecd521dcaf2505981179fdd5fa39062442849a79a9ac76895fced0a974bed
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Mac
		Statement: $r10 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer1533)
		Method: <org.purple.smoke.Cryptography: byte[] etm(byte[])>
		SHA-256: 30f554ab0e632f9f6bb599a74a1f0daa2fc9554eb845386ad7b1d32cd93c6769
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.CryptoServicesRegistrar: java.security.SecureRandom getSecureRandom()>
		SHA-256: 375867338a8d572664475cac25bcfa294db8f2af8faff8d50836d5d6dcf8ab15
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 181aa94d9dfb4131bf99e325443dd030be8d0745e2fdbe58d6599dfe9ccd41a6
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyPairGenerator
		Statement: $r4 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer3794, $r3)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,int,int)>
		SHA-256: 8c391ec910447e30cc956e722bf3157e39ffcf7d1dfc1bdab3129a23d9788ab2
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4070)
		Method: <org.purple.smoke.Cryptography: byte[] encrypt(byte[],byte[])>
		SHA-256: ff1a8cb61f7f4e04096ac8d8a02621f6294a52e22335e04740f43140f6063b17
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r12, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PublicKey,java.security.spec.ECParameterSpec)>
		SHA-256: 1d2898e3d3b44f1b76b2c9a30718bd32f18e4a5f6903d4c54ee6ab6b4453a2d
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r2, $i0, varReplacer3818)
		Method: <org.purple.smoke.Cryptography: javax.crypto.SecretKey generateMacKey(byte[],char[],int,int)>
		SHA-256: ceef0b5511695a213835a28e4bdf6dfee59e629baa7f74b78bab471e26fe2468
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyPair
		Statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13)
		Method: <org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 7e607f2b0148a3c2f0cc3a50502aa1d8d622c22ef1a312f9fed011b06d0c82f4
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyFactory
		Statement: $r7 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>($r0, $r6)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: 7c16c5ebd783fc16fdd68ea82b10d25903c240c801ec84293500d292ddb19e12
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.SecureRandom
		Statement: specialinvoke $r8.<java.security.SecureRandom: void <init>()>()
		Method: <org.purple.smoke.TcpTlsNeighbor: void connect()>
		SHA-256: 6e129d5af345bcd7636407f070f7bd86ff84f2a43fc2942774b4eb82d70a9785
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.PublicKey
		Statement: $r4 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)
		Method: <org.purple.smoke.Cryptography: java.security.PublicKey publicRSAKeyFromBytes(byte[])>
		SHA-256: d8670d73a0b206f3903c28676c9e26b4ba151bc12dfd843215268bb76b3b1c20
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.purple.smoke.Cryptography: byte[] aes256KeyBytes()>
		SHA-256: 5b4358b8350aa666d96d62f989a1e42021d78c6d4d21f131b704f980f621ae14
		Secure: true
	Object:
		Variable: varReplacer7028
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer7028)
		Method: <org.purple.smoke.Cryptography: byte[] decrypt(byte[],byte[])>
		SHA-256: 386efa7b2d269ed271276c78966d66688af89cebd0a2542c45c59f2395a6b479
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7038)
		Method: <org.purple.smoke.Cryptography: byte[] pkiDecrypt(java.security.PrivateKey,byte[])>
		SHA-256: 59e795903a25030340944e2a335bde998bc9cb0d22db6bc2c4c5fd3dbf8b2497
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 181aa94d9dfb4131bf99e325443dd030be8d0745e2fdbe58d6599dfe9ccd41a6
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer1505)
		Method: <org.purple.smoke.Cryptography: byte[] hmac(byte[])>
		SHA-256: 18a52050439563780f7cde5bf5fd773737a58b08519f367c1b6e8ec74be99a35
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyPair
		Statement: $r7 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,int,int)>
		SHA-256: 17c6b31c2e3195e5bad2f8fa8de3672ffdfd70c708c803d7b4917f5894219383
		Secure: false
	Object:
		Variable: $r15
		Type: byte[]
		Statement: $r15 = virtualinvoke $r14.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.purple.smoke.Cryptography: byte[] sha256FileDigest(java.lang.String)>
		SHA-256: 1df3f541c0e67d53bc13486ce2228e685f928317122da489352b2a34c7b8b7e6
		Secure: true
	Object:
		Variable: varReplacer3808
		Type: java.lang.String
		Statement: $r7 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer3808, $r0)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: 58f6460ecdfc486a7a58257d8e191682295d0d94c28913a889e7fb18d18f3703
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r11, $r13, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,java.security.spec.ECParameterSpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration)>
		SHA-256: 3791d0e41e5884e70c40ed063afce31c8bbf57c28cb756f172c554e92147502c
		Secure: true
	Object:
		Variable: varReplacer3810
		Type: java.lang.String
		Statement: $r7 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer3810, $r0)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: 3b055d2cd3846db319dbac680b2cc9afbea6629ad514e76c419535a25559f19f
		Secure: false
	Object:
		Variable: varReplacer7043
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer7043)
		Method: <org.purple.smoke.Cryptography: java.security.PublicKey publicRSAKeyFromBytes(byte[])>
		SHA-256: 70ed04b170708b122f42eb58c8e3ae12ab90c2af3f54ca5226adbae5e1ea8d6c
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4101)
		Method: <org.purple.smoke.Cryptography: byte[] encryptFire(byte[],byte[])>
		SHA-256: 5762666348887ba3ccb92e463ff9b084abc80e95d0a80389604b0b31ca9cfc8b
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r13)
		Method: <org.bouncycastle.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 9ad7aedb2297f46d3f8d0b119cf3f27a3d55f3e7bb77a0eadc01e0b2656f927f
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)
		Method: <org.purple.smoke.Cryptography: byte[] pbkdf2(byte[],char[],int,int)>
		SHA-256: a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer4097)
		Method: <org.purple.smoke.Cryptography: byte[] hmacFire(byte[],byte[])>
		SHA-256: fe9f5575d4a078103eb0a04e97eee17913e3d6f2b309a70e296b51d2d6cb3b79
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.KeyPair
		Statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: b9c461d81d3bc41eecc0783441f280f41b2f629e19018ff708aa15ce8ab9d299
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PublicKey,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 7edea5eeeb5a77eb822f8f79191943ec26ee9bbe4edb21587a9ed6b3c079652b
		Secure: true
	Object:
		Variable: $r21
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r21.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r14, $r15, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertToSpec(org.bouncycastle.asn1.x9.X962Parameters,org.bouncycastle.math.ec.ECCurve)>
		SHA-256: 49063db5056501dc5b91a4e377b49a58eeeabe81598cccd9ccf90a92bea4339c
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer9472)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: e7669042e95d0bf8d7bcd6d2d8c1d93256a80367eb13c4525e34028b213f3609
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <org.purple.smoke.Cryptography: byte[] mtd(byte[])>
		SHA-256: e391532004a52621998fbb3de13dcf6ad3d8bb51f81c2ae2da92a2bbce8e67ad
		Secure: false
	Object:
		Variable: varReplacer14525
		Type: java.lang.String
		Statement: $r11 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer14525, $r8)
		Method: <org.purple.smoke.Database: java.security.PublicKey signatureKeyForDigest(org.purple.smoke.Cryptography,byte[])>
		SHA-256: f88ec940ecfa24a12895729213a0ea739a1730eae2688ee79c70e229397247ff
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PrivateKey
		Statement: $r7 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r6)
		Method: <org.purple.smoke.Cryptography: java.security.PrivateKey privateKeyFromBytes(byte[])>
		SHA-256: eb1e3e170f78eae0e6cb77729aa8f950d9966961b0eb58ba7fac7060316f4e77
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyPairGenerator
		Statement: $r4 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r3)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,int,int)>
		SHA-256: b2cb12064fd2139da1bfb126a2c888b88b6564b11f84d91d3d150890825eb0a6
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey: java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve,org.bouncycastle.crypto.params.ECDomainParameters)>
		SHA-256: 8932abb3effe3ac7b4693b86e1e64f9620a092735469fa0a27ce4f58e149492e
		Secure: true
	Object:
		Variable: varReplacer3828
		Type: int
		Statement: specialinvoke $r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r2, $i0, varReplacer3828)
		Method: <org.purple.smoke.Cryptography: javax.crypto.SecretKey generateEncryptionKey(byte[],char[],int,int)>
		SHA-256: e09a0ae555d575a6a330d56e4708c367fdab81257f96100248c2f457043f021
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.purple.smoke.Cryptography: void prepareSecureRandom()>
		SHA-256: 1f194636ae1443cd34318373b25dc94b2fa4a44f1d229b82edc731733ba1dd79
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.Signature
		Statement: $r9 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer9064)
		Method: <org.purple.smoke.Cryptography: byte[] signViaChatSignature(byte[])>
		SHA-256: 529713d9a6d7924abeb7270b10dfd71cda77056726bb856980eb0ced35126eea
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.JCEElGamalPublicKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: 2f96be90287037dd5aa521a81412c6567fe97ad3bdc0a3e0dd37cb2855cfb876
		Secure: true
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: c9e1ff5450f21aae65af053d6ed29f81c5a7b267991078defbfa3059af0e266a
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <org.purple.smoke.Cryptography: byte[] hmacFire(byte[],byte[])>
		SHA-256: 13af84184c1b237895316f7b896fc6b3f886e0fb5940c3d26ac83ef315991053
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r3)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: 547dbabed7ee7cd4d312d624e632561a63ccc6114119e7a3a527bfa34125a90d
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r12, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ecgost.BCECGOST3410PublicKey,java.security.spec.ECParameterSpec)>
		SHA-256: 493fa9240f9e173840410f81e7dfc7583eef5d11bd5490d3eabf120ecd5536b5
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer3822)
		Method: <org.purple.smoke.Cryptography: javax.crypto.SecretKey generateEncryptionKey(byte[],char[],int,int)>
		SHA-256: 7e85aa472a658d8ed218d4024d5a9ef385d7bf8f30247117468eac9bfe05bb5
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyPairGenerator
		Statement: $r4 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>($r3, $r8)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,int,int)>
		SHA-256: 1177c590e2947a709449f69eb5dcca994e8b3a9aa76b39b089099134c9b2b9ed
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.purple.smoke.Cryptography: byte[] sha512KeyBytes()>
		SHA-256: 8573073025ee4fc2ee1caedbbd401bbcbc0e1f69b61aab81a63990b54676873e
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r8)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: 4346bed38e68c71a47dc2cf29cd7df03bcc3634081a9138e9749955f058d94c1
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyPair
		Statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13)
		Method: <org.bouncycastle.pqc.jcajce.provider.lms.LMSKeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 9b17ba9431c8d9f9785438794cfcb1737e28924f956dfb41c65965889e6c317d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer9474)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: d93ab773b2114c4d546a7df37267e6c01096da621d837ae04039db89cb89371a
		Secure: false
	Object:
		Variable: r0
		Type: org.bouncycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r2, $r3, $r4, $i0)
		Method: <org.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>
		SHA-256: b36d50207c12d926e435b859cb9848007d52f50b2e62c847e597de1f84f657c6
		Secure: true
	Object:
		Variable: $r27
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r27.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r6, $r15, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: c67a58db466f44792924e383c9800713831ce853e3ca81f3580a8d50f581e617
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.dstu.BCDSTU4145PublicKey,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 967c4f01112b22279695bcf89b6dc1c0b602dca9315f91b4be9227fd5d047c2a
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.elgamal.BCElGamalPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: c908257ebef1e44e27421c3dc6127a4c79990e1515e273132ea2c2cb020fcdee
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <org.purple.smoke.Cryptography: byte[] encrypt(byte[],byte[])>
		SHA-256: d74da1fe62be660ed4af2e536f1ed28bdc7fba34569fe9955fd276636443f9ba
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Mac
		Statement: $r8 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer1512)
		Method: <org.purple.smoke.Cryptography: byte[] mtd(byte[])>
		SHA-256: 35b084d238ee7b504f787ea4b783e8562caccda06603562644df3e6cf2ef3a68
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, varReplacer14621)
		Method: <org.purple.smoke.Cryptography: byte[] decryptWithSipHashKey(byte[])>
		SHA-256: 7c937d2bc7af90957ecb44465d13e2f224e933f0e5e47e131f25541114451437
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer7088)
		Method: <org.purple.smoke.Cryptography: byte[] pbkdf2(byte[],char[],int,int)>
		SHA-256: ecc9078d3465f51e9b0b361ab0c7c8f3081408da3d07ef07226d43da86d74f6a
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyPair
		Statement: $r7 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,int,int)>
		SHA-256: 17c6b31c2e3195e5bad2f8fa8de3672ffdfd70c708c803d7b4917f5894219383
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyPair
		Statement: $r7 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,int,int)>
		SHA-256: 17c6b31c2e3195e5bad2f8fa8de3672ffdfd70c708c803d7b4917f5894219383
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.purple.smoke.Cryptography: byte[] sha512(byte[][])>
		SHA-256: d1c57b78b873e13130ed31b3b31ca7ab112aa8b86e341fcce0fa20239ad6ecdf
		Secure: true
	Object:
		Variable: $r15
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r15.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r4)
		Method: <org.purple.smoke.Database: java.security.PublicKey signatureKeyForDigest(org.purple.smoke.Cryptography,byte[])>
		SHA-256: 9a74b5dff43e64f707158700120a706ea7affeaff96c4ea61baa781e2c333f45
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r3)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: 547dbabed7ee7cd4d312d624e632561a63ccc6114119e7a3a527bfa34125a90d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PublicKey: java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve,org.bouncycastle.crypto.params.ECDomainParameters)>
		SHA-256: 177c38da02803216ffa75d860ebfa1e8c15bf6b9ff3285beec343e328eacc366
		Secure: true
	Object:
		Variable: $r0
		Type: java.lang.String
		Statement: $r7 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r0)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: 3d96a76c44f1001680d32063515f6d0491ac743e3a3486405a7f859987e7fb9
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.SecretKeyFactory
		Statement: $r11 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3823)
		Method: <org.purple.smoke.Cryptography: javax.crypto.SecretKey generateEncryptionKey(byte[],char[],int,int)>
		SHA-256: 656e98c8dbb8ce1d584bd95a0367a3aa7351c74fddb0ad95988df5dabf0b466f
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.JCEElGamalPrivateKey: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: 6b8822e70d4604e23c0ea07692bf2c9c1daaa36d64fb48b6df14aae465189041
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer7043)
		Method: <org.purple.smoke.Cryptography: java.security.PublicKey publicRSAKeyFromBytes(byte[])>
		SHA-256: 3aa496c8150d3cb2acd5bf83a3d966cf12646a57750c57a79437df2cda943831
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer8623, $r3)
		Method: <org.purple.smoke.Cryptography: java.security.PublicKey publicKeyFromBytes(byte[])>
		SHA-256: 98b8adb73c05e254bb10838a9ce96509481deb576ffea67716f3d40fd0444fea
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>(varReplacer7047, $r4)
		Method: <org.purple.smoke.Cryptography: boolean verifySignature(java.security.PublicKey,byte[],byte[])>
		SHA-256: 9a2174c1d06ba6fdb23bb9021b54400566c80a093ab517767e27d09e98290a8b
		Secure: false
	Object:
		Variable: varReplacer3818
		Type: int
		Statement: specialinvoke $r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r2, $i0, varReplacer3818)
		Method: <org.purple.smoke.Cryptography: javax.crypto.SecretKey generateMacKey(byte[],char[],int,int)>
		SHA-256: 919fd37ca386ead9ae903c42e22acfefa5932288859f982b0a6bf93ec452b29
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1529)
		Method: <org.purple.smoke.Cryptography: byte[] etm(byte[])>
		SHA-256: 705b18d21b000b0d3d1b97562976a66477b007482efb17c7ba7cd6f7120c5651
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4076)
		Method: <org.purple.smoke.Cryptography: byte[] pkiEncrypt(java.security.PublicKey,java.lang.String,byte[])>
		SHA-256: a61a371b75645a5d4a8fb67f3725f48e0f41a29c45d96ef96b797e1c737c059a
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r10)
		Method: <org.purple.smoke.Cryptography: byte[] decryptWithSipHashKey(byte[])>
		SHA-256: 3d6ded6f15aae6a5f9b121413c6c44b1d4879d60a79cbcc579a9ed5924c51bac
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6)
		Method: <org.purple.smoke.Cryptography: java.security.PublicKey publicKeyFromBytes(byte[])>
		SHA-256: 77ce203e95415e765369a9de9a8f3e02a3a6f200e46d3fc3b633e59982b055bb
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.PublicKey
		Statement: $r13 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r12)
		Method: <org.purple.smoke.Database: java.security.PublicKey signatureKeyForDigest(org.purple.smoke.Cryptography,byte[])>
		SHA-256: fdd4980afad66aeebcf5da06e7de217117f6c50baee6ff71af5c35e9e05e23ab
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r8)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: 4346bed38e68c71a47dc2cf29cd7df03bcc3634081a9138e9749955f058d94c1
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <org.purple.smoke.Cryptography: byte[] aes256KeyBytes()>
		SHA-256: 3bb8583dcd72293e9cbb259797195fa13ee28bcb61576c2d57a609ef50de8f2c
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.Signature
		Statement: $r9 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>(varReplacer9066, $r8)
		Method: <org.purple.smoke.Cryptography: byte[] signViaChatSignature(byte[])>
		SHA-256: ffb83e036415223852206f768180d4f3493cc02d1f2d15f8642bd173b88a8b27
		Secure: false
	Object:
		Variable: varReplacer7092
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer7092)
		Method: <org.purple.smoke.Cryptography: byte[] decryptFire(byte[],byte[])>
		SHA-256: 9dbbb33edf3b977c2aa8018ca2cf604cc45e4966caf6a641af46b047cadb06c3
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyFactory
		Statement: $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>($r3, $r4)
		Method: <org.purple.smoke.Cryptography: java.security.PublicKey publicMcElieceKeyFromBytes(byte[])>
		SHA-256: ab46cb20d8173b977ac840b0e3c0950fa9a48b74562446a68b742ac9fab05287
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5407)
		Method: <org.purple.smoke.Cryptography: javax.crypto.SecretKey macKey()>
		SHA-256: 9fdf0557a58a009fbc0b497394ad07f0767d43522537665d178eb0d00a1d914e
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r13, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ecgost12.BCECGOST3410_2012PublicKey,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 7edea5eeeb5a77eb822f8f79191943ec26ee9bbe4edb21587a9ed6b3c079652b
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r0)
		Method: <org.purple.smoke.Cryptography: byte[] hmac(byte[],byte[])>
		SHA-256: bf3033ca128c5f8d656a6503dc9b7aea60eed168497cbef855f3b45a55b6b5ec
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.purple.smoke.Cryptography: byte[] sha256(byte[][])>
		SHA-256: 90f3d48bdc6659f72f4d828eb322b30e06052bc9c8ae290d886175a5f717f106
		Secure: true
	Object:
		Variable: r0
		Type: org.bouncycastle.jcajce.spec.DHDomainParameterSpec
		Statement: specialinvoke r0.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r1, $r3, $i1)
		Method: <org.bouncycastle.jcajce.spec.DHDomainParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,int,int)>
		SHA-256: 9cdde17292729ed12e67e00ef32f20bc0ba0a50cc823d5bcab3268462fa45fcd
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14629)
		Method: <org.purple.smoke.Cryptography: byte[] pkiDecrypt(byte[])>
		SHA-256: fd082a07fc1f4c418fe353fc07a8895b80b62c19b85c853df8ebd8cf2e0cc06c
		Secure: false
	Object:
		Variable: $r0
		Type: java.lang.String
		Statement: $r7 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>($r0, $r6)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: 8ac305aded6423c88071979c914de1751b8e588aa42129a2c1a3b1341ed1715
		Secure: false
	Object:
		Variable: $r15
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r15.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r4)
		Method: <org.purple.smoke.Database: java.security.PublicKey signatureKeyForDigest(org.purple.smoke.Cryptography,byte[])>
		SHA-256: 9a74b5dff43e64f707158700120a706ea7affeaff96c4ea61baa781e2c333f45
		Secure: false
	Object:
		Variable: varReplacer5407
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5407)
		Method: <org.purple.smoke.Cryptography: javax.crypto.SecretKey macKey()>
		SHA-256: 134aafc5edd4b84a74250eb122ab61022d2442d11f6580136627d9fbd1bfa2c0
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyFactory
		Statement: $r11 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer14525, $r8)
		Method: <org.purple.smoke.Database: java.security.PublicKey signatureKeyForDigest(org.purple.smoke.Cryptography,byte[])>
		SHA-256: f92618bc1597e417d69771713bc7ef80e3804dfb9177211ac6526ead8500f298
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer7092)
		Method: <org.purple.smoke.Cryptography: byte[] decryptFire(byte[],byte[])>
		SHA-256: 2d936f6ab9dc94d4c0f3f4f99b06ec5c237ae842d1518ef05b8edeac9af7073
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.SecretKey
		Statement: $r12 = virtualinvoke $r11.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r10)
		Method: <org.purple.smoke.Cryptography: javax.crypto.SecretKey generateEncryptionKey(byte[],char[],int,int)>
		SHA-256: 368ce8c9691cc088449085947c94408d7cc73a5c395c8e34ba7023e725112e6e
		Secure: false
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>($r3, $r4)
		Method: <org.purple.smoke.Cryptography: java.security.PublicKey publicMcElieceKeyFromBytes(byte[])>
		SHA-256: 249babde6db25e51ab4dca914fefe3493e8fa0d51b6ea3fa3fa1cad15a1f0ae5
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r10, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: ca8c57f00e636666523b3803cf2d449c7668aea2653306a5d436a81914fd7df0
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost12.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.PublicKey
		Statement: $r9 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])>
		SHA-256: 5e19dfba5bb4dcfda5db99de0dd6f655ccbcd8c51365ae5d941ed9c8a210c398
		Secure: false
	Object:
		Variable: varReplacer8622
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer8622)
		Method: <org.purple.smoke.Cryptography: java.security.PublicKey publicKeyFromBytes(byte[])>
		SHA-256: 14b39d9bdc6d2db0938318b5f0ab1d4b962ea1dd233927e4df2845764212cda2
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: 80c969fcbd2dbc19ac3f78b1cca00809d1cfcb0953dfe3faba14e4ea1d0146c2
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyFactory
		Statement: $r11 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer14528)
		Method: <org.purple.smoke.Database: java.security.PublicKey signatureKeyForDigest(org.purple.smoke.Cryptography,byte[])>
		SHA-256: 20ba0b2d7f63dac372c812236ac120570a4cf69b80bba9a66d015fe2d5f073ff
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer4094)
		Method: <org.purple.smoke.Cryptography: byte[] hmacFire(byte[],byte[])>
		SHA-256: 505e80785a4e40d78c4893b51629f23b2156fac3d5f972349c03d59167baf3ab
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyPairGenerator
		Statement: $r4 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer3796)
		Method: <org.purple.smoke.Cryptography: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,int,int)>
		SHA-256: d225e5599039a9b6cb2235ad19fe04cea9a90a8a48a63808a46c95a94be52413
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer7053)
		Method: <org.purple.smoke.Cryptography: boolean verifySignature(java.security.PublicKey,byte[],byte[])>
		SHA-256: e9f47a63a70dc0878af6a8bbc1813236c76ae2a9fd21e72ce278a5bfe29b9894
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4079)
		Method: <org.purple.smoke.Cryptography: byte[] pkiEncrypt(java.security.PublicKey,java.lang.String,byte[])>
		SHA-256: 34de464de5f98e1e0799431ccfe53c1ee4dd08c6d929a0ac71aa7d9d12e34c06
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.Signature
		Statement: $r9 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer9062)
		Method: <org.purple.smoke.Cryptography: byte[] signViaChatSignature(byte[])>
		SHA-256: 90ba5f396fd03b9d78fa72700be13ad0708a20566c97bc7ab70d4f48cd96953c
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14626)
		Method: <org.purple.smoke.Cryptography: byte[] pkiDecrypt(byte[])>
		SHA-256: 6ea38b3d9abeece2373fbf8b9bfcc67d6a66dec8961933390735d289e5d6bc5c
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.PublicKey
		Statement: $r13 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r12)
		Method: <org.purple.smoke.Database: java.security.PublicKey signatureKeyForDigest(org.purple.smoke.Cryptography,byte[])>
		SHA-256: fdd4980afad66aeebcf5da06e7de217117f6c50baee6ff71af5c35e9e05e23ab
		Secure: false

Findings in Java Class: org.purple.smoke.Cryptography

	 in Method: byte[] sha512(byte[][])
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #cd6c526e2a0582af5415a9dae4d28c334ab1ff6110d4343986e7283c586227e4)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


	 in Method: byte[] mtd(byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f9e13ce8bcc731dac7e42320553f79bfc5d584a776482500f9a93bc84ba01469)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r6 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Mac: void init(java.security.Key)>($r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1513, $r9, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f9e13ce8bcc731dac7e42320553f79bfc5d584a776482500f9a93bc84ba01469)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1507)


	 in Method: byte[] etm(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #705b18d21b000b0d3d1b97562976a66477b007482efb17c7ba7cd6f7120c5651)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r10.<javax.crypto.Mac: void init(java.security.Key)>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1531, $r7, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1531, $r7, $r8)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #705b18d21b000b0d3d1b97562976a66477b007482efb17c7ba7cd6f7120c5651)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1529)


	 in Method: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,int,int)
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedDSA
			at statement: virtualinvoke $r4.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>($r9, $r6)

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedRSA
			at statement: virtualinvoke $r4.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>($r9, $r6)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #1177c590e2947a709449f69eb5dcca994e8b3a9aa76b39b089099134c9b2b9ed)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), genKeyPair, initialize, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r7 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #5c42d765698c92dbf7e0e0dd62eafcd0dd114a0fd8848faa10eccda072ca0214)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), genKeyPair, initialize, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r7 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #8c391ec910447e30cc956e722bf3157e39ffcf7d1dfc1bdab3129a23d9788ab2)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), genKeyPair, initialize, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r7 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #d225e5599039a9b6cb2235ad19fe04cea9a90a8a48a63808a46c95a94be52413)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), genKeyPair, initialize, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r7 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #b2cb12064fd2139da1bfb126a2c888b88b6564b11f84d91d3d150890825eb0a6)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), genKeyPair, initialize, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r7 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedDH
			at statement: virtualinvoke $r4.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>($r9, $r6)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #8c391ec910447e30cc956e722bf3157e39ffcf7d1dfc1bdab3129a23d9788ab2)
			First parameter (with value "SPHINCS256") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r4 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer3794, $r3)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #1177c590e2947a709449f69eb5dcca994e8b3a9aa76b39b089099134c9b2b9ed)
			First parameter (with value 0) should be any of {256}
			at statement: virtualinvoke $r4.<java.security.KeyPairGenerator: void initialize(int,java.security.SecureRandom)>($i0, $r6)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #1177c590e2947a709449f69eb5dcca994e8b3a9aa76b39b089099134c9b2b9ed)
			First parameter (with value 3072) should be any of {256}
			at statement: virtualinvoke $r4.<java.security.KeyPairGenerator: void initialize(int,java.security.SecureRandom)>($i0, $r6)

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedEC
			at statement: virtualinvoke $r4.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>($r9, $r6)

		TypestateError violating CrySL rule for java.security.KeyPairGenerator (on Object #1177c590e2947a709449f69eb5dcca994e8b3a9aa76b39b089099134c9b2b9ed)
			Unexpected call to method generateKeyPair on object of type java.security.KeyPairGenerator. Expect a call to one of the following methods initialize
			at statement: $r7 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		TypestateError violating CrySL rule for java.security.KeyPairGenerator (on Object #5c42d765698c92dbf7e0e0dd62eafcd0dd114a0fd8848faa10eccda072ca0214)
			Unexpected call to method generateKeyPair on object of type java.security.KeyPairGenerator. Expect a call to one of the following methods initialize
			at statement: $r7 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		TypestateError violating CrySL rule for java.security.KeyPairGenerator (on Object #8c391ec910447e30cc956e722bf3157e39ffcf7d1dfc1bdab3129a23d9788ab2)
			Unexpected call to method generateKeyPair on object of type java.security.KeyPairGenerator. Expect a call to one of the following methods initialize
			at statement: $r7 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		TypestateError violating CrySL rule for java.security.KeyPairGenerator (on Object #d225e5599039a9b6cb2235ad19fe04cea9a90a8a48a63808a46c95a94be52413)
			Unexpected call to method generateKeyPair on object of type java.security.KeyPairGenerator. Expect a call to one of the following methods initialize
			at statement: $r7 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		TypestateError violating CrySL rule for java.security.KeyPairGenerator (on Object #b2cb12064fd2139da1bfb126a2c888b88b6564b11f84d91d3d150890825eb0a6)
			Unexpected call to method generateKeyPair on object of type java.security.KeyPairGenerator. Expect a call to one of the following methods initialize
			at statement: $r7 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #5c42d765698c92dbf7e0e0dd62eafcd0dd114a0fd8848faa10eccda072ca0214)
			First parameter (with value "McElieceFujisaki") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r4 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer3793)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #1177c590e2947a709449f69eb5dcca994e8b3a9aa76b39b089099134c9b2b9ed)
			First parameter (with value 3096) should be any of {256}
			at statement: virtualinvoke $r4.<java.security.KeyPairGenerator: void initialize(int,java.security.SecureRandom)>($i0, $r6)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #d225e5599039a9b6cb2235ad19fe04cea9a90a8a48a63808a46c95a94be52413)
			First parameter (with value "McEliecePointcheval") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r4 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer3796)


	 in Method: java.security.KeyPair generatePrivatePublicKeyPair(java.lang.String,byte[],byte[])
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r8)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r8 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r3)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #db6b23343de9bb456744f6ccdb9feee0a77d20628ecc38895dbca78d112a48c5)
			First parameter (with value "Rainbow") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r7 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer3808, $r0)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #44c7d5206095e50ee6b276bec76f61c734bedbb7fc1d7737c06e24b8dfa653a3)
			First parameter (with value "SPHINCS256") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r7 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer3810, $r0)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r9 = virtualinvoke $r7.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)


	 in Method: javax.crypto.SecretKey generateMacKey(byte[],char[],int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r2, $i0, varReplacer3818)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer3812)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #ceef0b5511695a213835a28e4bdf6dfee59e629baa7f74b78bab471e26fe2468)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r2, $i0, varReplacer3818)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #ceef0b5511695a213835a28e4bdf6dfee59e629baa7f74b78bab471e26fe2468)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r2, $i0, varReplacer3818)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #dd569d21b5d5b1030644d99f055c829cfba581913ea44cf2f22b689f444085e0)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r11 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3816)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #ceef0b5511695a213835a28e4bdf6dfee59e629baa7f74b78bab471e26fe2468)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r2, $i0, varReplacer3818)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #ceef0b5511695a213835a28e4bdf6dfee59e629baa7f74b78bab471e26fe2468)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r2, $i0, varReplacer3818)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #ceef0b5511695a213835a28e4bdf6dfee59e629baa7f74b78bab471e26fe2468)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r12 = virtualinvoke $r11.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r10)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #97ec82290e9a11cc8012af5b8f9362d0e6608dc04ac76a4b78fa3f4cdf73b8)
			Second parameter (with value "SHA-512") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer3812)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r12 = virtualinvoke $r11.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r10)


	 in Method: javax.crypto.SecretKey generateEncryptionKey(byte[],char[],int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r2, $i0, varReplacer3828)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #82f2c27ec3acacb2b44e3ca336bf1dc72df5f65669d05623f07762f9edb92a87)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r2, $i0, varReplacer3828)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #82f2c27ec3acacb2b44e3ca336bf1dc72df5f65669d05623f07762f9edb92a87)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r2, $i0, varReplacer3828)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #82f2c27ec3acacb2b44e3ca336bf1dc72df5f65669d05623f07762f9edb92a87)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r2, $i0, varReplacer3828)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #82f2c27ec3acacb2b44e3ca336bf1dc72df5f65669d05623f07762f9edb92a87)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r10.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, $r2, $i0, varReplacer3828)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer3822)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #656e98c8dbb8ce1d584bd95a0367a3aa7351c74fddb0ad95988df5dabf0b466f)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r11 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer3823)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #82f2c27ec3acacb2b44e3ca336bf1dc72df5f65669d05623f07762f9edb92a87)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r12 = virtualinvoke $r11.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r10)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r12 = virtualinvoke $r11.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r10)


	 in Method: byte[] hmac(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer4055)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #655e261413edec4a34e18e10db199e35d0e9ba03c248518d61a66476b1cf7841)
			Second parameter (with value "SHA-512") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer4055)


	 in Method: byte[] encrypt(byte[],byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #4fcb408eb06d74faf730f69620b2da507ed06f40c9fd4b3936afc99bfd0cf1d)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #4fcb408eb06d74faf730f69620b2da507ed06f40c9fd4b3936afc99bfd0cf1d)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4068)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4070)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4067, $r3, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4067, $r3, $r6)


	 in Method: byte[] pkiEncrypt(java.security.PublicKey,java.lang.String,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #34de464de5f98e1e0799431ccfe53c1ee4dd08c6d929a0ac71aa7d9d12e34c06)
			First parameter (with value "McEliecePointcheval") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4079)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #9b1c8fca325892be861a5a61e7498afd164a49b8c70efd5c6a16e932f88f7fe)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #a61a371b75645a5d4a8fb67f3725f48e0f41a29c45d96ef96b797e1c737c059a)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #34de464de5f98e1e0799431ccfe53c1ee4dd08c6d929a0ac71aa7d9d12e34c06)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4080, $r0)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a61a371b75645a5d4a8fb67f3725f48e0f41a29c45d96ef96b797e1c737c059a)
			First parameter (with value "RSA/NONE/OAEPwithSHA-512andMGF1Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4076)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(varReplacer4071, $r0, varReplacer4072, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9b1c8fca325892be861a5a61e7498afd164a49b8c70efd5c6a16e932f88f7fe)
			First parameter (with value "McElieceFujisaki") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer4077)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Fourth parameter was not properly generated as randomized
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(varReplacer4071, $r0, varReplacer4072, $r2)


	 in Method: byte[] hmacFire(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer4094)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #505e80785a4e40d78c4893b51629f23b2156fac3d5f972349c03d59167baf3ab)
			Second parameter (with value "SHA-384") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer4094)


	 in Method: byte[] encryptFire(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer4102)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #5762666348887ba3ccb92e463ff9b084abc80e95d0a80389604b0b31ca9cfc8b)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4098, $r3, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer4098, $r3, $r6)


	 in Method: javax.crypto.SecretKey macKey()
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #9fdf0557a58a009fbc0b497394ad07f0767d43522537665d178eb0d00a1d914e)
			Second parameter (with value "SHA-512") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5407)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5407)


	 in Method: byte[] decrypt(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #aaa9787bc08db73142fc1fb769a6bd4197c1f7657bff17f2572706bf0b5b2bd2)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7030)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer7029, $r4, $r0)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #aaa9787bc08db73142fc1fb769a6bd4197c1f7657bff17f2572706bf0b5b2bd2)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer7028)


	 in Method: byte[] pkiDecrypt(java.security.PrivateKey,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer7036, $r0)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #e56db186909dbf20fb338a9efa0c02a0626463ecbc3040f666961503222dccfe)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #59e795903a25030340944e2a335bde998bc9cb0d22db6bc2c4c5fd3dbf8b2497)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #59e795903a25030340944e2a335bde998bc9cb0d22db6bc2c4c5fd3dbf8b2497)
			First parameter (with value "RSA/NONE/OAEPwithSHA-512andMGF1Padding") should be any of RSA/{Empty String, ECB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7038)


	 in Method: boolean verifySignature(java.security.PublicKey,byte[],byte[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #9a2174c1d06ba6fdb23bb9021b54400566c80a093ab517767e27d09e98290a8b)
			First parameter (with value "SHA3-512withSPHINCS256") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>(varReplacer7047, $r4)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initVerify(java.security.PublicKey)>($r3)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #9cd5219c662094fbfe3165a3304b0d57e8818f49fe808f0cad5d55371fb3b025)
			First parameter (with value "SHA512WITHRainbow") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>(varReplacer7049, $r4)


	 in Method: byte[] pbkdf2(byte[],char[],int,int)
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			Third parameter (with value 4096)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #ecc9078d3465f51e9b0b361ab0c7c8f3081408da3d07ef07226d43da86d74f6a)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer7088)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a2420b9e45fa21d074763231f1641e6071a5a7bbea942e726fd10f8eb0a3ec01)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r0, $r3, $i0, $i1)


	 in Method: byte[] decryptFire(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer7092)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #210e1d5fa4373713630998331ed0c00c268aad551ce7ac281445d95f3b1a105f)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer7093, $r4, $r0)


	 in Method: java.security.PublicKey publicKeyFromBytes(byte[])
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #98b8adb73c05e254bb10838a9ce96509481deb576ffea67716f3d40fd0444fea)
			First parameter (with value "SPHINCS256") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer8623, $r3)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #4279fc70951b4d09a495c657870b1d3c02a022bbd988e792c161f0608edf4702)
			First parameter (with value "Rainbow") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer8626, $r3)


	 in Method: byte[] signViaChatEncryption(byte[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #b4225775028324fd1cbbb15d6e042917d4415f141c89dfaabfec3b663c38629)
			First parameter (with value "SHA512WITHRainbow") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r9 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>(varReplacer9060, $r8)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r9.<java.security.Signature: void initSign(java.security.PrivateKey)>($r7)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #a2f3e7a797d9dcc4d02ac98795cbb5fdf8dc91ea3b1946ac923aecea7cdd29a)
			First parameter (with value "SHA3-512withSPHINCS256") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r9 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>(varReplacer9058, $r8)


	 in Method: byte[] signViaChatSignature(byte[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #58da796d9450dee0bbb07fa8341faa4b34306a81f541e20a547eef4124c099c3)
			First parameter (with value "SHA3-512withSPHINCS256") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r9 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>(varReplacer9065, $r8)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r9.<java.security.Signature: void initSign(java.security.PrivateKey)>($r7)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #ffb83e036415223852206f768180d4f3493cc02d1f2d15f8642bd173b88a8b27)
			First parameter (with value "SHA512WITHRainbow") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r9 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>(varReplacer9066, $r8)


	 in Method: byte[] sha256FileDigest(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #3a060effbd5cc992ec3bcc6e00b3a92f1c47da7687340033f95d272ef8ca85fa)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r15 = virtualinvoke $r14.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3a060effbd5cc992ec3bcc6e00b3a92f1c47da7687340033f95d272ef8ca85fa)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to java.security.MessageDigest: void update(byte[],int,int), digest, java.security.MessageDigest: void update(java.nio.ByteBuffer), java.security.MessageDigest: void update(byte), java.security.MessageDigest: void update(byte[])
			at statement: virtualinvoke $r14.<java.security.MessageDigest: void update(byte[],int,int)>($r15, varReplacer9679, $i1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3a060effbd5cc992ec3bcc6e00b3a92f1c47da7687340033f95d272ef8ca85fa)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9673)


	 in Method: byte[] decryptWithSipHashKey(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r12.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer14624, $r11, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, varReplacer14621)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r10)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #620dc025246ad30feb2706ca143679d109ac56e8bcc0c99462026ba8d76a50b7)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r12 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14614)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #620dc025246ad30feb2706ca143679d109ac56e8bcc0c99462026ba8d76a50b7)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r7 = virtualinvoke $r12.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)


	 in Method: byte[] pkiDecrypt(byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #fd082a07fc1f4c418fe353fc07a8895b80b62c19b85c853df8ebd8cf2e0cc06c)
			First parameter (with value "RSA/NONE/OAEPwithSHA-512andMGF1Padding") should be any of RSA/{Empty String, ECB}
			at statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14629)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer14631, $r7, varReplacer14632)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer14634, $r7)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #fd082a07fc1f4c418fe353fc07a8895b80b62c19b85c853df8ebd8cf2e0cc06c)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f23715e9bfcb82a475cf5e4f2f405dde5720b83287750fa85711bfd6f2330697)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #6ea38b3d9abeece2373fbf8b9bfcc67d6a66dec8961933390735d289e5d6bc5c)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)


	 in Method: byte[] sha256(byte[][])
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #5581e9d1de2b51a1a29eb40c48fbd8b375cbd7789a7a8af7bd4b5f5b7f62c3ae)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


	 in Method: java.security.PrivateKey privateKeyFromBytes(byte[])
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r6)


	 in Method: java.security.PublicKey publicMcElieceKeyFromBytes(byte[])
		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r6)


	 in Method: byte[] hmac(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>($r4)


	 in Method: java.security.PublicKey publicRSAKeyFromBytes(byte[])
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)


	 in Method: javax.crypto.SecretKey encryptionKey()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer5414)


Findings in Java Class: org.purple.smoke.TcpTlsNeighbor

	 in Method: void connect()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #8bd61c554b525eb9bfc1c1ade556bd49a473dbfb17787250211de3989b24647)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8772)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #faf9468c75f055c91f617230e69fc70b86dc05b4d2c7d1fedc9b5f3d87d019cd)
			First parameter (with value "SSL") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8768)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8750, $r7, $r8)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8750, $r7, $r8)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #3386df308db0fb1bec79913b69059fb67d6c9ffeb5bb93ba887db7bf9b09f309)
			First parameter (with value "prime192v1") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer9468)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #e7669042e95d0bf8d7bcd6d2d8c1d93256a80367eb13c4525e34028b213f3609)
			First parameter (with value "P-224") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer9472)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #d6fa2de9437d898f3e0a5bcf3937d7e1d4a678df42316a771b9d3d075ce18674)
			First parameter (with value "P-521") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer9467)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #63e6a5eb5b25b89b6ecc49369fe20c9170d0aab30732096fdcd5c71d433ae636)
			First parameter (with value "prime239v1") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer9475)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #d93ab773b2114c4d546a7df37267e6c01096da621d837ae04039db89cb89371a)
			First parameter (with value "P-384") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer9474)

		ConstraintError violating CrySL rule for java.security.spec.ECGenParameterSpec (on Object #bd0dd14ba4d658946bc19a0150e2f0bd0aaabaa63761aeff8812d6e3e28df7d)
			First parameter (with value "prime256v1") should be any of {brainpoolP224r1, 1.3.36.3.3.2.8.1.1.5, brainpoolP256r1, 1.3.36.3.3.2.8.1.1.7, brainpoolP320r1, 1.3.36.3.3.2.8.1.1.9, brainpoolP384r1, 1.3.36.3.3.2.8.1.1.11, brainpoolP512r1, 1.3.36.3.3.2.8.1.1.13, secp224r1, NIST P-224, 1.3.132.0.33, secp256r1, NIST P-256, X9.62 prime256v1, 1.2.840.10045.3.1.7, secp384r1, NIST P-384, 1.3.132.0.34, secp521r1, NIST P-521, 1.3.132.0.35}
			at statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer9476)


	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)


Findings in Java Class: org.purple.smoke.Database

	 in Method: java.security.PublicKey signatureKeyForDigest(org.purple.smoke.Cryptography,byte[])
		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r15.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r13 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r12)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #f92618bc1597e417d69771713bc7ef80e3804dfb9177211ac6526ead8500f298)
			First parameter (with value "SPHINCS256") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r11 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer14525, $r8)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #d118169335eef1c0cac9c38b26f7fb644a65c4754adbf6e16dc647aeb06bed15)
			First parameter (with value "Rainbow") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r11 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer14526, $r8)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.sphincs.Sphincs256KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r9.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r10, $r12)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r9.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r10, $r12)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.elgamal.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r15, $r16)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r15, $r16)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.ecgost12.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.rainbow.RainbowKeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.ecgost.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceKeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r13)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r9)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r9)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.newhope.NHKeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r8.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r10)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r8.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r10)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.qtesla.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r9.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r1, $r10)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r9.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r1, $r10)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r17.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r18, $r19)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.dstu.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.mceliece.McElieceCCA2KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.lms.LMSKeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13)


Findings in Java Class: org.bouncycastle.pqc.jcajce.provider.xmss.XMSSMTKeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r13)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.gost.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r12)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r12)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 245

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 10
	ConstraintError: 44
	TypestateError: 23
	HardCodedError: 18
	RequiredPredicateError: 104
	NeverTypeOfError: 18
=====================================================================
