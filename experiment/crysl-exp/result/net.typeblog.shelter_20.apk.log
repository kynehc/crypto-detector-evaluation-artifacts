0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r9
		Type: javax.crypto.SecretKey
		Statement: $r9 = virtualinvoke $r8.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <q2.i: void j(android.content.Context,android.content.Intent)>
		SHA-256: ba31947fdbb3b68742be679c24c1b06e1284432ac220fff05822b890a6e36077
		Secure: true
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = interfaceinvoke $r9.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <q2.i: void j(android.content.Context,android.content.Intent)>
		SHA-256: 8fc993966eaa01b1a045eb4b9a8e2b54e8858dced573238876e96594cc7ba849
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r4)
		Method: <q2.b: java.lang.String c(java.lang.String,long)>
		SHA-256: 72763c266cd363880296421778b3e18bc7422488cea13bbf88c526b2d9bef5ce
		Secure: false
	Object:
		Variable: varReplacer310
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer310)
		Method: <q2.b: java.lang.String c(java.lang.String,long)>
		SHA-256: c92b3aa4372143444e66961bf24a3274a4ecca94f3ad3b8a90a05c3b745f1589
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer310)
		Method: <q2.b: java.lang.String c(java.lang.String,long)>
		SHA-256: 7bc7cc22d9aa5ccc351bb98da30605abe9877e612f94d6253ab95331ea65b7c0
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.KeyGenerator
		Statement: $r8 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer259)
		Method: <q2.i: void j(android.content.Context,android.content.Intent)>
		SHA-256: 62efe0544720451ef67d6cddd22036b5ee01f6705696c4582810bbd792e04d4
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer308)
		Method: <q2.b: java.lang.String c(java.lang.String,long)>
		SHA-256: d1c7dcbf7887e7088f141802974d74a9d30315b0da71ff35c31f24c71b956235
		Secure: false

Findings in Java Class: q2.b

	 in Method: java.lang.String c(java.lang.String,long)
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Mac: void init(java.security.Key)>($r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer310)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 7

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 2
=====================================================================
