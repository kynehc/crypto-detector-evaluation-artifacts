0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $z0 = virtualinvoke $r8.<java.security.Signature: boolean verify(byte[])>($r7)
		Method: <in.blogspot.anselmbros.torchie.c.a.i: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 42744739b2f6e65aa80205c869b182bcb305eeeba5d652ace24d6aa5d27fcd69
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r3.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)
		Method: <in.blogspot.anselmbros.torchie.c.a.i: java.security.PublicKey a(java.lang.String)>
		SHA-256: b170fc6b8b338ed87fd3f16d79591953c30933b5fe71a83808fae90692325729
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer3775)
		Method: <in.blogspot.anselmbros.torchie.c.a.i: java.security.PublicKey a(java.lang.String)>
		SHA-256: 9b54c02be189d7c9f6e61f8fb6c92b5465fb97fef49633eebc2a675254533280
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.PublicKey
		Statement: $r4 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r3)
		Method: <in.blogspot.anselmbros.torchie.c.a.i: java.security.PublicKey a(java.lang.String)>
		SHA-256: 915e0b8e28ca4422cf2e3f4cd9257ab95642428167afd62c91c677b86bd12995
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.Signature
		Statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer3764)
		Method: <in.blogspot.anselmbros.torchie.c.a.i: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 20b66f37e579f748af7064ebdb79fdc6079756e2bfeffd4ff81dfc801e2d45d1
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r8.<java.security.Signature: boolean verify(byte[])>($r7)
		Method: <in.blogspot.anselmbros.torchie.c.a.i: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 8680ce0ab9fafc1333f31ee9e5cc49f89bef106962a9355a2333959f43ccdac
		Secure: false
	Object:
		Variable: varReplacer3775
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer3775)
		Method: <in.blogspot.anselmbros.torchie.c.a.i: java.security.PublicKey a(java.lang.String)>
		SHA-256: 8ed2d884bd3cb4385c16e692b90376be40e756d4157db0fd8357746395ae9fe5
		Secure: false

Findings in Java Class: in.blogspot.anselmbros.torchie.c.a.i

	 in Method: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r8.<java.security.Signature: void initVerify(java.security.PublicKey)>($r5)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #20b66f37e579f748af7064ebdb79fdc6079756e2bfeffd4ff81dfc801e2d45d1)
			First parameter (with value "SHA1withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer3764)


	 in Method: java.security.PublicKey a(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r4 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r3)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 7

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 3
	ConstraintError: 1
=====================================================================
