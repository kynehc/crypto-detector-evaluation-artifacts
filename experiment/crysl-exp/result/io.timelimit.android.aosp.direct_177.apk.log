0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
2    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
2    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
2    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
2    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13448)
		Method: <s3.f$a: java.security.MessageDigest a()>
		SHA-256: e3d8cc7973e218f95efe0aa035163d3e84b4446d7b05f453b720ad493e7f3276
		Secure: true
	Object:
		Variable: $r24
		Type: java.security.MessageDigest
		Statement: $r24 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3552)
		Method: <s7.k: void h(s7.k,android.app.Application)>
		SHA-256: 19fd8c0a9b46a397ae4e3561b93af8a82ca156046de96243195db176357f1519
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <x7.e: boolean q(x7.f,android.content.Context)>
		SHA-256: 25cf13a1be8dfe2213a1abf2fda40eda9b2767437d0323b4d48705f4a66afcdf
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r11)
		Method: <x7.e: java.util.List h(android.content.Context)>
		SHA-256: da6468759d952f5abdd3d3b70dd47e75931bb84616115a1bc45008d9d8989f32
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <okhttp3.internal.platform.g: javax.net.ssl.X509TrustManager o()>
		SHA-256: 26635e1f6e50977ea9036fab1d7ea4d8fc4844fa478d9179411a32fe3c0a34e7
		Secure: false
	Object:
		Variable: $r11
		Type: javax.net.ssl.KeyManager[]
		Statement: $r11 = virtualinvoke $r10.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <o9.c: javax.net.ssl.X509KeyManager b(java.lang.String,n9.c,java.security.cert.X509Certificate[])>
		SHA-256: f9f18190e1e8785260082f49e957585738545385e192653878ed80ba47f83be3
		Secure: true
	Object:
		Variable: $r22
		Type: java.security.Signature
		Statement: $r22 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r21)
		Method: <n9.c$a: n9.c b()>
		SHA-256: 9a9508a165dd497aeacce145e67e84a3a160d8778e3b560fb09b6636fabb7b44
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r1.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <n9.c$a: n9.c b()>
		SHA-256: a4ae5db519dd3f6df01ffc1a7477714d471a33027c95efbcf6bd61c69486b3bb
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer14556)
		Method: <z6.g$b$a: java.lang.String a()>
		SHA-256: 96202c305460db8b4d6eb5c8b49b48c133c57d52c269fce90e0fc62697bfeb28
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.whispersystems.curve25519.f: void a(byte[],byte[],long)>
		SHA-256: cf85638ca6f72996b6b0be3780068e288324e8ea6eb577d2f53e74b05dfa401e
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer39230, $r2)
		Method: <okhttp3.internal.platform.g: javax.net.ssl.SSLContext m()>
		SHA-256: 96d4d44d2feda0a0e27e3007721cefb06a1c8cf6ce586bddc27a6e727239ea09
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <org.whispersystems.curve25519.e: void a(byte[])>
		SHA-256: 88ce02e005a80b084e7a79e17caba6579feb7bea6827ee80d60ab51ba6d86ef8
		Secure: true
	Object:
		Variable: varReplacer14556
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer14556)
		Method: <z6.g$b$a: java.lang.String a()>
		SHA-256: 9ffe0734c91a338f10b508dda6426e5fc9dcbcc4f30076b4d0c236d9d5a08b67
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <q9.z: q9.h c(java.lang.String)>
		SHA-256: 2c458903d955d76db3bb6acfad89ad3daf65835a5699707e3cbf044098b59504
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.d: javax.net.ssl.X509TrustManager o()>
		SHA-256: a34ad8d86b652fa71a1784d9f182aa64a3c216ee8de503c46a73dc51f3087c3b
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyPair
		Statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <n9.c$a: java.security.KeyPair f()>
		SHA-256: 2932360bd6c90827344afff2bb3da47cc4e1fff4427583a459b77833df0540de
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer43463)
		Method: <org.whispersystems.curve25519.f: void a(byte[],byte[],long)>
		SHA-256: 1e7678f8ee588b347a37d668aa8f1dd1ba0164b0dba8457a3f853daa73db9954
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17422)
		Method: <x7.e: java.util.List h(android.content.Context)>
		SHA-256: ebda0f6c3c127ae8ff75548232cc639710bfdddc4428e2d8e23cb7d91dd3382e
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyFactory
		Statement: $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer11265)
		Method: <z4.f: void <clinit>()>
		SHA-256: d4600e1b5ad91a810e0a41adb640720632497c10c6f16d69fba929d7e8bdfef6
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.SecureRandom
		Statement: specialinvoke $r8.<java.security.SecureRandom: void <init>()>()
		Method: <n9.b: javax.net.ssl.SSLContext a()>
		SHA-256: 1c7446c2b8b54069308ddcdf6b60d176ecb01c135f032b57e6d5294e5dabb583
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r1.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r2)
		Method: <z4.f: void <clinit>()>
		SHA-256: bde1fde71da9e1796a6c9f32f5e977c1429f78454c08edbc3bb132f014d1014
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6782)
		Method: <x7.e: boolean q(x7.f,android.content.Context)>
		SHA-256: 1ef1d52acf93712ccab8805caf8bc2114d48269482af57cf71bce1c8edd278f8
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <t9.a: java.lang.String j(int,java.security.SecureRandom)>
		SHA-256: bd1a5715d3f2f1a1fb1216c142da12037443c959e5085e814656e2d4b5c037a1
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <o9.c: java.security.KeyStore a(java.lang.String)>
		SHA-256: 67423b76f4183e47efc5c0a829b8bb3558797557b1656450c117ada423835d55
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.cert.CertificateFactory
		Statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer32147)
		Method: <p9.h: java.security.cert.X509Certificate d()>
		SHA-256: 613e8f0f35665f885945b15aa088f25c2b5b8da2fbe6518afcce1523f281dad8
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r10 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r0)
		Method: <o9.c: javax.net.ssl.X509KeyManager b(java.lang.String,n9.c,java.security.cert.X509Certificate[])>
		SHA-256: 96a4a68f5fce0fae0aab29c04d05aca6c89a1be94bb3f9fe119e88e28870d90b
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <q9.z: q9.h c(java.lang.String)>
		SHA-256: 859b51e0caa49b8c202956283a71fabb66f7ffe279aec292da4538d51a9fcfdd
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.cert.CertificateFactory
		Statement: $r2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer13616)
		Method: <n9.a: java.security.cert.X509Certificate a(java.lang.String)>
		SHA-256: c55292ab16f1e47d74a64588b50083b455d5cf50a523b89201fa21a529805821
		Secure: false
	Object:
		Variable: $r8
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r8 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r0)
		Method: <o9.c: javax.net.ssl.X509TrustManager c(java.lang.String,java.util.List,java.util.List)>
		SHA-256: 766f50a2838beae531caf845c08e41796cc14d4fb8b7dcee120b2352936a43b0
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer14545)
		Method: <z6.g$b$a: java.lang.String a()>
		SHA-256: 169f9f79d1bd1501776f15cced3649e249310e05bbe3efffbb892b12852efdf9
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <n9.c$a: java.security.KeyPair f()>
		SHA-256: 6078c68a58e640410bcc43c491697f3d6b8e7e8c37051759eb3d677dd7b0fe98
		Secure: true
	Object:
		Variable: varReplacer11265
		Type: java.lang.String
		Statement: $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer11265)
		Method: <z4.f: void <clinit>()>
		SHA-256: d59e02f74c716291a929cecd4c8582abdaf8b45718db7360e3caf81d7674172
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <z6.g$b$a: java.lang.String a()>
		SHA-256: e1b4366dbb490354629df3e9098bf241b39a91afbf69eff651f389d103e6bf7e
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer22651)
		Method: <z4.f$a: boolean b(java.lang.String,byte[])>
		SHA-256: 4e9cd4f56dd19a31e4b5aed74437bc102038951b9a3cb444c0c2a2b238cfedf9
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer32012, varReplacer32013)
		Method: <okhttp3.internal.platform.c: javax.net.ssl.X509TrustManager o()>
		SHA-256: 4091340cab7a993a823fb27d0666a9117fec6201b33a8acb2d7d72e4dd91bcb
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <s3.e$a: java.security.SecureRandom a()>
		SHA-256: 4a7be486b731fb555be5a32ad3544520753d9d05f5e7cce9b6801ceb072f5f44
		Secure: true
	Object:
		Variable: $r9
		Type: javax.net.ssl.TrustManager[]
		Statement: $r9 = virtualinvoke $r8.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <o9.c: javax.net.ssl.X509TrustManager c(java.lang.String,java.util.List,java.util.List)>
		SHA-256: a9e6b1698eae79218467efa9e04d0fca2cdf97fd53c511858ee53c13b9e2342e
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer39234, $r2)
		Method: <okhttp3.internal.platform.c: javax.net.ssl.SSLContext m()>
		SHA-256: c7b3da6c8b75198c05a2d2bff428273ac4e2156cff7d7a0ada149f9f5626d56
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r22.<java.security.Signature: byte[] sign()>()
		Method: <n9.c$a: n9.c b()>
		SHA-256: 1cb7b9d747f735f77d2aca67c4f1e743e5f9990ba216b7ebd1437196295a3a0e
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <z4.f$a: boolean b(java.lang.String,byte[])>
		SHA-256: 9b524f06e84da308c4f7d758e992fbee748a77a36050719f7c22f8d1373020b7
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.c: javax.net.ssl.X509TrustManager o()>
		SHA-256: 5b3ac97e809537d5c0508fcc4ad2f3a133ee2cbf70757bb86fa788a0dc8ad012
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.g: javax.net.ssl.X509TrustManager o()>
		SHA-256: d5902af5b12cbea8d29b04e4ea1cbe171ede53e2df358f38e0e53e0bb63d0f5c
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <q9.h: q9.h c(java.lang.String)>
		SHA-256: 7a62705013d140fd456ede4e0644f3751e6554dd8c5c7909869b95f322f2be41
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <z4.f$a: boolean b(java.lang.String,byte[])>
		SHA-256: 8f42fcfd2956c1a5a87d3685f2ab3b20b00aaddc937b70a459fbdd476880f785
		Secure: false
	Object:
		Variable: $r27
		Type: byte[]
		Statement: $r27 = virtualinvoke $r24.<java.security.MessageDigest: byte[] digest()>()
		Method: <s7.k: void h(s7.k,android.app.Application)>
		SHA-256: f07de832bcbb37b52cff554dfc22ecf415834d35844ef7e01a395453ecce99f4
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r2.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r4)
		Method: <z4.f: void <clinit>()>
		SHA-256: b83a88d60d09e15a99320f9bed7ac6b01fbaa1f8d21e0a1ebc5b1b95ee138326
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <t9.a: java.lang.String i(int)>
		SHA-256: df5fac678213444f8160d4b51367362c05931862e9b3cb353f61c7f43dcb2675
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyPairGenerator
		Statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r2)
		Method: <n9.c$a: java.security.KeyPair f()>
		SHA-256: a8deaec104a0f3eacb40c15682509ff5be6476ec050047aa7b05a4ab1ed2e5b7
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <t3.c$a: java.security.SecureRandom a()>
		SHA-256: c0f9aeaf57c1f0580b897e0089d74c9a0c66544924eaefff722689631a25ab42
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.h: javax.net.ssl.X509TrustManager o()>
		SHA-256: e96f48aec6cc97f7532bcbe531c167aa82c80310434b106dfa2f0748e41ce496
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.d: javax.net.ssl.X509TrustManager o()>
		SHA-256: ab810cd89b3cbafbfe53daa64cb3badf928278ee6192424597b551bb74325b46
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer39232, $r2)
		Method: <okhttp3.internal.platform.d: javax.net.ssl.SSLContext m()>
		SHA-256: b03ae90d96329367f32e1334cfd448c19174dcdc783c8142d85b35312d826b83
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <q9.h: q9.h c(java.lang.String)>
		SHA-256: f514ef4e1fb7168e1dad25c68e0b436915c23167df5f67d89982220384a9ae28
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.whispersystems.curve25519.e: void a(byte[])>
		SHA-256: 86505ddf77eb6c75edc3f9ad6ad171289a8d8c96f65e9ead6b5a53f2a126aad3
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer39229)
		Method: <okhttp3.internal.platform.h: javax.net.ssl.SSLContext m()>
		SHA-256: ab30174b1539e28252d42f7c9d93a3890efddd1114d13da6df4263c7f34247d1
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.h: javax.net.ssl.X509TrustManager o()>
		SHA-256: 89c519fb5c53040abfd451f8c76e1cb4b3d66a265ddb8a64853e6d503f2cb4b7
		Secure: false

Findings in Java Class: s7.k

	 in Method: void h(s7.k,android.app.Application)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #19fd8c0a9b46a397ae4e3561b93af8a82ca156046de96243195db176357f1519)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r27 = virtualinvoke $r24.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: x7.e

	 in Method: boolean q(x7.f,android.content.Context)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #1ef1d52acf93712ccab8805caf8bc2114d48269482af57cf71bce1c8edd278f8)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r11 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: androidx.fragment.app.Fragment

	 in Method: androidx.lifecycle.k0 E()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e3d8cc7973e218f95efe0aa035163d3e84b4446d7b05f453b720ad493e7f3276)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i0 = specialinvoke r0.<androidx.fragment.app.Fragment: int g0()>()


Findings in Java Class: a9.g

	 in Method: void b(java.lang.String,l8.a)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e3d8cc7973e218f95efe0aa035163d3e84b4446d7b05f453b720ad493e7f3276)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e3d8cc7973e218f95efe0aa035163d3e84b4446d7b05f453b720ad493e7f3276)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e3d8cc7973e218f95efe0aa035163d3e84b4446d7b05f453b720ad493e7f3276)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e3d8cc7973e218f95efe0aa035163d3e84b4446d7b05f453b720ad493e7f3276)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>()


Findings in Java Class: v5.h$c

	 in Method: androidx.lifecycle.k0 a()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e3d8cc7973e218f95efe0aa035163d3e84b4446d7b05f453b720ad493e7f3276)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = interfaceinvoke $r3.<androidx.lifecycle.l0: androidx.lifecycle.k0 E()>()


Findings in Java Class: n9.a

	 in Method: java.security.cert.X509Certificate a(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #c55292ab16f1e47d74a64588b50083b455d5cf50a523b89201fa21a529805821)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate
			at statement: $r4 = virtualinvoke $r2.<java.security.cert.CertificateFactory: java.util.Collection generateCertificates(java.io.InputStream)>($r3)


Findings in Java Class: z6.g$b$a

	 in Method: java.lang.String a()
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer14552, $r8, $r12)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer14556)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #169f9f79d1bd1501776f15cced3649e249310e05bbe3efffbb892b12852efdf9)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r14 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r14)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer14552, $r8, $r12)


Findings in Java Class: q9.z

	 in Method: q9.h c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2c458903d955d76db3bb6acfad89ad3daf65835a5699707e3cbf044098b59504)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #2c458903d955d76db3bb6acfad89ad3daf65835a5699707e3cbf044098b59504)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: p9.h

	 in Method: java.security.cert.X509Certificate d()
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #613e8f0f35665f885945b15aa088f25c2b5b8da2fbe6518afcce1523f281dad8)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate
			at statement: $r7 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.util.Collection generateCertificates(java.io.InputStream)>($r6)


Findings in Java Class: okhttp3.internal.platform.h

	 in Method: javax.net.ssl.SSLContext m()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ab30174b1539e28252d42f7c9d93a3890efddd1114d13da6df4263c7f34247d1)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer39229)


	 in Method: javax.net.ssl.SSLSocketFactory n(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer32374, $r10, varReplacer32374)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer32374, $r10, varReplacer32374)


	 in Method: javax.net.ssl.X509TrustManager o()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer31998)


Findings in Java Class: okhttp3.internal.platform.d

	 in Method: javax.net.ssl.SSLContext m()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #b03ae90d96329367f32e1334cfd448c19174dcdc783c8142d85b35312d826b83)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer39232, $r2)


	 in Method: javax.net.ssl.X509TrustManager o()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer32008)


Findings in Java Class: okhttp3.internal.platform.c

	 in Method: javax.net.ssl.SSLContext m()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #c7b3da6c8b75198c05a2d2bff428273ac4e2156cff7d7a0ada149f9f5626d56)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer39234, $r2)


	 in Method: javax.net.ssl.X509TrustManager o()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer32011)


Findings in Java Class: z4.f$a

	 in Method: boolean b(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r4)


Findings in Java Class: okhttp3.internal.platform.g

	 in Method: javax.net.ssl.X509TrustManager o()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer32002)


Findings in Java Class: n9.c$a

	 in Method: n9.c b()
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r22.<java.security.Signature: void initSign(java.security.PrivateKey)>($r23)


Findings in Java Class: z4.f

	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r1.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r4)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 56

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 8
	TypestateError: 4
	ConstraintError: 4
	RequiredPredicateError: 14
=====================================================================
