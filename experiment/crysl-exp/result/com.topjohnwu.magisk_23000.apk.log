0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r27
		Type: java.security.Signature
		Statement: $r27 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)
		Method: <a.lc1: byte[] d(a.kc1,java.util.Map)>
		SHA-256: ae8017c9d1f9f247ec23d26f97b74022d4e02b7de7d0b779b9475b37d7cc1d54
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <a.q52: javax.net.ssl.X509TrustManager n()>
		SHA-256: 6c0d9b89b99543ee2b7b7f76b3419da818bc8444573db981c3f4a1d600b01df4
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r9.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <com.topjohnwu.signing.SignBoot$a: boolean m(byte[],int)>
		SHA-256: e632275bac8fe789c81a2b12ccb3c64bd287c1764df6f69033b65daa291e51a3
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <a.lc1: java.util.Map a(java.util.Set,java.nio.ByteBuffer[])>
		SHA-256: b3f8d126d3353df446971afe6193d2dfa14dcfbbdd1f1400ecb73971141c1c57
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer30210)
		Method: <a.rz1: a.i72 b(java.security.cert.X509Certificate)>
		SHA-256: e0088e9b25dcff88a2b5422bad227182fca239e3251905c48949a085a48c5b58
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer9529, varReplacer9530)
		Method: <a.b1: a.ta a()>
		SHA-256: 60de1384bbece18dc6480ecfc59fef7fabef79e4b34e9c2b06bccd460343c902
		Secure: true
	Object:
		Variable: $r40
		Type: byte[]
		Statement: $r40 = virtualinvoke $r19.<java.security.MessageDigest: byte[] digest()>()
		Method: <a.rc1: void c(java.security.cert.X509Certificate,java.security.PrivateKey,a.oc1,java.io.FileOutputStream)>
		SHA-256: 7f7e575a193af6e44ab7f69a3ba314b1101bc3baa346dc5c2ba4b2258c58a7ff
		Secure: false
	Object:
		Variable: $r29
		Type: byte[]
		Statement: $z0 = virtualinvoke $r27.<java.security.Signature: boolean verify(byte[])>($r29)
		Method: <a.lc1: byte[] d(a.kc1,java.util.Map)>
		SHA-256: 16bd46942a97e9d79d86cacd4ccb04ea6b3a543130a35effd396c180631e1308
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r9)
		Method: <a.lc1: java.util.Map a(java.util.Set,java.nio.ByteBuffer[])>
		SHA-256: eb4fe75cf13d7867c3eaa59cf314c966576d0080db0c5716da1164b0f0a59713
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.KeyFactory
		Statement: $r11 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r10)
		Method: <a.nc1: java.security.PrivateKey d(java.io.InputStream)>
		SHA-256: ab5fecf8754f33c956962069b6de78067428580d4a66c143143864189fc74060
		Secure: false
	Object:
		Variable: $r47
		Type: java.security.cert.CertificateFactory
		Statement: $r47 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer6152)
		Method: <a.kt0: java.lang.Object a()>
		SHA-256: 5af559262bd57ea30b9ce852eb9b3d1aceb75a9abfe9fd8d577ceddbab6f2ead
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.Signature
		Statement: $r9 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r7)
		Method: <com.topjohnwu.signing.SignBoot$a: boolean m(byte[],int)>
		SHA-256: 586973b69fb51895060af102c590324f9bb3a9b1e9952e718b682c70e0164b6e
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyStore
		Statement: $r11 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer6146)
		Method: <a.kt0: java.lang.Object a()>
		SHA-256: 7e74a6a61656bf8730dab8eb2757af6e1133f38ac803b7006c1f3dd9e11f1ba9
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.cert.CertificateFactory
		Statement: $r1 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer6188)
		Method: <a.nc1: java.security.cert.X509Certificate c(java.io.InputStream)>
		SHA-256: 65071adbd3f40a42c0454cf83a20ba943be152a76ce0b4e26322390098b09a92
		Secure: false
	Object:
		Variable: $r22
		Type: java.security.AlgorithmParameters
		Statement: $r22 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>(varReplacer17034)
		Method: <a.se2: java.security.Signature b(a.xc2)>
		SHA-256: 147868aadb78b2c0a4ae807ffb3bdc2f224a539f00900a5db98eb4d697ff703
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $z1 = virtualinvoke $r20.<java.security.Signature: boolean verify(byte[])>($r12)
		Method: <a.k71: com.topjohnwu.magisk.ui.safetynet.SafetyNetResponse parseJws(java.lang.String)>
		SHA-256: 4c943c59d0739ff837e7167568c18880a2119a6d07e6b79bbd3973714aa9c960
		Secure: false
	Object:
		Variable: $r29
		Type: java.security.PrivateKey
		Statement: $r29 = virtualinvoke $r17.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <a.kt0: java.lang.Object a()>
		SHA-256: ced107426285b7f1aed9de7563f8d30da92f4478906b9342db91b8789b2cc58d
		Secure: true
	Object:
		Variable: varReplacer21682
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer21682)
		Method: <a.nc1: java.lang.String a(java.security.Key)>
		SHA-256: 5d2fa7ac8fa89e3090fa6a718ca951d2d0887fa9916ba1d535fecc1bd4f78898
		Secure: true
	Object:
		Variable: $r20
		Type: java.security.MessageDigest
		Statement: $r20 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17381)
		Method: <a.rc1: void c(java.security.cert.X509Certificate,java.security.PrivateKey,a.oc1,java.io.FileOutputStream)>
		SHA-256: 3e1f27707fac9b3c48d367455c3e820a4cbe9f5170bbdfa66a24fd144e23c538
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r27.<java.security.Signature: boolean verify(byte[])>($r29)
		Method: <a.lc1: byte[] d(a.kc1,java.util.Map)>
		SHA-256: 6c64ce2771b96904bba7ff92eeb4b22e5464c01e3501951aa8ad079205ade912
		Secure: false
	Object:
		Variable: $r29
		Type: java.security.PrivateKey
		Statement: $r29 = virtualinvoke $r17.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <a.kt0: java.lang.Object a()>
		SHA-256: ced107426285b7f1aed9de7563f8d30da92f4478906b9342db91b8789b2cc58d
		Secure: true
	Object:
		Variable: $r16
		Type: java.security.Signature
		Statement: $r16 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r12)
		Method: <a.se2: java.security.Signature b(a.xc2)>
		SHA-256: e8cb5a31ac293be87e03be4d194a3393a546efeef6928bdbf698865963c1f73c
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer21682)
		Method: <a.nc1: java.lang.String a(java.security.Key)>
		SHA-256: 9b1b2439049393a32b4386ed2ed8efca750f711e352fdcbe8933d56ee8a6ac72
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <a.rz1: a.i72 b(java.security.cert.X509Certificate)>
		SHA-256: a9bb0f59fa7c3871b3835791237ad102a8f3bc481a7d271b5ea12c9d347f07df
		Secure: true
	Object:
		Variable: $r16
		Type: java.security.KeyPairGenerator
		Statement: $r16 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer6150)
		Method: <a.kt0: java.lang.Object a()>
		SHA-256: ccf4e0a3a1f25490c1d37ea207f2006933fb5828f2a91f1929979e1e78afd1ad
		Secure: true
	Object:
		Variable: $r20
		Type: java.security.SecureRandom
		Statement: specialinvoke $r20.<java.security.SecureRandom: void <init>()>()
		Method: <a.yr0: java.lang.Object a(a.yr0,android.app.Activity,java.lang.String,a.co1)>
		SHA-256: 4f5975aa92c64419f99589282a8e4ed36fe81782c2a0e14201764db45cc27ff
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <a.q52: javax.net.ssl.X509TrustManager n()>
		SHA-256: 92389da943ccd1406bf60617636d2b9d053f27c989161b366fd19f541f08c2be
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r9)
		Method: <a.se2: java.security.MessageDigest a(a.xc2)>
		SHA-256: 2c0309d7e038c8cbaef0de3d1a1f83ca4428bee78b273358f95228ca6083032c
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r9)
		Method: <a.lc1: java.util.Map a(java.util.Set,java.nio.ByteBuffer[])>
		SHA-256: eb4fe75cf13d7867c3eaa59cf314c966576d0080db0c5716da1164b0f0a59713
		Secure: true
	Object:
		Variable: $r16
		Type: java.security.Signature
		Statement: $r16 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r12)
		Method: <a.se2: java.security.Signature b(a.xc2)>
		SHA-256: e8cb5a31ac293be87e03be4d194a3393a546efeef6928bdbf698865963c1f73c
		Secure: false
	Object:
		Variable: $i3
		Type: int
		Statement: $i3 = virtualinvoke $r13.<java.security.SecureRandom: int nextInt(int)>($i3)
		Method: <a.ks0: java.lang.Object i(a.co1)>
		SHA-256: 4ba7598d62a5b14473a7a0046ffb4d6911f2b18ad2753b330df38f46c2468a72
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <a.y52: javax.net.ssl.X509TrustManager n()>
		SHA-256: ce8eda662f8c9860b3309748492304e788917aa609900bbc4256127c16b8fe22
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer21139)
		Method: <a.y52: javax.net.ssl.SSLContext l()>
		SHA-256: 87ae703262b2bdfc38aa9b41407f6ce3b0d28086177a8cb13c9cbe6d37b2c43f
		Secure: false
	Object:
		Variable: $r6
		Type: java.lang.String
		Statement: $r9 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r6)
		Method: <a.lc1: byte[] d(a.kc1,java.util.Map)>
		SHA-256: 9ecfeea90ee8cb092fc77ef2694792fd85c65b7a167c743d247aa21baeb5e0ee
		Secure: true
	Object:
		Variable: $r13
		Type: java.security.SecureRandom
		Statement: specialinvoke $r13.<java.security.SecureRandom: void <init>()>()
		Method: <a.ks0: java.lang.Object i(a.co1)>
		SHA-256: 31bb49663105be25f0558ba068e39128920423b3b3ee5428fe9403f2db1b307f
		Secure: true
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r20.<java.security.SecureRandom: int nextInt(int)>(varReplacer12073)
		Method: <a.yr0: java.lang.Object a(a.yr0,android.app.Activity,java.lang.String,a.co1)>
		SHA-256: b9eaf3003406077bc3e98cca2fa196b02c1e350f70b86144426ec649d28b119
		Secure: true
	Object:
		Variable: $r17
		Type: java.security.KeyPair
		Statement: $r17 = virtualinvoke $r16.<java.security.KeyPairGenerator: java.security.KeyPair genKeyPair()>()
		Method: <a.kt0: java.lang.Object a()>
		SHA-256: e385c7ef4a7e2745f19034930ecc3d332476d576a801124e43b8258b06b667e2
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r9)
		Method: <a.se2: java.security.MessageDigest a(a.xc2)>
		SHA-256: 2c0309d7e038c8cbaef0de3d1a1f83ca4428bee78b273358f95228ca6083032c
		Secure: true
	Object:
		Variable: $r19
		Type: java.security.MessageDigest
		Statement: $r19 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r32)
		Method: <a.rc1: void c(java.security.cert.X509Certificate,java.security.PrivateKey,a.oc1,java.io.FileOutputStream)>
		SHA-256: b5df75bd0173e5dc0e7dff2bc1b7f06e0323640a63fc130459ff0e08b711b541
		Secure: false
	Object:
		Variable: $i2
		Type: int
		Statement: $i2 = virtualinvoke $r20.<java.security.SecureRandom: int nextInt(int)>(varReplacer12066)
		Method: <a.yr0: java.lang.Object a(a.yr0,android.app.Activity,java.lang.String,a.co1)>
		SHA-256: e5ef765488f8d3dae3f992f22a3b0ff075c42774ba148804f59d5fbbad3c80c0
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9531)
		Method: <a.b1: a.ta a()>
		SHA-256: e9d3d0c88ac39941e24d3b248f63708f9d2eba0dfa24fc9a001dd9fd84136136
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer16654, varReplacer16655)
		Method: <a.n52: javax.net.ssl.X509TrustManager n()>
		SHA-256: 3a5427b577568ec40e65855446b68fce9d7de2bc040fa2f13c9e861bdc330ce9
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer21140, $r2)
		Method: <a.n52: javax.net.ssl.SSLContext l()>
		SHA-256: 8fbb202f5a18d2e1acd146f7a26316e1e373ba4f9b4b7605d936e1f28dbbd928
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $i4 = virtualinvoke $r10.<java.security.MessageDigest: int digest(byte[],int,int)>($r11, $i4, $i2)
		Method: <a.lc1: java.util.Map a(java.util.Set,java.nio.ByteBuffer[])>
		SHA-256: e00de593bccbfff8eed55cc900e36d90bee4c8cdfea85a765d38e1cda101f3b8
		Secure: true
	Object:
		Variable: $r19
		Type: java.security.SecureRandom
		Statement: specialinvoke $r19.<java.security.SecureRandom: void <init>()>()
		Method: <a.k71: java.lang.Object attest(android.content.Context,a.vp1,a.co1)>
		SHA-256: 7fdd8f7753110577b0512b842d3711b0dc0cbfbd9478ba342cb9779f5eadbfb3
		Secure: true
	Object:
		Variable: $r22
		Type: java.security.PublicKey
		Statement: $r22 = virtualinvoke $r17.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <a.kt0: java.lang.Object a()>
		SHA-256: b1fad44f2c1b2afb830fc47ff894d68c1ec76c41fe8d390aa0b5faff97088d05
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r9)
		Method: <a.se2: java.security.MessageDigest a(a.xc2)>
		SHA-256: 2c0309d7e038c8cbaef0de3d1a1f83ca4428bee78b273358f95228ca6083032c
		Secure: true
	Object:
		Variable: $r40
		Type: byte[]
		Statement: $r40 = virtualinvoke $r20.<java.security.MessageDigest: byte[] digest()>()
		Method: <a.rc1: void c(java.security.cert.X509Certificate,java.security.PrivateKey,a.oc1,java.io.FileOutputStream)>
		SHA-256: d13b78edab2ece48575e1eddd2230089b87654032b08538d95d1980b2808199d
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.KeyFactory
		Statement: $r9 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r6)
		Method: <a.lc1: byte[] d(a.kc1,java.util.Map)>
		SHA-256: 373ea964ff5e09a56a96cb8b9016819c0d7cd90257bc721d219afe63a3bea7b4
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.Signature
		Statement: $r9 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)
		Method: <com.topjohnwu.signing.SignBoot: boolean doSignature(java.security.cert.X509Certificate,java.security.PrivateKey,java.io.InputStream,java.io.OutputStream,java.lang.String)>
		SHA-256: 51126151ce526b0b4349f96bda64a8d7c11bf8984271531fd39f74d7477cfaa6
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer16666, $r2)
		Method: <a.q52: javax.net.ssl.SSLSocketFactory m(javax.net.ssl.X509TrustManager)>
		SHA-256: 55be0ed09d6d5497e68e82c999c887ec4b3ce13d3a5caf745a47129eb3ddd93e
		Secure: false
	Object:
		Variable: $r29
		Type: byte[]
		Statement: $r29 = virtualinvoke $r27.<java.security.Signature: byte[] sign()>()
		Method: <a.lc1: byte[] d(a.kc1,java.util.Map)>
		SHA-256: b9287b185344965f16ce31ded310775160f796ddcd96282db2f4c895954ab0c8
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.PrivateKey
		Statement: $r12 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r1)
		Method: <a.nc1: java.security.PrivateKey d(java.io.InputStream)>
		SHA-256: 54a0d6e5edd5c35ebc958faef8425acc93822d383150b5ebd68777440e2fb646
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest(byte[])>($r9)
		Method: <a.pt0: void <init>(android.content.Context)>
		SHA-256: dca5154da1fd1376e08d4bc9ef54a32fc4d8e3afb55804f484ce5c5616471af8
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer21142, $r2)
		Method: <a.q52: javax.net.ssl.SSLContext l()>
		SHA-256: 20c4894fe8f700e2e1cc4ad0c01bf5a934e42be55b1d883c53804bb9f0ab66e5
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r20.<java.security.SecureRandom: int nextInt(int)>($i0)
		Method: <a.yr0: java.lang.Object a(a.yr0,android.app.Activity,java.lang.String,a.co1)>
		SHA-256: 7d313f3980afa51a209bfbbcd2853926a0ff2fd9bd0fe61a2479484b897c4e6
		Secure: true
	Object:
		Variable: $i2
		Type: int
		Statement: $i2 = virtualinvoke $r20.<java.security.SecureRandom: int nextInt(int)>(varReplacer12074)
		Method: <a.yr0: java.lang.Object a(a.yr0,android.app.Activity,java.lang.String,a.co1)>
		SHA-256: 2d49c8d77c57aa7f2a396009d06a042bda99a7c4d6ce5aa998b4bc163cdb471e
		Secure: true
	Object:
		Variable: $z1
		Type: boolean
		Statement: $z1 = virtualinvoke $r20.<java.security.Signature: boolean verify(byte[])>($r12)
		Method: <a.k71: com.topjohnwu.magisk.ui.safetynet.SafetyNetResponse parseJws(java.lang.String)>
		SHA-256: 1689e31f8777ba880f62342d128c4d37c6dc8ebece3ebccf421b3d84308a7b18
		Secure: false
	Object:
		Variable: $r20
		Type: byte[]
		Statement: virtualinvoke $r19.<java.security.SecureRandom: void nextBytes(byte[])>($r20)
		Method: <a.k71: java.lang.Object attest(android.content.Context,a.vp1,a.co1)>
		SHA-256: 78b2e38d81ace523f36cf7dbde74e706cea114e51fcbfa42ad945e4ba559d688
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.Key
		Statement: $r4 = virtualinvoke $r0.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer9535, varReplacer9536)
		Method: <a.b1: a.ta a()>
		SHA-256: 3a9918a1552d4b8d52c3e6811f3b9edb83db090c685c27bcfe16372cc1c2ab9e
		Secure: false
	Object:
		Variable: $r27
		Type: java.security.Signature
		Statement: $r27 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)
		Method: <a.lc1: byte[] d(a.kc1,java.util.Map)>
		SHA-256: ae8017c9d1f9f247ec23d26f97b74022d4e02b7de7d0b779b9475b37d7cc1d54
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <a.w52: javax.net.ssl.X509TrustManager n()>
		SHA-256: b526dc5c996d2fb2ce28ba9337d0e062f4f202939b1492a54207cae30e85f19b
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r9.<java.security.Signature: byte[] sign()>()
		Method: <com.topjohnwu.signing.SignBoot: boolean doSignature(java.security.cert.X509Certificate,java.security.PrivateKey,java.io.InputStream,java.io.OutputStream,java.lang.String)>
		SHA-256: 906cfa40705a7b6224d535159b83fd358d8912a30077a649fac64edb30e00e51
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.cert.CertificateFactory
		Statement: $r10 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer25101)
		Method: <com.topjohnwu.signing.SignBoot$a: void <init>(byte[])>
		SHA-256: 944120c2ad0530a656b580024d19a99a1c4d5d529922d4868f8cdba0857c9113
		Secure: false
	Object:
		Variable: $r10
		Type: java.lang.String
		Statement: $r11 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r10)
		Method: <a.nc1: java.security.PrivateKey d(java.io.InputStream)>
		SHA-256: 7ee8f7b1fa0203d16f4a76eb387d766ec320f02b0e9354ca2db0aa713edecf61
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <a.n52: javax.net.ssl.X509TrustManager n()>
		SHA-256: b442a2604f3f06898d3e65fb02d9ff9bdfa14bb6e0f2463d4bd93b71698f9586
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $z0 = virtualinvoke $r9.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <com.topjohnwu.signing.SignBoot$a: boolean m(byte[],int)>
		SHA-256: 1bd3f22c4ba76d4a2c48c49bb3796fa688349d8065a21455dc147ec2f3a064ba
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <a.w52: javax.net.ssl.X509TrustManager n()>
		SHA-256: e0ee0dea161563c00560e2e23b7a4671dc58d78c9c784b9f307fa58b96f74b7f
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyStore
		Statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer9527)
		Method: <a.b1: a.ta a()>
		SHA-256: 4e3893b6e3f103a1ae6fad3eae2695c57cbbbe4c94aca799e89eb52c0e8f5243
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer21141, $r2)
		Method: <a.w52: javax.net.ssl.SSLContext l()>
		SHA-256: d3248fea0e2f76216c452f03c07c061fcf7a7f7463f9d6ae7ebab0bba1ece67e
		Secure: false
	Object:
		Variable: $r127
		Type: java.security.DigestOutputStream
		Statement: specialinvoke $r127.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r126, $r19)
		Method: <a.rc1: void c(java.security.cert.X509Certificate,java.security.PrivateKey,a.oc1,java.io.FileOutputStream)>
		SHA-256: f3704c452c28ecada44a86a9752171356e4b4d5c98a657d376c14228bae133af
		Secure: false
	Object:
		Variable: $r20
		Type: java.security.Signature
		Statement: $r20 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r3)
		Method: <a.k71: com.topjohnwu.magisk.ui.safetynet.SafetyNetResponse parseJws(java.lang.String)>
		SHA-256: f496d91df5ef8736d15ef3a6a825992b1d42302929a0b4afa86f165f90b0961b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <a.y52: javax.net.ssl.X509TrustManager n()>
		SHA-256: 38aa6bf0b1505063f434eabdf33ec19d203e4ac2594272458998d2e2702a2f8e
		Secure: false
	Object:
		Variable: $r19
		Type: java.security.MessageDigest
		Statement: $r19 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17384)
		Method: <a.rc1: void c(java.security.cert.X509Certificate,java.security.PrivateKey,a.oc1,java.io.FileOutputStream)>
		SHA-256: e94c35b7695183bca65378aa750e501378c538093d3f9149cbfe18ff64e1e25c
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.MessageDigest
		Statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer21371)
		Method: <a.pt0: void <init>(android.content.Context)>
		SHA-256: f27d399e3b1a07c463802e60c02dff799a6dc5dbc6e16d99e169991cfcbe783c
		Secure: false

Findings in Java Class: a.kt0

	 in Method: java.lang.Object a()
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #e8cb5a31ac293be87e03be4d194a3393a546efeef6928bdbf698865963c1f73c)
			Operation on object of type java.security.Signature object not completed. Expected call to update
			at statement: $r32 = (a.me2) $r30

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #e8cb5a31ac293be87e03be4d194a3393a546efeef6928bdbf698865963c1f73c)
			Operation on object of type java.security.Signature object not completed. Expected call to update
			at statement: $r32 = (a.me2) $r30

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #5af559262bd57ea30b9ce852eb9b3d1aceb75a9abfe9fd8d577ceddbab6f2ead)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r48 = virtualinvoke $r47.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r14)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #e8cb5a31ac293be87e03be4d194a3393a546efeef6928bdbf698865963c1f73c)
			Operation on object of type java.security.Signature object not completed. Expected call to sign, update
			at statement: $r13 = virtualinvoke $r32.<a.me2: byte[] b()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #e8cb5a31ac293be87e03be4d194a3393a546efeef6928bdbf698865963c1f73c)
			Operation on object of type java.security.Signature object not completed. Expected call to sign, update
			at statement: $r13 = virtualinvoke $r32.<a.me2: byte[] b()>()


Findings in Java Class: a.nc1

	 in Method: java.security.cert.X509Certificate c(java.io.InputStream)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #65071adbd3f40a42c0454cf83a20ba943be152a76ce0b4e26322390098b09a92)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r2 = virtualinvoke $r1.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r0)


	 in Method: java.security.PrivateKey d(java.io.InputStream)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r12 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r1)


Findings in Java Class: a.b1

	 in Method: a.ta a()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e9d3d0c88ac39941e24d3b248f63708f9d2eba0dfa24fc9a001dd9fd84136136)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9531)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #4e3893b6e3f103a1ae6fad3eae2695c57cbbbe4c94aca799e89eb52c0e8f5243)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer9527)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer9528, $r5)


Findings in Java Class: a.q52

	 in Method: javax.net.ssl.SSLSocketFactory m(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16667, $r6, varReplacer16667)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16667, $r6, varReplacer16667)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16667, $r6, varReplacer16667)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #55be0ed09d6d5497e68e82c999c887ec4b3ce13d3a5caf745a47129eb3ddd93e)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer16666, $r2)


	 in Method: javax.net.ssl.SSLContext l()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #20c4894fe8f700e2e1cc4ad0c01bf5a934e42be55b1d883c53804bb9f0ab66e5)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer21142, $r2)


	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer16661)


Findings in Java Class: a.se2

	 in Method: java.security.Signature b(a.xc2)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #2c0309d7e038c8cbaef0de3d1a1f83ca4428bee78b273358f95228ca6083032c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i1 = virtualinvoke $r19.<java.security.MessageDigest: int getDigestLength()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #2c0309d7e038c8cbaef0de3d1a1f83ca4428bee78b273358f95228ca6083032c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i1 = virtualinvoke $r19.<java.security.MessageDigest: int getDigestLength()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #2c0309d7e038c8cbaef0de3d1a1f83ca4428bee78b273358f95228ca6083032c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i1 = virtualinvoke $r19.<java.security.MessageDigest: int getDigestLength()>()

		ConstraintError violating CrySL rule for java.security.AlgorithmParameters (on Object #147868aadb78b2c0a4ae807ffb3bdc2f224a539f00900a5db98eb4d697ff703)
			First parameter (with value "PSS") should be any of {AES, DiffieHellman, DH, OAEP, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r22 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>(varReplacer17034)

		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: $r22 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String)>(varReplacer17034)


Findings in Java Class: a.de2

	 in Method: void write(byte[],int,int)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #e8cb5a31ac293be87e03be4d194a3393a546efeef6928bdbf698865963c1f73c)
			Third parameter (with value 0)Variable lenmust be  greater than 0
			at statement: virtualinvoke $r1.<java.security.Signature: void update(byte[],int,int)>($r3, $i1, $i0)


Findings in Java Class: a.rc1

	 in Method: void c(java.security.cert.X509Certificate,java.security.PrivateKey,a.oc1,java.io.FileOutputStream)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94c35b7695183bca65378aa750e501378c538093d3f9149cbfe18ff64e1e25c)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r19 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17384)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #e8cb5a31ac293be87e03be4d194a3393a546efeef6928bdbf698865963c1f73c)
			Operation on object of type java.security.Signature object not completed. Expected call to update
			at statement: interfaceinvoke $r64.<java.util.List: boolean add(java.lang.Object)>($r141)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #e8cb5a31ac293be87e03be4d194a3393a546efeef6928bdbf698865963c1f73c)
			Operation on object of type java.security.Signature object not completed. Expected call to update
			at statement: interfaceinvoke $r64.<java.util.List: boolean add(java.lang.Object)>($r141)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e94c35b7695183bca65378aa750e501378c538093d3f9149cbfe18ff64e1e25c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, java.security.MessageDigest: void update(byte[],int,int), java.security.MessageDigest: void update(java.nio.ByteBuffer), java.security.MessageDigest: void update(byte[]), java.security.MessageDigest: void update(byte)
			at statement: virtualinvoke $r19.<java.security.MessageDigest: void update(byte[],int,int)>($r21, varReplacer17406, $i0)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3e1f27707fac9b3c48d367455c3e820a4cbe9f5170bbdfa66a24fd144e23c538)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, java.security.MessageDigest: void update(byte[],int,int), java.security.MessageDigest: void update(java.nio.ByteBuffer), java.security.MessageDigest: void update(byte[]), java.security.MessageDigest: void update(byte)
			at statement: virtualinvoke $r20.<java.security.MessageDigest: void update(byte[],int,int)>($r21, varReplacer17401, $i0)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e94c35b7695183bca65378aa750e501378c538093d3f9149cbfe18ff64e1e25c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r19 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17384)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3e1f27707fac9b3c48d367455c3e820a4cbe9f5170bbdfa66a24fd144e23c538)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r20 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17381)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3e1f27707fac9b3c48d367455c3e820a4cbe9f5170bbdfa66a24fd144e23c538)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r20 = null

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e94c35b7695183bca65378aa750e501378c538093d3f9149cbfe18ff64e1e25c)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r40 = virtualinvoke $r19.<java.security.MessageDigest: byte[] digest()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #3e1f27707fac9b3c48d367455c3e820a4cbe9f5170bbdfa66a24fd144e23c538)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r40 = virtualinvoke $r20.<java.security.MessageDigest: byte[] digest()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #b5df75bd0173e5dc0e7dff2bc1b7f06e0323640a63fc130459ff0e08b711b541)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r21 = virtualinvoke $r19.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e94c35b7695183bca65378aa750e501378c538093d3f9149cbfe18ff64e1e25c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to java.security.MessageDigest: int digest(byte[],int,int), update, java.security.MessageDigest: byte[] digest(byte[]), java.security.MessageDigest: byte[] digest()
			at statement: $r40 = virtualinvoke $r19.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e94c35b7695183bca65378aa750e501378c538093d3f9149cbfe18ff64e1e25c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to java.security.MessageDigest: int digest(byte[],int,int), update, java.security.MessageDigest: byte[] digest(byte[]), java.security.MessageDigest: byte[] digest()
			at statement: $r21 = virtualinvoke $r19.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e94c35b7695183bca65378aa750e501378c538093d3f9149cbfe18ff64e1e25c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to java.security.MessageDigest: int digest(byte[],int,int), update, java.security.MessageDigest: byte[] digest(byte[]), java.security.MessageDigest: byte[] digest()
			at statement: $r21 = virtualinvoke $r19.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e94c35b7695183bca65378aa750e501378c538093d3f9149cbfe18ff64e1e25c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to java.security.MessageDigest: int digest(byte[],int,int), update, java.security.MessageDigest: byte[] digest(byte[]), java.security.MessageDigest: byte[] digest()
			at statement: $r21 = virtualinvoke $r19.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e94c35b7695183bca65378aa750e501378c538093d3f9149cbfe18ff64e1e25c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to java.security.MessageDigest: int digest(byte[],int,int), update, java.security.MessageDigest: byte[] digest(byte[]), java.security.MessageDigest: byte[] digest()
			at statement: $r21 = virtualinvoke $r19.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3e1f27707fac9b3c48d367455c3e820a4cbe9f5170bbdfa66a24fd144e23c538)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to java.security.MessageDigest: int digest(byte[],int,int), update, java.security.MessageDigest: byte[] digest(byte[]), java.security.MessageDigest: byte[] digest()
			at statement: $r40 = virtualinvoke $r20.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3e1f27707fac9b3c48d367455c3e820a4cbe9f5170bbdfa66a24fd144e23c538)
			First parameter (with value "SHA256") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r20 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17381)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e94c35b7695183bca65378aa750e501378c538093d3f9149cbfe18ff64e1e25c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r19 = null

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #e8cb5a31ac293be87e03be4d194a3393a546efeef6928bdbf698865963c1f73c)
			Operation on object of type java.security.Signature object not completed. Expected call to update
			at statement: $r57 = $r63.<a.zd2: a.ge2 d>

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #e8cb5a31ac293be87e03be4d194a3393a546efeef6928bdbf698865963c1f73c)
			Operation on object of type java.security.Signature object not completed. Expected call to update
			at statement: $r57 = $r63.<a.zd2: a.ge2 d>

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #e8cb5a31ac293be87e03be4d194a3393a546efeef6928bdbf698865963c1f73c)
			Operation on object of type java.security.Signature object not completed. Expected call to update
			at statement: $r57 = $r63.<a.zd2: a.ge2 d>

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #e8cb5a31ac293be87e03be4d194a3393a546efeef6928bdbf698865963c1f73c)
			Operation on object of type java.security.Signature object not completed. Expected call to update
			at statement: $r57 = $r63.<a.zd2: a.ge2 d>

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #e8cb5a31ac293be87e03be4d194a3393a546efeef6928bdbf698865963c1f73c)
			Operation on object of type java.security.Signature object not completed. Expected call to update
			at statement: $r57 = $r63.<a.zd2: a.ge2 d>

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #e8cb5a31ac293be87e03be4d194a3393a546efeef6928bdbf698865963c1f73c)
			Operation on object of type java.security.Signature object not completed. Expected call to update
			at statement: $r57 = $r63.<a.zd2: a.ge2 d>

		IncompleteOperationError violating CrySL rule for java.security.DigestOutputStream (on Object #f3704c452c28ecada44a86a9752171356e4b4d5c98a657d376c14228bae133af)
			Operation on object of type java.security.DigestOutputStream object not completed. Expected call to write
			at statement: specialinvoke $r128.<java.io.PrintStream: void <init>(java.io.OutputStream,boolean,java.lang.String)>($r127, varReplacer17403, varReplacer17404)


Findings in Java Class: a.v92

	 in Method: void l(a.x82,boolean)
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #e8cb5a31ac293be87e03be4d194a3393a546efeef6928bdbf698865963c1f73c)
			Operation on object of type java.security.Signature object not completed. Expected call to sign, update
			at statement: virtualinvoke $r2.<java.io.OutputStream: void write(int)>(varReplacer21263)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #e8cb5a31ac293be87e03be4d194a3393a546efeef6928bdbf698865963c1f73c)
			Operation on object of type java.security.Signature object not completed. Expected call to sign, update
			at statement: virtualinvoke $r2.<java.io.OutputStream: void write(int)>(varReplacer21263)


Findings in Java Class: a.lc1

	 in Method: byte[] d(a.kc1,java.util.Map)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #ae8017c9d1f9f247ec23d26f97b74022d4e02b7de7d0b779b9475b37d7cc1d54)
			First parameter (with value "SHA512withRSA/PSS") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r27 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #ae8017c9d1f9f247ec23d26f97b74022d4e02b7de7d0b779b9475b37d7cc1d54)
			First parameter (with value "SHA256withRSA/PSS") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r27 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r27.<java.security.Signature: void initVerify(java.security.PublicKey)>($r5)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r27.<java.security.Signature: void initSign(java.security.PrivateKey)>($r28)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #ae8017c9d1f9f247ec23d26f97b74022d4e02b7de7d0b779b9475b37d7cc1d54)
			First parameter (with value "SHA512withDSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r27 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)


Findings in Java Class: a.y52

	 in Method: javax.net.ssl.SSLContext l()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #87ae703262b2bdfc38aa9b41407f6ce3b0d28086177a8cb13c9cbe6d37b2c43f)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer21139)


	 in Method: javax.net.ssl.SSLSocketFactory m(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16663, $r10, varReplacer16663)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16663, $r10, varReplacer16663)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16663, $r10, varReplacer16663)


	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer16649)


Findings in Java Class: a.n52

	 in Method: javax.net.ssl.SSLContext l()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #8fbb202f5a18d2e1acd146f7a26316e1e373ba4f9b4b7605d936e1f28dbbd928)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer21140, $r2)


	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer16656)


Findings in Java Class: a.pe2

	 in Method: a.oe2 a(a.xc2)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #2c0309d7e038c8cbaef0de3d1a1f83ca4428bee78b273358f95228ca6083032c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r6.<a.oe2: void <init>(a.pe2,a.xc2,a.qe2)>(r0, $r1, $r5)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #2c0309d7e038c8cbaef0de3d1a1f83ca4428bee78b273358f95228ca6083032c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r6.<a.oe2: void <init>(a.pe2,a.xc2,a.qe2)>(r0, $r1, $r5)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #2c0309d7e038c8cbaef0de3d1a1f83ca4428bee78b273358f95228ca6083032c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r6.<a.oe2: void <init>(a.pe2,a.xc2,a.qe2)>(r0, $r1, $r5)


Findings in Java Class: a.pt0

	 in Method: void <init>(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f27d399e3b1a07c463802e60c02dff799a6dc5dbc6e16d99e169991cfcbe783c)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer21371)


Findings in Java Class: com.topjohnwu.signing.SignBoot

	 in Method: boolean doSignature(java.security.cert.X509Certificate,java.security.PrivateKey,java.io.InputStream,java.io.OutputStream,java.lang.String)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #51126151ce526b0b4349f96bda64a8d7c11bf8984271531fd39f74d7477cfaa6)
			Third parameter (with value 0)Variable lenmust be  greater than 0
			at statement: virtualinvoke $r9.<java.security.Signature: void update(byte[],int,int)>($r2, varReplacer21663, $i0)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r9.<java.security.Signature: void initSign(java.security.PrivateKey)>($r4)


Findings in Java Class: com.topjohnwu.signing.SignBoot$a

	 in Method: void <init>(byte[])
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #944120c2ad0530a656b580024d19a99a1c4d5d529922d4868f8cdba0857c9113)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCRL
			at statement: $r11 = virtualinvoke $r10.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r9)


	 in Method: boolean m(byte[],int)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r9.<java.security.Signature: void initVerify(java.security.PublicKey)>($r10)


Findings in Java Class: a.w52

	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer16659)


Findings in Java Class: a.k71

	 in Method: com.topjohnwu.magisk.ui.safetynet.SafetyNetResponse parseJws(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r20.<java.security.Signature: void initVerify(java.security.PublicKey)>($r21)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 75

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 18
	TypestateError: 3
	ConstraintError: 15
	IncompleteOperationError: 36
=====================================================================
