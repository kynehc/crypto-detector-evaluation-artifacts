0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r33
		Type: java.security.SecureRandom
		Statement: specialinvoke $r33.<java.security.SecureRandom: void <init>()>()
		Method: <org.jivesoftware.smack.XMPPConnection: void proceedTLSReceived()>
		SHA-256: 6ca810fd236506db57ddf5391f974381b1014448d7cea8b8b3034cf9d2bc322c
		Secure: true
	Object:
		Variable: $r25
		Type: java.security.KeyStore
		Statement: $r25 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(varReplacer2852, varReplacer2853)
		Method: <org.jivesoftware.smack.XMPPConnection: void proceedTLSReceived()>
		SHA-256: ecbc0ce729cf7f5ebbaa6fb0b82dc54eb716cd5b1de30a03e7ed55d078207a25
		Secure: false
	Object:
		Variable: $r25
		Type: java.security.KeyStore
		Statement: $r25 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <org.jivesoftware.smack.XMPPConnection: void proceedTLSReceived()>
		SHA-256: e56156b672f800bd1706d9134b6957e2428e4eb45ef147cbf0b85ba72f659c76
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4346)
		Method: <org.jivesoftware.smack.util.StringUtils: java.lang.String hash(java.lang.String)>
		SHA-256: 8b5f6d6bb4dab3672c28291866a587aa732bc5067ea63b73a3f9ebcf666fb42a
		Secure: false
	Object:
		Variable: r4
		Type: javax.net.ssl.KeyManager[]
		Statement: r4 = virtualinvoke $r17.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.jivesoftware.smack.XMPPConnection: void proceedTLSReceived()>
		SHA-256: bc6414bf86ed6712c71bb8d863d259d599045f5b230f1cf7f30e9f35a2a07cd8
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2854)
		Method: <org.jivesoftware.smack.XMPPConnection: void proceedTLSReceived()>
		SHA-256: ad2295564fd71fd346ad848d366a47a1a50d977bf701d556c0b07f440eaf95ee
		Secure: false
	Object:
		Variable: $r25
		Type: java.security.KeyStore
		Statement: $r25 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.security.Provider)>(varReplacer2855, r24)
		Method: <org.jivesoftware.smack.XMPPConnection: void proceedTLSReceived()>
		SHA-256: 596e3b79d2a49e3f4df1a2fe033af9d3ccb97163700e79c4658748021e9dd785
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r17 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer2850)
		Method: <org.jivesoftware.smack.XMPPConnection: void proceedTLSReceived()>
		SHA-256: 951621c0aa3b396a8f3be66af0d8e4150745f7096c6b41508c8b2a8bd8afbf4e
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <org.jivesoftware.smack.ServerTrustManager: void <init>(java.lang.String,org.jivesoftware.smack.ConnectionConfiguration)>
		SHA-256: 9a546793abb3b47402b4d7a40b2ca03d64afc9e8bee807c8f59ba04c21e72646
		Secure: false

Findings in Java Class: org.jivesoftware.smack.XMPPConnection

	 in Method: void proceedTLSReceived()
		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #e56156b672f800bd1706d9134b6957e2428e4eb45ef147cbf0b85ba72f659c76)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r25.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r28, $r26)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r4, $r38, $r33)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ad2295564fd71fd346ad848d366a47a1a50d977bf701d556c0b07f440eaf95ee)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2854)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r4, $r38, $r33)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #951621c0aa3b396a8f3be66af0d8e4150745f7096c6b41508c8b2a8bd8afbf4e)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r17.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r16, $r26)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #596e3b79d2a49e3f4df1a2fe033af9d3ccb97163700e79c4658748021e9dd785)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r25.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer2861, $r26)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r17.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r16, varReplacer2846)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #ecbc0ce729cf7f5ebbaa6fb0b82dc54eb716cd5b1de30a03e7ed55d078207a25)
			First parameter (with value "KeychainStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r25 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(varReplacer2852, varReplacer2853)


Findings in Java Class: org.jivesoftware.smack.util.StringUtils

	 in Method: java.lang.String hash(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8b5f6d6bb4dab3672c28291866a587aa732bc5067ea63b73a3f9ebcf666fb42a)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4346)


Findings in Java Class: org.jivesoftware.smack.ServerTrustManager

	 in Method: void <init>(java.lang.String,org.jivesoftware.smack.ConnectionConfiguration)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #9a546793abb3b47402b4d7a40b2ca03d64afc9e8bee807c8f59ba04c21e72646)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r3, $r6)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #9a546793abb3b47402b4d7a40b2ca03d64afc9e8bee807c8f59ba04c21e72646)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r3, $r6)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 9

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 3
	RequiredPredicateError: 3
	HardCodedError: 4
	NeverTypeOfError: 1
=====================================================================
