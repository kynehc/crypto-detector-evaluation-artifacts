0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
6    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
6    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
6    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
7    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <c6.d: byte[] a(byte[],byte[])>
		SHA-256: 5aca104b39535034b02e52b11abf1507cff421e4fa35d104288b7ab261451c71
		Secure: false
	Object:
		Variable: varReplacer22494
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer22494)
		Method: <v5.a: void <init>(byte[])>
		SHA-256: 28b662693e7a6187a42f4e746dd527c2d33b63c31cc93257333b206218d75b7f
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r0, $i0, $i1)
		Method: <c6.c: java.security.spec.AlgorithmParameterSpec c(byte[],int,int)>
		SHA-256: f296041a48920b08dd157261c57ffba2865c2ceec378071f34608682d8e089c8
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <t5.h: int e()>
		SHA-256: ce1160df7947a0622af4600d1d011540dfe1b06cec3314efa3bf881c76cbc686
		Secure: true
	Object:
		Variable: varReplacer22496
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer22496)
		Method: <c6.b: void <init>(byte[],int)>
		SHA-256: 9ef7983108c1e5bf7efbef238888e3fa6255151b5d0c64121c44482cb266ced9
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer4117, $r1, $i1, $i0)
		Method: <v5.a: java.security.spec.AlgorithmParameterSpec c(byte[],int,int)>
		SHA-256: a000b5196c24674cd651ab558d02f6eb32e450d3a135824b94bc77cfae8d58b1
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer8864, $r2, varReplacer8865, varReplacer8866)
		Method: <x5.b: byte[] c(byte[],byte[])>
		SHA-256: b3867105a7097b3cdf227f784d08f60672c63829d83028a2e2d36f8d6020d0e0
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer17766)
		Method: <g8.e: javax.net.ssl.SSLContext l()>
		SHA-256: f1941e06ec2a5e05d2d2d618552000d68d3ae76a714d22299473817689cd14f0
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer22494)
		Method: <v5.a: void <init>(byte[])>
		SHA-256: 463ce5002bb962017d97c6ea9f84a7e31ca1825828a072db656b787babdabaa9
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.b: javax.net.ssl.X509TrustManager n()>
		SHA-256: ec0173d3519ed79f0c0e3280ff23597ebdacf7861eb514dcf9cb9be881fa3c8f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.a: javax.net.ssl.X509TrustManager n()>
		SHA-256: 713e574666d0e0dadc531464eb212760336e5f43c47eb4ca3f9a159575c3b4d9
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer4122, $r0, $i0, $i1)
		Method: <c6.c: java.security.spec.AlgorithmParameterSpec c(byte[],int,int)>
		SHA-256: 10a89ec8b9a81c8d128119fe81e0f92c8f2b8bbf68710f82c6481b08d6fe8a1d
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer12954, $r2)
		Method: <okhttp3.internal.platform.b: javax.net.ssl.SSLSocketFactory m(javax.net.ssl.X509TrustManager)>
		SHA-256: 866fc338e34730d2c8c312385da8cf36cf9504fe2cdaea9628c12d71b346f5d6
		Secure: false
	Object:
		Variable: varReplacer8824
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer8824)
		Method: <c6.d: byte[] a(byte[],byte[])>
		SHA-256: e10296673da484d269a4dd9edf884afc595656109b13e99013a248c44bbbde5d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Key
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r1, varReplacer26276)
		Method: <x5.b: void <init>(java.lang.String,java.security.KeyStore)>
		SHA-256: 17e446670e6d13f6306e3e1c0c87f4eaa18ef466165e42ae52533bb7ca0decfe
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer17768, $r2)
		Method: <okhttp3.internal.platform.b: javax.net.ssl.SSLContext l()>
		SHA-256: 933638f7705e72a5cd9dcc4eed31099a12b3f01a02b2aa0a5de7cf17d1c544bb
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <c6.l$a: java.lang.Object a(java.lang.String,java.security.Provider)>
		SHA-256: adba45cc74b0e3b0ab95bf652bc0f83f244618653909a4422cc4ab5edfa72736
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer22478)
		Method: <c6.a: void <init>(byte[],int)>
		SHA-256: 9897ec30bd3f0e3e0ae0980cda24c7587645c3151608f01082d1e7585ef0a158
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <c6.d: byte[] b(byte[],byte[])>
		SHA-256: e6b736376d5c63a48c71b7f0cc70e54f269e5fe5ee81c5152995dd6ab948794c
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <c6.b: byte[] b(byte[],byte[])>
		SHA-256: 54a406e68c5e5d26afa57cf55e2bd2381045257286f42e94150d14fa3b855852
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <c6.b: byte[] a(byte[],byte[])>
		SHA-256: ca733fbff339bede4703e56b81ed9174c168a0f859dae759148c367160322f13
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.b: javax.net.ssl.X509TrustManager n()>
		SHA-256: 1e76560ad12795a6cc994675d16bf86f7f735a9dfec4e34b41beba33b3218444
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Key
		Statement: $r4 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <c6.o: void <init>(java.lang.String,java.security.Key)>
		SHA-256: 2e295a3793dfa8e9916b2ce4aae3b39ab6f308086bf73cf0beeb1657ccf0b238
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <c6.l$a: java.lang.Object a(java.lang.String,java.security.Provider)>
		SHA-256: c23a6fcf5ef71915a2a79a56aabb5c0b4aff98d105945afbd43bdafe02a869e3
		Secure: false
	Object:
		Variable: varReplacer17838
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer17838)
		Method: <c6.d: byte[] b(byte[],byte[])>
		SHA-256: 2569cb2fefb163f67a6ada918dfd046039e64c03aace2503f927df386adbb036
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer26245)
		Method: <x5.c: boolean d(java.lang.String)>
		SHA-256: f75fff9e9031b399ac500b0e96b657b471086c6adbb9b44d7622205900cb4ff2
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r4.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer26271, $i0, $r3, varReplacer26272)
		Method: <x5.b: byte[] d(byte[],byte[])>
		SHA-256: 26abcf12ffaa031add73f68f15185042767f7d90f76737d40361be72fdd0acff
		Secure: false
	Object:
		Variable: varReplacer22478
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer22478)
		Method: <c6.a: void <init>(byte[],int)>
		SHA-256: 90ced4b151d2864dabfa819f6d3bce54a2c302ced19b65fd36e051d115fddb0a
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <t5.h: int e()>
		SHA-256: d939cba0dd509c8021f8fb1373b5bf24223b04a9e892ff93d644818bd3b21819
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8861)
		Method: <x5.b: byte[] c(byte[],byte[])>
		SHA-256: b59870adcf8f7c81bc2af9e9c84527bc0d73be2860530492fe2c7db4ca627430
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r1, $i1, $i0)
		Method: <v5.a: java.security.spec.AlgorithmParameterSpec c(byte[],int,int)>
		SHA-256: 6b325b9177ed6e8f086c7409ae87c603b02f0623f2948564e27566e39d3326e3
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <okhttp3.internal.platform.c: javax.net.ssl.X509TrustManager n()>
		SHA-256: 8034fb313c91aa2a1104beb617f548d7d75c2deae0b27d67adffe1da172ca704
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString d(java.lang.String)>
		SHA-256: 23396d4891553fbb60c48a03ad830d7984fa5845691f758640c2e1db1a87b2bb
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer28522)
		Method: <x5.c$a: void <init>()>
		SHA-256: 82140163a8e9aeb924f3586333cf703622eaf994a4f6a15bfcb15a7a8084669
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <g8.e: javax.net.ssl.X509TrustManager n()>
		SHA-256: b3fbf300d747daba3df8e411e58988e42463b7a28d6677cdaf9ead73f012296a
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer17769, $r2)
		Method: <okhttp3.internal.platform.a: javax.net.ssl.SSLContext l()>
		SHA-256: 1216bf53119b85d3c02428240472809ade378d5ecc2c525f4ed3703747b7921c
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer17771, $r2)
		Method: <okhttp3.internal.platform.c: javax.net.ssl.SSLContext l()>
		SHA-256: 78af99251d32812c8c865e39a6b285342df7a45bb6516e508d975913607731c4
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)
		Method: <c6.l$b: java.lang.Object a(java.lang.String,java.security.Provider)>
		SHA-256: 44e39627a201b862226d234744bcfbf4f66805006f092678c034410d647f6093
		Secure: false
	Object:
		Variable: varReplacer22480
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer22480)
		Method: <c6.n: void <init>(byte[])>
		SHA-256: 23d66a4e61a599509f65960b92a5f8d2f7dd06a5984eecae2c06bb76052048a3
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer8824)
		Method: <c6.d: byte[] a(byte[],byte[])>
		SHA-256: 621c1a3e3d6832a693588bf4640c71a9e8a0881c79462eccc3e43244f6c8d77c
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer22484)
		Method: <c6.c: void <init>(byte[])>
		SHA-256: 7021b39b572599bbd92d057ba2b079d63de0ac38c72baeea4e39ca419cf5dc66
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer17838)
		Method: <c6.d: byte[] b(byte[],byte[])>
		SHA-256: 54b57f53050e24c544122f2d2d55fe5de1c5676434bfe9b47e0553a44bc72a4
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer22496)
		Method: <c6.b: void <init>(byte[],int)>
		SHA-256: 9be47d23ef755fc5d4136f5c95f6de2641369f41b00ef0e647822ee200c46715
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.KeyGenerator
		Statement: $r8 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer12962, varReplacer12963)
		Method: <d.t: android.content.SharedPreferences a(java.lang.String)>
		SHA-256: ce0ce3813c3bf0a500948a1c30d38f25f527338345d9e18f656a5a8ca6ca94f6
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.cert.CertificateFactory
		Statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer27731)
		Method: <x7.d$b: java.util.List a(k8.i)>
		SHA-256: 7d766a3d2db81b023374ff110b4ee97937d304d9cd4265b3e9501b0c8df37970
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer22480)
		Method: <c6.n: void <init>(byte[])>
		SHA-256: 95e292ce18cca12ebd9724f200ff8a5f45ac7325007cace437cea1a1cf974e8a
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer17896)
		Method: <y5.b$a: java.lang.Object a(java.lang.Object)>
		SHA-256: d399781b22a2aa45705b6e8605dcf5cd2d396c2d651cf2a912e04d7e84e75f03
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyStore
		Statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer12966)
		Method: <d.t: android.content.SharedPreferences a(java.lang.String)>
		SHA-256: 8f5e887d5a565e54aa6214e0a282572fb939e788b83c9a120cc83a408cf8d57e
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <okio.ByteString: okio.ByteString d(java.lang.String)>
		SHA-256: 2588ad045029e86e5bc7ddc042c07ac18b50670653be412de1f9bf685fe5591a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.SegmentedByteString: okio.ByteString d(java.lang.String)>
		SHA-256: 35955cf95f6a70bbca84e9fa50f300106b94c14961029f24ee65f6290eb5933d
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <c6.a: void c(byte[],int,int,byte[],int,byte[],boolean)>
		SHA-256: 2e0d879cd6fa651bddf222dcd69161229ac1642012b9372a1361c3b7ad1efe60
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, varReplacer8860, $i0)
		Method: <x5.b: byte[] c(byte[],byte[])>
		SHA-256: ba9d66f538d58c4d4019ddd4332c7b293ac2bc053f76def0e8b526b77eec67c5
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer26271, $i0, $r3, varReplacer26272)
		Method: <x5.b: byte[] d(byte[],byte[])>
		SHA-256: e7f39cf39cff24a8db8f896c4c1a56f2f3060a53fa6986d6ba6487ebb3b4bd38
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.c: javax.net.ssl.X509TrustManager n()>
		SHA-256: a255d7df04c13d2e2b36be047671824d49f5fcbf9e06a39411bc892d0d93a200
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer22388, varReplacer22389)
		Method: <x5.c: void c(java.lang.String)>
		SHA-256: cd1c13401201ca03469eb9ef286177ffe0668ce6f8e8b6480cdcff4af8bccfdf
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <okio.SegmentedByteString: okio.ByteString d(java.lang.String)>
		SHA-256: 32b2c2d7df225293aff05efd8ba8ec5d4e12c8f6e4dea64a4da4197f87b7a0a6
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer12940, varReplacer12941)
		Method: <okhttp3.internal.platform.a: javax.net.ssl.X509TrustManager n()>
		SHA-256: 82192d6fa29d80e02ec4b20c7d27e2a0cea40ceca74b67546f1ae4c1078d607d
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <c6.l$b: java.lang.Object a(java.lang.String,java.security.Provider)>
		SHA-256: ac9ba5f9672ed43a09eee4f4935a5cfff2a8c6f951dbf33c603ca1820a60f05c
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <g8.e: javax.net.ssl.X509TrustManager n()>
		SHA-256: 2e08acbbb578841bb23a04139d2ceac83bf3a6132a94837f1199753b0b28748f
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer26270)
		Method: <x5.b: byte[] d(byte[],byte[])>
		SHA-256: 7096da6e809c28c937969f64e401dd99ff776c8fd29c92704e504928c8344ef4
		Secure: false
	Object:
		Variable: varReplacer17896
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer17896)
		Method: <y5.b$a: java.lang.Object a(java.lang.Object)>
		SHA-256: ec2ba118a29e94540bb22954f2dfa492faa0a8fe1ef4ab2f659205b2d85f5e3e
		Secure: false
	Object:
		Variable: varReplacer22484
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer22484)
		Method: <c6.c: void <init>(byte[])>
		SHA-256: 5f39afbaa09fb350eddb3221e2d4929829fe12e565803c337cfd6b84bbf94ee6
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <c6.o: void <init>(java.lang.String,java.security.Key)>
		SHA-256: 9d14a9699d7d296eb8e8ad62d78a10b2f5cfe64bef3320fbd2a701792f305ca7
		Secure: true

Findings in Java Class: okhttp3.internal.platform.b

	 in Method: javax.net.ssl.SSLSocketFactory m(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12951, $r6, varReplacer12951)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12951, $r6, varReplacer12951)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #866fc338e34730d2c8c312385da8cf36cf9504fe2cdaea9628c12d71b346f5d6)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer12954, $r2)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12951, $r6, varReplacer12951)


	 in Method: javax.net.ssl.SSLContext l()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #933638f7705e72a5cd9dcc4eed31099a12b3f01a02b2aa0a5de7cf17d1c544bb)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer17768, $r2)


	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer12936)


Findings in Java Class: d.t

	 in Method: android.content.SharedPreferences a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #8f5e887d5a565e54aa6214e0a282572fb939e788b83c9a120cc83a408cf8d57e)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer12966)


Findings in Java Class: g8.e

	 in Method: javax.net.ssl.SSLContext l()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f1941e06ec2a5e05d2d2d618552000d68d3ae76a714d22299473817689cd14f0)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer17766)


	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer12932)


	 in Method: javax.net.ssl.SSLSocketFactory m(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12949, $r10, varReplacer12949)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12949, $r10, varReplacer12949)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer12949, $r10, varReplacer12949)


Findings in Java Class: okhttp3.internal.platform.a

	 in Method: javax.net.ssl.SSLContext l()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #1216bf53119b85d3c02428240472809ade378d5ecc2c525f4ed3703747b7921c)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer17769, $r2)


	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer12937)


Findings in Java Class: c6.l$b

	 in Method: java.lang.Object a(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #44e39627a201b862226d234744bcfbf4f66805006f092678c034410d647f6093)
			First parameter (with value "AES/ECB/NoPadding") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #ac9ba5f9672ed43a09eee4f4935a5cfff2a8c6f951dbf33c603ca1820a60f05c)
			First parameter (with value "AES/ECB/NoPadding") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #ac9ba5f9672ed43a09eee4f4935a5cfff2a8c6f951dbf33c603ca1820a60f05c)
			First parameter (with value "AES/CTR/NoPadding") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #44e39627a201b862226d234744bcfbf4f66805006f092678c034410d647f6093)
			First parameter (with value "AES/CTR/NoPadding") should be any of {HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)


Findings in Java Class: c6.d

	 in Method: byte[] a(byte[],byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #44e39627a201b862226d234744bcfbf4f66805006f092678c034410d647f6093)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #ac9ba5f9672ed43a09eee4f4935a5cfff2a8c6f951dbf33c603ca1820a60f05c)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #adba45cc74b0e3b0ab95bf652bc0f83f244618653909a4422cc4ab5edfa72736)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #c23a6fcf5ef71915a2a79a56aabb5c0b4aff98d105945afbd43bdafe02a869e3)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer8824)


	 in Method: byte[] b(byte[],byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #44e39627a201b862226d234744bcfbf4f66805006f092678c034410d647f6093)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #ac9ba5f9672ed43a09eee4f4935a5cfff2a8c6f951dbf33c603ca1820a60f05c)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer17838)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #adba45cc74b0e3b0ab95bf652bc0f83f244618653909a4422cc4ab5edfa72736)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #c23a6fcf5ef71915a2a79a56aabb5c0b4aff98d105945afbd43bdafe02a869e3)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r9 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


Findings in Java Class: c6.n

	 in Method: void <init>(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #44e39627a201b862226d234744bcfbf4f66805006f092678c034410d647f6093)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #ac9ba5f9672ed43a09eee4f4935a5cfff2a8c6f951dbf33c603ca1820a60f05c)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer22482, $r2)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #adba45cc74b0e3b0ab95bf652bc0f83f244618653909a4422cc4ab5edfa72736)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #c23a6fcf5ef71915a2a79a56aabb5c0b4aff98d105945afbd43bdafe02a869e3)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer22480)


	 in Method: byte[] a(byte[],int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #44e39627a201b862226d234744bcfbf4f66805006f092678c034410d647f6093)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #ac9ba5f9672ed43a09eee4f4935a5cfff2a8c6f951dbf33c603ca1820a60f05c)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #adba45cc74b0e3b0ab95bf652bc0f83f244618653909a4422cc4ab5edfa72736)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #adba45cc74b0e3b0ab95bf652bc0f83f244618653909a4422cc4ab5edfa72736)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r7 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #c23a6fcf5ef71915a2a79a56aabb5c0b4aff98d105945afbd43bdafe02a869e3)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #c23a6fcf5ef71915a2a79a56aabb5c0b4aff98d105945afbd43bdafe02a869e3)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r7 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r7)


Findings in Java Class: c6.l$a

	 in Method: java.lang.Object a(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #adba45cc74b0e3b0ab95bf652bc0f83f244618653909a4422cc4ab5edfa72736)
			First parameter (with value "AES/ECB/NoPadding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c23a6fcf5ef71915a2a79a56aabb5c0b4aff98d105945afbd43bdafe02a869e3)
			First parameter (with value "AES/ECB/NoPadding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r2, $r1)


Findings in Java Class: y5.b$a

	 in Method: java.lang.Object a(java.lang.Object)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #d399781b22a2aa45705b6e8605dcf5cd2d396c2d651cf2a912e04d7e84e75f03)
			Second parameter (with value "HMAC") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer17896)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer17896)


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString d(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #23396d4891553fbb60c48a03ad830d7984fa5845691f758640c2e1db1a87b2bb)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: okio.SegmentedByteString

	 in Method: okio.ByteString d(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #35955cf95f6a70bbca84e9fa50f300106b94c14961029f24ee65f6290eb5933d)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #35955cf95f6a70bbca84e9fa50f300106b94c14961029f24ee65f6290eb5933d)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: x5.c

	 in Method: boolean d(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #f75fff9e9031b399ac500b0e96b657b471086c6adbb9b44d7622205900cb4ff2)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer26245)


Findings in Java Class: x7.d$b

	 in Method: java.util.List a(k8.i)
		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #7d766a3d2db81b023374ff110b4ee97937d304d9cd4265b3e9501b0c8df37970)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r10 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r9)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #7d766a3d2db81b023374ff110b4ee97937d304d9cd4265b3e9501b0c8df37970)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertificate, generateCertPath, generateCRL
			at statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer27731)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #7d766a3d2db81b023374ff110b4ee97937d304d9cd4265b3e9501b0c8df37970)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r10 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r9)


Findings in Java Class: x5.c$a

	 in Method: void <init>()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #82140163a8e9aeb924f3586333cf703622eaf994a4f6a15bfcb15a7a8084669)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer28522)


Findings in Java Class: c6.c

	 in Method: java.security.spec.AlgorithmParameterSpec c(byte[],int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer4122, $r0, $i0, $i1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r0, $i0, $i1)


	 in Method: void <init>(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer22484)


Findings in Java Class: c6.b

	 in Method: void <init>(byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer22496)


	 in Method: byte[] b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


	 in Method: byte[] a(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: v5.a

	 in Method: java.security.spec.AlgorithmParameterSpec c(byte[],int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r1, $i1, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer4117, $r1, $i1, $i0)


	 in Method: void <init>(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer22494)


Findings in Java Class: x5.b

	 in Method: byte[] c(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8862, $r1, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer8862, $r1, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer8864, $r2, varReplacer8865, varReplacer8866)


	 in Method: byte[] d(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer26266, $r5)


Findings in Java Class: c6.a

	 in Method: void c(byte[],int,int,byte[],int,byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


	 in Method: void <init>(byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer22478)


Findings in Java Class: okhttp3.internal.platform.c

	 in Method: javax.net.ssl.X509TrustManager n()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer12945)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 63

	CryptoAnalysis found the following violations. For details see description above.
	TypestateError: 12
	ConstraintError: 16
	RequiredPredicateError: 32
	IncompleteOperationError: 10
=====================================================================
