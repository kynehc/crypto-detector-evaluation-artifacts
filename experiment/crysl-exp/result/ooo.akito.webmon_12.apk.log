0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r26
		Type: byte[]
		Statement: $r26 = virtualinvoke $r21.<java.security.MessageDigest: byte[] digest(byte[])>($r26)
		Method: <org.apache.hc.client5.http.impl.auth.DigestScheme: java.lang.String createDigestResponse(org.apache.hc.core5.http.HttpRequest)>
		SHA-256: b3ca869f91784dc67f64ad22d1191cb93be794eb1f7b3dfcabddce11c3fe91f1
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer63359)
		Method: <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: 7dddfc624d310d9376e4b6cae20edfab47dd985a1c31108860f2030acbdb9eaa
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: a96b5c4940720f614ff024bce557b32cb3bf119f3666a750be2184fd24f8a784
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer63298)
		Method: <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl: java.security.MessageDigest getMD5()>
		SHA-256: 53291d5572320ed614c55546f8bf4c7e6f81b90ac93487f5ef431e133ddf7b9a
		Secure: false
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer32056)
		Method: <org.apache.hc.core5.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: b05f49aaa47dabf8ef524bd07dccc53dbbfe75cd72723a43b4a2b2045158f0af
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.hc.client5.http.impl.auth.HttpEntityDigester: void close()>
		SHA-256: 6e2f49082bf8a753b36c08d597efa7282d12c9a9b9a86cb704dfeec77e918e7c
		Secure: false
	Object:
		Variable: $r7
		Type: java.net.PasswordAuthentication
		Statement: specialinvoke $r7.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r4, $r8)
		Method: <org.apache.hc.client5.http.impl.auth.SystemDefaultCredentialsProvider: java.net.PasswordAuthentication getProxyCredentials(java.lang.String,org.apache.hc.client5.http.auth.AuthScope)>
		SHA-256: 54269faa48899bf6e1a1c59e5fe7efd8baaaeb98c5de10c15ef29445a85aa752
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: f6730166425cdde60c0ca0f7f01862a2b9705ad5b213be5cd1a19bc89976254d
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer62117)
		Method: <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 287afc0bb681586bcf86c5b0df1e9985b734132eb5111f1544c8e9023b5d630d
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer63312)
		Method: <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: aaa23afb80f880762f6111ee683751c6afbaa1e77fa379e13132700479814c0f
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer63329)
		Method: <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: f230ea4947c9b105b903f39a66d20298da51ba4ae589c4458181e0cdb4341d65
		Secure: false
	Object:
		Variable: varReplacer63359
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer63359)
		Method: <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: 266daac938d93254c5f090fa79ab2de408eb900f1c30086ed3b4387637f14404
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: a79a1700ae9d8d44f13ea218f751e7024f8f1222b1b2ae17cdbab7b56d352181
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r3)
		Method: <org.minidns.dnssec.algorithms.JavaSecSignatureVerifier: void <init>(java.lang.String,java.lang.String)>
		SHA-256: d6bb4b30cdbee7ff837ce1cc95136a9cd54ac9f5129c558d6320a140033e2fcc
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: 7f633aab27c580a5c0fc6c5d05050debe1a3f35a224ea39fdf4f1240ed29d56
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer63367)
		Method: <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: 1a8b5a636d83582b8f1474bc6272301e1418d38a5a7a8702aaed032b2b9ee6de
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <org.apache.hc.client5.http.impl.auth.DigestScheme: byte[] createCnonce()>
		SHA-256: da983c78ff630316b5d1ecba1ba6f591ea9c6789c6cf93b2b18c17a50112da60
		Secure: true
	Object:
		Variable: $r26
		Type: byte[]
		Statement: $r26 = virtualinvoke $r21.<java.security.MessageDigest: byte[] digest(byte[])>($r26)
		Method: <org.apache.hc.client5.http.impl.auth.DigestScheme: java.lang.String createDigestResponse(org.apache.hc.core5.http.HttpRequest)>
		SHA-256: b3ca869f91784dc67f64ad22d1191cb93be794eb1f7b3dfcabddce11c3fe91f1
		Secure: false
	Object:
		Variable: $r26
		Type: byte[]
		Statement: $r26 = virtualinvoke $r21.<java.security.MessageDigest: byte[] digest(byte[])>($r26)
		Method: <org.apache.hc.client5.http.impl.auth.DigestScheme: java.lang.String createDigestResponse(org.apache.hc.core5.http.HttpRequest)>
		SHA-256: b3ca869f91784dc67f64ad22d1191cb93be794eb1f7b3dfcabddce11c3fe91f1
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r6.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <org.minidns.dnssec.algorithms.JavaSecSignatureVerifier: boolean verify(byte[],org.minidns.record.RRSIG,org.minidns.record.DNSKEY)>
		SHA-256: 5775280e2a1c202d464c06a8d7bea1e2d607f943ed7aff49ad5194891ec02515
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Cipher
		Statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer64416)
		Method: <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl: byte[] lmHash(char[])>
		SHA-256: e1a0e66c2e15ec28e208cced5c02f6260e23803b2b23758be032108b21d8418f
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>
		SHA-256: 87142a8c4369ab14d23fa8690b807f0d900b1807831c8c0f8e6b4de4b8735e3b
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $z0 = virtualinvoke $r6.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <org.minidns.dnssec.algorithms.JavaSecSignatureVerifier: boolean verify(byte[],org.minidns.record.RRSIG,org.minidns.record.DNSKEY)>
		SHA-256: 7f139298b9cb634995cdca517569eeb41749114a45f34790f4316e0a82c95519
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <org.minidns.dnssec.algorithms.JavaSecDigestCalculator: void <init>(java.lang.String)>
		SHA-256: 27f10d36f956bb46cbfe64756f259ad7962bc65acc218ac50caa3410dcd06af5
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.minidns.AbstractDnsClient: void <init>(org.minidns.DnsCache)>
		SHA-256: b16aedd2b5a002c3f21fc519f65ffc3b24d3449a6b202f6221cca4a80b8638eb
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer62118)
		Method: <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: e845fd20b6c4afb02fbd9649340c184eef3cc6eb27e6f3d8718134ff8b055a61
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>
		SHA-256: d5cf1f8de9a5f17cad5006e43f64e63b02f8f56706a9e139ea0baeb6f7532b60
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer51221)
		Method: <org.minidns.AbstractDnsClient: void <init>(org.minidns.DnsCache)>
		SHA-256: cc02a1714c6b96d6ff9823e6bb8aa8168cb6873cd28dba275c947119f21a9e10
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r3, varReplacer62924)
		Method: <org.minidns.dnssec.algorithms.EcgostSignatureVerifier: void <clinit>()>
		SHA-256: f5ca3c3187d5ac49492f21e51db1ab199fa72bf95f763cbfca455ffc2d6dc2ab
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: 680c47ea8368fb5330a6512f392b4c24181a0f8e9f968ac96396d96fdc643e03
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.cert.CertificateFactory
		Statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer61402)
		Method: <okhttp3.Cache$Entry: java.util.List readCertificateList(okio.BufferedSource)>
		SHA-256: d3aec7382b63c396dd4d3b670d7078db32826805ee79039c6eaf9d4e13935e9e
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: $r3 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer57022)
		Method: <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl: void <clinit>()>
		SHA-256: 5cf14ef6519d93b8e0e9eadc4fbc9b60cb95a872b4d71677161ddaa592952ae2
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer63328)
		Method: <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: e4cea888b0b648060544b84a76516ed5363c08cbf86e914e5f955160549fa588
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e
		Secure: false
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r3)
		Method: <org.minidns.dnssec.algorithms.JavaSecSignatureVerifier: void <init>(java.lang.String,java.lang.String)>
		SHA-256: 22e74f537b4fa4ebe6c0554ffcb237888613831bfc374c53ea2501d0e35bf0bb
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.hc.client5.http.impl.auth.DigestScheme: byte[] createCnonce()>
		SHA-256: 34b90ca57f12cba713dc111e2b2b031c6dab102d938f19a19c768b2bf8ac8e5d
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r5)
		Method: <org.minidns.dnssec.algorithms.JavaSecSignatureVerifier: boolean verify(byte[],org.minidns.record.RRSIG,org.minidns.record.DNSKEY)>
		SHA-256: 992ff7cd83990bd86af65ca5aca1832f7e56d10c9e7fe4dfba6fa71e37f3b47
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r3, $r8, $r6, varReplacer65224)
		Method: <org.minidns.dnssec.algorithms.EcdsaSignatureVerifier: void <init>(java.math.BigInteger[],int,java.lang.String)>
		SHA-256: ebbd17759b6fa78794620f457fa96ad8e37bdd4347ab8a61c3dda37f26f225d7
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer52070)
		Method: <com.bumptech.glide.load.engine.cache.SafeKeyGenerator$1: com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer create()>
		SHA-256: b827bc005c94a7255e89da607089f67d288dcac8775d705026d2b8f5e653e8e
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <org.apache.hc.client5.http.impl.auth.DigestScheme: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 3bcbf4d912455255294e9bee4d91f33f3fa55dd4a67dc970c48252366cf97c1f
		Secure: false
	Object:
		Variable: $r26
		Type: byte[]
		Statement: $r26 = virtualinvoke $r21.<java.security.MessageDigest: byte[] digest(byte[])>($r26)
		Method: <org.apache.hc.client5.http.impl.auth.DigestScheme: java.lang.String createDigestResponse(org.apache.hc.core5.http.HttpRequest)>
		SHA-256: b3ca869f91784dc67f64ad22d1191cb93be794eb1f7b3dfcabddce11c3fe91f1
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 8dda2f10cd4911a51ea6f84d756034bbd2b170b00e8eb73d84894dc35d4275e0
		Secure: false
	Object:
		Variable: varReplacer62118
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer62118)
		Method: <org.apache.hc.client5.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 7af9f82d8bc66c74a0c3bb4d09279c21b03c9f6ef69b7d7523b622ebc83f8a5a
		Secure: false

Findings in Java Class: org.apache.hc.core5.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createDefault()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer32057, varReplacer32057, varReplacer32057)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer32057, varReplacer32057, varReplacer32057)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer32057, varReplacer32057, varReplacer32057)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #b05f49aaa47dabf8ef524bd07dccc53dbbfe75cd72723a43b4a2b2045158f0af)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer32056)


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: com.google.android.material.tabs.TabLayout$TabView

	 in Method: void update()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b827bc005c94a7255e89da607089f67d288dcac8775d705026d2b8f5e653e8e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r13 = staticinvoke <com.google.android.material.tabs.TabLayout$Tab: java.lang.CharSequence access$200(com.google.android.material.tabs.TabLayout$Tab)>($r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b827bc005c94a7255e89da607089f67d288dcac8775d705026d2b8f5e653e8e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r13 = staticinvoke <com.google.android.material.tabs.TabLayout$Tab: java.lang.CharSequence access$200(com.google.android.material.tabs.TabLayout$Tab)>($r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b827bc005c94a7255e89da607089f67d288dcac8775d705026d2b8f5e653e8e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r9 = virtualinvoke $r1.<com.google.android.material.tabs.TabLayout$Tab: android.graphics.drawable.Drawable getIcon()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b827bc005c94a7255e89da607089f67d288dcac8775d705026d2b8f5e653e8e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r2 = virtualinvoke $r1.<com.google.android.material.tabs.TabLayout$Tab: android.graphics.drawable.Drawable getIcon()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b827bc005c94a7255e89da607089f67d288dcac8775d705026d2b8f5e653e8e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = r0.<com.google.android.material.tabs.TabLayout$TabView: com.google.android.material.tabs.TabLayout$Tab tab>

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b827bc005c94a7255e89da607089f67d288dcac8775d705026d2b8f5e653e8e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $z0 = virtualinvoke $r1.<com.google.android.material.tabs.TabLayout$Tab: boolean isSelected()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b827bc005c94a7255e89da607089f67d288dcac8775d705026d2b8f5e653e8e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = virtualinvoke $r1.<com.google.android.material.tabs.TabLayout$Tab: android.view.View getCustomView()>()


Findings in Java Class: org.apache.hc.client5.http.impl.auth.DigestScheme

	 in Method: java.security.MessageDigest createMessageDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)


Findings in Java Class: org.apache.hc.client5.http.impl.auth.HttpEntityDigester

	 in Method: void write(byte[],int,int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd)
			Third parameter (with value 0)Variable preLenmust be  greater than 0
			at statement: virtualinvoke $r2.<java.security.MessageDigest: void update(byte[],int,int)>($r1, $i1, $i0)


	 in Method: void close()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: okhttp3.Cache$Entry

	 in Method: java.util.List readCertificateList(okio.BufferedSource)
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #d3aec7382b63c396dd4d3b670d7078db32826805ee79039c6eaf9d4e13935e9e)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer61402)

		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #d3aec7382b63c396dd4d3b670d7078db32826805ee79039c6eaf9d4e13935e9e)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #d3aec7382b63c396dd4d3b670d7078db32826805ee79039c6eaf9d4e13935e9e)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCRL, java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)
			at statement: $r9 = virtualinvoke $r5.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8)


Findings in Java Class: org.apache.hc.client5.http.impl.auth.SystemDefaultCredentialsProvider

	 in Method: java.net.PasswordAuthentication getProxyCredentials(java.lang.String,org.apache.hc.client5.http.auth.AuthScope)
		NeverTypeOfError violating CrySL rule for java.net.PasswordAuthentication (on Object #54269faa48899bf6e1a1c59e5fe7efd8baaaeb98c5de10c15ef29445a85aa752)
			Second parameter should never be of type java.lang.String.
			at statement: specialinvoke $r7.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r4, $r8)

		HardCodedError violating CrySL rule for java.net.PasswordAuthentication (on Object #54269faa48899bf6e1a1c59e5fe7efd8baaaeb98c5de10c15ef29445a85aa752)
			Second parameter should never be hardcoded.
			at statement: specialinvoke $r7.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r4, $r8)

		NeverTypeOfError violating CrySL rule for java.net.PasswordAuthentication (on Object #54269faa48899bf6e1a1c59e5fe7efd8baaaeb98c5de10c15ef29445a85aa752)
			Second parameter should never be of type java.lang.String.
			at statement: specialinvoke $r7.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r4, $r8)

		HardCodedError violating CrySL rule for java.net.PasswordAuthentication (on Object #54269faa48899bf6e1a1c59e5fe7efd8baaaeb98c5de10c15ef29445a85aa752)
			Second parameter should never be hardcoded.
			at statement: specialinvoke $r7.<java.net.PasswordAuthentication: void <init>(java.lang.String,char[])>($r4, $r8)


Findings in Java Class: org.apache.hc.client5.http.impl.auth.NTLMEngineImpl

	 in Method: byte[] RC4(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #e845fd20b6c4afb02fbd9649340c184eef3cc6eb27e6f3d8718134ff8b055a61)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer62118)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #e845fd20b6c4afb02fbd9649340c184eef3cc6eb27e6f3d8718134ff8b055a61)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer62118)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #287afc0bb681586bcf86c5b0df1e9985b734132eb5111f1544c8e9023b5d630d)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #287afc0bb681586bcf86c5b0df1e9985b734132eb5111f1544c8e9023b5d630d)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer62117)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #e845fd20b6c4afb02fbd9649340c184eef3cc6eb27e6f3d8718134ff8b055a61)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer62118)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer62116, $r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer62118)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #e845fd20b6c4afb02fbd9649340c184eef3cc6eb27e6f3d8718134ff8b055a61)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer62118)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #e845fd20b6c4afb02fbd9649340c184eef3cc6eb27e6f3d8718134ff8b055a61)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer62118)


	 in Method: java.security.MessageDigest getMD5()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #53291d5572320ed614c55546f8bf4c7e6f81b90ac93487f5ef431e133ddf7b9a)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer63298)


	 in Method: java.security.Key createDESKey(byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer63359)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #7dddfc624d310d9376e4b6cae20edfab47dd985a1c31108860f2030acbdb9eaa)
			Second parameter (with value "DES") should be any of {AES, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer63359)


	 in Method: byte[] lmResponse(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1a8b5a636d83582b8f1474bc6272301e1418d38a5a7a8702aaed032b2b9ee6de)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer63367)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer63361, $r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #1a8b5a636d83582b8f1474bc6272301e1418d38a5a7a8702aaed032b2b9ee6de)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


	 in Method: byte[] lmHash(char[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e1a0e66c2e15ec28e208cced5c02f6260e23803b2b23758be032108b21d8418f)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer64416)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer64417, $r5)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #e1a0e66c2e15ec28e208cced5c02f6260e23803b2b23758be032108b21d8418f)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)


Findings in Java Class: org.apache.hc.client5.http.impl.auth.NTLMEngineImpl$CipherGen

	 in Method: byte[] getLanManagerSessionKey()
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer63335, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f230ea4947c9b105b903f39a66d20298da51ba4ae589c4458181e0cdb4341d65)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer63329)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #f230ea4947c9b105b903f39a66d20298da51ba4ae589c4458181e0cdb4341d65)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #e4cea888b0b648060544b84a76516ed5363c08cbf86e914e5f955160549fa588)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)


Findings in Java Class: org.minidns.dnssec.algorithms.JavaSecDigestCalculator

	 in Method: void <init>(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #27f10d36f956bb46cbfe64756f259ad7962bc65acc218ac50caa3410dcd06af5)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


Findings in Java Class: org.minidns.dnssec.algorithms.AlgorithmMap

	 in Method: void <init>()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #27f10d36f956bb46cbfe64756f259ad7962bc65acc218ac50caa3410dcd06af5)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8)


Findings in Java Class: org.minidns.dnssec.algorithms.JavaSecSignatureVerifier

	 in Method: void <init>(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #d6bb4b30cdbee7ff837ce1cc95136a9cd54ac9f5129c558d6320a140033e2fcc)
			First parameter (with value "ECGOST3410") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r3)


	 in Method: boolean verify(byte[],org.minidns.record.RRSIG,org.minidns.record.DNSKEY)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r6.<java.security.Signature: void initVerify(java.security.PublicKey)>($r4)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 44

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 14
	TypestateError: 7
	HardCodedError: 2
	RequiredPredicateError: 10
	IncompleteOperationError: 10
	NeverTypeOfError: 6
=====================================================================
