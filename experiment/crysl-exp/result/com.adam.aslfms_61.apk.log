0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r79
		Type: java.security.SecureRandom
		Statement: specialinvoke $r79.<java.security.SecureRandom: void <init>()>()
		Method: <com.adam.aslfms.service.Scrobbler: void scrobbleCommit(com.adam.aslfms.service.Handshaker$HandshakeResult,com.adam.aslfms.util.Track[])>
		SHA-256: eecc59f75a20bcb3257c4501c0013d030faba4d018cc5360b56e384cf740a35b
		Secure: true
	Object:
		Variable: $r33
		Type: javax.net.ssl.SSLContext
		Statement: $r33 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4348)
		Method: <com.adam.aslfms.service.NPNotifier: void notifyNowPlaying(com.adam.aslfms.util.Track,com.adam.aslfms.service.Handshaker$HandshakeResult)>
		SHA-256: eb206bc3d9be0951b42aea5fc53ada490f4074049a243160f262f8ac05a3fc2c
		Secure: false
	Object:
		Variable: $r44
		Type: javax.net.ssl.SSLContext
		Statement: $r44 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4448)
		Method: <com.adam.aslfms.service.Scrobbler: void scrobbleCommit(com.adam.aslfms.service.Handshaker$HandshakeResult,com.adam.aslfms.util.Track[])>
		SHA-256: 7f210772c59a3c48a29b37e90857c210fdffcb1215759da9023b440649f40437
		Secure: false
	Object:
		Variable: $r31
		Type: javax.net.ssl.SSLContext
		Statement: $r31 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2841)
		Method: <com.adam.aslfms.service.Handshaker: com.adam.aslfms.service.Handshaker$HandshakeResult handshake()>
		SHA-256: 838cd71e62df188982b04d18814a587efd3e8fa1940c6622ff0a95453851b095
		Secure: false
	Object:
		Variable: $r68
		Type: java.security.SecureRandom
		Statement: specialinvoke $r68.<java.security.SecureRandom: void <init>()>()
		Method: <com.adam.aslfms.service.NPNotifier: void notifyNowPlaying(com.adam.aslfms.util.Track,com.adam.aslfms.service.Handshaker$HandshakeResult)>
		SHA-256: e938612c60a006d2d73fd8fedd577cfbe2a40e0e3f10ee6504c1f1656fcc1c0c
		Secure: true
	Object:
		Variable: $r61
		Type: java.security.SecureRandom
		Statement: specialinvoke $r61.<java.security.SecureRandom: void <init>()>()
		Method: <com.adam.aslfms.service.Handshaker: com.adam.aslfms.service.Handshaker$HandshakeResult handshake()>
		SHA-256: 9ab05b4d07eccf05df198ad7d65dfd6ca8bb02bfa1db20c117de58f3c56c575d
		Secure: true
	Object:
		Variable: $r33
		Type: javax.net.ssl.SSLContext
		Statement: $r33 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4360)
		Method: <com.adam.aslfms.service.NPNotifier: void notifyNowPlaying(com.adam.aslfms.util.Track,com.adam.aslfms.service.Handshaker$HandshakeResult)>
		SHA-256: 5ede5c595272efc3307f4f14d7c92d6bf8eff64c3a8950314c6c19fc59205de7
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4248)
		Method: <com.adam.aslfms.util.AppSettings: javax.crypto.SecretKey getSecKey()>
		SHA-256: 37548ffe9d93670f9790f46bd5ccb1ce321f952940937b0562e59392a526a685
		Secure: false
	Object:
		Variable: $r79
		Type: java.security.SecureRandom
		Statement: specialinvoke $r79.<java.security.SecureRandom: void <init>()>()
		Method: <com.adam.aslfms.service.Scrobbler: void scrobbleCommit(com.adam.aslfms.service.Handshaker$HandshakeResult,com.adam.aslfms.util.Track[])>
		SHA-256: eecc59f75a20bcb3257c4501c0013d030faba4d018cc5360b56e384cf740a35b
		Secure: true
	Object:
		Variable: $r44
		Type: javax.net.ssl.SSLContext
		Statement: $r44 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4470)
		Method: <com.adam.aslfms.service.Scrobbler: void scrobbleCommit(com.adam.aslfms.service.Handshaker$HandshakeResult,com.adam.aslfms.util.Track[])>
		SHA-256: 541e39686210e552862f588b29e0028ced8b13f635d4a21b7dc322081deb3b61
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)
		Method: <com.adam.aslfms.util.AppSettings: javax.crypto.SecretKey getSecKey()>
		SHA-256: 77e4efe1633b26e12f422547495891d38958266864130cd68c7e6c9a827e71fc
		Secure: false
	Object:
		Variable: $r68
		Type: java.security.SecureRandom
		Statement: specialinvoke $r68.<java.security.SecureRandom: void <init>()>()
		Method: <com.adam.aslfms.service.NPNotifier: void notifyNowPlaying(com.adam.aslfms.util.Track,com.adam.aslfms.service.Handshaker$HandshakeResult)>
		SHA-256: e938612c60a006d2d73fd8fedd577cfbe2a40e0e3f10ee6504c1f1656fcc1c0c
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2769)
		Method: <com.adam.aslfms.util.AppSettings: java.lang.String rcnvK(java.lang.String)>
		SHA-256: a7172c8f92d85c15d8e57185f3d76f597331340367bce18b1bb03bf0689fde18
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.adam.aslfms.util.MD5: java.lang.String getHashString(java.lang.String)>
		SHA-256: 60ef20c5991e604fa2cf2e9a8427232e0a4bd28361ef55dcb739c387167e1dcf
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1927)
		Method: <com.adam.aslfms.util.MD5: java.lang.String getHashString(java.lang.String)>
		SHA-256: 57b137dbdc85617a59bdf0f3c0c764faf60e8a8c290f56c44c8b7f896f9c152e
		Secure: false

Findings in Java Class: com.adam.aslfms.util.MD5

	 in Method: java.lang.String getHashString(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #57b137dbdc85617a59bdf0f3c0c764faf60e8a8c290f56c44c8b7f896f9c152e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1927)


Findings in Java Class: com.adam.aslfms.util.AppSettings

	 in Method: java.lang.String rcnvK(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2770, $r4)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #a7172c8f92d85c15d8e57185f3d76f597331340367bce18b1bb03bf0689fde18)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a7172c8f92d85c15d8e57185f3d76f597331340367bce18b1bb03bf0689fde18)
			First parameter (with value "DES") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2769)


	 in Method: javax.crypto.SecretKey getSecKey()
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #37548ffe9d93670f9790f46bd5ccb1ce321f952940937b0562e59392a526a685)
			First parameter (with value "DES") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer4248)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r6 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r2)


Findings in Java Class: com.adam.aslfms.service.Handshaker

	 in Method: com.adam.aslfms.service.Handshaker$HandshakeResult handshake()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r31.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2828, varReplacer2828, $r32)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r31.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2828, varReplacer2828, $r32)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #838cd71e62df188982b04d18814a587efd3e8fa1940c6622ff0a95453851b095)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r31 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2841)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r31.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2828, varReplacer2828, $r32)


Findings in Java Class: com.adam.aslfms.service.NPNotifier

	 in Method: void notifyNowPlaying(com.adam.aslfms.util.Track,com.adam.aslfms.service.Handshaker$HandshakeResult)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #eb206bc3d9be0951b42aea5fc53ada490f4074049a243160f262f8ac05a3fc2c)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r33 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4348)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r33.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4416, varReplacer4416, $r34)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r33.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4416, varReplacer4416, $r34)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r33.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4416, varReplacer4416, $r34)


Findings in Java Class: com.adam.aslfms.service.Scrobbler

	 in Method: void scrobbleCommit(com.adam.aslfms.service.Handshaker$HandshakeResult,com.adam.aslfms.util.Track[])
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r44.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4536, varReplacer4536, $r45)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r44.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4536, varReplacer4536, $r45)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #7f210772c59a3c48a29b37e90857c210fdffcb1215759da9023b440649f40437)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r44 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4448)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r44.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4536, varReplacer4536, $r45)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 15

	CryptoAnalysis found the following violations. For details see description above.
	TypestateError: 1
	RequiredPredicateError: 11
	ConstraintError: 6
=====================================================================
