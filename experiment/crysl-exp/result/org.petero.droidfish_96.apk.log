0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $i3
		Type: int
		Statement: $i3 = virtualinvoke $r4.<java.util.Random: int nextInt(int)>($i4)
		Method: <chess.ComputerPlayer: chess.Move findSemiRandomMove(chess.Search,chess.MoveGen$MoveList)>
		SHA-256: ab238375843a521ade67565deff0959e65fc44fa16248e6c4035829660440884
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.petero.droidfish.book.DroidBook: void <init>()>
		SHA-256: 1154bea71a9f4bc392e016eddd746327a893a72cf8400c0c1279ca95de44d813
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <chess.Position: long getRandomHashVal(int)>
		SHA-256: 95acd7bab717685fc9e4d939ab91b1a9677d160c700ed2f6a6f1292fb8facf9f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2179)
		Method: <chess.Position: long getRandomHashVal(int)>
		SHA-256: edce381282368d76cf9ab1e735c061f97c0a6fb46b68157f920be55dc7e71f36
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer169)
		Method: <org.petero.droidfish.gamelogic.Position: long getRandomHashVal(int)>
		SHA-256: 4e0b14b27fe2b635688caa3e334c2dda8f979153977acd65a5d0fe861f216258
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <org.petero.droidfish.gamelogic.Position: long getRandomHashVal(int)>
		SHA-256: 95acd7bab717685fc9e4d939ab91b1a9677d160c700ed2f6a6f1292fb8facf9f
		Secure: false
	Object:
		Variable: $r13
		Type: byte[]
		Statement: $r13 = virtualinvoke $r12.<java.security.MessageDigest: byte[] digest(byte[])>($r13)
		Method: <org.petero.droidfish.engine.InternalStockFish: long computeAssetsCheckSum(java.lang.String)>
		SHA-256: cabb57f82d7580ce552b16fdebfb964aaa641afbfbef45cd081878c34092e7cf
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <chess.ComputerPlayer: chess.Move findSemiRandomMove(chess.Search,chess.MoveGen$MoveList)>
		SHA-256: 115834c413aa4ea38ca1d7fe295e865fb4b9c3994fe72af99cd39301dec41453
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.MessageDigest
		Statement: $r12 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18042)
		Method: <org.petero.droidfish.engine.InternalStockFish: long computeAssetsCheckSum(java.lang.String)>
		SHA-256: 5854b31aa7031286d0aa020228097fc0f9c2b3f004cadb839a9990283304498a
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.SecureRandom
		Statement: specialinvoke $r10.<java.security.SecureRandom: void <init>()>()
		Method: <chess.Book: void initBook()>
		SHA-256: 68c44b7122c212b17b9666d40d937c713ba218a57dbe9206f0eafc68e68a7320
		Secure: false

Findings in Java Class: org.petero.droidfish.gamelogic.Position

	 in Method: long getRandomHashVal(int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4e0b14b27fe2b635688caa3e334c2dda8f979153977acd65a5d0fe861f216258)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer169)


Findings in Java Class: chess.Position

	 in Method: long getRandomHashVal(int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #edce381282368d76cf9ab1e735c061f97c0a6fb46b68157f920be55dc7e71f36)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2179)


Findings in Java Class: org.petero.droidfish.engine.InternalStockFish

	 in Method: long computeAssetsCheckSum(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5854b31aa7031286d0aa020228097fc0f9c2b3f004cadb839a9990283304498a)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r12 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18042)


Findings in Java Class: chess.ComputerPlayer

	 in Method: chess.Move findSemiRandomMove(chess.Search,chess.MoveGen$MoveList)
		RequiredPredicateError violating CrySL rule for java.security.SecureRandom
			First parameter was not properly generated as randomized
			at statement: virtualinvoke $r4.<java.util.Random: void setSeed(long)>($l2)


Findings in Java Class: chess.Book

	 in Method: void initBook()
		RequiredPredicateError violating CrySL rule for java.security.SecureRandom
			First parameter was not properly generated as randomized
			at statement: virtualinvoke $r10.<java.util.Random: void setSeed(long)>($l3)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 10

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 2
	ConstraintError: 3
=====================================================================
