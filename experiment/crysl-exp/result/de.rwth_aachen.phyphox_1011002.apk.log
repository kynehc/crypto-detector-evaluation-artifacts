0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r4)
		Method: <org.apache.poi.poifs.crypt.CryptoFunctions: javax.crypto.Cipher getCipher(java.security.Key,org.apache.poi.poifs.crypt.CipherAlgorithm,org.apache.poi.poifs.crypt.ChainingMode,byte[],int,java.lang.String)>
		SHA-256: fe54f3722dfadb02449ab5b749199e7bf880028e325edc51b3e5915ab99c58bd
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer17492)
		Method: <de.rwth_aachen.phyphox.NetworkConnection.Mqtt.MqttHelper: void tlsSetup(de.rwth_aachen.phyphox.NetworkConnection.Mqtt.MqttService,android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: f6387b85b6d6abc955d44e3474c462ced228cb2bb2610a1d79f88d3be81375ed
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <org.apache.poi.poifs.crypt.CryptoFunctions: java.security.MessageDigest getMessageDigest(org.apache.poi.poifs.crypt.HashAlgorithm)>
		SHA-256: 8a2704d57dfabba753b6a53112f6e0c757f617ef52d930bb5fa81297432981f5
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <org.apache.poi.poifs.crypt.CryptoFunctions: javax.crypto.Cipher getCipher(java.security.Key,org.apache.poi.poifs.crypt.CipherAlgorithm,org.apache.poi.poifs.crypt.ChainingMode,byte[],int,java.lang.String)>
		SHA-256: 8ce26a85430fbf7593f30d59a11bf86e9c5eae41ece68f7cf0283a9455db9a7c
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketHandshake: byte[] sha1(java.lang.String)>
		SHA-256: 6eda339e373514871fdcaa5a3395bb2434b6fe5d0b32f9405d0cd6757160c015
		Secure: false
	Object:
		Variable: $r24
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r24 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>($r11, $r12)
		Method: <org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 36aad3a7128ef6c5c4c8e28147cfe970adbc54360b24bb8da366ddc36b69fda8
		Secure: false
	Object:
		Variable: $r24
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r24 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r11)
		Method: <org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 347ff217c58c2774000268375cf6ecf17ac33de018df1c83b23e61eaf9dfc2fb
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getDigest(java.lang.String)>
		SHA-256: e941edb5217c879acd87fed3366e0d56fa56f48ce569721201e5ad4173f69b53
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLContext
		Statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r4, $r3)
		Method: <org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 2de0dbcb962ff3cb3e0d9dc8e9469638e8762c9aa5d9bef5cf875912fda1093
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r4)
		Method: <org.apache.poi.poifs.crypt.CryptoFunctions: javax.crypto.Cipher getCipher(java.security.Key,org.apache.poi.poifs.crypt.CipherAlgorithm,org.apache.poi.poifs.crypt.ChainingMode,byte[],int,java.lang.String)>
		SHA-256: fe54f3722dfadb02449ab5b749199e7bf880028e325edc51b3e5915ab99c58bd
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r1, varReplacer16939)
		Method: <org.apache.poi.poifs.crypt.CryptoFunctions: java.security.MessageDigest getMessageDigest(org.apache.poi.poifs.crypt.HashAlgorithm)>
		SHA-256: c7ae4170e17561edfe7f423cc333aecaaf9da73ba818e822e3d33700a983143c
		Secure: true
	Object:
		Variable: $r10
		Type: javax.net.ssl.TrustManager[]
		Statement: $r10 = virtualinvoke $r8.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <de.rwth_aachen.phyphox.NetworkConnection.Mqtt.MqttHelper: void tlsSetup(de.rwth_aachen.phyphox.NetworkConnection.Mqtt.MqttService,android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: cf3249a1d6a4274667706a1aa4245d937fbbb1648c409f389c48349bc8a7d4f2
		Secure: false
	Object:
		Variable: $r10
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, $r10)
		Method: <org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIDecryptor: javax.crypto.Cipher initCipherForBlock(javax.crypto.Cipher,int,org.apache.poi.poifs.crypt.EncryptionInfoBuilder,javax.crypto.SecretKey,int)>
		SHA-256: 7e4d65799bb40c2b8dc7c7c9417f29c3b465fa602ea63c8a23f6e9730c61798d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.Key
		Statement: $r5 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <org.apache.poi.poifs.crypt.CryptoFunctions: javax.crypto.Cipher getCipher(java.security.Key,org.apache.poi.poifs.crypt.CipherAlgorithm,org.apache.poi.poifs.crypt.ChainingMode,byte[],int,java.lang.String)>
		SHA-256: 89787cca2ff69b187601127b90dc369e3672ab268db2b0f5522338f65ab6b774
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, $r8)
		Method: <org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4Decryptor: javax.crypto.Cipher initCipherForBlock(javax.crypto.Cipher,int,org.apache.poi.poifs.crypt.EncryptionInfoBuilder,javax.crypto.SecretKey,int)>
		SHA-256: 5e2b13ca67fb38264a779d92b8958e5c114b1162c674741cd3bdd65781d159ad
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $i1 = virtualinvoke $r1.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[])>($r2, varReplacer20310, $i1, $r2)
		Method: <org.apache.poi.poifs.crypt.ChunkedCipherOutputStream: void writeChunk()>
		SHA-256: 2f2558cefcd703640b29c91ddcf6ccd7621af2daea2ba65b42d74e0d38b08a40
		Secure: false
	Object:
		Variable: $r14
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)
		Method: <org.apache.poi.poifs.crypt.CryptoFunctions: javax.crypto.Cipher getCipher(java.security.Key,org.apache.poi.poifs.crypt.CipherAlgorithm,org.apache.poi.poifs.crypt.ChainingMode,byte[],int,java.lang.String)>
		SHA-256: e131e43310291f91c5e3e21e621fd57ef068b83db2afee175f286e910b36aaa3
		Secure: false
	Object:
		Variable: $r8
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, $r8)
		Method: <org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4Decryptor: javax.crypto.Cipher initCipherForBlock(javax.crypto.Cipher,int,org.apache.poi.poifs.crypt.EncryptionInfoBuilder,javax.crypto.SecretKey,int)>
		SHA-256: d2f7ec6115113bac1692b21cb3bb51202dadc0f8870740b41f1ade61bd72048b
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.KeyStore
		Statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r8)
		Method: <org.apache.poi.hssf.record.crypto.Biff8RC4Key: void initCipherForBlock(javax.crypto.Cipher,int)>
		SHA-256: fd371dec244f415cb7fb3bd1d014a95b3965e6184c0982d11cd8e321a9e73171
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <org.apache.poi.poifs.crypt.CryptoFunctions: javax.crypto.Cipher getCipher(java.security.Key,org.apache.poi.poifs.crypt.CipherAlgorithm,org.apache.poi.poifs.crypt.ChainingMode,byte[],int,java.lang.String)>
		SHA-256: 8ce26a85430fbf7593f30d59a11bf86e9c5eae41ece68f7cf0283a9455db9a7c
		Secure: true
	Object:
		Variable: $r14
		Type: java.security.KeyStore
		Statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.Key
		Statement: $r5 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <org.apache.poi.poifs.crypt.CryptoFunctions: javax.crypto.Cipher getCipher(java.security.Key,org.apache.poi.poifs.crypt.CipherAlgorithm,org.apache.poi.poifs.crypt.ChainingMode,byte[],int,java.lang.String)>
		SHA-256: 89787cca2ff69b187601127b90dc369e3672ab268db2b0f5522338f65ab6b774
		Secure: true
	Object:
		Variable: $r8
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r8 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r7)
		Method: <de.rwth_aachen.phyphox.NetworkConnection.Mqtt.MqttHelper: void tlsSetup(de.rwth_aachen.phyphox.NetworkConnection.Mqtt.MqttService,android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: db9e65438218bdf99fe8c7e1d7365261e735fc907dcca313cd5f52d818ad208e
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.KeyManager[]
		Statement: $r17 = virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: cd0e3b76762bcc893e3b8c71b838de88e9ec2eaaec5c03709c5f4ebb7add121e
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r11)
		Method: <org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 3502fa758305a1dec42a6535b8ce8189f7707f9bdc917efceea97f5a2943e84d
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIDecryptor: javax.crypto.Cipher initCipherForBlock(javax.crypto.Cipher,int,org.apache.poi.poifs.crypt.EncryptionInfoBuilder,javax.crypto.SecretKey,int)>
		SHA-256: ecdc658878df476b8adf35dd1b05fb0d6e6d22b873c98312af9bccc9538f4c7b
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] md5(byte[])>
		SHA-256: d2ba38deb0d2f449dfb6fcbb092e9f603e49b4b43cd2b43b5848853db2e618d6
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <org.apache.poi.poifs.crypt.CryptoFunctions: byte[] generateKey(byte[],org.apache.poi.poifs.crypt.HashAlgorithm,byte[],int)>
		SHA-256: 767f426521be18e72df6a061df02eb3b6a403be6b840214ef23efd7ba34ae53a
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.poi.hssf.record.crypto.Biff8RC4Key: void initCipherForBlock(javax.crypto.Cipher,int)>
		SHA-256: 171382842952535d57d76f401433775d0fac9b8bac5c6e681b80f622a5599e9e
		Secure: true
	Object:
		Variable: $r9
		Type: javax.net.ssl.SSLContext
		Statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer17493)
		Method: <de.rwth_aachen.phyphox.NetworkConnection.Mqtt.MqttHelper: void tlsSetup(de.rwth_aachen.phyphox.NetworkConnection.Mqtt.MqttService,android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 2accee4df0c22b3e2cabde43f96692c5981bf885b4a9fc9d1c34b5e1333c18b8
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer24167)
		Method: <org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketHandshake: byte[] sha1(java.lang.String)>
		SHA-256: 99c3313aa68e5ff9cf9ef99f982979b475816f53a1b1b63c9a55a9a8034683ae
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.lang.String)>($r11, $r12)
		Method: <org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 51438369a357067707332506854fc20b41f55bae36aefc78dabd79b339ad0ac5
		Secure: false
	Object:
		Variable: $r25
		Type: javax.net.ssl.TrustManager[]
		Statement: $r25 = virtualinvoke $r24.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 4845d370b2525dcea0df759ea58084eaf3dcb6fdbc3f0bf5f8bd3b0be6f2613e
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLContext
		Statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r4)
		Method: <org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: faf8a006ee2bf18d70acac36e6184b973d313a1f622eaa10afaeb42c1349d99c
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, $r10)
		Method: <org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIDecryptor: javax.crypto.Cipher initCipherForBlock(javax.crypto.Cipher,int,org.apache.poi.poifs.crypt.EncryptionInfoBuilder,javax.crypto.SecretKey,int)>
		SHA-256: 15b029563c0ee2affefc9aef4050dff9383d83cffe77c416f0d9e5ec4592d809
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <org.apache.poi.poifs.crypt.CryptoFunctions: byte[] generateKey(byte[],org.apache.poi.poifs.crypt.HashAlgorithm,byte[],int)>
		SHA-256: 907aa7b7a72ba03feb0eeaabf0ed2b66b2b6e362c40195f20e4a4cdc479702fe
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r10.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r8, $r7)
		Method: <org.apache.poi.poifs.crypt.standard.StandardDecryptor: java.io.InputStream getDataStream(org.apache.poi.poifs.filesystem.DirectoryNode)>
		SHA-256: dfa50c3ccbcb42a905ab23801c206a89d09953246c58fe98e2d237170ef4c9df
		Secure: false
	Object:
		Variable: $r8
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r8)
		Method: <org.apache.poi.hssf.record.crypto.Biff8RC4Key: void initCipherForBlock(javax.crypto.Cipher,int)>
		SHA-256: 6ab887487b2b2b574624b8dbbe5f25cdbb131054d1869a8c0d8a0ab00e76e173
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r4, varReplacer16933)
		Method: <org.apache.poi.poifs.crypt.CryptoFunctions: javax.crypto.Cipher getCipher(java.security.Key,org.apache.poi.poifs.crypt.CipherAlgorithm,org.apache.poi.poifs.crypt.ChainingMode,byte[],int,java.lang.String)>
		SHA-256: 6777b2e7bddac47dedc5ff77fea61cf35efc079bbc149226f051ed9066aa8539
		Secure: false

Findings in Java Class: org.apache.poi.poifs.crypt.ChunkedCipherOutputStream

	 in Method: void writeChunk()
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #6777b2e7bddac47dedc5ff77fea61cf35efc079bbc149226f051ed9066aa8539)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $i1 = virtualinvoke $r1.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[])>($r2, varReplacer20310, $i1, $r2)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #fe54f3722dfadb02449ab5b749199e7bf880028e325edc51b3e5915ab99c58bd)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $i1 = virtualinvoke $r1.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[])>($r2, varReplacer20310, $i1, $r2)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #fe54f3722dfadb02449ab5b749199e7bf880028e325edc51b3e5915ab99c58bd)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $i1 = virtualinvoke $r1.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[])>($r2, varReplacer20310, $i1, $r2)


Findings in Java Class: de.rwth_aachen.phyphox.NetworkConnection.Mqtt.MqttHelper

	 in Method: void tlsSetup(de.rwth_aachen.phyphox.NetworkConnection.Mqtt.MqttService,android.content.Context,java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #f6387b85b6d6abc955d44e3474c462ced228cb2bb2610a1d79f88d3be81375ed)
			First parameter (with value "BKS") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer17492)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer17487, $r10, varReplacer17487)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r8.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r5)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer17487, $r10, varReplacer17487)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2accee4df0c22b3e2cabde43f96692c5981bf885b4a9fc9d1c34b5e1333c18b8)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer17493)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer17487, $r10, varReplacer17487)


Findings in Java Class: org.apache.commons.codec.digest.DigestUtils

	 in Method: java.security.MessageDigest getDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e941edb5217c879acd87fed3366e0d56fa56f48ce569721201e5ad4173f69b53)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


Findings in Java Class: org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketHandshake

	 in Method: byte[] sha1(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #99c3313aa68e5ff9cf9ef99f982979b475816f53a1b1b63c9a55a9a8034683ae)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer24167)


Findings in Java Class: org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory

	 in Method: javax.net.ssl.SSLContext getSSLContext(java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2de0dbcb962ff3cb3e0d9dc8e9469638e8762c9aa5d9bef5cf875912fda1093)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r25, varReplacer28918)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r25, varReplacer28918)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #3502fa758305a1dec42a6535b8ce8189f7707f9bdc917efceea97f5a2943e84d)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #3502fa758305a1dec42a6535b8ce8189f7707f9bdc917efceea97f5a2943e84d)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r24.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r14)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #3502fa758305a1dec42a6535b8ce8189f7707f9bdc917efceea97f5a2943e84d)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #3502fa758305a1dec42a6535b8ce8189f7707f9bdc917efceea97f5a2943e84d)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r25, varReplacer28918)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #faf8a006ee2bf18d70acac36e6184b973d313a1f622eaa10afaeb42c1349d99c)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r4)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)


Findings in Java Class: org.apache.poi.poifs.filesystem.NPOIFSFileSystem

	 in Method: void closeInputStream(java.io.InputStream,boolean)
		TypestateError violating CrySL rule for javax.crypto.CipherInputStream (on Object #dfa50c3ccbcb42a905ab23801c206a89d09953246c58fe98e2d237170ef4c9df)
			Unexpected call to method close on object of type javax.crypto.CipherInputStream. Expect a call to one of the following methods read
			at statement: virtualinvoke $r1.<java.io.InputStream: void close()>()


	 in Method: void <init>(java.io.InputStream)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #dfa50c3ccbcb42a905ab23801c206a89d09953246c58fe98e2d237170ef4c9df)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $r2 = staticinvoke <java.nio.channels.Channels: java.nio.channels.ReadableByteChannel newChannel(java.io.InputStream)>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #dfa50c3ccbcb42a905ab23801c206a89d09953246c58fe98e2d237170ef4c9df)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke r0.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: void closeInputStream(java.io.InputStream,boolean)>($r1, $z0)


Findings in Java Class: org.apache.poi.POIDocument

	 in Method: org.apache.poi.hpsf.PropertySet getPropertySet(java.lang.String,org.apache.poi.poifs.crypt.EncryptionInfo)
		TypestateError violating CrySL rule for javax.crypto.CipherInputStream (on Object #dfa50c3ccbcb42a905ab23801c206a89d09953246c58fe98e2d237170ef4c9df)
			Unexpected call to method close on object of type javax.crypto.CipherInputStream. Expect a call to one of the following methods read
			at statement: virtualinvoke $r5.<java.io.InputStream: void close()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #dfa50c3ccbcb42a905ab23801c206a89d09953246c58fe98e2d237170ef4c9df)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: virtualinvoke $r5.<java.io.InputStream: void close()>()


Findings in Java Class: org.apache.poi.util.BoundedInputStream

	 in Method: void close()
		TypestateError violating CrySL rule for javax.crypto.CipherInputStream (on Object #dfa50c3ccbcb42a905ab23801c206a89d09953246c58fe98e2d237170ef4c9df)
			Unexpected call to method close on object of type javax.crypto.CipherInputStream. Expect a call to one of the following methods read
			at statement: virtualinvoke $r1.<java.io.InputStream: void close()>()


Findings in Java Class: org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4Decryptor

	 in Method: javax.crypto.Cipher initCipherForBlock(javax.crypto.Cipher,int,org.apache.poi.poifs.crypt.EncryptionInfoBuilder,javax.crypto.SecretKey,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key)>($i0, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, $r8)


Findings in Java Class: org.apache.poi.poifs.crypt.CryptoFunctions

	 in Method: javax.crypto.Cipher getCipher(java.security.Key,org.apache.poi.poifs.crypt.CipherAlgorithm,org.apache.poi.poifs.crypt.ChainingMode,byte[],int,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r0)


Findings in Java Class: org.apache.poi.hssf.record.crypto.Biff8RC4Key

	 in Method: void initCipherForBlock(javax.crypto.Cipher,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r8)


Findings in Java Class: org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIDecryptor

	 in Method: javax.crypto.Cipher initCipherForBlock(javax.crypto.Cipher,int,org.apache.poi.poifs.crypt.EncryptionInfoBuilder,javax.crypto.SecretKey,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, $r10)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 40

	CryptoAnalysis found the following violations. For details see description above.
	TypestateError: 6
	NeverTypeOfError: 5
	ConstraintError: 6
	RequiredPredicateError: 14
	HardCodedError: 5
	IncompleteOperationError: 3
=====================================================================
