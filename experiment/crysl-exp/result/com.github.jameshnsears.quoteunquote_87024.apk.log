0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <p5.g: p5.g b(java.lang.String)>
		SHA-256: dc9849196e8e99bd82e433eb290bdb5356ad3ccf53816336c435840d67b879ea
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r13.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r9, $r12, $r4, $i1)
		Method: <org.conscrypt.OpenSSLECGroupContext: java.security.spec.ECParameterSpec getECParameterSpec()>
		SHA-256: 7223ae8f08ed0dba3dafb06f8e07e30310aca7c9be856d88494b5d1bd531fdf8
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r4, $r2)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: 4b73d9ea47b70e095beb17e2b4e8c62bcb1a3b70cdd913b654094befd6fbd016
		Secure: false
	Object:
		Variable: $r8
		Type: java.lang.String
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r8)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: fb24971f565cb4681c3c1e192adc31a35b4a987353817f6def6d3d265ac75389
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <l5.h: javax.net.ssl.X509TrustManager m()>
		SHA-256: 7a0f07b883d2ddc90b9e222dc43f90bdc8aea294cbc492345dc85f168a970dd4
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <l5.g: javax.net.ssl.X509TrustManager m()>
		SHA-256: af128ad5f158b003d5389a7d7d0d085750ff755bb4e6c0a3182bed3fb6e94f7a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <p5.g: p5.g b(java.lang.String)>
		SHA-256: 341e95ecdb41378298ab95f660b09360b4106441019381769e97e3a184702b52
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <p5.u: p5.g b(java.lang.String)>
		SHA-256: 75f67a8d7d7b080de0fb5a23148712f60e7d6a05ff89771bed1195b61c90b498
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <l5.g: javax.net.ssl.X509TrustManager m()>
		SHA-256: 5b25f143fa2396e1adf31cb66230985b23f81c0f35ba9ddd1b68dad3e0d6de65
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <o1.a: void <init>(android.content.Context)>
		SHA-256: e7026bb11e11017bf02ea91dde1699264077a18bdea6fc2f75c8d60890c67fe7
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer10245, $r2)
		Method: <l5.d: javax.net.ssl.SSLContext k()>
		SHA-256: be2398aa5c2970a7d5adf71a1eceaf2b3cf68ec52d0df1d79370e1f2f03b8901
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer10247, $r2)
		Method: <l5.c: javax.net.ssl.SSLContext k()>
		SHA-256: c18179b331e34ca0709fc61dc34f9f53115a9ad800d91a65081f7c50706bdf6d
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 9d110d3f3943f5f1538d33e3d18932b71ca7accf2f86c174ab417a2b10712fb0
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r9)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 7ac05a324707752a8fcdd9787a5fcda4e6af85c295ea6bb9f2ffcf779c41a30d
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10241)
		Method: <l5.h: javax.net.ssl.SSLContext k()>
		SHA-256: ba74b5ab80508d5144c6c32a99c5feaa2a3c33a9a3b3fa1efe74a16604c9a406
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: d02affd279e8743b6fd64cdf0e2dd47c30a5603be2e61d5718cf63d25b2d1a15
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <k2.a: byte[] z(java.lang.String)>
		SHA-256: 30fbd53391efbcdf34c27e9be4a3d31b2da50c148609b4563459a87f0a7da38a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer7356, $r2)
		Method: <l5.d: javax.net.ssl.SSLSocketFactory l(javax.net.ssl.X509TrustManager)>
		SHA-256: 3c19bd6caa3e5a6619f71a3ec821166199c88cfb18a9739f611c8e5b9d9a70b6
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <t1.b: void <clinit>()>
		SHA-256: 3d425707cdb6650dff821a6f07e1b4c3cc3c8d38b9bf8d5c7e5e68d2549a99b4
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9449)
		Method: <k2.a: byte[] z(java.lang.String)>
		SHA-256: c321631e15ede7fe340f2b0d6a1a91c94fbe584869927832aa39cbac1a3652c6
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10238)
		Method: <l5.f: javax.net.ssl.SSLContext k()>
		SHA-256: 7198994293d35a3e42c502346950c2673d8345373c847aa50788357438418a9c
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <l5.d: javax.net.ssl.X509TrustManager m()>
		SHA-256: cfcdc3470b6b7c0c003b2711c32019ffa1bddd297268dba9f64d30acd83e5c6a
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <l5.c: javax.net.ssl.X509TrustManager m()>
		SHA-256: cd56e1d11523a58faf67ed2a56ac861ff010b9aaf1d84f9439d93902503995ee
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: e75571d33abb1b5e330ac5b78fcc009ac5fa3b4053acda20dad8234c0598d879
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10240)
		Method: <l5.f: javax.net.ssl.SSLContext k()>
		SHA-256: bd8394189c3092bc4ad2741fdca261fe24146700b8e25104fd830e6cf4ce58d9
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: f325059ee6f08c9776202e677308b0f19ca0767a6821e36b4f64a531d072fa45
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <l5.h: javax.net.ssl.X509TrustManager m()>
		SHA-256: 23980251d8f5d4eb13d4dfacfc01a32f6b7adc5e2988f53043cd8cbc2e0e65d2
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyFactory
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r8)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 6635af12fb8498a7bf018ada279831a6e3024bb07fe12c7daed2b6fbc372e6bb
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer7346, varReplacer7347)
		Method: <l5.c: javax.net.ssl.X509TrustManager m()>
		SHA-256: e70bf59a0edfa9beb985f054c5e832dce416c00e4dc4ac5ecd537cad3f0c23c2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <p5.u: p5.g b(java.lang.String)>
		SHA-256: 51990da4c732ecfc55d8d2e2ad609ed965449b36fe1a9351aac598ad1c0067d4
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10239)
		Method: <l5.f: javax.net.ssl.SSLContext k()>
		SHA-256: 5f50fdbf318263908192b64bba8b3cd69c112127890bd720adcf2c79bd97e6bc
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.cert.CertificateFactory
		Statement: $r0 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>(varReplacer19353)
		Method: <org.conscrypt.SSLUtils: java.security.cert.CertificateFactory getCertificateFactory()>
		SHA-256: a465e86dc65f9d6ffca0a23e56ecb5022c96833f0dda0ac2004ba7d109540727
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer10244, $r2)
		Method: <l5.g: javax.net.ssl.SSLContext k()>
		SHA-256: ef32c2d1d561188f2942a29596a77f88d9d8dd3d317fcd6df686b0c58a543378
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <l5.d: javax.net.ssl.X509TrustManager m()>
		SHA-256: 320152f1210a4b40b76f069dee23b5bbd52df6d7c3fba5b23c9b14a9cd5b3bf1
		Secure: false

Findings in Java Class: l5.d

	 in Method: javax.net.ssl.SSLSocketFactory l(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7357, $r6, varReplacer7357)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7357, $r6, varReplacer7357)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #3c19bd6caa3e5a6619f71a3ec821166199c88cfb18a9739f611c8e5b9d9a70b6)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer7356, $r2)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7357, $r6, varReplacer7357)


	 in Method: javax.net.ssl.SSLContext k()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #be2398aa5c2970a7d5adf71a1eceaf2b3cf68ec52d0df1d79370e1f2f03b8901)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer10245, $r2)


	 in Method: javax.net.ssl.X509TrustManager m()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer7342)


Findings in Java Class: k2.a

	 in Method: byte[] z(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c321631e15ede7fe340f2b0d6a1a91c94fbe584869927832aa39cbac1a3652c6)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9449)


Findings in Java Class: l5.f

	 in Method: javax.net.ssl.SSLContext k()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #5f50fdbf318263908192b64bba8b3cd69c112127890bd720adcf2c79bd97e6bc)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10239)


Findings in Java Class: l5.h

	 in Method: javax.net.ssl.SSLContext k()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ba74b5ab80508d5144c6c32a99c5feaa2a3c33a9a3b3fa1efe74a16604c9a406)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10241)


	 in Method: javax.net.ssl.SSLSocketFactory l(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7351, $r8, varReplacer7351)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7351, $r8, varReplacer7351)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7351, $r8, varReplacer7351)


	 in Method: javax.net.ssl.X509TrustManager m()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer7334)


Findings in Java Class: l5.c

	 in Method: javax.net.ssl.SSLContext k()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #c18179b331e34ca0709fc61dc34f9f53115a9ad800d91a65081f7c50706bdf6d)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer10247, $r2)


	 in Method: javax.net.ssl.X509TrustManager m()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer7345)


Findings in Java Class: p5.g

	 in Method: p5.g b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #341e95ecdb41378298ab95f660b09360b4106441019381769e97e3a184702b52)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: p5.u

	 in Method: p5.g b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #51990da4c732ecfc55d8d2e2ad609ed965449b36fe1a9351aac598ad1c0067d4)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #51990da4c732ecfc55d8d2e2ad609ed965449b36fe1a9351aac598ad1c0067d4)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r5 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.conscrypt.SSLUtils

	 in Method: java.security.cert.X509Certificate decodeX509Certificate(java.security.cert.CertificateFactory,byte[])
		TypestateError violating CrySL rule for java.security.cert.CertificateFactory (on Object #a465e86dc65f9d6ffca0a23e56ecb5022c96833f0dda0ac2004ba7d109540727)
			Unexpected call to method generateCertificate on object of type java.security.cert.CertificateFactory. Expect a call to one of the following methods generateCRL
			at statement: $r3 = virtualinvoke $r2.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r1)


	 in Method: java.security.cert.X509Certificate[] decodeX509CertificateChain(byte[][])
		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #a465e86dc65f9d6ffca0a23e56ecb5022c96833f0dda0ac2004ba7d109540727)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r4 = staticinvoke <org.conscrypt.SSLUtils: java.security.cert.X509Certificate decodeX509Certificate(java.security.cert.CertificateFactory,byte[])>($r2, $r3)

		IncompleteOperationError violating CrySL rule for java.security.cert.CertificateFactory (on Object #a465e86dc65f9d6ffca0a23e56ecb5022c96833f0dda0ac2004ba7d109540727)
			Operation on object of type java.security.cert.CertificateFactory object not completed. Expected call to generateCertPath, generateCertificate, generateCRL
			at statement: $r2 = staticinvoke <org.conscrypt.SSLUtils: java.security.cert.CertificateFactory getCertificateFactory()>()


Findings in Java Class: org.conscrypt.OpenSSLX509Certificate

	 in Method: void verifyInternal(java.security.PublicKey,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


	 in Method: java.security.PublicKey getPublicKey()
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r9)


Findings in Java Class: l5.g

	 in Method: javax.net.ssl.X509TrustManager m()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer7339)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 34

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 2
	RequiredPredicateError: 13
	TypestateError: 2
	ConstraintError: 8
=====================================================================
