0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
2    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
2    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
2    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
2    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: varReplacer802
		Type: java.lang.String
		Statement: specialinvoke r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer802)
		Method: <com.xmission.trevin.android.todo.StringEncryption: byte[] decryptBytes(byte[])>
		SHA-256: d826d5da553f5b3d68c043b69a48f54dea5e4a77e0736ddba499ffd7b1a87cbf
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer802)
		Method: <com.xmission.trevin.android.todo.StringEncryption: byte[] decryptBytes(byte[])>
		SHA-256: 3b4369ee6bcb93d3ab14d0b22f32726cb5d2d45ade194fc1c962d5d2b172e730
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <com.xmission.trevin.android.crypto.AESCipher: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>
		SHA-256: 2150a0e66c6fc70722e5913ea2625e8202cad1a134714384bf0349f0ba824a0e
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.Key
		Statement: $r9 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <com.xmission.trevin.android.crypto.AESCipher: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>
		SHA-256: a5baede320ac69c2256a23046080625775f1e21a807c6ac4a471d84ac40ee235
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.xmission.trevin.android.todo.StringEncryption: void <clinit>()>
		SHA-256: 22d08a4dfc4e3a5008cdfef3d815107d0d8867224181882147c9a210d30f03ca
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.xmission.trevin.android.crypto.AESCipher: void init(int,java.security.Key)>
		SHA-256: 3fdb8005f7e7f62f5bb2ca832a83f8c5c2ac8a39fcc631dbb61b2cbcbad64b98
		Secure: true

Findings in Java Class: com.xmission.trevin.android.todo.StringEncryption

	 in Method: byte[] decryptBytes(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer802)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 6

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 1
=====================================================================
