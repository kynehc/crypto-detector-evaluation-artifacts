0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <b.b.a.c.e.d: java.lang.String toString()>
		SHA-256: 66271a28fc4cea6dbe2551fef907d370333adbb888107183abe592c13f019ac7
		Secure: false
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2794)
		Method: <b.b.a.o: void <clinit>()>
		SHA-256: da69de84e2e6d660a4c39bafc763949ec616f6e53dc6ced4c39567d32d01a1b0
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $z0 = virtualinvoke $r8.<java.security.Signature: boolean verify(byte[])>($r7)
		Method: <io.github.tjg1.nori.util.a.l: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 8031154314f61e1ed008afcef47368ff09893727c4f263a3d2fa0f35de0f5443
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.Signature
		Statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer4369)
		Method: <io.github.tjg1.nori.util.a.l: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 8165b664a6297fa9b59e6dbf5fc9e5b6c7385ac15ba8d0bcbe63c797539f04f2
		Secure: false
	Object:
		Variable: varReplacer4388
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer4388)
		Method: <io.github.tjg1.nori.util.a.l: java.security.PublicKey a(java.lang.String)>
		SHA-256: cf9c59290eec62e6a4a0d0096340fa69c050e9358addaa3bd6cdae6cfe441b09
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer4388)
		Method: <io.github.tjg1.nori.util.a.l: java.security.PublicKey a(java.lang.String)>
		SHA-256: c54b256204e84c311674463fa8287a6efae1b032277be70a72e5360eff151b99
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r8.<java.security.Signature: boolean verify(byte[])>($r7)
		Method: <io.github.tjg1.nori.util.a.l: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 335277741c655592b5a679415429c7cb33cb04519204c1bfe27d764e820bc386
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.MessageDigest
		Statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <b.b.a.f.e: java.security.MessageDigest d()>
		SHA-256: 8c90ee094ce68b2f2581b8f969a9c2ca7143910c76044c8ebee77e4a60a41cde
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.PublicKey
		Statement: $r4 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r3)
		Method: <io.github.tjg1.nori.util.a.l: java.security.PublicKey a(java.lang.String)>
		SHA-256: c20b06375e733d4dcdac7469fc133031eb0b6222b911b828dc66ff4edf065e3a
		Secure: false
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2797)
		Method: <b.b.a.o: void <clinit>()>
		SHA-256: ee26f265fc8039112ad82a3ddeb5d4413b3ab9005f12e33ad836d45a1a462247
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>(varReplacer7193, varReplacer7194)
		Method: <b.b.b.c.a: void a()>
		SHA-256: ca3e71c7d7fc6f31472b3173564a44cf71e09d69fe3ec31d1443677df2dac5aa
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <b.b.a.f.e: void <clinit>()>
		SHA-256: 44af9012ef74dc56a65a43ad22e0f9975add512a69fc620e8528a001ec7a4791
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r3.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)
		Method: <io.github.tjg1.nori.util.a.l: java.security.PublicKey a(java.lang.String)>
		SHA-256: 2905bec3a391552992159fab36daa5610e4f5207c5c73c1e28cf2ef25af98c7a
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r9 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r8)
		Method: <b.b.a.o: void a(javax.net.ssl.SSLEngineResult$HandshakeStatus)>
		SHA-256: 60fb3e7cf155cfd98ba0e03cb8471f502a7c969656cfb5e65ee7d6a7341f2233
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7292)
		Method: <b.b.a.c.e.d: java.lang.String toString()>
		SHA-256: 98e74bd15d5e986feacc7c831229b5a819d56a5da2278d608970b39860d86998
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.TrustManager[]
		Statement: $r7 = virtualinvoke $r9.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <b.b.a.o: void a(javax.net.ssl.SSLEngineResult$HandshakeStatus)>
		SHA-256: 6381184b1eba20ac5ec92d7f0b1183e08dfc79b69705bf7e301da52bb46cba6c
		Secure: false

Findings in Java Class: b.b.b.c.a

	 in Method: void a(android.content.Context)
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>.
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


	 in Method: void a()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ca3e71c7d7fc6f31472b3173564a44cf71e09d69fe3ec31d1443677df2dac5aa)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>(varReplacer7193, varReplacer7194)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7196, varReplacer7196, varReplacer7196)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7196, varReplacer7196, varReplacer7196)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7196, varReplacer7196, varReplacer7196)


Findings in Java Class: b.b.a.f.e

	 in Method: void <clinit>()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #8c90ee094ce68b2f2581b8f969a9c2ca7143910c76044c8ebee77e4a60a41cde)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r2 = <b.b.a.f.e: java.security.MessageDigest b>


	 in Method: java.security.MessageDigest d()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #8c90ee094ce68b2f2581b8f969a9c2ca7143910c76044c8ebee77e4a60a41cde)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: b.b.a.o

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ee26f265fc8039112ad82a3ddeb5d4413b3ab9005f12e33ad836d45a1a462247)
			First parameter (with value "Default") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2797)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #da69de84e2e6d660a4c39bafc763949ec616f6e53dc6ced4c39567d32d01a1b0)
			First parameter (with value "TLS") should be any of {TLSv1.2, TLSv1.3}
			at statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2794)


	 in Method: void a(javax.net.ssl.SSLEngineResult$HandshakeStatus)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r9.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer5024)


Findings in Java Class: io.github.tjg1.nori.util.a.l

	 in Method: boolean a(java.security.PublicKey,java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #8165b664a6297fa9b59e6dbf5fc9e5b6c7385ac15ba8d0bcbe63c797539f04f2)
			First parameter (with value "SHA1withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA384withRSA, SHA512withRSA, SHA384withECDSA, SHA512withECDSA}
			at statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer4369)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r8.<java.security.Signature: void initVerify(java.security.PublicKey)>($r5)


	 in Method: java.security.PublicKey a(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r4 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r3)


Findings in Java Class: b.b.a.c.e.d

	 in Method: java.lang.String toString()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #98e74bd15d5e986feacc7c831229b5a819d56a5da2278d608970b39860d86998)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7292)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 16

	CryptoAnalysis found the following violations. For details see description above.
	ForbiddenMethodError: 1
	ConstraintError: 5
	RequiredPredicateError: 7
	IncompleteOperationError: 2
=====================================================================
