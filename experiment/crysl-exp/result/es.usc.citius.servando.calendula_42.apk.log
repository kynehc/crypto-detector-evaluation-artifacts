0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.1.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	java.security.cert.TrustAnchor
	javax.crypto.spec.GCMParameterSpec
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPair
	java.security.DigestOutputStream
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.OAEPParameterSpec
	javax.net.ssl.SSLContext
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.CipherOutputStream
	java.security.Key
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	java.security.KeyFactory
	javax.crypto.spec.PBEKeySpec
	java.security.spec.DSAGenParameterSpec
	java.security.KeyPairGenerator
	javax.crypto.CipherInputStream
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.cert.CertificateFactory
	java.security.SecureRandom
	java.security.spec.MGF1ParameterSpec
	javax.net.ssl.SSLEngine
	javax.crypto.spec.DHParameterSpec
	java.security.spec.DSAParameterSpec
	java.security.spec.ECParameterSpec
	java.security.spec.RSAKeyGenParameterSpec
	javax.crypto.spec.IvParameterSpec
	javax.crypto.Cipher
	javax.crypto.spec.PBEParameterSpec
	java.security.AlgorithmParameterGenerator
	java.security.spec.X509EncodedKeySpec
	javax.net.ssl.TrustManagerFactory
	java.security.DigestInputStream
	void
	javax.net.ssl.KeyManagerFactory
	java.security.cert.PKIXParameters
	java.net.PasswordAuthentication
	java.security.AlgorithmParameters
	javax.crypto.KeyAgreement
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.SSLParameters
	java.security.MessageDigest
	javax.crypto.SecretKey
	javax.crypto.KeyGenerator
	java.security.KeyStore
	javax.crypto.Mac
	java.security.spec.ECGenParameterSpec
	java.security.Signature

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: java.security.KeyPairGenerator
		Statement: $r5 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer24000, varReplacer24001)
		Method: <a.a.a.b: boolean a(android.content.Context,byte[])>
		SHA-256: 8f3497b7afda20678378eee03a25c1ad422c6f84cfcc4f947a6dd2a7180359ff
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer29350)
		Method: <a.a.a.b: void b()>
		SHA-256: 141125a2842f753ee91152db5f124a116027b8ef26cfff3d3c0a14a4f23eebaa
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer20526, varReplacer20527)
		Method: <a.a.a.b: byte[] e(a.a.a.b$a)>
		SHA-256: dca6520cf990bf8a3718e3ee582891c5cbd4cbde28f295d48a18d66c7a4b5519
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer20529, $r5)
		Method: <a.a.a.b: byte[] d(a.a.a.b$a)>
		SHA-256: 1ddfedc615d3a192974fd7a58a93455b815f66536de6281d9809bd872968b7f1
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer20528)
		Method: <a.a.a.b: byte[] d(a.a.a.b$a)>
		SHA-256: fbb7a5f731030c501c47652defa8b3acf5bef199fefc4046f2599c94935c0a44
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <a.a.a.b: byte[] c()>
		SHA-256: aaaaee898c5295e641c4bd650abb0ad45b3dcbad9a3f20e328cdd71f077b63a0
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer34844)
		Method: <es.usc.citius.servando.calendula.pinlock.PINManager: java.lang.String calculateHash(java.lang.String)>
		SHA-256: c5d8c078601786c3c624fe63076a514e8237b12fc310ae6e0506fa88aa06e7a2
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <a.a.a.b: boolean b(android.content.SharedPreferences,byte[])>
		SHA-256: bb701df4a9065f4ffd1f2c141d5dcba681f1a21b3d1d862e8f13b61c3d51a070
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <a.a.a.b: a.a.a.b$a b(byte[],byte[])>
		SHA-256: 9b02d6ff08c73e0af6531ceb5780f5cd574fe29f696d132913d6d96cc1c38c6e
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer24251, varReplacer24252)
		Method: <a.a.a.b: a.a.a.b$a b(byte[],byte[])>
		SHA-256: a22930f4bdd5523d0bfc6187748b1e18da8815c108e493b1af41963e8aeffbd1
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <a.a.a.b: java.lang.String c(java.lang.String)>
		SHA-256: 998e5654b5e9888631ee7b41e7e632d60b2a6b34bebf6c3a18693b3f23b2c43c
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer27343, varReplacer27344)
		Method: <a.a.a.b: byte[] g(byte[])>
		SHA-256: 84ca0a22de1aae9a6d61a2657dd27748f749df97d069416c79c4573787f4ea81
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <es.usc.citius.servando.calendula.pinlock.PINManager: java.lang.String calculateHash(java.lang.String)>
		SHA-256: 3d9e18c3c8ba5636c831ebec4c446fed56dc112ad1841121536c10c66dedc61d
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer24253)
		Method: <a.a.a.b: a.a.a.b$a a(byte[],byte[])>
		SHA-256: a81144e5ac485aa41aafb9d026fad77112de256f1fc38931d597bff4e693c50
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer24024)
		Method: <a.a.a.b: javax.crypto.SecretKey c(android.content.SharedPreferences)>
		SHA-256: 610684b1c0eda6eeb3d19969791b2810cbef3ab95c89e95c6971ab644ae32fe3
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>($r4)
		Method: <a.a.a.b: boolean b(android.content.SharedPreferences,byte[])>
		SHA-256: 646befa4d6536e5511a78a9e2df0ad666b430b99430186cae8d85ce909f3f4f0
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r5.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r4, $r2)
		Method: <a.a.a.b: byte[] g(byte[])>
		SHA-256: cf4fae85f2ca08bbcd6973c1a076e80b4bbbc7efa9532a431b183823d68e5534
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <a.a.a.b: byte[] c()>
		SHA-256: a1eab6b6db434e4f91f4798b7763ee7b70a3a5dc6a2ee57215c5b266aae05547
		Secure: true
	Object:
		Variable: $r13
		Type: java.security.SecureRandom
		Statement: specialinvoke $r13.<java.security.SecureRandom: void <init>(byte[])>($r1)
		Method: <a.a.a.b: boolean a(android.content.Context,byte[])>
		SHA-256: 508013c386653a31f73d0f6fa68a519bfe5c8cc698135e57bae85d81e004c404
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)
		Method: <a.a.a.b: byte[] f(byte[])>
		SHA-256: d5108e5356ebe2902f6f5b560590454f339c3e791599446c9842052f8137e9bf
		Secure: false
	Object:
		Variable: varReplacer24024
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer24024)
		Method: <a.a.a.b: javax.crypto.SecretKey c(android.content.SharedPreferences)>
		SHA-256: a7c914d7764f9d12716af831c3242cbae1dd0c7e3cc1a47fe158f174b1fc379d
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.KeyGenerator
		Statement: $r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer11323, varReplacer11324)
		Method: <es.usc.citius.servando.calendula.pinlock.fingerprint.FingerprintHelper: void generateKey()>
		SHA-256: 84594c90aa4fc19b823d2c4a81f91c3d842ca615119b48704fc83fc539ceb19e
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.KeyGenerator
		Statement: $r4 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer24015)
		Method: <a.a.a.b: boolean a(android.content.SharedPreferences,byte[])>
		SHA-256: 3afd35153a8964776d0832e831aa6834052a46b6d86a2a27805f4143590e7c7c
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>(byte[])>($r2)
		Method: <a.a.a.b: boolean a(android.content.SharedPreferences,byte[])>
		SHA-256: 8e2d00507f2b008dc964658c97aa9a20c9cd5f26b91877be598816d7d571e1a
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer24020)
		Method: <a.a.a.b: javax.crypto.SecretKey b(android.content.SharedPreferences)>
		SHA-256: 14f31876560c1ad70e91d9e1277a3e6bedd0bd6e680d231473187090cd514162
		Secure: false
	Object:
		Variable: varReplacer24020
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer24020)
		Method: <a.a.a.b: javax.crypto.SecretKey b(android.content.SharedPreferences)>
		SHA-256: bfee1d1d0ab42631178319b6a1f99db30b92999ad3042de9d737e5a29f6cd149
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.SecureRandom
		Statement: specialinvoke $r10.<java.security.SecureRandom: void <init>(byte[])>($r1)
		Method: <a.a.a.b: boolean e(byte[])>
		SHA-256: 28905827a12f8c6d2c1065944da3b03efc89ef2aaf14274ec44746c4b284ef00
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9566)
		Method: <a.a.a.b: java.lang.String c(java.lang.String)>
		SHA-256: 66b55b9659b8faaef01aa0dd71f864fee0101782e72f80ff04ac5bf4faa5d1
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer27328)
		Method: <a.a.a.b: byte[] f(byte[])>
		SHA-256: b6e4522445aa9e90df1bc3ca11be84d84ff3e7bd8051d9f2123a3535e9b7e8cd
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer27347, varReplacer27348)
		Method: <a.a.a.b: byte[] h(byte[])>
		SHA-256: eaa73bb4a037e7364f6df569a18419a4c3016e74ae1e6bcd7c297f073af561cb
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <a.a.a.b: boolean a(android.content.SharedPreferences,byte[])>
		SHA-256: bd892fbf56d9a40ff9c80884a0b4b4ce1fe864c85a6dddf48e0c2c73a3beca7d
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <a.a.a.b: byte[] e(a.a.a.b$a)>
		SHA-256: 11bf5daab362f191b652fb2462c4494b4be1e306063a960444b7dd09b693aca4
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer24254, $r3)
		Method: <a.a.a.b: a.a.a.b$a a(byte[],byte[])>
		SHA-256: ef6bfc407119e7b3a9710213ca241606b840bf8c3c83f548482afeb9ee0102ec
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.KeyGenerator
		Statement: $r4 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer23994, varReplacer23995)
		Method: <a.a.a.b: boolean e(byte[])>
		SHA-256: 24c75d9541f79e4bfc17a0271d648c68b72988f17bf1daed21a2835666569513
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r4.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r5, $r2)
		Method: <a.a.a.b: byte[] h(byte[])>
		SHA-256: 93aa6c5ee639cb849a1e363eac1e3d9a9aa2788b10ec67cda273965735f57869
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer11320)
		Method: <es.usc.citius.servando.calendula.pinlock.fingerprint.FingerprintHelper: void generateKey()>
		SHA-256: 3daec7255962a0fe6b29bf5c63ca858abdb320b400ba79d78dcc73a562049ad7
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>(byte[])>($r2)
		Method: <a.a.a.b: boolean b(android.content.SharedPreferences,byte[])>
		SHA-256: 7acc0f0982baed3e8adc4cadd2f7c679c60d012e30328adc0458b8f79c2dff0e
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11328)
		Method: <es.usc.citius.servando.calendula.pinlock.fingerprint.FingerprintHelper: boolean cipherInit()>
		SHA-256: f707f111a052951aba9cc8d72d933d196e538565fb29e5d733136213c9705061
		Secure: false

Findings in Java Class: es.usc.citius.servando.calendula.pinlock.fingerprint.FingerprintHelper

	 in Method: void generateKey()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #3daec7255962a0fe6b29bf5c63ca858abdb320b400ba79d78dcc73a562049ad7)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer11320)


	 in Method: boolean cipherInit()
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer11331, $r5)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f707f111a052951aba9cc8d72d933d196e538565fb29e5d733136213c9705061)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer11328)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #3daec7255962a0fe6b29bf5c63ca858abdb320b400ba79d78dcc73a562049ad7)
			Unexpected call to method load on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter)>(varReplacer11330)


Findings in Java Class: a.a.a.b

	 in Method: byte[] e(a.a.a.b$a)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer20525, $r1, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #dca6520cf990bf8a3718e3ee582891c5cbd4cbde28f295d48a18d66c7a4b5519)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer20526, varReplacer20527)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #dca6520cf990bf8a3718e3ee582891c5cbd4cbde28f295d48a18d66c7a4b5519)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)


	 in Method: byte[] d(a.a.a.b$a)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer20530, $r1, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer20529, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer20530, $r1, $r2)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #fbb7a5f731030c501c47652defa8b3acf5bef199fefc4046f2599c94935c0a44)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r5 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)


	 in Method: a.a.a.b$a b(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer24250, $r5, $r1)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #a22930f4bdd5523d0bfc6187748b1e18da8815c108e493b1af41963e8aeffbd1)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a22930f4bdd5523d0bfc6187748b1e18da8815c108e493b1af41963e8aeffbd1)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer24251, varReplacer24252)


	 in Method: a.a.a.b$a a(byte[],byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #a81144e5ac485aa41aafb9d026fad77112de256f1fc38931d597bff4e693c50)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init,updateAAD
			at statement: $r2 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer24255, $r5, $r1)


	 in Method: byte[] g(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.CipherOutputStream
			Second parameter was not properly generated as generatedCipher
			at statement: specialinvoke $r5.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r4, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer27345, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #84ca0a22de1aae9a6d61a2657dd27748f749df97d069416c79c4573787f4ea81)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer27343, varReplacer27344)


	 in Method: byte[] h(byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #eaa73bb4a037e7364f6df569a18419a4c3016e74ae1e6bcd7c297f073af561cb)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer27347, varReplacer27348)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer27346, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.CipherInputStream
			Second parameter was not properly generated as generatedCipher
			at statement: specialinvoke $r4.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r5, $r2)


	 in Method: void b()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #141125a2842f753ee91152db5f124a116027b8ef26cfff3d3c0a14a4f23eebaa)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer29350)


	 in Method: boolean a(android.content.Context,byte[])
		RequiredPredicateError violating CrySL rule for java.security.SecureRandom
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r13.<java.security.SecureRandom: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedRSA
			at statement: virtualinvoke $r5.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>($r12, $r13)


	 in Method: javax.crypto.SecretKey c(android.content.SharedPreferences)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer24024)


	 in Method: boolean a(android.content.SharedPreferences,byte[])
		RequiredPredicateError violating CrySL rule for java.security.SecureRandom
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<java.security.SecureRandom: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r4.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer24016, $r5)


	 in Method: javax.crypto.SecretKey b(android.content.SharedPreferences)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer24020)


	 in Method: boolean e(byte[])
		RequiredPredicateError violating CrySL rule for java.security.SecureRandom
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<java.security.SecureRandom: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke $r4.<javax.crypto.KeyGenerator: void init(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>($r9, $r10)


	 in Method: byte[] f(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>($r1)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 49
	Number of Objects Analyzed: 38

	CryptoAnalysis found the following violations. For details see description above.
	TypestateError: 5
	RequiredPredicateError: 21
	ConstraintError: 7
=====================================================================
